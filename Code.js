function main() {
  autojournal.core.update_lifelog();
}

function add_today() {
  autojournal.core.update_lifelog();
}

function add_last_week() {
  autojournal.core.update_lifelog();
}

function regenerate_all() {
  autojournal.core.update_lifelog();
}

(function(){
var shadow$provide = {};
/*

 Copyright The Closure Library Authors.
 SPDX-License-Identifier: Apache-2.0
*/
'use strict';
var CLOSURE_NO_DEPS = true;
var CLOSURE_BASE_PATH = "js/cljs-runtime/";
var CLOSURE_DEFINES = {"goog.DEBUG":false, "goog.LOCALE":"en", "goog.TRANSPILE":"never", "goog.ENABLE_DEBUG_LOADER":false, "cljs.core._STAR_target_STAR_":"nodejs"};
var COMPILED = false;
var goog = goog || {};
goog.global = global;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.exportPath_ = function(name, object, overwriteImplicit, objectToExportTo) {
  var parts = name.split(".");
  var cur = objectToExportTo || goog.global;
  if (!(parts[0] in cur) && typeof cur.execScript != "undefined") {
    cur.execScript("var " + parts[0]);
  }
  for (var part; parts.length && (part = parts.shift());) {
    if (!parts.length && object !== undefined) {
      if (!overwriteImplicit && goog.isObject(object) && goog.isObject(cur[part])) {
        for (var prop in object) {
          if (object.hasOwnProperty(prop)) {
            cur[part][prop] = object[prop];
          }
        }
      } else {
        cur[part] = object;
      }
    } else if (cur[part] && cur[part] !== Object.prototype[part]) {
      cur = cur[part];
    } else {
      cur = cur[part] = {};
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    var uncompiledDefines = goog.global.CLOSURE_UNCOMPILED_DEFINES;
    var defines = goog.global.CLOSURE_DEFINES;
    if (uncompiledDefines && uncompiledDefines.nodeType === undefined && Object.prototype.hasOwnProperty.call(uncompiledDefines, name)) {
      value = uncompiledDefines[name];
    } else if (defines && defines.nodeType === undefined && Object.prototype.hasOwnProperty.call(defines, name)) {
      value = defines[name];
    }
  }
  return value;
};
goog.FEATURESET_YEAR = goog.define("goog.FEATURESET_YEAR", 2012);
goog.DEBUG = goog.define("goog.DEBUG", true);
goog.LOCALE = goog.define("goog.LOCALE", "en");
goog.getLocale = function() {
  return goog.LOCALE;
};
goog.TRUSTED_SITE = goog.define("goog.TRUSTED_SITE", true);
goog.DISALLOW_TEST_ONLY_CODE = goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (goog.isInModuleLoader_()) {
    throw new Error("goog.provide cannot be used within a module.");
  }
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw new Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, object, overwriteImplicit) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, object, overwriteImplicit);
};
goog.NONCE_PATTERN_ = /^[\w+/_-]+[=]{0,2}$/;
goog.getScriptNonce_ = function(opt_window) {
  var doc = (opt_window || goog.global).document;
  var script = doc.querySelector && doc.querySelector("script[nonce]");
  if (script) {
    var nonce = script["nonce"] || script.getAttribute("nonce");
    if (nonce && goog.NONCE_PATTERN_.test(nonce)) {
      return nonce;
    }
  }
  return "";
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (typeof name !== "string" || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw new Error("Invalid module identifier");
  }
  if (!goog.isInGoogModuleLoader_()) {
    throw new Error("Module " + name + " has been loaded incorrectly. Note, " + "modules cannot be loaded as normal scripts. They require some kind of " + "pre-processing step. You're likely trying to load a module via a " + "script tag or as a part of a concatenated bundle without rewriting the " + "module. For more info see: " + "https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw new Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw new Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (name in goog.loadedModules_) {
      return goog.loadedModules_[name].exports;
    } else if (!goog.implicitNamespaces_[name]) {
      var ns = goog.getObjectByName(name);
      return ns != null ? ns : null;
    }
  }
  return null;
};
goog.ModuleType = {ES6:"es6", GOOG:"goog"};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.isInGoogModuleLoader_() || goog.isInEs6ModuleLoader_();
};
goog.isInGoogModuleLoader_ = function() {
  return !!goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.GOOG;
};
goog.isInEs6ModuleLoader_ = function() {
  var inLoader = !!goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.ES6;
  if (inLoader) {
    return true;
  }
  var jscomp = goog.global["$jscomp"];
  if (jscomp) {
    if (typeof jscomp.getCurrentModulePath != "function") {
      return false;
    }
    return !!jscomp.getCurrentModulePath();
  }
  return false;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInGoogModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw new Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.declareModuleId = function(namespace) {
  if (!COMPILED) {
    if (!goog.isInEs6ModuleLoader_()) {
      throw new Error("goog.declareModuleId may only be called from " + "within an ES6 module");
    }
    if (goog.moduleLoaderState_ && goog.moduleLoaderState_.moduleName) {
      throw new Error("goog.declareModuleId may only be called once per module.");
    }
    if (namespace in goog.loadedModules_) {
      throw new Error('Module with namespace "' + namespace + '" already exists.');
    }
  }
  if (goog.moduleLoaderState_) {
    goog.moduleLoaderState_.moduleName = namespace;
  } else {
    var jscomp = goog.global["$jscomp"];
    if (!jscomp || typeof jscomp.getCurrentModulePath != "function") {
      throw new Error('Module with namespace "' + namespace + '" has been loaded incorrectly.');
    }
    var exports = jscomp.require(jscomp.getCurrentModulePath());
    goog.loadedModules_[namespace] = {exports:exports, type:goog.ModuleType.ES6, moduleId:namespace};
  }
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw new Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
goog.forwardDeclare("Document");
goog.forwardDeclare("HTMLScriptElement");
goog.forwardDeclare("XMLHttpRequest");
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.getObjectByName(name) != null;
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var i = 0; i < parts.length; i++) {
    cur = cur[parts[i]];
    if (cur == null) {
      return null;
    }
  }
  return cur;
};
goog.addDependency = function(relPath, provides, requires, opt_loadFlags) {
  if (!COMPILED && goog.DEPENDENCIES_ENABLED) {
    goog.debugLoader_.addDependency(relPath, provides, requires, opt_loadFlags);
  }
};
goog.ENABLE_DEBUG_LOADER = goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(namespace) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER) {
      goog.debugLoader_.requested(namespace);
    }
    if (goog.isProvided_(namespace)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(namespace);
      }
    } else if (goog.ENABLE_DEBUG_LOADER) {
      var moduleLoaderState = goog.moduleLoaderState_;
      goog.moduleLoaderState_ = null;
      try {
        goog.debugLoader_.load_(namespace);
      } finally {
        goog.moduleLoaderState_ = moduleLoaderState;
      }
    }
    return null;
  }
};
goog.requireType = function(namespace) {
  return {};
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw new Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.instance_ = undefined;
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor();
  };
};
goog.instantiatedSingletons_ = [];
goog.LOAD_MODULE_USING_EVAL = goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.SEAL_MODULE_EXPORTS = goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
goog.TRANSPILE = goog.define("goog.TRANSPILE", "detect");
goog.ASSUME_ES_MODULES_TRANSPILED = goog.define("goog.ASSUME_ES_MODULES_TRANSPILED", false);
goog.TRANSPILE_TO_LANGUAGE = goog.define("goog.TRANSPILE_TO_LANGUAGE", "");
goog.TRANSPILER = goog.define("goog.TRANSPILER", "transpile.js");
goog.TRUSTED_TYPES_POLICY_NAME = goog.define("goog.TRUSTED_TYPES_POLICY_NAME", "goog");
goog.hasBadLetScoping = null;
goog.loadModule = function(moduleDef) {
  var previousState = goog.moduleLoaderState_;
  try {
    goog.moduleLoaderState_ = {moduleName:"", declareLegacyNamespace:false, type:goog.ModuleType.GOOG};
    var origExports = {};
    var exports = origExports;
    if (typeof moduleDef === "function") {
      exports = moduleDef.call(undefined, exports);
    } else if (typeof moduleDef === "string") {
      exports = goog.loadModuleFromSource_.call(undefined, exports, moduleDef);
    } else {
      throw new Error("Invalid module definition");
    }
    var moduleName = goog.moduleLoaderState_.moduleName;
    if (typeof moduleName === "string" && moduleName) {
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        var isDefaultExport = origExports !== exports;
        goog.constructNamespace_(moduleName, exports, isDefaultExport);
      } else if (goog.SEAL_MODULE_EXPORTS && Object.seal && typeof exports == "object" && exports != null) {
        Object.seal(exports);
      }
      var data = {exports:exports, type:goog.ModuleType.GOOG, moduleId:goog.moduleLoaderState_.moduleName};
      goog.loadedModules_[moduleName] = data;
    } else {
      throw new Error('Invalid module name "' + moduleName + '"');
    }
  } finally {
    goog.moduleLoaderState_ = previousState;
  }
};
goog.loadModuleFromSource_ = function(exports) {
  eval(goog.CLOSURE_EVAL_PREFILTER_.createScript(arguments[1]));
  return exports;
};
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
      components.splice(--i, 2);
    } else {
      i++;
    }
  }
  return components.join("/");
};
goog.global.CLOSURE_LOAD_FILE_SYNC;
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    try {
      var xhr = new goog.global["XMLHttpRequest"]();
      xhr.open("get", src, false);
      xhr.send();
      return xhr.status == 0 || xhr.status == 200 ? xhr.responseText : null;
    } catch (err) {
      return null;
    }
  }
};
goog.transpile_ = function(code, path, target) {
  var jscomp = goog.global["$jscomp"];
  if (!jscomp) {
    goog.global["$jscomp"] = jscomp = {};
  }
  var transpile = jscomp.transpile;
  if (!transpile) {
    var transpilerPath = goog.basePath + goog.TRANSPILER;
    var transpilerCode = goog.loadFileSync_(transpilerPath);
    if (transpilerCode) {
      (function() {
        (0,eval)(transpilerCode + "\n//# sourceURL\x3d" + transpilerPath);
      }).call(goog.global);
      if (goog.global["$gwtExport"] && goog.global["$gwtExport"]["$jscomp"] && !goog.global["$gwtExport"]["$jscomp"]["transpile"]) {
        throw new Error('The transpiler did not properly export the "transpile" ' + "method. $gwtExport: " + JSON.stringify(goog.global["$gwtExport"]));
      }
      goog.global["$jscomp"].transpile = goog.global["$gwtExport"]["$jscomp"]["transpile"];
      jscomp = goog.global["$jscomp"];
      transpile = jscomp.transpile;
    }
  }
  if (!transpile) {
    var suffix = " requires transpilation but no transpiler was found.";
    transpile = jscomp.transpile = function(code, path) {
      goog.logToConsole_(path + suffix);
      return code;
    };
  }
  return transpile(code, path, target);
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s != "object") {
    return s;
  }
  if (!value) {
    return "null";
  }
  if (Array.isArray(value)) {
    return "array";
  }
  return s;
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return Object.prototype.hasOwnProperty.call(obj, goog.UID_PROPERTY_) && obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if (obj !== null && "removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1e9 >>> 0);
goog.uidCounter_ = 0;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (typeof obj.clone === "function") {
      return obj.clone();
    }
    if (typeof Map !== "undefined" && obj instanceof Map) {
      return new Map(obj);
    } else if (typeof Set !== "undefined" && obj instanceof Set) {
      return new Set(obj);
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments);
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error();
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = function() {
  return Date.now();
};
goog.globalEval = function(script) {
  (0,eval)(script);
};
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.global.CLOSURE_CSS_NAME_MAP_FN;
goog.getCssName = function(className, opt_modifier) {
  if (String(className).charAt(0) == ".") {
    throw new Error('className passed in goog.getCssName must not start with ".".' + " You passed: " + className);
  }
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0; i < parts.length; i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  var result = opt_modifier ? className + "-" + rename(opt_modifier) : rename(className);
  if (goog.global.CLOSURE_CSS_NAME_MAP_FN) {
    return goog.global.CLOSURE_CSS_NAME_MAP_FN(result);
  }
  return result;
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values, opt_options) {
  if (opt_options && opt_options.html) {
    str = str.replace(/</g, "\x26lt;");
  }
  if (opt_options && opt_options.unescapeHtmlEntities) {
    str = str.replace(/&lt;/g, "\x3c").replace(/&gt;/g, "\x3e").replace(/&apos;/g, "'").replace(/&quot;/g, '"').replace(/&amp;/g, "\x26");
  }
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, objectToExportTo) {
  goog.exportPath_(publicPath, object, true, objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor();
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2; i < arguments.length; i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.scope = function(fn) {
  if (goog.isInModuleLoader_()) {
    throw new Error("goog.scope is not supported within a module.");
  }
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw new Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.defineClass.SEAL_CLASS_INSTANCES = goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {
    return ctr;
  }
  var wrappedCtr = function() {
    var instance = ctr.apply(this, arguments) || this;
    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
    return instance;
  };
  return wrappedCtr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0; i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.identity_ = function(s) {
  return s;
};
goog.createTrustedTypesPolicy = function(name) {
  var policy = null;
  var policyFactory = goog.global.trustedTypes;
  if (!policyFactory || !policyFactory.createPolicy) {
    return policy;
  }
  try {
    policy = policyFactory.createPolicy(name, {createHTML:goog.identity_, createScript:goog.identity_, createScriptURL:goog.identity_});
  } catch (e) {
    goog.logToConsole_(e.message);
  }
  return policy;
};
if (!COMPILED && goog.DEPENDENCIES_ENABLED) {
  goog.isEdge_ = function() {
    var userAgent = goog.global.navigator && goog.global.navigator.userAgent ? goog.global.navigator.userAgent : "";
    var edgeRe = /Edge\/(\d+)(\.\d)*/i;
    return !!userAgent.match(edgeRe);
  };
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return doc != null && "write" in doc;
  };
  goog.isDocumentLoading_ = function() {
    var doc = goog.global.document;
    return doc.attachEvent ? doc.readyState != "complete" : doc.readyState == "loading";
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH != undefined && typeof goog.global.CLOSURE_BASE_PATH === "string") {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else if (!goog.inHtmlDocument_()) {
      return;
    }
    var doc = goog.global.document;
    var currentScript = doc.currentScript;
    if (currentScript) {
      var scripts = [currentScript];
    } else {
      var scripts = doc.getElementsByTagName("SCRIPT");
    }
    for (var i = scripts.length - 1; i >= 0; --i) {
      var script = scripts[i];
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.findBasePath_();
  goog.Transpiler = function() {
    this.requiresTranspilation_ = null;
    this.transpilationTarget_ = goog.TRANSPILE_TO_LANGUAGE;
  };
  goog.Transpiler.prototype.createRequiresTranspilation_ = function() {
    var transpilationTarget = "es3";
    var requiresTranspilation = {"es3":false};
    var transpilationRequiredForAllLaterModes = false;
    function addNewerLanguageTranspilationCheck(modeName, isSupported) {
      if (transpilationRequiredForAllLaterModes) {
        requiresTranspilation[modeName] = true;
      } else if (isSupported()) {
        transpilationTarget = modeName;
        requiresTranspilation[modeName] = false;
      } else {
        requiresTranspilation[modeName] = true;
        transpilationRequiredForAllLaterModes = true;
      }
    }
    function evalCheck(code) {
      try {
        return !!eval(goog.CLOSURE_EVAL_PREFILTER_.createScript(code));
      } catch (ignored) {
        return false;
      }
    }
    addNewerLanguageTranspilationCheck("es5", function() {
      return evalCheck("[1,].length\x3d\x3d1");
    });
    addNewerLanguageTranspilationCheck("es6", function() {
      if (goog.isEdge_()) {
        return false;
      }
      var es6fullTest = "class X{constructor(){if(new.target!\x3dString)throw 1;this.x\x3d42}}" + "let q\x3dReflect.construct(X,[],String);if(q.x!\x3d42||!(q instanceof " + "String))throw 1;for(const a of[2,3]){if(a\x3d\x3d2)continue;function " + "f(z\x3d{a}){let a\x3d0;return z.a}{function f(){return 0;}}return f()" + "\x3d\x3d3}";
      return evalCheck('(()\x3d\x3e{"use strict";' + es6fullTest + "})()");
    });
    addNewerLanguageTranspilationCheck("es7", function() {
      return evalCheck("2**3\x3d\x3d8");
    });
    addNewerLanguageTranspilationCheck("es8", function() {
      return evalCheck("async()\x3d\x3e1,1");
    });
    addNewerLanguageTranspilationCheck("es9", function() {
      return evalCheck("({...rest}\x3d{}),1");
    });
    addNewerLanguageTranspilationCheck("es_2019", function() {
      return evalCheck('let r;try{r\x3d"\u2029"}catch{};r');
    });
    addNewerLanguageTranspilationCheck("es_2020", function() {
      return evalCheck("null?.x??1");
    });
    addNewerLanguageTranspilationCheck("es_next", function() {
      return false;
    });
    return {target:transpilationTarget, map:requiresTranspilation};
  };
  goog.Transpiler.prototype.needsTranspile = function(lang, module) {
    if (goog.TRANSPILE == "always") {
      return true;
    } else if (goog.TRANSPILE == "never") {
      return false;
    } else if (!this.requiresTranspilation_) {
      var obj = this.createRequiresTranspilation_();
      this.requiresTranspilation_ = obj.map;
      this.transpilationTarget_ = this.transpilationTarget_ || obj.target;
    }
    if (lang in this.requiresTranspilation_) {
      if (this.requiresTranspilation_[lang]) {
        return true;
      } else if (goog.inHtmlDocument_() && module == "es6" && !("noModule" in goog.global.document.createElement("script"))) {
        return true;
      } else {
        return false;
      }
    } else {
      throw new Error("Unknown language mode: " + lang);
    }
  };
  goog.Transpiler.prototype.transpile = function(code, path) {
    return goog.transpile_(code, path, this.transpilationTarget_);
  };
  goog.transpiler_ = new goog.Transpiler();
  goog.protectScriptTag_ = function(str) {
    return str.replace(/<\/(SCRIPT)/ig, "\\x3c/$1");
  };
  goog.DebugLoader_ = function() {
    this.dependencies_ = {};
    this.idToPath_ = {};
    this.written_ = {};
    this.loadingDeps_ = [];
    this.depsToLoad_ = [];
    this.paused_ = false;
    this.factory_ = new goog.DependencyFactory(goog.transpiler_);
    this.deferredCallbacks_ = {};
    this.deferredQueue_ = [];
  };
  goog.DebugLoader_.prototype.bootstrap = function(namespaces, callback) {
    var cb = callback;
    function resolve() {
      if (cb) {
        goog.global.setTimeout(cb, 0);
        cb = null;
      }
    }
    if (!namespaces.length) {
      resolve();
      return;
    }
    var deps = [];
    for (var i = 0; i < namespaces.length; i++) {
      var path = this.getPathFromDeps_(namespaces[i]);
      if (!path) {
        throw new Error("Unregonized namespace: " + namespaces[i]);
      }
      deps.push(this.dependencies_[path]);
    }
    var require = goog.require;
    var loaded = 0;
    for (var i = 0; i < namespaces.length; i++) {
      require(namespaces[i]);
      deps[i].onLoad(function() {
        if (++loaded == namespaces.length) {
          resolve();
        }
      });
    }
  };
  goog.DebugLoader_.prototype.loadClosureDeps = function() {
    var relPath = "deps.js";
    this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath + relPath), relPath, [], [], {}, false));
    this.loadDeps_();
  };
  goog.DebugLoader_.prototype.requested = function(absPathOrId, opt_force) {
    var path = this.getPathFromDeps_(absPathOrId);
    if (path && (opt_force || this.areDepsLoaded_(this.dependencies_[path].requires))) {
      var callback = this.deferredCallbacks_[path];
      if (callback) {
        delete this.deferredCallbacks_[path];
        callback();
      }
    }
  };
  goog.DebugLoader_.prototype.setDependencyFactory = function(factory) {
    this.factory_ = factory;
  };
  goog.DebugLoader_.prototype.load_ = function(namespace) {
    if (!this.getPathFromDeps_(namespace)) {
      var errorMessage = "goog.require could not find: " + namespace;
      goog.logToConsole_(errorMessage);
    } else {
      var loader = this;
      var deps = [];
      var visit = function(namespace) {
        var path = loader.getPathFromDeps_(namespace);
        if (!path) {
          throw new Error("Bad dependency path or symbol: " + namespace);
        }
        if (loader.written_[path]) {
          return;
        }
        loader.written_[path] = true;
        var dep = loader.dependencies_[path];
        for (var i = 0; i < dep.requires.length; i++) {
          if (!goog.isProvided_(dep.requires[i])) {
            visit(dep.requires[i]);
          }
        }
        deps.push(dep);
      };
      visit(namespace);
      var wasLoading = !!this.depsToLoad_.length;
      this.depsToLoad_ = this.depsToLoad_.concat(deps);
      if (!this.paused_ && !wasLoading) {
        this.loadDeps_();
      }
    }
  };
  goog.DebugLoader_.prototype.loadDeps_ = function() {
    var loader = this;
    var paused = this.paused_;
    while (this.depsToLoad_.length && !paused) {
      (function() {
        var loadCallDone = false;
        var dep = loader.depsToLoad_.shift();
        var loaded = false;
        loader.loading_(dep);
        var controller = {pause:function() {
          if (loadCallDone) {
            throw new Error("Cannot call pause after the call to load.");
          } else {
            paused = true;
          }
        }, resume:function() {
          if (loadCallDone) {
            loader.resume_();
          } else {
            paused = false;
          }
        }, loaded:function() {
          if (loaded) {
            throw new Error("Double call to loaded.");
          }
          loaded = true;
          loader.loaded_(dep);
        }, pending:function() {
          var pending = [];
          for (var i = 0; i < loader.loadingDeps_.length; i++) {
            pending.push(loader.loadingDeps_[i]);
          }
          return pending;
        }, setModuleState:function(type) {
          goog.moduleLoaderState_ = {type:type, moduleName:"", declareLegacyNamespace:false};
        }, registerEs6ModuleExports:function(path, exports, opt_closureNamespace) {
          if (opt_closureNamespace) {
            goog.loadedModules_[opt_closureNamespace] = {exports:exports, type:goog.ModuleType.ES6, moduleId:opt_closureNamespace || ""};
          }
        }, registerGoogModuleExports:function(moduleId, exports) {
          goog.loadedModules_[moduleId] = {exports:exports, type:goog.ModuleType.GOOG, moduleId:moduleId};
        }, clearModuleState:function() {
          goog.moduleLoaderState_ = null;
        }, defer:function(callback) {
          if (loadCallDone) {
            throw new Error("Cannot register with defer after the call to load.");
          }
          loader.defer_(dep, callback);
        }, areDepsLoaded:function() {
          return loader.areDepsLoaded_(dep.requires);
        }};
        try {
          dep.load(controller);
        } finally {
          loadCallDone = true;
        }
      })();
    }
    if (paused) {
      this.pause_();
    }
  };
  goog.DebugLoader_.prototype.pause_ = function() {
    this.paused_ = true;
  };
  goog.DebugLoader_.prototype.resume_ = function() {
    if (this.paused_) {
      this.paused_ = false;
      this.loadDeps_();
    }
  };
  goog.DebugLoader_.prototype.loading_ = function(dep) {
    this.loadingDeps_.push(dep);
  };
  goog.DebugLoader_.prototype.loaded_ = function(dep) {
    for (var i = 0; i < this.loadingDeps_.length; i++) {
      if (this.loadingDeps_[i] == dep) {
        this.loadingDeps_.splice(i, 1);
        break;
      }
    }
    for (var i = 0; i < this.deferredQueue_.length; i++) {
      if (this.deferredQueue_[i] == dep.path) {
        this.deferredQueue_.splice(i, 1);
        break;
      }
    }
    if (this.loadingDeps_.length == this.deferredQueue_.length && !this.depsToLoad_.length) {
      while (this.deferredQueue_.length) {
        this.requested(this.deferredQueue_.shift(), true);
      }
    }
    dep.loaded();
  };
  goog.DebugLoader_.prototype.areDepsLoaded_ = function(pathsOrIds) {
    for (var i = 0; i < pathsOrIds.length; i++) {
      var path = this.getPathFromDeps_(pathsOrIds[i]);
      if (!path || !(path in this.deferredCallbacks_) && !goog.isProvided_(pathsOrIds[i])) {
        return false;
      }
    }
    return true;
  };
  goog.DebugLoader_.prototype.getPathFromDeps_ = function(absPathOrId) {
    if (absPathOrId in this.idToPath_) {
      return this.idToPath_[absPathOrId];
    } else if (absPathOrId in this.dependencies_) {
      return absPathOrId;
    } else {
      return null;
    }
  };
  goog.DebugLoader_.prototype.defer_ = function(dependency, callback) {
    this.deferredCallbacks_[dependency.path] = callback;
    this.deferredQueue_.push(dependency.path);
  };
  goog.LoadController = function() {
  };
  goog.LoadController.prototype.pause = function() {
  };
  goog.LoadController.prototype.resume = function() {
  };
  goog.LoadController.prototype.loaded = function() {
  };
  goog.LoadController.prototype.pending = function() {
  };
  goog.LoadController.prototype.registerEs6ModuleExports = function(path, exports, opt_closureNamespace) {
  };
  goog.LoadController.prototype.setModuleState = function(type) {
  };
  goog.LoadController.prototype.clearModuleState = function() {
  };
  goog.LoadController.prototype.defer = function(callback) {
  };
  goog.LoadController.prototype.areDepsLoaded = function() {
  };
  goog.Dependency = function(path, relativePath, provides, requires, loadFlags) {
    this.path = path;
    this.relativePath = relativePath;
    this.provides = provides;
    this.requires = requires;
    this.loadFlags = loadFlags;
    this.loaded_ = false;
    this.loadCallbacks_ = [];
  };
  goog.Dependency.prototype.getPathName = function() {
    var pathName = this.path;
    var protocolIndex = pathName.indexOf("://");
    if (protocolIndex >= 0) {
      pathName = pathName.substring(protocolIndex + 3);
      var slashIndex = pathName.indexOf("/");
      if (slashIndex >= 0) {
        pathName = pathName.substring(slashIndex + 1);
      }
    }
    return pathName;
  };
  goog.Dependency.prototype.onLoad = function(callback) {
    if (this.loaded_) {
      callback();
    } else {
      this.loadCallbacks_.push(callback);
    }
  };
  goog.Dependency.prototype.loaded = function() {
    this.loaded_ = true;
    var callbacks = this.loadCallbacks_;
    this.loadCallbacks_ = [];
    for (var i = 0; i < callbacks.length; i++) {
      callbacks[i]();
    }
  };
  goog.Dependency.defer_ = false;
  goog.Dependency.callbackMap_ = {};
  goog.Dependency.registerCallback_ = function(callback) {
    var key = Math.random().toString(32);
    goog.Dependency.callbackMap_[key] = callback;
    return key;
  };
  goog.Dependency.unregisterCallback_ = function(key) {
    delete goog.Dependency.callbackMap_[key];
  };
  goog.Dependency.callback_ = function(key, var_args) {
    if (key in goog.Dependency.callbackMap_) {
      var callback = goog.Dependency.callbackMap_[key];
      var args = [];
      for (var i = 1; i < arguments.length; i++) {
        args.push(arguments[i]);
      }
      callback.apply(undefined, args);
    } else {
      var errorMessage = "Callback key " + key + " does not exist (was base.js loaded more than once?).";
      throw Error(errorMessage);
    }
  };
  goog.Dependency.prototype.load = function(controller) {
    if (goog.global.CLOSURE_IMPORT_SCRIPT) {
      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {
        controller.loaded();
      } else {
        controller.pause();
      }
      return;
    }
    if (!goog.inHtmlDocument_()) {
      goog.logToConsole_("Cannot use default debug loader outside of HTML documents.");
      if (this.relativePath == "deps.js") {
        goog.logToConsole_("Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, " + "or setting CLOSURE_NO_DEPS to true.");
        controller.loaded();
      } else {
        controller.pause();
      }
      return;
    }
    var doc = goog.global.document;
    if (doc.readyState == "complete" && !goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
      var isDeps = /\bdeps.js$/.test(this.path);
      if (isDeps) {
        controller.loaded();
        return;
      } else {
        throw Error('Cannot write "' + this.path + '" after document load');
      }
    }
    var nonce = goog.getScriptNonce_();
    if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && goog.isDocumentLoading_()) {
      var key;
      var callback = function(script) {
        if (script.readyState && script.readyState != "complete") {
          script.onload = callback;
          return;
        }
        goog.Dependency.unregisterCallback_(key);
        controller.loaded();
      };
      key = goog.Dependency.registerCallback_(callback);
      var defer = goog.Dependency.defer_ ? " defer" : "";
      var nonceAttr = nonce ? ' nonce\x3d"' + nonce + '"' : "";
      var script = '\x3cscript src\x3d"' + this.path + '"' + nonceAttr + defer + ' id\x3d"script-' + key + '"\x3e\x3c/script\x3e';
      script += "\x3cscript" + nonceAttr + "\x3e";
      if (goog.Dependency.defer_) {
        script += "document.getElementById('script-" + key + "').onload \x3d function() {\n" + "  goog.Dependency.callback_('" + key + "', this);\n" + "};\n";
      } else {
        script += "goog.Dependency.callback_('" + key + "', document.getElementById('script-" + key + "'));";
      }
      script += "\x3c/script\x3e";
      doc.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(script) : script);
    } else {
      var scriptEl = doc.createElement("script");
      scriptEl.defer = goog.Dependency.defer_;
      scriptEl.async = false;
      if (nonce) {
        scriptEl.nonce = nonce;
      }
      if (goog.DebugLoader_.IS_OLD_IE_) {
        controller.pause();
        scriptEl.onreadystatechange = function() {
          if (scriptEl.readyState == "loaded" || scriptEl.readyState == "complete") {
            controller.loaded();
            controller.resume();
          }
        };
      } else {
        scriptEl.onload = function() {
          scriptEl.onload = null;
          controller.loaded();
        };
      }
      scriptEl.src = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path) : this.path;
      doc.head.appendChild(scriptEl);
    }
  };
  goog.Es6ModuleDependency = function(path, relativePath, provides, requires, loadFlags) {
    goog.Es6ModuleDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
  };
  goog.inherits(goog.Es6ModuleDependency, goog.Dependency);
  goog.Es6ModuleDependency.prototype.load = function(controller) {
    if (goog.global.CLOSURE_IMPORT_SCRIPT) {
      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {
        controller.loaded();
      } else {
        controller.pause();
      }
      return;
    }
    if (!goog.inHtmlDocument_()) {
      goog.logToConsole_("Cannot use default debug loader outside of HTML documents.");
      controller.pause();
      return;
    }
    var doc = goog.global.document;
    var dep = this;
    function write(src, contents) {
      var nonceAttr = "";
      var nonce = goog.getScriptNonce_();
      if (nonce) {
        nonceAttr = ' nonce\x3d"' + nonce + '"';
      }
      if (contents) {
        var script = '\x3cscript type\x3d"module" crossorigin' + nonceAttr + "\x3e" + contents + "\x3c/" + "script\x3e";
        doc.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(script) : script);
      } else {
        var script = '\x3cscript type\x3d"module" crossorigin src\x3d"' + src + '"' + nonceAttr + "\x3e\x3c/" + "script\x3e";
        doc.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(script) : script);
      }
    }
    function append(src, contents) {
      var scriptEl = doc.createElement("script");
      scriptEl.defer = true;
      scriptEl.async = false;
      scriptEl.type = "module";
      scriptEl.setAttribute("crossorigin", true);
      var nonce = goog.getScriptNonce_();
      if (nonce) {
        scriptEl.nonce = nonce;
      }
      if (contents) {
        scriptEl.text = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScript(contents) : contents;
      } else {
        scriptEl.src = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScriptURL(src) : src;
      }
      doc.head.appendChild(scriptEl);
    }
    var create;
    if (goog.isDocumentLoading_()) {
      create = write;
      goog.Dependency.defer_ = true;
    } else {
      create = append;
    }
    var beforeKey = goog.Dependency.registerCallback_(function() {
      goog.Dependency.unregisterCallback_(beforeKey);
      controller.setModuleState(goog.ModuleType.ES6);
    });
    create(undefined, 'goog.Dependency.callback_("' + beforeKey + '")');
    create(this.path, undefined);
    var registerKey = goog.Dependency.registerCallback_(function(exports) {
      goog.Dependency.unregisterCallback_(registerKey);
      controller.registerEs6ModuleExports(dep.path, exports, goog.moduleLoaderState_.moduleName);
    });
    create(undefined, 'import * as m from "' + this.path + '"; goog.Dependency.callback_("' + registerKey + '", m)');
    var afterKey = goog.Dependency.registerCallback_(function() {
      goog.Dependency.unregisterCallback_(afterKey);
      controller.clearModuleState();
      controller.loaded();
    });
    create(undefined, 'goog.Dependency.callback_("' + afterKey + '")');
  };
  goog.TransformedDependency = function(path, relativePath, provides, requires, loadFlags) {
    goog.TransformedDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
    this.contents_ = null;
    this.lazyFetch_ = !goog.inHtmlDocument_() || !("noModule" in goog.global.document.createElement("script"));
  };
  goog.inherits(goog.TransformedDependency, goog.Dependency);
  goog.TransformedDependency.prototype.load = function(controller) {
    var dep = this;
    function fetch() {
      dep.contents_ = goog.loadFileSync_(dep.path);
      if (dep.contents_) {
        dep.contents_ = dep.transform(dep.contents_);
        if (dep.contents_) {
          dep.contents_ += "\n//# sourceURL\x3d" + dep.path;
        }
      }
    }
    if (goog.global.CLOSURE_IMPORT_SCRIPT) {
      fetch();
      if (this.contents_ && goog.global.CLOSURE_IMPORT_SCRIPT("", this.contents_)) {
        this.contents_ = null;
        controller.loaded();
      } else {
        controller.pause();
      }
      return;
    }
    var isEs6 = this.loadFlags["module"] == goog.ModuleType.ES6;
    if (!this.lazyFetch_) {
      fetch();
    }
    function load() {
      if (dep.lazyFetch_) {
        fetch();
      }
      if (!dep.contents_) {
        return;
      }
      if (isEs6) {
        controller.setModuleState(goog.ModuleType.ES6);
      }
      var namespace;
      try {
        var contents = dep.contents_;
        dep.contents_ = null;
        goog.globalEval(goog.CLOSURE_EVAL_PREFILTER_.createScript(contents));
        if (isEs6) {
          namespace = goog.moduleLoaderState_.moduleName;
        }
      } finally {
        if (isEs6) {
          controller.clearModuleState();
        }
      }
      if (isEs6) {
        goog.global["$jscomp"]["require"]["ensure"]([dep.getPathName()], function() {
          controller.registerEs6ModuleExports(dep.path, goog.global["$jscomp"]["require"](dep.getPathName()), namespace);
        });
      }
      controller.loaded();
    }
    function fetchInOwnScriptThenLoad() {
      var doc = goog.global.document;
      var key = goog.Dependency.registerCallback_(function() {
        goog.Dependency.unregisterCallback_(key);
        load();
      });
      var nonce = goog.getScriptNonce_();
      var nonceAttr = nonce ? ' nonce\x3d"' + nonce + '"' : "";
      var script = "\x3cscript" + nonceAttr + "\x3e" + goog.protectScriptTag_('goog.Dependency.callback_("' + key + '");') + "\x3c/" + "script\x3e";
      doc.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(script) : script);
    }
    var anythingElsePending = controller.pending().length > 1;
    var useOldIeWorkAround = anythingElsePending && goog.DebugLoader_.IS_OLD_IE_;
    var needsAsyncLoading = goog.Dependency.defer_ && (anythingElsePending || goog.isDocumentLoading_());
    if (useOldIeWorkAround || needsAsyncLoading) {
      controller.defer(function() {
        load();
      });
      return;
    }
    var doc = goog.global.document;
    var isInternetExplorerOrEdge = goog.inHtmlDocument_() && ("ActiveXObject" in goog.global || goog.isEdge_());
    if (isEs6 && goog.inHtmlDocument_() && goog.isDocumentLoading_() && !isInternetExplorerOrEdge) {
      goog.Dependency.defer_ = true;
      controller.pause();
      var oldCallback = doc.onreadystatechange;
      doc.onreadystatechange = function() {
        if (doc.readyState == "interactive") {
          doc.onreadystatechange = oldCallback;
          load();
          controller.resume();
        }
        if (typeof oldCallback === "function") {
          oldCallback.apply(undefined, arguments);
        }
      };
    } else {
      if (goog.DebugLoader_.IS_OLD_IE_ || !goog.inHtmlDocument_() || !goog.isDocumentLoading_()) {
        load();
      } else {
        fetchInOwnScriptThenLoad();
      }
    }
  };
  goog.TransformedDependency.prototype.transform = function(contents) {
  };
  goog.TranspiledDependency = function(path, relativePath, provides, requires, loadFlags, transpiler) {
    goog.TranspiledDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
    this.transpiler = transpiler;
  };
  goog.inherits(goog.TranspiledDependency, goog.TransformedDependency);
  goog.TranspiledDependency.prototype.transform = function(contents) {
    return this.transpiler.transpile(contents, this.getPathName());
  };
  goog.PreTranspiledEs6ModuleDependency = function(path, relativePath, provides, requires, loadFlags) {
    goog.PreTranspiledEs6ModuleDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
  };
  goog.inherits(goog.PreTranspiledEs6ModuleDependency, goog.TransformedDependency);
  goog.PreTranspiledEs6ModuleDependency.prototype.transform = function(contents) {
    return contents;
  };
  goog.GoogModuleDependency = function(path, relativePath, provides, requires, loadFlags, needsTranspile, transpiler) {
    goog.GoogModuleDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
    this.needsTranspile_ = needsTranspile;
    this.transpiler_ = transpiler;
  };
  goog.inherits(goog.GoogModuleDependency, goog.TransformedDependency);
  goog.GoogModuleDependency.prototype.transform = function(contents) {
    if (this.needsTranspile_) {
      contents = this.transpiler_.transpile(contents, this.getPathName());
    }
    if (!goog.LOAD_MODULE_USING_EVAL || goog.global.JSON === undefined) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + contents + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + this.path + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(contents + "\n//# sourceURL\x3d" + this.path + "\n") + ");";
    }
  };
  goog.DebugLoader_.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document["all"]);
  goog.DebugLoader_.prototype.addDependency = function(relPath, provides, requires, opt_loadFlags) {
    provides = provides || [];
    relPath = relPath.replace(/\\/g, "/");
    var path = goog.normalizePath_(goog.basePath + relPath);
    if (!opt_loadFlags || typeof opt_loadFlags === "boolean") {
      opt_loadFlags = opt_loadFlags ? {"module":goog.ModuleType.GOOG} : {};
    }
    var dep = this.factory_.createDependency(path, relPath, provides, requires, opt_loadFlags, goog.transpiler_.needsTranspile(opt_loadFlags["lang"] || "es3", opt_loadFlags["module"]));
    this.dependencies_[path] = dep;
    for (var i = 0; i < provides.length; i++) {
      this.idToPath_[provides[i]] = path;
    }
    this.idToPath_[relPath] = path;
  };
  goog.DependencyFactory = function(transpiler) {
    this.transpiler = transpiler;
  };
  goog.DependencyFactory.prototype.createDependency = function(path, relativePath, provides, requires, loadFlags, needsTranspile) {
    if (loadFlags["module"] == goog.ModuleType.GOOG) {
      return new goog.GoogModuleDependency(path, relativePath, provides, requires, loadFlags, needsTranspile, this.transpiler);
    } else if (needsTranspile) {
      return new goog.TranspiledDependency(path, relativePath, provides, requires, loadFlags, this.transpiler);
    } else {
      if (loadFlags["module"] == goog.ModuleType.ES6) {
        if (goog.TRANSPILE == "never" && goog.ASSUME_ES_MODULES_TRANSPILED) {
          return new goog.PreTranspiledEs6ModuleDependency(path, relativePath, provides, requires, loadFlags);
        } else {
          return new goog.Es6ModuleDependency(path, relativePath, provides, requires, loadFlags);
        }
      } else {
        return new goog.Dependency(path, relativePath, provides, requires, loadFlags);
      }
    }
  };
  goog.debugLoader_ = new goog.DebugLoader_();
  goog.loadClosureDeps = function() {
    goog.debugLoader_.loadClosureDeps();
  };
  goog.setDependencyFactory = function(factory) {
    goog.debugLoader_.setDependencyFactory(factory);
  };
  goog.TRUSTED_TYPES_POLICY_ = goog.TRUSTED_TYPES_POLICY_NAME ? goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + "#base") : null;
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.debugLoader_.loadClosureDeps();
  }
  goog.bootstrap = function(namespaces, callback) {
    goog.debugLoader_.bootstrap(namespaces, callback);
  };
}
if (!COMPILED) {
  var isChrome87 = false;
  try {
    isChrome87 = eval(goog.global.trustedTypes.emptyScript) !== goog.global.trustedTypes.emptyScript;
  } catch (err) {
  }
  goog.CLOSURE_EVAL_PREFILTER_ = goog.global.trustedTypes && isChrome87 && goog.createTrustedTypesPolicy("goog#base#devonly#eval") || {createScript:goog.identity_};
}
goog.nodeGlobalRequire = function(path) {
  return false;
};
goog.loadModule(function(exports) {
  "use strict";
  goog.module("goog.debug.Error");
  goog.module.declareLegacyNamespace();
  function DebugError(msg = undefined, cause = undefined) {
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, DebugError);
    } else {
      const stack = (new Error()).stack;
      if (stack) {
        this.stack = stack;
      }
    }
    if (msg) {
      this.message = String(msg);
    }
    if (cause !== undefined) {
      this.cause = cause;
    }
    this.reportErrorToServer = true;
  }
  goog.inherits(DebugError, Error);
  DebugError.prototype.name = "CustomError";
  exports = DebugError;
  return exports;
});
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.asserts.ENABLE_ASSERTS = goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  goog.debug.Error.call(this, goog.asserts.subs_(messagePattern, messageArgs));
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.subs_ = function(pattern, subs) {
  var splitParts = pattern.split("%s");
  var returnString = "";
  var subLast = splitParts.length - 1;
  for (var i = 0; i < subLast; i++) {
    var sub = i < subs.length ? subs[i] : "%s";
    returnString += splitParts[i] + sub;
  }
  return returnString + splitParts[subLast];
};
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else if (defaultMessage) {
    message += ": " + defaultMessage;
    args = defaultArgs;
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.assertExists = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && value == null) {
    goog.asserts.doAssertFailure_("Expected to exist: %s.", [value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && typeof value !== "number") {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && typeof value !== "string") {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && typeof value !== "function") {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !Array.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && typeof value !== "boolean") {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertFinite = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (typeof value != "number" || !isFinite(value))) {
    goog.asserts.doAssertFailure_("Expected %s to be a finite number but it is not.", [value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else if (value instanceof Object) {
    return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
  } else {
    return value === null ? "null" : typeof value;
  }
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.objectProperty = function(prop, object) {
  return prop;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.reflect.cache = function(cacheObj, key, valueFn, opt_keyFn) {
  const storedKey = opt_keyFn ? opt_keyFn(key) : key;
  if (Object.prototype.hasOwnProperty.call(cacheObj, storedKey)) {
    return cacheObj[storedKey];
  }
  return cacheObj[storedKey] = valueFn(key);
};
goog.loadModule(function(exports) {
  "use strict";
  goog.module("goog.math.Long");
  goog.module.declareLegacyNamespace();
  const asserts = goog.require("goog.asserts");
  const reflect = goog.require("goog.reflect");
  class Long {
    constructor(low, high) {
      this.low_ = low | 0;
      this.high_ = high | 0;
    }
    toInt() {
      return this.low_;
    }
    toNumber() {
      return this.high_ * TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
    }
    isSafeInteger() {
      var top11Bits = this.high_ >> 21;
      return top11Bits == 0 || top11Bits == -1 && !(this.low_ == 0 && this.high_ == (4292870144 | 0));
    }
    toString(opt_radix) {
      var radix = opt_radix || 10;
      if (radix < 2 || 36 < radix) {
        throw new Error("radix out of range: " + radix);
      }
      if (this.isSafeInteger()) {
        var asNumber = this.toNumber();
        return radix == 10 ? "" + asNumber : asNumber.toString(radix);
      }
      var safeDigits = 14 - (radix >> 2);
      var radixPowSafeDigits = Math.pow(radix, safeDigits);
      var radixToPower = Long.fromBits(radixPowSafeDigits, radixPowSafeDigits / TWO_PWR_32_DBL_);
      var remDiv = this.div(radixToPower);
      var val = Math.abs(this.subtract(remDiv.multiply(radixToPower)).toNumber());
      var digits = radix == 10 ? "" + val : val.toString(radix);
      if (digits.length < safeDigits) {
        digits = "0000000000000".substr(digits.length - safeDigits) + digits;
      }
      val = remDiv.toNumber();
      return (radix == 10 ? val : val.toString(radix)) + digits;
    }
    getHighBits() {
      return this.high_;
    }
    getLowBits() {
      return this.low_;
    }
    getLowBitsUnsigned() {
      return this.low_ >>> 0;
    }
    getNumBitsAbs() {
      if (this.isNegative()) {
        if (this.equals(Long.getMinValue())) {
          return 64;
        } else {
          return this.negate().getNumBitsAbs();
        }
      } else {
        var val = this.high_ != 0 ? this.high_ : this.low_;
        for (var bit = 31; bit > 0; bit--) {
          if ((val & 1 << bit) != 0) {
            break;
          }
        }
        return this.high_ != 0 ? bit + 33 : bit + 1;
      }
    }
    isZero() {
      return this.low_ == 0 && this.high_ == 0;
    }
    isNegative() {
      return this.high_ < 0;
    }
    isOdd() {
      return (this.low_ & 1) == 1;
    }
    hashCode() {
      return this.getLowBits() ^ this.getHighBits();
    }
    equals(other) {
      return this.low_ == other.low_ && this.high_ == other.high_;
    }
    notEquals(other) {
      return !this.equals(other);
    }
    lessThan(other) {
      return this.compare(other) < 0;
    }
    lessThanOrEqual(other) {
      return this.compare(other) <= 0;
    }
    greaterThan(other) {
      return this.compare(other) > 0;
    }
    greaterThanOrEqual(other) {
      return this.compare(other) >= 0;
    }
    compare(other) {
      if (this.high_ == other.high_) {
        if (this.low_ == other.low_) {
          return 0;
        }
        return this.getLowBitsUnsigned() > other.getLowBitsUnsigned() ? 1 : -1;
      }
      return this.high_ > other.high_ ? 1 : -1;
    }
    negate() {
      var negLow = ~this.low_ + 1 | 0;
      var overflowFromLow = !negLow;
      var negHigh = ~this.high_ + overflowFromLow | 0;
      return Long.fromBits(negLow, negHigh);
    }
    add(other) {
      var a48 = this.high_ >>> 16;
      var a32 = this.high_ & 65535;
      var a16 = this.low_ >>> 16;
      var a00 = this.low_ & 65535;
      var b48 = other.high_ >>> 16;
      var b32 = other.high_ & 65535;
      var b16 = other.low_ >>> 16;
      var b00 = other.low_ & 65535;
      var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
      c00 += a00 + b00;
      c16 += c00 >>> 16;
      c00 &= 65535;
      c16 += a16 + b16;
      c32 += c16 >>> 16;
      c16 &= 65535;
      c32 += a32 + b32;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c48 += a48 + b48;
      c48 &= 65535;
      return Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
    }
    subtract(other) {
      return this.add(other.negate());
    }
    multiply(other) {
      if (this.isZero()) {
        return this;
      }
      if (other.isZero()) {
        return other;
      }
      var a48 = this.high_ >>> 16;
      var a32 = this.high_ & 65535;
      var a16 = this.low_ >>> 16;
      var a00 = this.low_ & 65535;
      var b48 = other.high_ >>> 16;
      var b32 = other.high_ & 65535;
      var b16 = other.low_ >>> 16;
      var b00 = other.low_ & 65535;
      var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
      c00 += a00 * b00;
      c16 += c00 >>> 16;
      c00 &= 65535;
      c16 += a16 * b00;
      c32 += c16 >>> 16;
      c16 &= 65535;
      c16 += a00 * b16;
      c32 += c16 >>> 16;
      c16 &= 65535;
      c32 += a32 * b00;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c32 += a16 * b16;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c32 += a00 * b32;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
      c48 &= 65535;
      return Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
    }
    div(other) {
      if (other.isZero()) {
        throw new Error("division by zero");
      }
      if (this.isNegative()) {
        if (this.equals(Long.getMinValue())) {
          if (other.equals(Long.getOne()) || other.equals(Long.getNegOne())) {
            return Long.getMinValue();
          }
          if (other.equals(Long.getMinValue())) {
            return Long.getOne();
          }
          var halfThis = this.shiftRight(1);
          var approx = halfThis.div(other).shiftLeft(1);
          if (approx.equals(Long.getZero())) {
            return other.isNegative() ? Long.getOne() : Long.getNegOne();
          }
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
        if (other.isNegative()) {
          return this.negate().div(other.negate());
        }
        return this.negate().div(other).negate();
      }
      if (this.isZero()) {
        return Long.getZero();
      }
      if (other.isNegative()) {
        if (other.equals(Long.getMinValue())) {
          return Long.getZero();
        }
        return this.div(other.negate()).negate();
      }
      var res = Long.getZero();
      var rem = this;
      while (rem.greaterThanOrEqual(other)) {
        var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
        var log2 = Math.ceil(Math.log(approx) / Math.LN2);
        var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
        var approxRes = Long.fromNumber(approx);
        var approxRem = approxRes.multiply(other);
        while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
          approx -= delta;
          approxRes = Long.fromNumber(approx);
          approxRem = approxRes.multiply(other);
        }
        if (approxRes.isZero()) {
          approxRes = Long.getOne();
        }
        res = res.add(approxRes);
        rem = rem.subtract(approxRem);
      }
      return res;
    }
    modulo(other) {
      return this.subtract(this.div(other).multiply(other));
    }
    not() {
      return Long.fromBits(~this.low_, ~this.high_);
    }
    and(other) {
      return Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);
    }
    or(other) {
      return Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);
    }
    xor(other) {
      return Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
    }
    shiftLeft(numBits) {
      numBits &= 63;
      if (numBits == 0) {
        return this;
      } else {
        var low = this.low_;
        if (numBits < 32) {
          var high = this.high_;
          return Long.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);
        } else {
          return Long.fromBits(0, low << numBits - 32);
        }
      }
    }
    shiftRight(numBits) {
      numBits &= 63;
      if (numBits == 0) {
        return this;
      } else {
        var high = this.high_;
        if (numBits < 32) {
          var low = this.low_;
          return Long.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);
        } else {
          return Long.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);
        }
      }
    }
    shiftRightUnsigned(numBits) {
      numBits &= 63;
      if (numBits == 0) {
        return this;
      } else {
        var high = this.high_;
        if (numBits < 32) {
          var low = this.low_;
          return Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);
        } else if (numBits == 32) {
          return Long.fromBits(high, 0);
        } else {
          return Long.fromBits(high >>> numBits - 32, 0);
        }
      }
    }
    static fromInt(value) {
      var intValue = value | 0;
      asserts.assert(value === intValue, "value should be a 32-bit integer");
      if (-128 <= intValue && intValue < 128) {
        return getCachedIntValue_(intValue);
      } else {
        return new Long(intValue, intValue < 0 ? -1 : 0);
      }
    }
    static fromNumber(value) {
      if (value > 0) {
        if (value >= TWO_PWR_63_DBL_) {
          return Long.getMaxValue();
        }
        return new Long(value, value / TWO_PWR_32_DBL_);
      } else if (value < 0) {
        if (value <= -TWO_PWR_63_DBL_) {
          return Long.getMinValue();
        }
        return (new Long(-value, -value / TWO_PWR_32_DBL_)).negate();
      } else {
        return Long.getZero();
      }
    }
    static fromBits(lowBits, highBits) {
      return new Long(lowBits, highBits);
    }
    static fromString(str, opt_radix) {
      if (str.charAt(0) == "-") {
        return Long.fromString(str.substring(1), opt_radix).negate();
      }
      var numberValue = parseInt(str, opt_radix || 10);
      if (numberValue <= MAX_SAFE_INTEGER_) {
        return new Long(numberValue % TWO_PWR_32_DBL_ | 0, numberValue / TWO_PWR_32_DBL_ | 0);
      }
      if (str.length == 0) {
        throw new Error("number format error: empty string");
      }
      if (str.indexOf("-") >= 0) {
        throw new Error('number format error: interior "-" character: ' + str);
      }
      var radix = opt_radix || 10;
      if (radix < 2 || 36 < radix) {
        throw new Error("radix out of range: " + radix);
      }
      var radixToPower = Long.fromNumber(Math.pow(radix, 8));
      var result = Long.getZero();
      for (var i = 0; i < str.length; i += 8) {
        var size = Math.min(8, str.length - i);
        var value = parseInt(str.substring(i, i + size), radix);
        if (size < 8) {
          var power = Long.fromNumber(Math.pow(radix, size));
          result = result.multiply(power).add(Long.fromNumber(value));
        } else {
          result = result.multiply(radixToPower);
          result = result.add(Long.fromNumber(value));
        }
      }
      return result;
    }
    static isStringInRange(str, opt_radix) {
      var radix = opt_radix || 10;
      if (radix < 2 || 36 < radix) {
        throw new Error("radix out of range: " + radix);
      }
      var extremeValue = str.charAt(0) == "-" ? MIN_VALUE_FOR_RADIX_[radix] : MAX_VALUE_FOR_RADIX_[radix];
      if (str.length < extremeValue.length) {
        return true;
      } else if (str.length == extremeValue.length && str <= extremeValue) {
        return true;
      } else {
        return false;
      }
    }
    static getZero() {
      return ZERO_;
    }
    static getOne() {
      return ONE_;
    }
    static getNegOne() {
      return NEG_ONE_;
    }
    static getMaxValue() {
      return MAX_VALUE_;
    }
    static getMinValue() {
      return MIN_VALUE_;
    }
    static getTwoPwr24() {
      return TWO_PWR_24_;
    }
  }
  exports = Long;
  const IntCache_ = {};
  function getCachedIntValue_(value) {
    return reflect.cache(IntCache_, value, function(val) {
      return new Long(val, val < 0 ? -1 : 0);
    });
  }
  const MAX_VALUE_FOR_RADIX_ = ["", "", "111111111111111111111111111111111111111111111111111111111111111", "2021110011022210012102010021220101220221", "13333333333333333333333333333333", "1104332401304422434310311212", "1540241003031030222122211", "22341010611245052052300", "777777777777777777777", "67404283172107811827", "9223372036854775807", "1728002635214590697", "41a792678515120367", "10b269549075433c37", "4340724c6c71dc7a7", "160e2ad3246366807", "7fffffffffffffff", "33d3d8307b214008", "16agh595df825fa7", 
  "ba643dci0ffeehh", "5cbfjia3fh26ja7", "2heiciiie82dh97", "1adaibb21dckfa7", "i6k448cf4192c2", "acd772jnc9l0l7", "64ie1focnn5g77", "3igoecjbmca687", "27c48l5b37oaop", "1bk39f3ah3dmq7", "q1se8f0m04isb", "hajppbc1fc207", "bm03i95hia437", "7vvvvvvvvvvvv", "5hg4ck9jd4u37", "3tdtk1v8j6tpp", "2pijmikexrxp7", "1y2p0ij32e8e7"];
  const MIN_VALUE_FOR_RADIX_ = ["", "", "-1000000000000000000000000000000000000000000000000000000000000000", "-2021110011022210012102010021220101220222", "-20000000000000000000000000000000", "-1104332401304422434310311213", "-1540241003031030222122212", "-22341010611245052052301", "-1000000000000000000000", "-67404283172107811828", "-9223372036854775808", "-1728002635214590698", "-41a792678515120368", "-10b269549075433c38", "-4340724c6c71dc7a8", "-160e2ad3246366808", "-8000000000000000", "-33d3d8307b214009", 
  "-16agh595df825fa8", "-ba643dci0ffeehi", "-5cbfjia3fh26ja8", "-2heiciiie82dh98", "-1adaibb21dckfa8", "-i6k448cf4192c3", "-acd772jnc9l0l8", "-64ie1focnn5g78", "-3igoecjbmca688", "-27c48l5b37oaoq", "-1bk39f3ah3dmq8", "-q1se8f0m04isc", "-hajppbc1fc208", "-bm03i95hia438", "-8000000000000", "-5hg4ck9jd4u38", "-3tdtk1v8j6tpq", "-2pijmikexrxp8", "-1y2p0ij32e8e8"];
  const MAX_SAFE_INTEGER_ = 9007199254740991;
  const TWO_PWR_32_DBL_ = 4294967296;
  const TWO_PWR_63_DBL_ = 0x7fffffffffffffff;
  const ZERO_ = Long.fromBits(0, 0);
  const ONE_ = Long.fromBits(1, 0);
  const NEG_ONE_ = Long.fromBits(-1, -1);
  const MAX_VALUE_ = Long.fromBits(4294967295, 2147483647);
  const MIN_VALUE_ = Long.fromBits(0, 2147483648);
  const TWO_PWR_24_ = Long.fromBits(1 << 24, 0);
  return exports;
});
goog.provide("goog.math.Integer");
goog.require("goog.reflect");
goog.math.Integer = function(bits, sign) {
  this.sign_ = sign;
  var localBits = [];
  var top = true;
  for (var i = bits.length - 1; i >= 0; i--) {
    var val = bits[i] | 0;
    if (!top || val != sign) {
      localBits[i] = val;
      top = false;
    }
  }
  this.bits_ = localBits;
};
goog.math.Integer.IntCache_ = {};
goog.math.Integer.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    return goog.reflect.cache(goog.math.Integer.IntCache_, value, function(val) {
      return new goog.math.Integer([val | 0], val < 0 ? -1 : 0);
    });
  }
  return new goog.math.Integer([value | 0], value < 0 ? -1 : 0);
};
goog.math.Integer.fromNumber = function(value) {
  if (isNaN(value) || !isFinite(value)) {
    return goog.math.Integer.ZERO;
  } else if (value < 0) {
    return goog.math.Integer.fromNumber(-value).negate();
  } else {
    var bits = [];
    var pow = 1;
    for (var i = 0; value >= pow; i++) {
      bits[i] = value / pow | 0;
      pow *= goog.math.Integer.TWO_PWR_32_DBL_;
    }
    return new goog.math.Integer(bits, 0);
  }
};
goog.math.Integer.fromBits = function(bits) {
  var high = bits[bits.length - 1];
  return new goog.math.Integer(bits, high & 1 << 31 ? -1 : 0);
};
goog.math.Integer.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw new Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw new Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Integer.fromString(str.substring(1), radix).negate();
  } else if (str.indexOf("-") >= 0) {
    throw new Error('number format error: interior "-" character');
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Integer.ZERO;
  for (var i = 0; i < str.length; i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Integer.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Integer.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Integer.fromNumber(value));
    }
  }
  return result;
};
goog.math.Integer.TWO_PWR_32_DBL_ = (1 << 16) * (1 << 16);
goog.math.Integer.ZERO = goog.math.Integer.fromInt(0);
goog.math.Integer.ONE = goog.math.Integer.fromInt(1);
goog.math.Integer.TWO_PWR_24_ = goog.math.Integer.fromInt(1 << 24);
goog.math.Integer.prototype.toInt = function() {
  return this.bits_.length > 0 ? this.bits_[0] : this.sign_;
};
goog.math.Integer.prototype.toNumber = function() {
  if (this.isNegative()) {
    return -this.negate().toNumber();
  } else {
    var val = 0;
    var pow = 1;
    for (var i = 0; i < this.bits_.length; i++) {
      val += this.getBitsUnsigned(i) * pow;
      pow *= goog.math.Integer.TWO_PWR_32_DBL_;
    }
    return val;
  }
};
goog.math.Integer.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw new Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  } else if (this.isNegative()) {
    return "-" + this.negate().toString(radix);
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.divide(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Integer.prototype.getBits = function(index) {
  if (index < 0) {
    return 0;
  } else if (index < this.bits_.length) {
    return this.bits_[index];
  } else {
    return this.sign_;
  }
};
goog.math.Integer.prototype.getBitsUnsigned = function(index) {
  var val = this.getBits(index);
  return val >= 0 ? val : goog.math.Integer.TWO_PWR_32_DBL_ + val;
};
goog.math.Integer.prototype.getSign = function() {
  return this.sign_;
};
goog.math.Integer.prototype.isZero = function() {
  if (this.sign_ != 0) {
    return false;
  }
  for (var i = 0; i < this.bits_.length; i++) {
    if (this.bits_[i] != 0) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.isNegative = function() {
  return this.sign_ == -1;
};
goog.math.Integer.prototype.isOdd = function() {
  return this.bits_.length == 0 && this.sign_ == -1 || this.bits_.length > 0 && (this.bits_[0] & 1) != 0;
};
goog.math.Integer.prototype.equals = function(other) {
  if (this.sign_ != other.sign_) {
    return false;
  }
  var len = Math.max(this.bits_.length, other.bits_.length);
  for (var i = 0; i < len; i++) {
    if (this.getBits(i) != other.getBits(i)) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.notEquals = function(other) {
  return !this.equals(other);
};
goog.math.Integer.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Integer.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Integer.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Integer.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Integer.prototype.compare = function(other) {
  var diff = this.subtract(other);
  if (diff.isNegative()) {
    return -1;
  } else if (diff.isZero()) {
    return 0;
  } else {
    return +1;
  }
};
goog.math.Integer.prototype.shorten = function(numBits) {
  var arr_index = numBits - 1 >> 5;
  var bit_index = (numBits - 1) % 32;
  var bits = [];
  for (var i = 0; i < arr_index; i++) {
    bits[i] = this.getBits(i);
  }
  var sigBits = bit_index == 31 ? 4294967295 : (1 << bit_index + 1) - 1;
  var val = this.getBits(arr_index) & sigBits;
  if (val & 1 << bit_index) {
    val |= 4294967295 - sigBits;
    bits[arr_index] = val;
    return new goog.math.Integer(bits, -1);
  } else {
    bits[arr_index] = val;
    return new goog.math.Integer(bits, 0);
  }
};
goog.math.Integer.prototype.negate = function() {
  return this.not().add(goog.math.Integer.ONE);
};
goog.math.Integer.prototype.abs = function() {
  return this.isNegative() ? this.negate() : this;
};
goog.math.Integer.prototype.add = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  var carry = 0;
  for (var i = 0; i <= len; i++) {
    var a1 = this.getBits(i) >>> 16;
    var a0 = this.getBits(i) & 65535;
    var b1 = other.getBits(i) >>> 16;
    var b0 = other.getBits(i) & 65535;
    var c0 = carry + a0 + b0;
    var c1 = (c0 >>> 16) + a1 + b1;
    carry = c1 >>> 16;
    c0 &= 65535;
    c1 &= 65535;
    arr[i] = c1 << 16 | c0;
  }
  return goog.math.Integer.fromBits(arr);
};
goog.math.Integer.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Integer.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Integer.ZERO;
  } else if (other.isZero()) {
    return goog.math.Integer.ZERO;
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else if (other.isNegative()) {
    return this.multiply(other.negate()).negate();
  }
  if (this.lessThan(goog.math.Integer.TWO_PWR_24_) && other.lessThan(goog.math.Integer.TWO_PWR_24_)) {
    return goog.math.Integer.fromNumber(this.toNumber() * other.toNumber());
  }
  var len = this.bits_.length + other.bits_.length;
  var arr = [];
  for (var i = 0; i < 2 * len; i++) {
    arr[i] = 0;
  }
  for (var i = 0; i < this.bits_.length; i++) {
    for (var j = 0; j < other.bits_.length; j++) {
      var a1 = this.getBits(i) >>> 16;
      var a0 = this.getBits(i) & 65535;
      var b1 = other.getBits(j) >>> 16;
      var b0 = other.getBits(j) & 65535;
      arr[2 * i + 2 * j] += a0 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j);
      arr[2 * i + 2 * j + 1] += a1 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 1] += a0 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 2] += a1 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 2);
    }
  }
  for (var i = 0; i < len; i++) {
    arr[i] = arr[2 * i + 1] << 16 | arr[2 * i];
  }
  for (var i = len; i < 2 * len; i++) {
    arr[i] = 0;
  }
  return new goog.math.Integer(arr, 0);
};
goog.math.Integer.carry16_ = function(bits, index) {
  while ((bits[index] & 65535) != bits[index]) {
    bits[index + 1] += bits[index] >>> 16;
    bits[index] &= 65535;
    index++;
  }
};
goog.math.Integer.prototype.slowDivide_ = function(other) {
  if (this.isNegative() || other.isNegative()) {
    throw new Error("slowDivide_ only works with positive integers.");
  }
  var twoPower = goog.math.Integer.ONE;
  var multiple = other;
  while (multiple.lessThanOrEqual(this)) {
    twoPower = twoPower.shiftLeft(1);
    multiple = multiple.shiftLeft(1);
  }
  var res = twoPower.shiftRight(1);
  var total = multiple.shiftRight(1);
  var total2;
  multiple = multiple.shiftRight(2);
  twoPower = twoPower.shiftRight(2);
  while (!multiple.isZero()) {
    total2 = total.add(multiple);
    if (total2.lessThanOrEqual(this)) {
      res = res.add(twoPower);
      total = total2;
    }
    multiple = multiple.shiftRight(1);
    twoPower = twoPower.shiftRight(1);
  }
  var remainder = this.subtract(res.multiply(other));
  return new goog.math.Integer.DivisionResult(res, remainder);
};
goog.math.Integer.prototype.divide = function(other) {
  return this.divideAndRemainder(other).quotient;
};
goog.math.Integer.DivisionResult = function(quotient, remainder) {
  this.quotient = quotient;
  this.remainder = remainder;
};
goog.math.Integer.prototype.divideAndRemainder = function(other) {
  if (other.isZero()) {
    throw new Error("division by zero");
  } else if (this.isZero()) {
    return new goog.math.Integer.DivisionResult(goog.math.Integer.ZERO, goog.math.Integer.ZERO);
  }
  if (this.isNegative()) {
    var result = this.negate().divideAndRemainder(other);
    return new goog.math.Integer.DivisionResult(result.quotient.negate(), result.remainder.negate());
  } else if (other.isNegative()) {
    var result = this.divideAndRemainder(other.negate());
    return new goog.math.Integer.DivisionResult(result.quotient.negate(), result.remainder);
  }
  if (this.bits_.length > 30) {
    return this.slowDivide_(other);
  }
  var res = goog.math.Integer.ZERO;
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Integer.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Integer.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Integer.ONE;
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return new goog.math.Integer.DivisionResult(res, rem);
};
goog.math.Integer.prototype.modulo = function(other) {
  return this.divideAndRemainder(other).remainder;
};
goog.math.Integer.prototype.not = function() {
  var len = this.bits_.length;
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = ~this.bits_[i];
  }
  return new goog.math.Integer(arr, ~this.sign_);
};
goog.math.Integer.prototype.and = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) & other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ & other.sign_);
};
goog.math.Integer.prototype.or = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) | other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ | other.sign_);
};
goog.math.Integer.prototype.xor = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) ^ other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ ^ other.sign_);
};
goog.math.Integer.prototype.shiftLeft = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length + arr_delta + (bit_delta > 0 ? 1 : 0);
  var arr = [];
  for (var i = 0; i < len; i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i - arr_delta) << bit_delta | this.getBits(i - arr_delta - 1) >>> 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i - arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.math.Integer.prototype.shiftRight = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length - arr_delta;
  var arr = [];
  for (var i = 0; i < len; i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i + arr_delta) >>> bit_delta | this.getBits(i + arr_delta + 1) << 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i + arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.provide("goog.dom.asserts");
goog.require("goog.asserts");
goog.dom.asserts.assertIsLocation = function(o) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (win) {
      if (!o || !(o instanceof win.Location) && o instanceof win.Element) {
        goog.asserts.fail("Argument is not a Location (or a non-Element mock); got: %s", goog.dom.asserts.debugStringForType_(o));
      }
    }
  }
  return o;
};
goog.dom.asserts.assertIsElementType_ = function(o, typename) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (win && typeof win[typename] != "undefined") {
      if (!o || !(o instanceof win[typename]) && (o instanceof win.Location || o instanceof win.Element)) {
        goog.asserts.fail("Argument is not a %s (or a non-Element, non-Location mock); " + "got: %s", typename, goog.dom.asserts.debugStringForType_(o));
      }
    }
  }
  return o;
};
goog.dom.asserts.assertIsHTMLAnchorElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLAnchorElement");
};
goog.dom.asserts.assertIsHTMLButtonElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLButtonElement");
};
goog.dom.asserts.assertIsHTMLLinkElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLLinkElement");
};
goog.dom.asserts.assertIsHTMLImageElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLImageElement");
};
goog.dom.asserts.assertIsHTMLAudioElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLAudioElement");
};
goog.dom.asserts.assertIsHTMLVideoElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLVideoElement");
};
goog.dom.asserts.assertIsHTMLInputElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLInputElement");
};
goog.dom.asserts.assertIsHTMLTextAreaElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLTextAreaElement");
};
goog.dom.asserts.assertIsHTMLCanvasElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLCanvasElement");
};
goog.dom.asserts.assertIsHTMLEmbedElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLEmbedElement");
};
goog.dom.asserts.assertIsHTMLFormElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLFormElement");
};
goog.dom.asserts.assertIsHTMLFrameElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLFrameElement");
};
goog.dom.asserts.assertIsHTMLIFrameElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLIFrameElement");
};
goog.dom.asserts.assertIsHTMLObjectElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLObjectElement");
};
goog.dom.asserts.assertIsHTMLScriptElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLScriptElement");
};
goog.dom.asserts.debugStringForType_ = function(value) {
  if (goog.isObject(value)) {
    try {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } catch (e) {
      return "\x3cobject could not be stringified\x3e";
    }
  } else {
    return value === undefined ? "undefined" : value === null ? "null" : typeof value;
  }
};
goog.dom.asserts.getWindow_ = function(o) {
  try {
    var doc = o && o.ownerDocument;
    var win = doc && (doc.defaultView || doc.parentWindow);
    win = win || goog.global;
    if (win.Element && win.Location) {
      return win;
    }
  } catch (ex) {
  }
  return null;
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = function() {
  return false;
};
goog.functions.TRUE = function() {
  return true;
};
goog.functions.NULL = function() {
  return null;
};
goog.functions.UNDEFINED = function() {
  return undefined;
};
goog.functions.EMPTY = goog.functions.UNDEFINED;
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw new Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    const self = this;
    return f.apply(self, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.partialRight = function(fn, var_args) {
  const rightArgs = Array.prototype.slice.call(arguments, 1);
  return function() {
    let self = this;
    if (self === goog.global) {
      self = undefined;
    }
    const newArgs = Array.prototype.slice.call(arguments);
    newArgs.push.apply(newArgs, rightArgs);
    return fn.apply(self, newArgs);
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.equalTo = function(value, opt_useLooseComparison) {
  return function(other) {
    return opt_useLooseComparison ? value == other : value === other;
  };
};
goog.functions.compose = function(fn, var_args) {
  const functions = arguments;
  const length = functions.length;
  return function() {
    const self = this;
    let result;
    if (length) {
      result = functions[length - 1].apply(self, arguments);
    }
    for (let i = length - 2; i >= 0; i--) {
      result = functions[i].call(self, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  const functions = arguments;
  const length = functions.length;
  return function() {
    const self = this;
    let result;
    for (let i = 0; i < length; i++) {
      result = functions[i].apply(self, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  const functions = arguments;
  const length = functions.length;
  return function() {
    const self = this;
    for (let i = 0; i < length; i++) {
      if (!functions[i].apply(self, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  const functions = arguments;
  const length = functions.length;
  return function() {
    const self = this;
    for (let i = 0; i < length; i++) {
      if (functions[i].apply(self, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    const self = this;
    return !f.apply(self, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  const temp = function() {
  };
  temp.prototype = constructor.prototype;
  const obj = new temp();
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.functions.CACHE_RETURN_VALUE = goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  let called = false;
  let value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.functions.once = function(f) {
  let inner = f;
  return function() {
    if (inner) {
      const tmp = inner;
      inner = null;
      tmp();
    }
  };
};
goog.functions.debounce = function(f, interval, opt_scope) {
  let timeout = 0;
  return function(var_args) {
    goog.global.clearTimeout(timeout);
    const args = arguments;
    timeout = goog.global.setTimeout(function() {
      f.apply(opt_scope, args);
    }, interval);
  };
};
goog.functions.throttle = function(f, interval, opt_scope) {
  let timeout = 0;
  let shouldFire = false;
  let storedArgs = [];
  const handleTimeout = function() {
    timeout = 0;
    if (shouldFire) {
      shouldFire = false;
      fire();
    }
  };
  const fire = function() {
    timeout = goog.global.setTimeout(handleTimeout, interval);
    let args = storedArgs;
    storedArgs = [];
    f.apply(opt_scope, args);
  };
  return function(var_args) {
    storedArgs = arguments;
    if (!timeout) {
      fire();
    } else {
      shouldFire = true;
    }
  };
};
goog.functions.rateLimit = function(f, interval, opt_scope) {
  let timeout = 0;
  const handleTimeout = function() {
    timeout = 0;
  };
  return function(var_args) {
    if (!timeout) {
      timeout = goog.global.setTimeout(handleTimeout, interval);
      f.apply(opt_scope, arguments);
    }
  };
};
goog.functions.isFunction = val => {
  return typeof val === "function";
};
goog.provide("goog.string.TypedString");
goog.string.TypedString = function() {
};
goog.string.TypedString.prototype.implementsGoogStringTypedString;
goog.string.TypedString.prototype.getTypedStringValue;
goog.provide("goog.string.Const");
goog.require("goog.asserts");
goog.require("goog.string.TypedString");
goog.string.Const = function(opt_token, opt_content) {
  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = opt_token === goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ && opt_content || "";
  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
};
goog.string.Const.prototype.implementsGoogStringTypedString = true;
goog.string.Const.prototype.getTypedStringValue = function() {
  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
};
if (goog.DEBUG) {
  goog.string.Const.prototype.toString = function() {
    return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
  };
}
goog.string.Const.unwrap = function(stringConst) {
  if (stringConst instanceof goog.string.Const && stringConst.constructor === goog.string.Const && stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_) {
    return stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
  } else {
    goog.asserts.fail("expected object of type Const, got '" + stringConst + "'");
    return "type_error:Const";
  }
};
goog.string.Const.from = function(s) {
  return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_, s);
};
goog.string.Const.TYPE_MARKER_ = {};
goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ = {};
goog.string.Const.EMPTY = goog.string.Const.from("");
goog.provide("goog.i18n.bidi");
goog.provide("goog.i18n.bidi.Dir");
goog.provide("goog.i18n.bidi.DirectionalString");
goog.provide("goog.i18n.bidi.Format");
goog.i18n.bidi.FORCE_RTL = goog.define("goog.i18n.bidi.FORCE_RTL", false);
goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || (goog.LOCALE.substring(0, 2).toLowerCase() == "ar" || goog.LOCALE.substring(0, 2).toLowerCase() == "fa" || goog.LOCALE.substring(0, 2).toLowerCase() == "he" || goog.LOCALE.substring(0, 2).toLowerCase() == "iw" || goog.LOCALE.substring(0, 2).toLowerCase() == "ps" || goog.LOCALE.substring(0, 2).toLowerCase() == "sd" || goog.LOCALE.substring(0, 2).toLowerCase() == "ug" || goog.LOCALE.substring(0, 2).toLowerCase() == "ur" || goog.LOCALE.substring(0, 
2).toLowerCase() == "yi") && (goog.LOCALE.length == 2 || goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") || goog.LOCALE.length >= 3 && goog.LOCALE.substring(0, 3).toLowerCase() == "ckb" && (goog.LOCALE.length == 3 || goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_") || goog.LOCALE.length >= 7 && ((goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") && (goog.LOCALE.substring(3, 7).toLowerCase() == "adlm" || goog.LOCALE.substring(3, 
7).toLowerCase() == "arab" || goog.LOCALE.substring(3, 7).toLowerCase() == "hebr" || goog.LOCALE.substring(3, 7).toLowerCase() == "nkoo" || goog.LOCALE.substring(3, 7).toLowerCase() == "rohg" || goog.LOCALE.substring(3, 7).toLowerCase() == "thaa")) || goog.LOCALE.length >= 8 && ((goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_") && (goog.LOCALE.substring(4, 8).toLowerCase() == "adlm" || goog.LOCALE.substring(4, 8).toLowerCase() == "arab" || goog.LOCALE.substring(4, 8).toLowerCase() == 
"hebr" || goog.LOCALE.substring(4, 8).toLowerCase() == "nkoo" || goog.LOCALE.substring(4, 8).toLowerCase() == "rohg" || goog.LOCALE.substring(4, 8).toLowerCase() == "thaa"));
goog.i18n.bidi.Format = {LRE:"‪", RLE:"‫", PDF:"‬", LRM:"‎", RLM:"‏"};
goog.i18n.bidi.Dir = {LTR:1, RTL:-1, NEUTRAL:0};
goog.i18n.bidi.RIGHT = "right";
goog.i18n.bidi.LEFT = "left";
goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir = function(givenDir, opt_noNeutral) {
  if (typeof givenDir == "number") {
    return givenDir > 0 ? goog.i18n.bidi.Dir.LTR : givenDir < 0 ? goog.i18n.bidi.Dir.RTL : opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL;
  } else if (givenDir == null) {
    return null;
  } else {
    return givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
  }
};
goog.i18n.bidi.ltrChars_ = "A-Za-zÀ-ÖØ-öø-ʸ̀-֐ऀ-῿" + "‎Ⰰ-\ud801\ud804-\ud839\ud83c-\udbff" + "豈-﬜︀-﹯﻽-￿";
goog.i18n.bidi.rtlChars_ = "֑-ۯۺ-ࣿ‏\ud802-\ud803\ud83a-\ud83b" + "יִ-﷿ﹰ-ﻼ";
goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
goog.i18n.bidi.stripHtmlIfNeeded_ = function(str, opt_isStripNeeded) {
  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, "") : str;
};
goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.hasAnyRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.isRtlChar = function(str) {
  return goog.i18n.bidi.rtlRe_.test(str);
};
goog.i18n.bidi.isLtrChar = function(str) {
  return goog.i18n.bidi.ltrRe_.test(str);
};
goog.i18n.bidi.isNeutralChar = function(str) {
  return !goog.i18n.bidi.isLtrChar(str) && !goog.i18n.bidi.isRtlChar(str);
};
goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.startsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
goog.i18n.bidi.isNeutralText = function(str, opt_isHtml) {
  str = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);
  return goog.i18n.bidi.isRequiredLtrRe_.test(str) || !goog.i18n.bidi.hasAnyLtr(str) && !goog.i18n.bidi.hasAnyRtl(str);
};
goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]" + "[^" + goog.i18n.bidi.rtlChars_ + "]*$");
goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]" + "[^" + goog.i18n.bidi.ltrChars_ + "]*$");
goog.i18n.bidi.endsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
goog.i18n.bidi.rtlLocalesRe_ = new RegExp("^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|" + ".*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))" + "(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)", "i");
goog.i18n.bidi.isRtlLanguage = function(lang) {
  return goog.i18n.bidi.rtlLocalesRe_.test(lang);
};
goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInText = function(s, opt_isRtlContext) {
  const useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  const mark = useRtl ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + "$\x26" + mark);
};
goog.i18n.bidi.enforceRtlInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3drtl");
  }
  return "\n\x3cspan dir\x3drtl\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceRtlInText = function(text) {
  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.enforceLtrInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3dltr");
  }
  return "\n\x3cspan dir\x3dltr\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceLtrInText = function(text) {
  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
goog.i18n.bidi.leftRe_ = /left/gi;
goog.i18n.bidi.rightRe_ = /right/gi;
goog.i18n.bidi.tempRe_ = /%%%%/g;
goog.i18n.bidi.mirrorCSS = function(cssStr) {
  return cssStr.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
};
goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote = function(str) {
  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1״").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1׳");
};
goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
goog.i18n.bidi.hasNumeralsRe_ = /[\d\u06f0-\u06f9]/;
goog.i18n.bidi.rtlDetectionThreshold_ = 0.40;
goog.i18n.bidi.estimateDirection = function(str, opt_isHtml) {
  let rtlCount = 0;
  let totalCount = 0;
  let hasWeaklyLtr = false;
  const tokens = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_);
  for (let i = 0; i < tokens.length; i++) {
    const token = tokens[i];
    if (goog.i18n.bidi.startsWithRtl(token)) {
      rtlCount++;
      totalCount++;
    } else if (goog.i18n.bidi.isRequiredLtrRe_.test(token)) {
      hasWeaklyLtr = true;
    } else if (goog.i18n.bidi.hasAnyLtr(token)) {
      totalCount++;
    } else if (goog.i18n.bidi.hasNumeralsRe_.test(token)) {
      hasWeaklyLtr = true;
    }
  }
  return totalCount == 0 ? hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : rtlCount / totalCount > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.detectRtlDirectionality = function(str, opt_isHtml) {
  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) == goog.i18n.bidi.Dir.RTL;
};
goog.i18n.bidi.setElementDirAndAlign = function(element, dir) {
  if (element) {
    const htmlElement = element;
    dir = goog.i18n.bidi.toDir(dir);
    if (dir) {
      htmlElement.style.textAlign = dir == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
      htmlElement.dir = dir == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr";
    }
  }
};
goog.i18n.bidi.setElementDirByTextDirectionality = function(element, text) {
  const htmlElement = element;
  switch(goog.i18n.bidi.estimateDirection(text)) {
    case goog.i18n.bidi.Dir.LTR:
      if (htmlElement.dir !== "ltr") {
        htmlElement.dir = "ltr";
      }
      break;
    case goog.i18n.bidi.Dir.RTL:
      if (htmlElement.dir !== "rtl") {
        htmlElement.dir = "rtl";
      }
      break;
    default:
      htmlElement.removeAttribute("dir");
  }
};
goog.i18n.bidi.DirectionalString = function() {
};
goog.i18n.bidi.DirectionalString.prototype.implementsGoogI18nBidiDirectionalString;
goog.i18n.bidi.DirectionalString.prototype.getDirection;
goog.provide("goog.html.trustedtypes");
goog.html.trustedtypes.cachedPolicy_;
goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse = function() {
  if (!goog.TRUSTED_TYPES_POLICY_NAME) {
    return null;
  }
  if (goog.html.trustedtypes.cachedPolicy_ === undefined) {
    goog.html.trustedtypes.cachedPolicy_ = goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + "#html");
  }
  return goog.html.trustedtypes.cachedPolicy_;
};
goog.loadModule(function(exports) {
  "use strict";
  goog.module("goog.html.SafeScript");
  goog.module.declareLegacyNamespace();
  const Const = goog.require("goog.string.Const");
  const TypedString = goog.require("goog.string.TypedString");
  const trustedtypes = goog.require("goog.html.trustedtypes");
  const {fail} = goog.require("goog.asserts");
  const CONSTRUCTOR_TOKEN_PRIVATE = {};
  class SafeScript {
    constructor(value, token) {
      this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = token === CONSTRUCTOR_TOKEN_PRIVATE ? value : "";
      this.implementsGoogStringTypedString = true;
    }
    static fromConstant(script) {
      const scriptString = Const.unwrap(script);
      if (scriptString.length === 0) {
        return SafeScript.EMPTY;
      }
      return SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(scriptString);
    }
    static fromJson(val) {
      return SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(SafeScript.stringify_(val));
    }
    getTypedStringValue() {
      return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString();
    }
    static unwrap(safeScript) {
      return SafeScript.unwrapTrustedScript(safeScript).toString();
    }
    static unwrapTrustedScript(safeScript) {
      if (safeScript instanceof SafeScript && safeScript.constructor === SafeScript) {
        return safeScript.privateDoNotAccessOrElseSafeScriptWrappedValue_;
      } else {
        fail("expected object of type SafeScript, got '" + safeScript + "' of type " + goog.typeOf(safeScript));
        return "type_error:SafeScript";
      }
    }
    static stringify_(val) {
      const json = JSON.stringify(val);
      return json.replace(/</g, "\\x3c");
    }
    static createSafeScriptSecurityPrivateDoNotAccessOrElse(script) {
      const policy = trustedtypes.getPolicyPrivateDoNotAccessOrElse();
      const trustedScript = policy ? policy.createScript(script) : script;
      return new SafeScript(trustedScript, CONSTRUCTOR_TOKEN_PRIVATE);
    }
  }
  SafeScript.prototype.toString = function() {
    return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString();
  };
  SafeScript.EMPTY = {valueOf:function() {
    return SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("");
  },}.valueOf();
  exports = SafeScript;
  return exports;
});
goog.provide("goog.fs.url");
goog.fs.url.createObjectUrl = function(obj) {
  return goog.fs.url.getUrlObject_().createObjectURL(obj);
};
goog.fs.url.revokeObjectUrl = function(url) {
  goog.fs.url.getUrlObject_().revokeObjectURL(url);
};
goog.fs.url.UrlObject_ = function() {
};
goog.fs.url.UrlObject_.prototype.createObjectURL = function(arg) {
};
goog.fs.url.UrlObject_.prototype.revokeObjectURL = function(s) {
};
goog.fs.url.getUrlObject_ = function() {
  const urlObject = goog.fs.url.findUrlObject_();
  if (urlObject != null) {
    return urlObject;
  } else {
    throw new Error("This browser doesn't seem to support blob URLs");
  }
};
goog.fs.url.findUrlObject_ = function() {
  if (goog.global.URL !== undefined && goog.global.URL.createObjectURL !== undefined) {
    return goog.global.URL;
  } else if (goog.global.createObjectURL !== undefined) {
    return goog.global;
  } else {
    return null;
  }
};
goog.fs.url.browserSupportsObjectUrls = function() {
  return goog.fs.url.findUrlObject_() != null;
};
goog.provide("goog.fs.blob");
goog.fs.blob.getBlob = function(var_args) {
  const BlobBuilder = goog.global.BlobBuilder || goog.global.WebKitBlobBuilder;
  if (BlobBuilder !== undefined) {
    const bb = new BlobBuilder();
    for (let i = 0; i < arguments.length; i++) {
      bb.append(arguments[i]);
    }
    return bb.getBlob();
  } else {
    return goog.fs.blob.getBlobWithProperties(Array.prototype.slice.call(arguments));
  }
};
goog.fs.blob.getBlobWithProperties = function(parts, opt_type, opt_endings) {
  const BlobBuilder = goog.global.BlobBuilder || goog.global.WebKitBlobBuilder;
  if (BlobBuilder !== undefined) {
    const bb = new BlobBuilder();
    for (let i = 0; i < parts.length; i++) {
      bb.append(parts[i], opt_endings);
    }
    return bb.getBlob(opt_type);
  } else if (goog.global.Blob !== undefined) {
    const properties = {};
    if (opt_type) {
      properties["type"] = opt_type;
    }
    if (opt_endings) {
      properties["endings"] = opt_endings;
    }
    return new Blob(parts, properties);
  } else {
    throw new Error("This browser doesn't seem to support creating Blobs");
  }
};
goog.provide("goog.html.TrustedResourceUrl");
goog.require("goog.asserts");
goog.require("goog.fs.blob");
goog.require("goog.fs.url");
goog.require("goog.html.SafeScript");
goog.require("goog.html.trustedtypes");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.TrustedResourceUrl = class {
  constructor(value, token) {
    this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = token === goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ ? value : "";
  }
};
goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = true;
goog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString();
};
goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.TrustedResourceUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
goog.html.TrustedResourceUrl.prototype.cloneWithParams = function(searchParams, opt_hashParams) {
  var url = goog.html.TrustedResourceUrl.unwrap(this);
  var parts = goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(url);
  var urlBase = parts[1];
  var urlSearch = parts[2] || "";
  var urlHash = parts[3] || "";
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(urlBase + goog.html.TrustedResourceUrl.stringifyParams_("?", urlSearch, searchParams) + goog.html.TrustedResourceUrl.stringifyParams_("#", urlHash, opt_hashParams));
};
goog.html.TrustedResourceUrl.prototype.toString = function() {
  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + "";
};
goog.html.TrustedResourceUrl.unwrap = function(trustedResourceUrl) {
  return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(trustedResourceUrl).toString();
};
goog.html.TrustedResourceUrl.unwrapTrustedScriptURL = function(trustedResourceUrl) {
  if (trustedResourceUrl instanceof goog.html.TrustedResourceUrl && trustedResourceUrl.constructor === goog.html.TrustedResourceUrl) {
    return trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type TrustedResourceUrl, got '" + trustedResourceUrl + "' of type " + goog.typeOf(trustedResourceUrl));
    return "type_error:TrustedResourceUrl";
  }
};
goog.html.TrustedResourceUrl.format = function(format, args) {
  var formatStr = goog.string.Const.unwrap(format);
  if (!goog.html.TrustedResourceUrl.BASE_URL_.test(formatStr)) {
    throw new Error("Invalid TrustedResourceUrl format: " + formatStr);
  }
  var result = formatStr.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_, function(match, id) {
    if (!Object.prototype.hasOwnProperty.call(args, id)) {
      throw new Error('Found marker, "' + id + '", in format string, "' + formatStr + '", but no valid label mapping found ' + "in args: " + JSON.stringify(args));
    }
    var arg = args[id];
    if (arg instanceof goog.string.Const) {
      return goog.string.Const.unwrap(arg);
    } else {
      return encodeURIComponent(String(arg));
    }
  });
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(result);
};
goog.html.TrustedResourceUrl.FORMAT_MARKER_ = /%{(\w+)}/g;
goog.html.TrustedResourceUrl.BASE_URL_ = new RegExp("^((https:)?//[0-9a-z.:[\\]-]+/" + "|/[^/\\\\]" + "|[^:/\\\\%]+/" + "|[^:/\\\\%]*[?#]" + "|about:blank#" + ")", "i");
goog.html.TrustedResourceUrl.URL_PARAM_PARSER_ = /^([^?#]*)(\?[^#]*)?(#[\s\S]*)?/;
goog.html.TrustedResourceUrl.formatWithParams = function(format, args, searchParams, opt_hashParams) {
  var url = goog.html.TrustedResourceUrl.format(format, args);
  return url.cloneWithParams(searchParams, opt_hashParams);
};
goog.html.TrustedResourceUrl.fromConstant = function(url) {
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.TrustedResourceUrl.fromConstants = function(parts) {
  var unwrapped = "";
  for (var i = 0; i < parts.length; i++) {
    unwrapped += goog.string.Const.unwrap(parts[i]);
  }
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(unwrapped);
};
goog.html.TrustedResourceUrl.fromSafeScript = function(safeScript) {
  var blob = goog.fs.blob.getBlobWithProperties([goog.html.SafeScript.unwrap(safeScript)], "text/javascript");
  var url = goog.fs.url.createObjectUrl(blob);
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ = {};
goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  const policy = goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();
  var value = policy ? policy.createScriptURL(url) : url;
  return new goog.html.TrustedResourceUrl(value, goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_);
};
goog.html.TrustedResourceUrl.stringifyParams_ = function(prefix, currentString, params) {
  if (params == null) {
    return currentString;
  }
  if (typeof params === "string") {
    return params ? prefix + encodeURIComponent(params) : "";
  }
  for (var key in params) {
    if (Object.prototype.hasOwnProperty.call(params, key)) {
      var value = params[key];
      var outputValues = Array.isArray(value) ? value : [value];
      for (var i = 0; i < outputValues.length; i++) {
        var outputValue = outputValues[i];
        if (outputValue != null) {
          if (!currentString) {
            currentString = prefix;
          }
          currentString += (currentString.length > prefix.length ? "\x26" : "") + encodeURIComponent(key) + "\x3d" + encodeURIComponent(String(outputValue));
        }
      }
    }
  }
  return currentString;
};
goog.provide("goog.string.internal");
goog.string.internal.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.internal.endsWith = function(str, suffix) {
  const l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.internal.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.internal.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.internal.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.internal.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.internal.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.internal.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.internal.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(str)[1];
};
goog.string.internal.caseInsensitiveCompare = function(str1, str2) {
  const test1 = String(str1).toLowerCase();
  const test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else if (test1 == test2) {
    return 0;
  } else {
    return 1;
  }
};
goog.string.internal.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.internal.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.internal.AMP_RE_, "\x26amp;").replace(goog.string.internal.LT_RE_, "\x26lt;").replace(goog.string.internal.GT_RE_, "\x26gt;").replace(goog.string.internal.QUOT_RE_, "\x26quot;").replace(goog.string.internal.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.internal.NULL_RE_, "\x26#0;");
    return str;
  } else {
    if (!goog.string.internal.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.internal.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.internal.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.internal.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.internal.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.internal.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.internal.NULL_RE_, "\x26#0;");
    }
    return str;
  }
};
goog.string.internal.AMP_RE_ = /&/g;
goog.string.internal.LT_RE_ = /</g;
goog.string.internal.GT_RE_ = />/g;
goog.string.internal.QUOT_RE_ = /"/g;
goog.string.internal.SINGLE_QUOTE_RE_ = /'/g;
goog.string.internal.NULL_RE_ = /\x00/g;
goog.string.internal.ALL_RE_ = /[\x00&<>"']/;
goog.string.internal.whitespaceEscape = function(str, opt_xml) {
  return goog.string.internal.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.internal.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.internal.caseInsensitiveContains = function(str, subString) {
  return goog.string.internal.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.internal.compareVersions = function(version1, version2) {
  let order = 0;
  const v1Subs = goog.string.internal.trim(String(version1)).split(".");
  const v2Subs = goog.string.internal.trim(String(version2)).split(".");
  const subCount = Math.max(v1Subs.length, v2Subs.length);
  for (let subIdx = 0; order == 0 && subIdx < subCount; subIdx++) {
    let v1Sub = v1Subs[subIdx] || "";
    let v2Sub = v2Subs[subIdx] || "";
    do {
      const v1Comp = /(\d*)(\D*)(.*)/.exec(v1Sub) || ["", "", "", ""];
      const v2Comp = /(\d*)(\D*)(.*)/.exec(v2Sub) || ["", "", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      const v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      const v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.internal.compareElements_(v1CompNum, v2CompNum) || goog.string.internal.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.internal.compareElements_(v1Comp[2], v2Comp[2]);
      v1Sub = v1Comp[3];
      v2Sub = v2Comp[3];
    } while (order == 0);
  }
  return order;
};
goog.string.internal.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else if (left > right) {
    return 1;
  }
  return 0;
};
goog.provide("goog.html.SafeUrl");
goog.require("goog.asserts");
goog.require("goog.fs.url");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.require("goog.string.internal");
goog.html.SafeUrl = class {
  constructor(value, token) {
    this.privateDoNotAccessOrElseSafeUrlWrappedValue_ = token === goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ ? value : "";
  }
};
goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
goog.html.SafeUrl.prototype.implementsGoogStringTypedString = true;
goog.html.SafeUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString();
};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
goog.html.SafeUrl.prototype.toString = function() {
  return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString();
};
goog.html.SafeUrl.unwrap = function(safeUrl) {
  if (safeUrl instanceof goog.html.SafeUrl && safeUrl.constructor === goog.html.SafeUrl) {
    return safeUrl.privateDoNotAccessOrElseSafeUrlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeUrl, got '" + safeUrl + "' of type " + goog.typeOf(safeUrl));
    return "type_error:SafeUrl";
  }
};
goog.html.SafeUrl.fromConstant = function(url) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.SAFE_MIME_TYPE_PATTERN_ = new RegExp("^(?:audio/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-matroska|x-wav|wav|webm)|" + "font/\\w+|" + "image/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|" + "video/(?:mpeg|mp4|ogg|webm|quicktime|x-matroska))" + '(?:;\\w+\x3d(?:\\w+|"[\\w;,\x3d ]+"))*$', "i");
goog.html.SafeUrl.isSafeMimeType = function(mimeType) {
  return goog.html.SAFE_MIME_TYPE_PATTERN_.test(mimeType);
};
goog.html.SafeUrl.fromBlob = function(blob) {
  var url = goog.html.SafeUrl.isSafeMimeType(blob.type) ? goog.fs.url.createObjectUrl(blob) : goog.html.SafeUrl.INNOCUOUS_STRING;
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.revokeObjectUrl = function(safeUrl) {
  var url = safeUrl.getTypedStringValue();
  if (url !== goog.html.SafeUrl.INNOCUOUS_STRING) {
    goog.fs.url.revokeObjectUrl(url);
  }
};
goog.html.SafeUrl.fromMediaSource = function(mediaSource) {
  goog.asserts.assert("MediaSource" in goog.global, "No support for MediaSource");
  const url = mediaSource instanceof MediaSource ? goog.fs.url.createObjectUrl(mediaSource) : goog.html.SafeUrl.INNOCUOUS_STRING;
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.DATA_URL_PATTERN_ = /^data:(.*);base64,[a-z0-9+\/]+=*$/i;
goog.html.SafeUrl.tryFromDataUrl = function(dataUrl) {
  dataUrl = String(dataUrl);
  var filteredDataUrl = dataUrl.replace(/(%0A|%0D)/g, "");
  var match = filteredDataUrl.match(goog.html.DATA_URL_PATTERN_);
  var valid = match && goog.html.SafeUrl.isSafeMimeType(match[1]);
  if (valid) {
    return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(filteredDataUrl);
  }
  return null;
};
goog.html.SafeUrl.fromDataUrl = function(dataUrl) {
  return goog.html.SafeUrl.tryFromDataUrl(dataUrl) || goog.html.SafeUrl.INNOCUOUS_URL;
};
goog.html.SafeUrl.fromTelUrl = function(telUrl) {
  if (!goog.string.internal.caseInsensitiveStartsWith(telUrl, "tel:")) {
    telUrl = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(telUrl);
};
goog.html.SIP_URL_PATTERN_ = new RegExp("^sip[s]?:[+a-z0-9_.!$%\x26'*\\/\x3d^`{|}~-]+@([a-z0-9-]+\\.)+[a-z0-9]{2,63}$", "i");
goog.html.SafeUrl.fromSipUrl = function(sipUrl) {
  if (!goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(sipUrl))) {
    sipUrl = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(sipUrl);
};
goog.html.SafeUrl.fromFacebookMessengerUrl = function(facebookMessengerUrl) {
  if (!goog.string.internal.caseInsensitiveStartsWith(facebookMessengerUrl, "fb-messenger://share")) {
    facebookMessengerUrl = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(facebookMessengerUrl);
};
goog.html.SafeUrl.fromWhatsAppUrl = function(whatsAppUrl) {
  if (!goog.string.internal.caseInsensitiveStartsWith(whatsAppUrl, "whatsapp://send")) {
    whatsAppUrl = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(whatsAppUrl);
};
goog.html.SafeUrl.fromSmsUrl = function(smsUrl) {
  if (!goog.string.internal.caseInsensitiveStartsWith(smsUrl, "sms:") || !goog.html.SafeUrl.isSmsUrlBodyValid_(smsUrl)) {
    smsUrl = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(smsUrl);
};
goog.html.SafeUrl.isSmsUrlBodyValid_ = function(smsUrl) {
  var hash = smsUrl.indexOf("#");
  if (hash > 0) {
    smsUrl = smsUrl.substring(0, hash);
  }
  var bodyParams = smsUrl.match(/[?&]body=/gi);
  if (!bodyParams) {
    return true;
  }
  if (bodyParams.length > 1) {
    return false;
  }
  var bodyValue = smsUrl.match(/[?&]body=([^&]*)/)[1];
  if (!bodyValue) {
    return true;
  }
  try {
    decodeURIComponent(bodyValue);
  } catch (error) {
    return false;
  }
  return /^(?:[a-z0-9\-_.~]|%[0-9a-f]{2})+$/i.test(bodyValue);
};
goog.html.SafeUrl.fromSshUrl = function(sshUrl) {
  if (!goog.string.internal.caseInsensitiveStartsWith(sshUrl, "ssh://")) {
    sshUrl = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(sshUrl);
};
goog.html.SafeUrl.sanitizeChromeExtensionUrl = function(url, extensionId) {
  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\/\/([^\/]+)\//, url, extensionId);
};
goog.html.SafeUrl.sanitizeFirefoxExtensionUrl = function(url, extensionId) {
  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\/\/([^\/]+)\//, url, extensionId);
};
goog.html.SafeUrl.sanitizeEdgeExtensionUrl = function(url, extensionId) {
  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\/\/([^\/]+)\//, url, extensionId);
};
goog.html.SafeUrl.sanitizeExtensionUrl_ = function(scheme, url, extensionId) {
  var matches = scheme.exec(url);
  if (!matches) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  } else {
    var extractedExtensionId = matches[1];
    var acceptedExtensionIds;
    if (extensionId instanceof goog.string.Const) {
      acceptedExtensionIds = [goog.string.Const.unwrap(extensionId)];
    } else {
      acceptedExtensionIds = extensionId.map(function unwrap(x) {
        return goog.string.Const.unwrap(x);
      });
    }
    if (acceptedExtensionIds.indexOf(extractedExtensionId) == -1) {
      url = goog.html.SafeUrl.INNOCUOUS_STRING;
    }
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.fromTrustedResourceUrl = function(trustedResourceUrl) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(trustedResourceUrl));
};
goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;
goog.html.SafeUrl.SAFE_URL_PATTERN = goog.html.SAFE_URL_PATTERN_;
goog.html.SafeUrl.trySanitize = function(url) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  }
  if (typeof url == "object" && url.implementsGoogStringTypedString) {
    url = url.getTypedStringValue();
  } else {
    url = String(url);
  }
  if (!goog.html.SAFE_URL_PATTERN_.test(url)) {
    return goog.html.SafeUrl.tryFromDataUrl(url);
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.sanitize = function(url) {
  return goog.html.SafeUrl.trySanitize(url) || goog.html.SafeUrl.INNOCUOUS_URL;
};
goog.html.SafeUrl.sanitizeAssertUnchanged = function(url, opt_allowDataUrl) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  } else if (typeof url == "object" && url.implementsGoogStringTypedString) {
    url = url.getTypedStringValue();
  } else {
    url = String(url);
  }
  if (opt_allowDataUrl && /^data:/i.test(url)) {
    var safeUrl = goog.html.SafeUrl.fromDataUrl(url);
    if (safeUrl.getTypedStringValue() == url) {
      return safeUrl;
    }
  }
  if (!goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(url), "%s does not match the safe URL pattern", url)) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ = {};
goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  return new goog.html.SafeUrl(url, goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_);
};
goog.html.SafeUrl.INNOCUOUS_URL = goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.SafeUrl.INNOCUOUS_STRING);
goog.html.SafeUrl.ABOUT_BLANK = goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");
goog.loadModule(function(exports) {
  "use strict";
  goog.module("goog.html.SafeStyle");
  goog.module.declareLegacyNamespace();
  const Const = goog.require("goog.string.Const");
  const SafeUrl = goog.require("goog.html.SafeUrl");
  const TypedString = goog.require("goog.string.TypedString");
  const {AssertionError, assert, fail} = goog.require("goog.asserts");
  const {contains, endsWith} = goog.require("goog.string.internal");
  const CONSTRUCTOR_TOKEN_PRIVATE = {};
  class SafeStyle {
    constructor(value, token) {
      this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = token === CONSTRUCTOR_TOKEN_PRIVATE ? value : "";
      this.implementsGoogStringTypedString = true;
    }
    static fromConstant(style) {
      const styleString = Const.unwrap(style);
      if (styleString.length === 0) {
        return SafeStyle.EMPTY;
      }
      assert(endsWith(styleString, ";"), `Last character of style string is not ';': ${styleString}`);
      assert(contains(styleString, ":"), "Style string must contain at least one ':', to " + 'specify a "name: value" pair: ' + styleString);
      return SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString);
    }
    getTypedStringValue() {
      return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
    }
    toString() {
      return this.privateDoNotAccessOrElseSafeStyleWrappedValue_.toString();
    }
    static unwrap(safeStyle) {
      if (safeStyle instanceof SafeStyle && safeStyle.constructor === SafeStyle) {
        return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;
      } else {
        fail(`expected object of type SafeStyle, got '${safeStyle}` + "' of type " + goog.typeOf(safeStyle));
        return "type_error:SafeStyle";
      }
    }
    static createSafeStyleSecurityPrivateDoNotAccessOrElse(style) {
      return new SafeStyle(style, CONSTRUCTOR_TOKEN_PRIVATE);
    }
    static create(map) {
      let style = "";
      for (let name in map) {
        if (Object.prototype.hasOwnProperty.call(map, name)) {
          if (!/^[-_a-zA-Z0-9]+$/.test(name)) {
            throw new Error(`Name allows only [-_a-zA-Z0-9], got: ${name}`);
          }
          let value = map[name];
          if (value == null) {
            continue;
          }
          if (Array.isArray(value)) {
            value = value.map(sanitizePropertyValue).join(" ");
          } else {
            value = sanitizePropertyValue(value);
          }
          style += `${name}:${value};`;
        }
      }
      if (!style) {
        return SafeStyle.EMPTY;
      }
      return SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
    }
    static concat(var_args) {
      let style = "";
      const addArgument = argument => {
        if (Array.isArray(argument)) {
          argument.forEach(addArgument);
        } else {
          style += SafeStyle.unwrap(argument);
        }
      };
      Array.prototype.forEach.call(arguments, addArgument);
      if (!style) {
        return SafeStyle.EMPTY;
      }
      return SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
    }
  }
  SafeStyle.EMPTY = SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
  SafeStyle.INNOCUOUS_STRING = "zClosurez";
  SafeStyle.PropertyValue;
  SafeStyle.PropertyMap;
  function sanitizePropertyValue(value) {
    if (value instanceof SafeUrl) {
      const url = SafeUrl.unwrap(value);
      return 'url("' + url.replace(/</g, "%3c").replace(/[\\"]/g, "\\$\x26") + '")';
    }
    const result = value instanceof Const ? Const.unwrap(value) : sanitizePropertyValueString(String(value));
    if (/[{;}]/.test(result)) {
      throw new AssertionError("Value does not allow [{;}], got: %s.", [result]);
    }
    return result;
  }
  function sanitizePropertyValueString(value) {
    const valueWithoutFunctions = value.replace(FUNCTIONS_RE, "$1").replace(FUNCTIONS_RE, "$1").replace(URL_RE, "url");
    if (!VALUE_RE.test(valueWithoutFunctions)) {
      fail(`String value allows only ${VALUE_ALLOWED_CHARS}` + " and simple functions, got: " + value);
      return SafeStyle.INNOCUOUS_STRING;
    } else if (COMMENT_RE.test(value)) {
      fail(`String value disallows comments, got: ${value}`);
      return SafeStyle.INNOCUOUS_STRING;
    } else if (!hasBalancedQuotes(value)) {
      fail(`String value requires balanced quotes, got: ${value}`);
      return SafeStyle.INNOCUOUS_STRING;
    } else if (!hasBalancedSquareBrackets(value)) {
      fail("String value requires balanced square brackets and one" + " identifier per pair of brackets, got: " + value);
      return SafeStyle.INNOCUOUS_STRING;
    }
    return sanitizeUrl(value);
  }
  function hasBalancedQuotes(value) {
    let outsideSingle = true;
    let outsideDouble = true;
    for (let i = 0; i < value.length; i++) {
      const c = value.charAt(i);
      if (c == "'" && outsideDouble) {
        outsideSingle = !outsideSingle;
      } else if (c == '"' && outsideSingle) {
        outsideDouble = !outsideDouble;
      }
    }
    return outsideSingle && outsideDouble;
  }
  function hasBalancedSquareBrackets(value) {
    let outside = true;
    const tokenRe = /^[-_a-zA-Z0-9]$/;
    for (let i = 0; i < value.length; i++) {
      const c = value.charAt(i);
      if (c == "]") {
        if (outside) {
          return false;
        }
        outside = true;
      } else if (c == "[") {
        if (!outside) {
          return false;
        }
        outside = false;
      } else if (!outside && !tokenRe.test(c)) {
        return false;
      }
    }
    return outside;
  }
  const VALUE_ALLOWED_CHARS = "[-,.\"'%_!# a-zA-Z0-9\\[\\]]";
  const VALUE_RE = new RegExp(`^${VALUE_ALLOWED_CHARS}+\$`);
  const URL_RE = new RegExp("\\b(url\\([ \t\n]*)(" + "'[ -\x26(-\\[\\]-~]*'" + '|"[ !#-\\[\\]-~]*"' + "|[!#-\x26*-\\[\\]-~]*" + ")([ \t\n]*\\))", "g");
  const ALLOWED_FUNCTIONS = ["calc", "cubic-bezier", "fit-content", "hsl", "hsla", "linear-gradient", "matrix", "minmax", "repeat", "rgb", "rgba", "(rotate|scale|translate)(X|Y|Z|3d)?", "var",];
  const FUNCTIONS_RE = new RegExp("\\b(" + ALLOWED_FUNCTIONS.join("|") + ")" + "\\([-+*/0-9a-z.%#\\[\\], ]+\\)", "g");
  const COMMENT_RE = /\/\*/;
  function sanitizeUrl(value) {
    return value.replace(URL_RE, (match, before, url, after) => {
      let quote = "";
      url = url.replace(/^(['"])(.*)\1$/, (match, start, inside) => {
        quote = start;
        return inside;
      });
      const sanitized = SafeUrl.sanitize(url).getTypedStringValue();
      return before + quote + sanitized + quote + after;
    });
  }
  exports = SafeStyle;
  return exports;
});
goog.loadModule(function(exports) {
  "use strict";
  goog.module("goog.object");
  goog.module.declareLegacyNamespace();
  function forEach(obj, f, opt_obj) {
    for (const key in obj) {
      f.call(opt_obj, obj[key], key, obj);
    }
  }
  function filter(obj, f, opt_obj) {
    const res = {};
    for (const key in obj) {
      if (f.call(opt_obj, obj[key], key, obj)) {
        res[key] = obj[key];
      }
    }
    return res;
  }
  function map(obj, f, opt_obj) {
    const res = {};
    for (const key in obj) {
      res[key] = f.call(opt_obj, obj[key], key, obj);
    }
    return res;
  }
  function some(obj, f, opt_obj) {
    for (const key in obj) {
      if (f.call(opt_obj, obj[key], key, obj)) {
        return true;
      }
    }
    return false;
  }
  function every(obj, f, opt_obj) {
    for (const key in obj) {
      if (!f.call(opt_obj, obj[key], key, obj)) {
        return false;
      }
    }
    return true;
  }
  function getCount(obj) {
    let rv = 0;
    for (const key in obj) {
      rv++;
    }
    return rv;
  }
  function getAnyKey(obj) {
    for (const key in obj) {
      return key;
    }
  }
  function getAnyValue(obj) {
    for (const key in obj) {
      return obj[key];
    }
  }
  function contains(obj, val) {
    return containsValue(obj, val);
  }
  function getValues(obj) {
    const res = [];
    let i = 0;
    for (const key in obj) {
      res[i++] = obj[key];
    }
    return res;
  }
  function getKeys(obj) {
    const res = [];
    let i = 0;
    for (const key in obj) {
      res[i++] = key;
    }
    return res;
  }
  function getValueByKeys(obj, var_args) {
    const isArrayLike = goog.isArrayLike(var_args);
    const keys = isArrayLike ? var_args : arguments;
    for (let i = isArrayLike ? 0 : 1; i < keys.length; i++) {
      if (obj == null) {
        return undefined;
      }
      obj = obj[keys[i]];
    }
    return obj;
  }
  function containsKey(obj, key) {
    return obj !== null && key in obj;
  }
  function containsValue(obj, val) {
    for (const key in obj) {
      if (obj[key] == val) {
        return true;
      }
    }
    return false;
  }
  function findKey(obj, f, thisObj = undefined) {
    for (const key in obj) {
      if (f.call(thisObj, obj[key], key, obj)) {
        return key;
      }
    }
    return undefined;
  }
  function findValue(obj, f, thisObj = undefined) {
    const key = findKey(obj, f, thisObj);
    return key && obj[key];
  }
  function isEmpty(obj) {
    for (const key in obj) {
      return false;
    }
    return true;
  }
  function clear(obj) {
    for (const i in obj) {
      delete obj[i];
    }
  }
  function remove(obj, key) {
    let rv;
    if (rv = key in obj) {
      delete obj[key];
    }
    return rv;
  }
  function add(obj, key, val) {
    if (obj !== null && key in obj) {
      throw new Error(`The object already contains the key "${key}"`);
    }
    set(obj, key, val);
  }
  function get(obj, key, val = undefined) {
    if (obj !== null && key in obj) {
      return obj[key];
    }
    return val;
  }
  function set(obj, key, value) {
    obj[key] = value;
  }
  function setIfUndefined(obj, key, value) {
    return key in obj ? obj[key] : obj[key] = value;
  }
  function setWithReturnValueIfNotSet(obj, key, f) {
    if (key in obj) {
      return obj[key];
    }
    const val = f();
    obj[key] = val;
    return val;
  }
  function equals(a, b) {
    for (const k in a) {
      if (!(k in b) || a[k] !== b[k]) {
        return false;
      }
    }
    for (const k in b) {
      if (!(k in a)) {
        return false;
      }
    }
    return true;
  }
  function clone(obj) {
    const res = {};
    for (const key in obj) {
      res[key] = obj[key];
    }
    return res;
  }
  function unsafeClone(obj) {
    if (!obj || typeof obj !== "object") {
      return obj;
    }
    if (typeof obj.clone === "function") {
      return obj.clone();
    }
    if (typeof Map !== "undefined" && obj instanceof Map) {
      return new Map(obj);
    } else if (typeof Set !== "undefined" && obj instanceof Set) {
      return new Set(obj);
    }
    const clone = Array.isArray(obj) ? [] : typeof ArrayBuffer === "function" && typeof ArrayBuffer.isView === "function" && ArrayBuffer.isView(obj) && !(obj instanceof DataView) ? new obj.constructor(obj.length) : {};
    for (const key in obj) {
      clone[key] = unsafeClone(obj[key]);
    }
    return clone;
  }
  function transpose(obj) {
    const transposed = {};
    for (const key in obj) {
      transposed[obj[key]] = key;
    }
    return transposed;
  }
  const PROTOTYPE_FIELDS = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf",];
  function extend(target, var_args) {
    let key;
    let source;
    for (let i = 1; i < arguments.length; i++) {
      source = arguments[i];
      for (key in source) {
        target[key] = source[key];
      }
      for (let j = 0; j < PROTOTYPE_FIELDS.length; j++) {
        key = PROTOTYPE_FIELDS[j];
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
  }
  function create(var_args) {
    const argLength = arguments.length;
    if (argLength == 1 && Array.isArray(arguments[0])) {
      return create.apply(null, arguments[0]);
    }
    if (argLength % 2) {
      throw new Error("Uneven number of arguments");
    }
    const rv = {};
    for (let i = 0; i < argLength; i += 2) {
      rv[arguments[i]] = arguments[i + 1];
    }
    return rv;
  }
  function createSet(var_args) {
    const argLength = arguments.length;
    if (argLength == 1 && Array.isArray(arguments[0])) {
      return createSet.apply(null, arguments[0]);
    }
    const rv = {};
    for (let i = 0; i < argLength; i++) {
      rv[arguments[i]] = true;
    }
    return rv;
  }
  function createImmutableView(obj) {
    let result = obj;
    if (Object.isFrozen && !Object.isFrozen(obj)) {
      result = Object.create(obj);
      Object.freeze(result);
    }
    return result;
  }
  function isImmutableView(obj) {
    return !!Object.isFrozen && Object.isFrozen(obj);
  }
  function getAllPropertyNames(obj, includeObjectPrototype = undefined, includeFunctionPrototype = undefined) {
    if (!obj) {
      return [];
    }
    if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {
      return getKeys(obj);
    }
    const visitedSet = {};
    let proto = obj;
    while (proto && (proto !== Object.prototype || !!includeObjectPrototype) && (proto !== Function.prototype || !!includeFunctionPrototype)) {
      const names = Object.getOwnPropertyNames(proto);
      for (let i = 0; i < names.length; i++) {
        visitedSet[names[i]] = true;
      }
      proto = Object.getPrototypeOf(proto);
    }
    return getKeys(visitedSet);
  }
  function getSuperClass(constructor) {
    const proto = Object.getPrototypeOf(constructor.prototype);
    return proto && proto.constructor;
  }
  exports = {add, clear, clone, contains, containsKey, containsValue, create, createImmutableView, createSet, equals, every, extend, filter, findKey, findValue, forEach, get, getAllPropertyNames, getAnyKey, getAnyValue, getCount, getKeys, getSuperClass, getValueByKeys, getValues, isEmpty, isImmutableView, map, remove, set, setIfUndefined, setWithReturnValueIfNotSet, some, transpose, unsafeClone,};
  return exports;
});
goog.loadModule(function(exports) {
  "use strict";
  goog.module("goog.html.SafeStyleSheet");
  goog.module.declareLegacyNamespace();
  const Const = goog.require("goog.string.Const");
  const SafeStyle = goog.require("goog.html.SafeStyle");
  const TypedString = goog.require("goog.string.TypedString");
  const googObject = goog.require("goog.object");
  const {assert, fail} = goog.require("goog.asserts");
  const {contains} = goog.require("goog.string.internal");
  const CONSTRUCTOR_TOKEN_PRIVATE = {};
  class SafeStyleSheet {
    constructor(value, token) {
      this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = token === CONSTRUCTOR_TOKEN_PRIVATE ? value : "";
      this.implementsGoogStringTypedString = true;
    }
    static createRule(selector, style) {
      if (contains(selector, "\x3c")) {
        throw new Error(`Selector does not allow '<', got: ${selector}`);
      }
      const selectorToCheck = selector.replace(/('|")((?!\1)[^\r\n\f\\]|\\[\s\S])*\1/g, "");
      if (!/^[-_a-zA-Z0-9#.:* ,>+~[\]()=^$|]+$/.test(selectorToCheck)) {
        throw new Error("Selector allows only [-_a-zA-Z0-9#.:* ,\x3e+~[\\]()\x3d^$|] and " + "strings, got: " + selector);
      }
      if (!SafeStyleSheet.hasBalancedBrackets_(selectorToCheck)) {
        throw new Error("() and [] in selector must be balanced, got: " + selector);
      }
      if (!(style instanceof SafeStyle)) {
        style = SafeStyle.create(style);
      }
      const styleSheet = `${selector}{` + SafeStyle.unwrap(style).replace(/</g, "\\3C ") + "}";
      return SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);
    }
    static hasBalancedBrackets_(s) {
      const brackets = {"(":")", "[":"]"};
      const expectedBrackets = [];
      for (let i = 0; i < s.length; i++) {
        const ch = s[i];
        if (brackets[ch]) {
          expectedBrackets.push(brackets[ch]);
        } else if (googObject.contains(brackets, ch)) {
          if (expectedBrackets.pop() != ch) {
            return false;
          }
        }
      }
      return expectedBrackets.length == 0;
    }
    static concat(var_args) {
      let result = "";
      const addArgument = argument => {
        if (Array.isArray(argument)) {
          argument.forEach(addArgument);
        } else {
          result += SafeStyleSheet.unwrap(argument);
        }
      };
      Array.prototype.forEach.call(arguments, addArgument);
      return SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(result);
    }
    static fromConstant(styleSheet) {
      const styleSheetString = Const.unwrap(styleSheet);
      if (styleSheetString.length === 0) {
        return SafeStyleSheet.EMPTY;
      }
      assert(!contains(styleSheetString, "\x3c"), `Forbidden '<' character in style sheet string: ${styleSheetString}`);
      return SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheetString);
    }
    getTypedStringValue() {
      return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
    }
    static unwrap(safeStyleSheet) {
      if (safeStyleSheet instanceof SafeStyleSheet && safeStyleSheet.constructor === SafeStyleSheet) {
        return safeStyleSheet.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
      } else {
        fail("expected object of type SafeStyleSheet, got '" + safeStyleSheet + "' of type " + goog.typeOf(safeStyleSheet));
        return "type_error:SafeStyleSheet";
      }
    }
    static createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet) {
      return new SafeStyleSheet(styleSheet, CONSTRUCTOR_TOKEN_PRIVATE);
    }
  }
  SafeStyleSheet.prototype.toString = function() {
    return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_.toString();
  };
  SafeStyleSheet.EMPTY = SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");
  exports = SafeStyleSheet;
  return exports;
});
goog.provide("goog.dom.HtmlElement");
goog.dom.HtmlElement = function() {
};
goog.provide("goog.dom.TagName");
goog.require("goog.dom.HtmlElement");
goog.dom.TagName = class {
  static cast(name, type) {
    return name;
  }
  constructor() {
    this.googDomTagName_doNotImplementThisTypeOrElse_;
    this.ensureTypeScriptRemembersTypeT_;
  }
  toString() {
  }
};
goog.dom.TagName.A = "A";
goog.dom.TagName.ABBR = "ABBR";
goog.dom.TagName.ACRONYM = "ACRONYM";
goog.dom.TagName.ADDRESS = "ADDRESS";
goog.dom.TagName.APPLET = "APPLET";
goog.dom.TagName.AREA = "AREA";
goog.dom.TagName.ARTICLE = "ARTICLE";
goog.dom.TagName.ASIDE = "ASIDE";
goog.dom.TagName.AUDIO = "AUDIO";
goog.dom.TagName.B = "B";
goog.dom.TagName.BASE = "BASE";
goog.dom.TagName.BASEFONT = "BASEFONT";
goog.dom.TagName.BDI = "BDI";
goog.dom.TagName.BDO = "BDO";
goog.dom.TagName.BIG = "BIG";
goog.dom.TagName.BLOCKQUOTE = "BLOCKQUOTE";
goog.dom.TagName.BODY = "BODY";
goog.dom.TagName.BR = "BR";
goog.dom.TagName.BUTTON = "BUTTON";
goog.dom.TagName.CANVAS = "CANVAS";
goog.dom.TagName.CAPTION = "CAPTION";
goog.dom.TagName.CENTER = "CENTER";
goog.dom.TagName.CITE = "CITE";
goog.dom.TagName.CODE = "CODE";
goog.dom.TagName.COL = "COL";
goog.dom.TagName.COLGROUP = "COLGROUP";
goog.dom.TagName.COMMAND = "COMMAND";
goog.dom.TagName.DATA = "DATA";
goog.dom.TagName.DATALIST = "DATALIST";
goog.dom.TagName.DD = "DD";
goog.dom.TagName.DEL = "DEL";
goog.dom.TagName.DETAILS = "DETAILS";
goog.dom.TagName.DFN = "DFN";
goog.dom.TagName.DIALOG = "DIALOG";
goog.dom.TagName.DIR = "DIR";
goog.dom.TagName.DIV = "DIV";
goog.dom.TagName.DL = "DL";
goog.dom.TagName.DT = "DT";
goog.dom.TagName.EM = "EM";
goog.dom.TagName.EMBED = "EMBED";
goog.dom.TagName.FIELDSET = "FIELDSET";
goog.dom.TagName.FIGCAPTION = "FIGCAPTION";
goog.dom.TagName.FIGURE = "FIGURE";
goog.dom.TagName.FONT = "FONT";
goog.dom.TagName.FOOTER = "FOOTER";
goog.dom.TagName.FORM = "FORM";
goog.dom.TagName.FRAME = "FRAME";
goog.dom.TagName.FRAMESET = "FRAMESET";
goog.dom.TagName.H1 = "H1";
goog.dom.TagName.H2 = "H2";
goog.dom.TagName.H3 = "H3";
goog.dom.TagName.H4 = "H4";
goog.dom.TagName.H5 = "H5";
goog.dom.TagName.H6 = "H6";
goog.dom.TagName.HEAD = "HEAD";
goog.dom.TagName.HEADER = "HEADER";
goog.dom.TagName.HGROUP = "HGROUP";
goog.dom.TagName.HR = "HR";
goog.dom.TagName.HTML = "HTML";
goog.dom.TagName.I = "I";
goog.dom.TagName.IFRAME = "IFRAME";
goog.dom.TagName.IMG = "IMG";
goog.dom.TagName.INPUT = "INPUT";
goog.dom.TagName.INS = "INS";
goog.dom.TagName.ISINDEX = "ISINDEX";
goog.dom.TagName.KBD = "KBD";
goog.dom.TagName.KEYGEN = "KEYGEN";
goog.dom.TagName.LABEL = "LABEL";
goog.dom.TagName.LEGEND = "LEGEND";
goog.dom.TagName.LI = "LI";
goog.dom.TagName.LINK = "LINK";
goog.dom.TagName.MAIN = "MAIN";
goog.dom.TagName.MAP = "MAP";
goog.dom.TagName.MARK = "MARK";
goog.dom.TagName.MATH = "MATH";
goog.dom.TagName.MENU = "MENU";
goog.dom.TagName.MENUITEM = "MENUITEM";
goog.dom.TagName.META = "META";
goog.dom.TagName.METER = "METER";
goog.dom.TagName.NAV = "NAV";
goog.dom.TagName.NOFRAMES = "NOFRAMES";
goog.dom.TagName.NOSCRIPT = "NOSCRIPT";
goog.dom.TagName.OBJECT = "OBJECT";
goog.dom.TagName.OL = "OL";
goog.dom.TagName.OPTGROUP = "OPTGROUP";
goog.dom.TagName.OPTION = "OPTION";
goog.dom.TagName.OUTPUT = "OUTPUT";
goog.dom.TagName.P = "P";
goog.dom.TagName.PARAM = "PARAM";
goog.dom.TagName.PICTURE = "PICTURE";
goog.dom.TagName.PRE = "PRE";
goog.dom.TagName.PROGRESS = "PROGRESS";
goog.dom.TagName.Q = "Q";
goog.dom.TagName.RP = "RP";
goog.dom.TagName.RT = "RT";
goog.dom.TagName.RTC = "RTC";
goog.dom.TagName.RUBY = "RUBY";
goog.dom.TagName.S = "S";
goog.dom.TagName.SAMP = "SAMP";
goog.dom.TagName.SCRIPT = "SCRIPT";
goog.dom.TagName.SECTION = "SECTION";
goog.dom.TagName.SELECT = "SELECT";
goog.dom.TagName.SMALL = "SMALL";
goog.dom.TagName.SOURCE = "SOURCE";
goog.dom.TagName.SPAN = "SPAN";
goog.dom.TagName.STRIKE = "STRIKE";
goog.dom.TagName.STRONG = "STRONG";
goog.dom.TagName.STYLE = "STYLE";
goog.dom.TagName.SUB = "SUB";
goog.dom.TagName.SUMMARY = "SUMMARY";
goog.dom.TagName.SUP = "SUP";
goog.dom.TagName.SVG = "SVG";
goog.dom.TagName.TABLE = "TABLE";
goog.dom.TagName.TBODY = "TBODY";
goog.dom.TagName.TD = "TD";
goog.dom.TagName.TEMPLATE = "TEMPLATE";
goog.dom.TagName.TEXTAREA = "TEXTAREA";
goog.dom.TagName.TFOOT = "TFOOT";
goog.dom.TagName.TH = "TH";
goog.dom.TagName.THEAD = "THEAD";
goog.dom.TagName.TIME = "TIME";
goog.dom.TagName.TITLE = "TITLE";
goog.dom.TagName.TR = "TR";
goog.dom.TagName.TRACK = "TRACK";
goog.dom.TagName.TT = "TT";
goog.dom.TagName.U = "U";
goog.dom.TagName.UL = "UL";
goog.dom.TagName.VAR = "VAR";
goog.dom.TagName.VIDEO = "VIDEO";
goog.dom.TagName.WBR = "WBR";
goog.loadModule(function(exports) {
  "use strict";
  goog.module("goog.array");
  goog.module.declareLegacyNamespace();
  const asserts = goog.require("goog.asserts");
  goog.NATIVE_ARRAY_PROTOTYPES = goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
  const ASSUME_NATIVE_FUNCTIONS = goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", goog.FEATURESET_YEAR > 2012);
  exports.ASSUME_NATIVE_FUNCTIONS = ASSUME_NATIVE_FUNCTIONS;
  function peek(array) {
    return array[array.length - 1];
  }
  exports.peek = peek;
  exports.last = peek;
  const indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(arr, obj, opt_fromIndex) {
    asserts.assert(arr.length != null);
    return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);
  } : function(arr, obj, opt_fromIndex) {
    const fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
    if (typeof arr === "string") {
      if (typeof obj !== "string" || obj.length != 1) {
        return -1;
      }
      return arr.indexOf(obj, fromIndex);
    }
    for (let i = fromIndex; i < arr.length; i++) {
      if (i in arr && arr[i] === obj) {
        return i;
      }
    }
    return -1;
  };
  exports.indexOf = indexOf;
  const lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
    asserts.assert(arr.length != null);
    const fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
    return Array.prototype.lastIndexOf.call(arr, obj, fromIndex);
  } : function(arr, obj, opt_fromIndex) {
    let fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
    if (fromIndex < 0) {
      fromIndex = Math.max(0, arr.length + fromIndex);
    }
    if (typeof arr === "string") {
      if (typeof obj !== "string" || obj.length != 1) {
        return -1;
      }
      return arr.lastIndexOf(obj, fromIndex);
    }
    for (let i = fromIndex; i >= 0; i--) {
      if (i in arr && arr[i] === obj) {
        return i;
      }
    }
    return -1;
  };
  exports.lastIndexOf = lastIndexOf;
  const forEach = goog.NATIVE_ARRAY_PROTOTYPES && (ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(arr, f, opt_obj) {
    asserts.assert(arr.length != null);
    Array.prototype.forEach.call(arr, f, opt_obj);
  } : function(arr, f, opt_obj) {
    const l = arr.length;
    const arr2 = typeof arr === "string" ? arr.split("") : arr;
    for (let i = 0; i < l; i++) {
      if (i in arr2) {
        f.call(opt_obj, arr2[i], i, arr);
      }
    }
  };
  exports.forEach = forEach;
  function forEachRight(arr, f, opt_obj) {
    const l = arr.length;
    const arr2 = typeof arr === "string" ? arr.split("") : arr;
    for (let i = l - 1; i >= 0; --i) {
      if (i in arr2) {
        f.call(opt_obj, arr2[i], i, arr);
      }
    }
  }
  exports.forEachRight = forEachRight;
  const filter = goog.NATIVE_ARRAY_PROTOTYPES && (ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(arr, f, opt_obj) {
    asserts.assert(arr.length != null);
    return Array.prototype.filter.call(arr, f, opt_obj);
  } : function(arr, f, opt_obj) {
    const l = arr.length;
    const res = [];
    let resLength = 0;
    const arr2 = typeof arr === "string" ? arr.split("") : arr;
    for (let i = 0; i < l; i++) {
      if (i in arr2) {
        const val = arr2[i];
        if (f.call(opt_obj, val, i, arr)) {
          res[resLength++] = val;
        }
      }
    }
    return res;
  };
  exports.filter = filter;
  const map = goog.NATIVE_ARRAY_PROTOTYPES && (ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(arr, f, opt_obj) {
    asserts.assert(arr.length != null);
    return Array.prototype.map.call(arr, f, opt_obj);
  } : function(arr, f, opt_obj) {
    const l = arr.length;
    const res = new Array(l);
    const arr2 = typeof arr === "string" ? arr.split("") : arr;
    for (let i = 0; i < l; i++) {
      if (i in arr2) {
        res[i] = f.call(opt_obj, arr2[i], i, arr);
      }
    }
    return res;
  };
  exports.map = map;
  const reduce = goog.NATIVE_ARRAY_PROTOTYPES && (ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(arr, f, val, opt_obj) {
    asserts.assert(arr.length != null);
    if (opt_obj) {
      f = goog.bind(f, opt_obj);
    }
    return Array.prototype.reduce.call(arr, f, val);
  } : function(arr, f, val, opt_obj) {
    let rval = val;
    forEach(arr, function(val, index) {
      rval = f.call(opt_obj, rval, val, index, arr);
    });
    return rval;
  };
  exports.reduce = reduce;
  const reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(arr, f, val, opt_obj) {
    asserts.assert(arr.length != null);
    asserts.assert(f != null);
    if (opt_obj) {
      f = goog.bind(f, opt_obj);
    }
    return Array.prototype.reduceRight.call(arr, f, val);
  } : function(arr, f, val, opt_obj) {
    let rval = val;
    forEachRight(arr, function(val, index) {
      rval = f.call(opt_obj, rval, val, index, arr);
    });
    return rval;
  };
  exports.reduceRight = reduceRight;
  const some = goog.NATIVE_ARRAY_PROTOTYPES && (ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(arr, f, opt_obj) {
    asserts.assert(arr.length != null);
    return Array.prototype.some.call(arr, f, opt_obj);
  } : function(arr, f, opt_obj) {
    const l = arr.length;
    const arr2 = typeof arr === "string" ? arr.split("") : arr;
    for (let i = 0; i < l; i++) {
      if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
        return true;
      }
    }
    return false;
  };
  exports.some = some;
  const every = goog.NATIVE_ARRAY_PROTOTYPES && (ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(arr, f, opt_obj) {
    asserts.assert(arr.length != null);
    return Array.prototype.every.call(arr, f, opt_obj);
  } : function(arr, f, opt_obj) {
    const l = arr.length;
    const arr2 = typeof arr === "string" ? arr.split("") : arr;
    for (let i = 0; i < l; i++) {
      if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
        return false;
      }
    }
    return true;
  };
  exports.every = every;
  function count(arr, f, opt_obj) {
    let count = 0;
    forEach(arr, function(element, index, arr) {
      if (f.call(opt_obj, element, index, arr)) {
        ++count;
      }
    }, opt_obj);
    return count;
  }
  exports.count = count;
  function find(arr, f, opt_obj) {
    const i = findIndex(arr, f, opt_obj);
    return i < 0 ? null : typeof arr === "string" ? arr.charAt(i) : arr[i];
  }
  exports.find = find;
  function findIndex(arr, f, opt_obj) {
    const l = arr.length;
    const arr2 = typeof arr === "string" ? arr.split("") : arr;
    for (let i = 0; i < l; i++) {
      if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
        return i;
      }
    }
    return -1;
  }
  exports.findIndex = findIndex;
  function findRight(arr, f, opt_obj) {
    const i = findIndexRight(arr, f, opt_obj);
    return i < 0 ? null : typeof arr === "string" ? arr.charAt(i) : arr[i];
  }
  exports.findRight = findRight;
  function findIndexRight(arr, f, opt_obj) {
    const l = arr.length;
    const arr2 = typeof arr === "string" ? arr.split("") : arr;
    for (let i = l - 1; i >= 0; i--) {
      if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
        return i;
      }
    }
    return -1;
  }
  exports.findIndexRight = findIndexRight;
  function contains(arr, obj) {
    return indexOf(arr, obj) >= 0;
  }
  exports.contains = contains;
  function isEmpty(arr) {
    return arr.length == 0;
  }
  exports.isEmpty = isEmpty;
  function clear(arr) {
    if (!Array.isArray(arr)) {
      for (let i = arr.length - 1; i >= 0; i--) {
        delete arr[i];
      }
    }
    arr.length = 0;
  }
  exports.clear = clear;
  function insert(arr, obj) {
    if (!contains(arr, obj)) {
      arr.push(obj);
    }
  }
  exports.insert = insert;
  function insertAt(arr, obj, opt_i) {
    splice(arr, opt_i, 0, obj);
  }
  exports.insertAt = insertAt;
  function insertArrayAt(arr, elementsToAdd, opt_i) {
    goog.partial(splice, arr, opt_i, 0).apply(null, elementsToAdd);
  }
  exports.insertArrayAt = insertArrayAt;
  function insertBefore(arr, obj, opt_obj2) {
    let i;
    if (arguments.length == 2 || (i = indexOf(arr, opt_obj2)) < 0) {
      arr.push(obj);
    } else {
      insertAt(arr, obj, i);
    }
  }
  exports.insertBefore = insertBefore;
  function remove(arr, obj) {
    const i = indexOf(arr, obj);
    let rv;
    if (rv = i >= 0) {
      removeAt(arr, i);
    }
    return rv;
  }
  exports.remove = remove;
  function removeLast(arr, obj) {
    const i = lastIndexOf(arr, obj);
    if (i >= 0) {
      removeAt(arr, i);
      return true;
    }
    return false;
  }
  exports.removeLast = removeLast;
  function removeAt(arr, i) {
    asserts.assert(arr.length != null);
    return Array.prototype.splice.call(arr, i, 1).length == 1;
  }
  exports.removeAt = removeAt;
  function removeIf(arr, f, opt_obj) {
    const i = findIndex(arr, f, opt_obj);
    if (i >= 0) {
      removeAt(arr, i);
      return true;
    }
    return false;
  }
  exports.removeIf = removeIf;
  function removeAllIf(arr, f, opt_obj) {
    let removedCount = 0;
    forEachRight(arr, function(val, index) {
      if (f.call(opt_obj, val, index, arr)) {
        if (removeAt(arr, index)) {
          removedCount++;
        }
      }
    });
    return removedCount;
  }
  exports.removeAllIf = removeAllIf;
  function concat(var_args) {
    return Array.prototype.concat.apply([], arguments);
  }
  exports.concat = concat;
  function join(var_args) {
    return Array.prototype.concat.apply([], arguments);
  }
  exports.join = join;
  function toArray(object) {
    const length = object.length;
    if (length > 0) {
      const rv = new Array(length);
      for (let i = 0; i < length; i++) {
        rv[i] = object[i];
      }
      return rv;
    }
    return [];
  }
  exports.toArray = toArray;
  const clone = toArray;
  exports.clone = clone;
  function extend(arr1, var_args) {
    for (let i = 1; i < arguments.length; i++) {
      const arr2 = arguments[i];
      if (goog.isArrayLike(arr2)) {
        const len1 = arr1.length || 0;
        const len2 = arr2.length || 0;
        arr1.length = len1 + len2;
        for (let j = 0; j < len2; j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
  exports.extend = extend;
  function splice(arr, index, howMany, var_args) {
    asserts.assert(arr.length != null);
    return Array.prototype.splice.apply(arr, slice(arguments, 1));
  }
  exports.splice = splice;
  function slice(arr, start, opt_end) {
    asserts.assert(arr.length != null);
    if (arguments.length <= 2) {
      return Array.prototype.slice.call(arr, start);
    } else {
      return Array.prototype.slice.call(arr, start, opt_end);
    }
  }
  exports.slice = slice;
  function removeDuplicates(arr, opt_rv, opt_hashFn) {
    const returnArray = opt_rv || arr;
    const defaultHashFn = function(item) {
      return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
    };
    const hashFn = opt_hashFn || defaultHashFn;
    let cursorInsert = 0;
    let cursorRead = 0;
    const seen = {};
    while (cursorRead < arr.length) {
      const current = arr[cursorRead++];
      const key = hashFn(current);
      if (!Object.prototype.hasOwnProperty.call(seen, key)) {
        seen[key] = true;
        returnArray[cursorInsert++] = current;
      }
    }
    returnArray.length = cursorInsert;
  }
  exports.removeDuplicates = removeDuplicates;
  function binarySearch(arr, target, opt_compareFn) {
    return binarySearch_(arr, opt_compareFn || defaultCompare, false, target);
  }
  exports.binarySearch = binarySearch;
  function binarySelect(arr, evaluator, opt_obj) {
    return binarySearch_(arr, evaluator, true, undefined, opt_obj);
  }
  exports.binarySelect = binarySelect;
  function binarySearch_(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
    let left = 0;
    let right = arr.length;
    let found;
    while (left < right) {
      const middle = left + (right - left >>> 1);
      let compareResult;
      if (isEvaluator) {
        compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
      } else {
        compareResult = compareFn(opt_target, arr[middle]);
      }
      if (compareResult > 0) {
        left = middle + 1;
      } else {
        right = middle;
        found = !compareResult;
      }
    }
    return found ? left : -left - 1;
  }
  function sort(arr, opt_compareFn) {
    arr.sort(opt_compareFn || defaultCompare);
  }
  exports.sort = sort;
  function stableSort(arr, opt_compareFn) {
    const compArr = new Array(arr.length);
    for (let i = 0; i < arr.length; i++) {
      compArr[i] = {index:i, value:arr[i]};
    }
    const valueCompareFn = opt_compareFn || defaultCompare;
    function stableCompareFn(obj1, obj2) {
      return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
    }
    sort(compArr, stableCompareFn);
    for (let i = 0; i < arr.length; i++) {
      arr[i] = compArr[i].value;
    }
  }
  exports.stableSort = stableSort;
  function sortByKey(arr, keyFn, opt_compareFn) {
    const keyCompareFn = opt_compareFn || defaultCompare;
    sort(arr, function(a, b) {
      return keyCompareFn(keyFn(a), keyFn(b));
    });
  }
  exports.sortByKey = sortByKey;
  function sortObjectsByKey(arr, key, opt_compareFn) {
    sortByKey(arr, function(obj) {
      return obj[key];
    }, opt_compareFn);
  }
  exports.sortObjectsByKey = sortObjectsByKey;
  function isSorted(arr, opt_compareFn, opt_strict) {
    const compare = opt_compareFn || defaultCompare;
    for (let i = 1; i < arr.length; i++) {
      const compareResult = compare(arr[i - 1], arr[i]);
      if (compareResult > 0 || compareResult == 0 && opt_strict) {
        return false;
      }
    }
    return true;
  }
  exports.isSorted = isSorted;
  function equals(arr1, arr2, opt_equalsFn) {
    if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
      return false;
    }
    const l = arr1.length;
    const equalsFn = opt_equalsFn || defaultCompareEquality;
    for (let i = 0; i < l; i++) {
      if (!equalsFn(arr1[i], arr2[i])) {
        return false;
      }
    }
    return true;
  }
  exports.equals = equals;
  function compare3(arr1, arr2, opt_compareFn) {
    const compare = opt_compareFn || defaultCompare;
    const l = Math.min(arr1.length, arr2.length);
    for (let i = 0; i < l; i++) {
      const result = compare(arr1[i], arr2[i]);
      if (result != 0) {
        return result;
      }
    }
    return defaultCompare(arr1.length, arr2.length);
  }
  exports.compare3 = compare3;
  function defaultCompare(a, b) {
    return a > b ? 1 : a < b ? -1 : 0;
  }
  exports.defaultCompare = defaultCompare;
  function inverseDefaultCompare(a, b) {
    return -defaultCompare(a, b);
  }
  exports.inverseDefaultCompare = inverseDefaultCompare;
  function defaultCompareEquality(a, b) {
    return a === b;
  }
  exports.defaultCompareEquality = defaultCompareEquality;
  function binaryInsert(array, value, opt_compareFn) {
    const index = binarySearch(array, value, opt_compareFn);
    if (index < 0) {
      insertAt(array, value, -(index + 1));
      return true;
    }
    return false;
  }
  exports.binaryInsert = binaryInsert;
  function binaryRemove(array, value, opt_compareFn) {
    const index = binarySearch(array, value, opt_compareFn);
    return index >= 0 ? removeAt(array, index) : false;
  }
  exports.binaryRemove = binaryRemove;
  function bucket(array, sorter, opt_obj) {
    const buckets = {};
    for (let i = 0; i < array.length; i++) {
      const value = array[i];
      const key = sorter.call(opt_obj, value, i, array);
      if (key !== undefined) {
        const bucket = buckets[key] || (buckets[key] = []);
        bucket.push(value);
      }
    }
    return buckets;
  }
  exports.bucket = bucket;
  function bucketToMap(array, sorter) {
    const buckets = new Map();
    for (let i = 0; i < array.length; i++) {
      const value = array[i];
      const key = sorter(value, i, array);
      if (key !== undefined) {
        let bucket = buckets.get(key);
        if (!bucket) {
          bucket = [];
          buckets.set(key, bucket);
        }
        bucket.push(value);
      }
    }
    return buckets;
  }
  exports.bucketToMap = bucketToMap;
  function toObject(arr, keyFunc, opt_obj) {
    const ret = {};
    forEach(arr, function(element, index) {
      ret[keyFunc.call(opt_obj, element, index, arr)] = element;
    });
    return ret;
  }
  exports.toObject = toObject;
  function toMap(arr, keyFunc) {
    const map = new Map();
    for (let i = 0; i < arr.length; i++) {
      const element = arr[i];
      map.set(keyFunc(element, i, arr), element);
    }
    return map;
  }
  exports.toMap = toMap;
  function range(startOrEnd, opt_end, opt_step) {
    const array = [];
    let start = 0;
    let end = startOrEnd;
    const step = opt_step || 1;
    if (opt_end !== undefined) {
      start = startOrEnd;
      end = opt_end;
    }
    if (step * (end - start) < 0) {
      return [];
    }
    if (step > 0) {
      for (let i = start; i < end; i += step) {
        array.push(i);
      }
    } else {
      for (let i = start; i > end; i += step) {
        array.push(i);
      }
    }
    return array;
  }
  exports.range = range;
  function repeat(value, n) {
    const array = [];
    for (let i = 0; i < n; i++) {
      array[i] = value;
    }
    return array;
  }
  exports.repeat = repeat;
  function flatten(var_args) {
    const CHUNK_SIZE = 8192;
    const result = [];
    for (let i = 0; i < arguments.length; i++) {
      const element = arguments[i];
      if (Array.isArray(element)) {
        for (let c = 0; c < element.length; c += CHUNK_SIZE) {
          const chunk = slice(element, c, c + CHUNK_SIZE);
          const recurseResult = flatten.apply(null, chunk);
          for (let r = 0; r < recurseResult.length; r++) {
            result.push(recurseResult[r]);
          }
        }
      } else {
        result.push(element);
      }
    }
    return result;
  }
  exports.flatten = flatten;
  function rotate(array, n) {
    asserts.assert(array.length != null);
    if (array.length) {
      n %= array.length;
      if (n > 0) {
        Array.prototype.unshift.apply(array, array.splice(-n, n));
      } else if (n < 0) {
        Array.prototype.push.apply(array, array.splice(0, -n));
      }
    }
    return array;
  }
  exports.rotate = rotate;
  function moveItem(arr, fromIndex, toIndex) {
    asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
    asserts.assert(toIndex >= 0 && toIndex < arr.length);
    const removedItems = Array.prototype.splice.call(arr, fromIndex, 1);
    Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);
  }
  exports.moveItem = moveItem;
  function zip(var_args) {
    if (!arguments.length) {
      return [];
    }
    const result = [];
    let minLen = arguments[0].length;
    for (let i = 1; i < arguments.length; i++) {
      if (arguments[i].length < minLen) {
        minLen = arguments[i].length;
      }
    }
    for (let i = 0; i < minLen; i++) {
      const value = [];
      for (let j = 0; j < arguments.length; j++) {
        value.push(arguments[j][i]);
      }
      result.push(value);
    }
    return result;
  }
  exports.zip = zip;
  function shuffle(arr, opt_randFn) {
    const randFn = opt_randFn || Math.random;
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(randFn() * (i + 1));
      const tmp = arr[i];
      arr[i] = arr[j];
      arr[j] = tmp;
    }
  }
  exports.shuffle = shuffle;
  function copyByIndex(arr, index_arr) {
    const result = [];
    forEach(index_arr, function(index) {
      result.push(arr[index]);
    });
    return result;
  }
  exports.copyByIndex = copyByIndex;
  function concatMap(arr, f, opt_obj) {
    return concat.apply([], map(arr, f, opt_obj));
  }
  exports.concatMap = concatMap;
  return exports;
});
goog.loadModule(function(exports) {
  "use strict";
  goog.module("goog.labs.userAgent");
  const USE_CLIENT_HINTS_OVERRIDE = goog.define("goog.labs.userAgent.USE_CLIENT_HINTS_OVERRIDE", "");
  const USE_CLIENT_HINTS = goog.define("goog.labs.userAgent.USE_CLIENT_HINTS", false);
  exports.USE_CLIENT_HINTS = (() => {
    const override = USE_CLIENT_HINTS_OVERRIDE ? goog.getObjectByName(USE_CLIENT_HINTS_OVERRIDE) : null;
    return override != null ? override : USE_CLIENT_HINTS;
  })();
  return exports;
});
goog.loadModule(function(exports) {
  "use strict";
  goog.module("goog.labs.userAgent.util");
  goog.module.declareLegacyNamespace();
  const {USE_CLIENT_HINTS} = goog.require("goog.labs.userAgent");
  const {caseInsensitiveContains, contains} = goog.require("goog.string.internal");
  const ASSUME_CLIENT_HINTS_SUPPORT = false;
  function getNativeUserAgentString() {
    const navigator = getNavigator();
    if (navigator) {
      const userAgent = navigator.userAgent;
      if (userAgent) {
        return userAgent;
      }
    }
    return "";
  }
  function getNativeUserAgentData() {
    if (!USE_CLIENT_HINTS) {
      return null;
    }
    const navigator = getNavigator();
    if (navigator) {
      return navigator.userAgentData || null;
    }
    return null;
  }
  function getNavigator() {
    return goog.global.navigator;
  }
  let userAgentInternal = getNativeUserAgentString();
  let userAgentDataInternal = getNativeUserAgentData();
  function setUserAgent(userAgent = undefined) {
    userAgentInternal = typeof userAgent === "string" ? userAgent : getNativeUserAgentString();
  }
  function getUserAgent() {
    return userAgentInternal;
  }
  function setUserAgentData(userAgentData) {
    userAgentDataInternal = userAgentData;
  }
  function resetUserAgentData() {
    userAgentDataInternal = getNativeUserAgentData();
  }
  function getUserAgentData() {
    return userAgentDataInternal;
  }
  function matchUserAgentDataBrand(str) {
    const data = getUserAgentData();
    if (!data) {
      return false;
    }
    return data.brands.some(({brand}) => brand && contains(brand, str));
  }
  function matchUserAgent(str) {
    const userAgent = getUserAgent();
    return contains(userAgent, str);
  }
  function matchUserAgentIgnoreCase(str) {
    const userAgent = getUserAgent();
    return caseInsensitiveContains(userAgent, str);
  }
  function extractVersionTuples(userAgent) {
    const versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
    const data = [];
    let match;
    while (match = versionRegExp.exec(userAgent)) {
      data.push([match[1], match[2], match[3] || undefined]);
    }
    return data;
  }
  exports = {ASSUME_CLIENT_HINTS_SUPPORT, extractVersionTuples, getNativeUserAgentString, getUserAgent, getUserAgentData, matchUserAgent, matchUserAgentDataBrand, matchUserAgentIgnoreCase, resetUserAgentData, setUserAgent, setUserAgentData,};
  return exports;
});
goog.loadModule(function(exports) {
  "use strict";
  goog.module("goog.labs.userAgent.browser");
  goog.module.declareLegacyNamespace();
  const googArray = goog.require("goog.array");
  const googObject = goog.require("goog.object");
  const util = goog.require("goog.labs.userAgent.util");
  const {compareVersions} = goog.require("goog.string.internal");
  function useUserAgentBrand() {
    const userAgentData = util.getUserAgentData();
    return !!userAgentData && userAgentData.brands.length > 0;
  }
  function matchOpera() {
    if (util.ASSUME_CLIENT_HINTS_SUPPORT || util.getUserAgentData()) {
      return false;
    }
    return util.matchUserAgent("Opera");
  }
  function matchIE() {
    if (util.ASSUME_CLIENT_HINTS_SUPPORT || util.getUserAgentData()) {
      return false;
    }
    return util.matchUserAgent("Trident") || util.matchUserAgent("MSIE");
  }
  function matchEdgeHtml() {
    if (util.ASSUME_CLIENT_HINTS_SUPPORT || util.getUserAgentData()) {
      return false;
    }
    return util.matchUserAgent("Edge");
  }
  function matchEdgeChromium() {
    if (useUserAgentBrand()) {
      return util.matchUserAgentDataBrand("Edge");
    }
    return util.matchUserAgent("Edg/");
  }
  function matchOperaChromium() {
    if (useUserAgentBrand()) {
      return util.matchUserAgentDataBrand("Opera");
    }
    return util.matchUserAgent("OPR");
  }
  function matchFirefox() {
    if (useUserAgentBrand()) {
      return util.matchUserAgentDataBrand("Firefox");
    }
    return util.matchUserAgent("Firefox") || util.matchUserAgent("FxiOS");
  }
  function matchSafari() {
    if (useUserAgentBrand()) {
      return util.matchUserAgentDataBrand("Safari");
    }
    return util.matchUserAgent("Safari") && !(matchChrome() || matchCoast() || matchOpera() || matchEdgeHtml() || matchEdgeChromium() || matchOperaChromium() || matchFirefox() || isSilk() || util.matchUserAgent("Android"));
  }
  function matchCoast() {
    if (util.ASSUME_CLIENT_HINTS_SUPPORT || util.getUserAgentData()) {
      return false;
    }
    return util.matchUserAgent("Coast");
  }
  function matchIosWebview() {
    return (util.matchUserAgent("iPad") || util.matchUserAgent("iPhone")) && !matchSafari() && !matchChrome() && !matchCoast() && !matchFirefox() && util.matchUserAgent("AppleWebKit");
  }
  function matchChrome() {
    if (useUserAgentBrand()) {
      return util.matchUserAgentDataBrand("Chromium");
    }
    return (util.matchUserAgent("Chrome") || util.matchUserAgent("CriOS")) && !matchEdgeHtml();
  }
  function matchAndroidBrowser() {
    return util.matchUserAgent("Android") && !(isChrome() || isFirefox() || isOpera() || isSilk());
  }
  const isOpera = matchOpera;
  const isIE = matchIE;
  const isEdge = matchEdgeHtml;
  const isEdgeChromium = matchEdgeChromium;
  const isOperaChromium = matchOperaChromium;
  const isFirefox = matchFirefox;
  const isSafari = matchSafari;
  const isCoast = matchCoast;
  const isIosWebview = matchIosWebview;
  const isChrome = matchChrome;
  const isAndroidBrowser = matchAndroidBrowser;
  function isSilk() {
    if (useUserAgentBrand()) {
      return util.matchUserAgentDataBrand("Silk");
    }
    return util.matchUserAgent("Silk");
  }
  function getVersion() {
    const userAgentString = util.getUserAgent();
    if (isIE()) {
      return getIEVersion(userAgentString);
    }
    const versionTuples = util.extractVersionTuples(userAgentString);
    const versionMap = {};
    versionTuples.forEach(tuple => {
      const key = tuple[0];
      const value = tuple[1];
      versionMap[key] = value;
    });
    const versionMapHasKey = goog.partial(googObject.containsKey, versionMap);
    function lookUpValueWithKeys(keys) {
      const key = googArray.find(keys, versionMapHasKey);
      return versionMap[key] || "";
    }
    if (isOpera()) {
      return lookUpValueWithKeys(["Version", "Opera"]);
    }
    if (isEdge()) {
      return lookUpValueWithKeys(["Edge"]);
    }
    if (isEdgeChromium()) {
      return lookUpValueWithKeys(["Edg"]);
    }
    if (isChrome()) {
      return lookUpValueWithKeys(["Chrome", "CriOS", "HeadlessChrome"]);
    }
    const tuple = versionTuples[2];
    return tuple && tuple[1] || "";
  }
  function isVersionOrHigher(version) {
    return compareVersions(getVersion(), version) >= 0;
  }
  function getIEVersion(userAgent) {
    const rv = /rv: *([\d\.]*)/.exec(userAgent);
    if (rv && rv[1]) {
      return rv[1];
    }
    let version = "";
    const msie = /MSIE +([\d\.]+)/.exec(userAgent);
    if (msie && msie[1]) {
      const tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
      if (msie[1] == "7.0") {
        if (tridentVersion && tridentVersion[1]) {
          switch(tridentVersion[1]) {
            case "4.0":
              version = "8.0";
              break;
            case "5.0":
              version = "9.0";
              break;
            case "6.0":
              version = "10.0";
              break;
            case "7.0":
              version = "11.0";
              break;
          }
        } else {
          version = "7.0";
        }
      } else {
        version = msie[1];
      }
    }
    return version;
  }
  exports = {getVersion, isAndroidBrowser, isChrome, isCoast, isEdge, isEdgeChromium, isFirefox, isIE, isIosWebview, isOpera, isOperaChromium, isSafari, isSilk, isVersionOrHigher,};
  return exports;
});
goog.provide("goog.dom.tags");
goog.require("goog.object");
goog.dom.tags.VOID_TAGS_ = goog.object.createSet("area", "base", "br", "col", "command", "embed", "hr", "img", "input", "keygen", "link", "meta", "param", "source", "track", "wbr");
goog.dom.tags.isVoidTag = function(tagName) {
  return goog.dom.tags.VOID_TAGS_[tagName] === true;
};
goog.loadModule(function(exports) {
  "use strict";
  goog.module("goog.html.SafeHtml");
  goog.module.declareLegacyNamespace();
  const Const = goog.require("goog.string.Const");
  const Dir = goog.require("goog.i18n.bidi.Dir");
  const DirectionalString = goog.require("goog.i18n.bidi.DirectionalString");
  const SafeScript = goog.require("goog.html.SafeScript");
  const SafeStyle = goog.require("goog.html.SafeStyle");
  const SafeStyleSheet = goog.require("goog.html.SafeStyleSheet");
  const SafeUrl = goog.require("goog.html.SafeUrl");
  const TagName = goog.require("goog.dom.TagName");
  const TrustedResourceUrl = goog.require("goog.html.TrustedResourceUrl");
  const TypedString = goog.require("goog.string.TypedString");
  const asserts = goog.require("goog.asserts");
  const browser = goog.require("goog.labs.userAgent.browser");
  const googArray = goog.require("goog.array");
  const googObject = goog.require("goog.object");
  const internal = goog.require("goog.string.internal");
  const tags = goog.require("goog.dom.tags");
  const trustedtypes = goog.require("goog.html.trustedtypes");
  const CONSTRUCTOR_TOKEN_PRIVATE = {};
  class SafeHtml {
    constructor(value, dir, token) {
      this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = token === CONSTRUCTOR_TOKEN_PRIVATE ? value : "";
      this.dir_ = dir;
      this.implementsGoogI18nBidiDirectionalString = true;
      this.implementsGoogStringTypedString = true;
    }
    getDirection() {
      return this.dir_;
    }
    getTypedStringValue() {
      return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();
    }
    toString() {
      return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();
    }
    static unwrap(safeHtml) {
      return SafeHtml.unwrapTrustedHTML(safeHtml).toString();
    }
    static unwrapTrustedHTML(safeHtml) {
      if (safeHtml instanceof SafeHtml && safeHtml.constructor === SafeHtml) {
        return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
      } else {
        asserts.fail(`expected object of type SafeHtml, got '${safeHtml}' of type ` + goog.typeOf(safeHtml));
        return "type_error:SafeHtml";
      }
    }
    static htmlEscape(textOrHtml) {
      if (textOrHtml instanceof SafeHtml) {
        return textOrHtml;
      }
      const textIsObject = typeof textOrHtml == "object";
      let dir = null;
      if (textIsObject && textOrHtml.implementsGoogI18nBidiDirectionalString) {
        dir = textOrHtml.getDirection();
      }
      let textAsString;
      if (textIsObject && textOrHtml.implementsGoogStringTypedString) {
        textAsString = textOrHtml.getTypedStringValue();
      } else {
        textAsString = String(textOrHtml);
      }
      return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(internal.htmlEscape(textAsString), dir);
    }
    static htmlEscapePreservingNewlines(textOrHtml) {
      if (textOrHtml instanceof SafeHtml) {
        return textOrHtml;
      }
      const html = SafeHtml.htmlEscape(textOrHtml);
      return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(internal.newLineToBr(SafeHtml.unwrap(html)), html.getDirection());
    }
    static htmlEscapePreservingNewlinesAndSpaces(textOrHtml) {
      if (textOrHtml instanceof SafeHtml) {
        return textOrHtml;
      }
      const html = SafeHtml.htmlEscape(textOrHtml);
      return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(internal.whitespaceEscape(SafeHtml.unwrap(html)), html.getDirection());
    }
    static comment(text) {
      return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3c!--" + internal.htmlEscape(text) + "--\x3e", null);
    }
    static create(tagName, attributes = undefined, content = undefined) {
      SafeHtml.verifyTagName(String(tagName));
      return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(tagName), attributes, content);
    }
    static verifyTagName(tagName) {
      if (!VALID_NAMES_IN_TAG.test(tagName)) {
        throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? `Invalid tag name <${tagName}>.` : "");
      }
      if (tagName.toUpperCase() in NOT_ALLOWED_TAG_NAMES) {
        throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? `Tag name <${tagName}> is not allowed for SafeHtml.` : "");
      }
    }
    static createIframe(src = undefined, srcdoc = undefined, attributes = undefined, content = undefined) {
      if (src) {
        TrustedResourceUrl.unwrap(src);
      }
      const fixedAttributes = {};
      fixedAttributes["src"] = src || null;
      fixedAttributes["srcdoc"] = srcdoc && SafeHtml.unwrap(srcdoc);
      const defaultAttributes = {"sandbox":""};
      const combinedAttrs = SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, attributes);
      return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", combinedAttrs, content);
    }
    static createSandboxIframe(src = undefined, srcdoc = undefined, attributes = undefined, content = undefined) {
      if (!SafeHtml.canUseSandboxIframe()) {
        throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? "The browser does not support sandboxed iframes." : "");
      }
      const fixedAttributes = {};
      if (src) {
        fixedAttributes["src"] = SafeUrl.unwrap(SafeUrl.sanitize(src));
      } else {
        fixedAttributes["src"] = null;
      }
      fixedAttributes["srcdoc"] = srcdoc || null;
      fixedAttributes["sandbox"] = "";
      const combinedAttrs = SafeHtml.combineAttributes(fixedAttributes, {}, attributes);
      return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", combinedAttrs, content);
    }
    static canUseSandboxIframe() {
      return goog.global["HTMLIFrameElement"] && "sandbox" in goog.global["HTMLIFrameElement"].prototype;
    }
    static createScriptSrc(src, attributes = undefined) {
      TrustedResourceUrl.unwrap(src);
      const fixedAttributes = {"src":src};
      const defaultAttributes = {};
      const combinedAttrs = SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, attributes);
      return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", combinedAttrs);
    }
    static createScript(script, attributes = undefined) {
      for (let attr in attributes) {
        if (Object.prototype.hasOwnProperty.call(attributes, attr)) {
          const attrLower = attr.toLowerCase();
          if (attrLower == "language" || attrLower == "src" || attrLower == "text" || attrLower == "type") {
            throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? `Cannot set "${attrLower}" attribute` : "");
          }
        }
      }
      let content = "";
      script = googArray.concat(script);
      for (let i = 0; i < script.length; i++) {
        content += SafeScript.unwrap(script[i]);
      }
      const htmlContent = SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, Dir.NEUTRAL);
      return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", attributes, htmlContent);
    }
    static createStyle(styleSheet, attributes = undefined) {
      const fixedAttributes = {"type":"text/css"};
      const defaultAttributes = {};
      const combinedAttrs = SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, attributes);
      let content = "";
      styleSheet = googArray.concat(styleSheet);
      for (let i = 0; i < styleSheet.length; i++) {
        content += SafeStyleSheet.unwrap(styleSheet[i]);
      }
      const htmlContent = SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, Dir.NEUTRAL);
      return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style", combinedAttrs, htmlContent);
    }
    static createMetaRefresh(url, secs = undefined) {
      let unwrappedUrl = SafeUrl.unwrap(SafeUrl.sanitize(url));
      if (browser.isIE() || browser.isEdge()) {
        if (internal.contains(unwrappedUrl, ";")) {
          unwrappedUrl = "'" + unwrappedUrl.replace(/'/g, "%27") + "'";
        }
      }
      const attributes = {"http-equiv":"refresh", "content":(secs || 0) + "; url\x3d" + unwrappedUrl,};
      return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta", attributes);
    }
    static createWithDir(dir, tagName, attributes = undefined, content = undefined) {
      const html = SafeHtml.create(tagName, attributes, content);
      html.dir_ = dir;
      return html;
    }
    static join(separator, parts) {
      const separatorHtml = SafeHtml.htmlEscape(separator);
      let dir = separatorHtml.getDirection();
      const content = [];
      const addArgument = argument => {
        if (Array.isArray(argument)) {
          argument.forEach(addArgument);
        } else {
          const html = SafeHtml.htmlEscape(argument);
          content.push(SafeHtml.unwrap(html));
          const htmlDir = html.getDirection();
          if (dir == Dir.NEUTRAL) {
            dir = htmlDir;
          } else if (htmlDir != Dir.NEUTRAL && dir != htmlDir) {
            dir = null;
          }
        }
      };
      parts.forEach(addArgument);
      return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content.join(SafeHtml.unwrap(separatorHtml)), dir);
    }
    static concat(var_args) {
      return SafeHtml.join(SafeHtml.EMPTY, Array.prototype.slice.call(arguments));
    }
    static concatWithDir(dir, var_args) {
      const html = SafeHtml.concat(Array.prototype.slice.call(arguments, 1));
      html.dir_ = dir;
      return html;
    }
    static createSafeHtmlSecurityPrivateDoNotAccessOrElse(html, dir) {
      const policy = trustedtypes.getPolicyPrivateDoNotAccessOrElse();
      const trustedHtml = policy ? policy.createHTML(html) : html;
      return new SafeHtml(trustedHtml, dir, CONSTRUCTOR_TOKEN_PRIVATE);
    }
    static createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(tagName, attributes = undefined, content = undefined) {
      let dir = null;
      let result = `<${tagName}`;
      result += SafeHtml.stringifyAttributes(tagName, attributes);
      if (content == null) {
        content = [];
      } else if (!Array.isArray(content)) {
        content = [content];
      }
      if (tags.isVoidTag(tagName.toLowerCase())) {
        asserts.assert(!content.length, `Void tag <${tagName}> does not allow content.`);
        result += "\x3e";
      } else {
        const html = SafeHtml.concat(content);
        result += "\x3e" + SafeHtml.unwrap(html) + "\x3c/" + tagName + "\x3e";
        dir = html.getDirection();
      }
      const dirAttribute = attributes && attributes["dir"];
      if (dirAttribute) {
        if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {
          dir = Dir.NEUTRAL;
        } else {
          dir = null;
        }
      }
      return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result, dir);
    }
    static stringifyAttributes(tagName, attributes = undefined) {
      let result = "";
      if (attributes) {
        for (let name in attributes) {
          if (Object.prototype.hasOwnProperty.call(attributes, name)) {
            if (!VALID_NAMES_IN_TAG.test(name)) {
              throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? `Invalid attribute name "${name}".` : "");
            }
            const value = attributes[name];
            if (value == null) {
              continue;
            }
            result += " " + getAttrNameAndValue(tagName, name, value);
          }
        }
      }
      return result;
    }
    static combineAttributes(fixedAttributes, defaultAttributes, attributes = undefined) {
      const combinedAttributes = {};
      for (const name in fixedAttributes) {
        if (Object.prototype.hasOwnProperty.call(fixedAttributes, name)) {
          asserts.assert(name.toLowerCase() == name, "Must be lower case");
          combinedAttributes[name] = fixedAttributes[name];
        }
      }
      for (const name in defaultAttributes) {
        if (Object.prototype.hasOwnProperty.call(defaultAttributes, name)) {
          asserts.assert(name.toLowerCase() == name, "Must be lower case");
          combinedAttributes[name] = defaultAttributes[name];
        }
      }
      if (attributes) {
        for (const name in attributes) {
          if (Object.prototype.hasOwnProperty.call(attributes, name)) {
            const nameLower = name.toLowerCase();
            if (nameLower in fixedAttributes) {
              throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? `Cannot override "${nameLower}" attribute, got "` + name + '" with value "' + attributes[name] + '"' : "");
            }
            if (nameLower in defaultAttributes) {
              delete combinedAttributes[nameLower];
            }
            combinedAttributes[name] = attributes[name];
          }
        }
      }
      return combinedAttributes;
    }
  }
  SafeHtml.ENABLE_ERROR_MESSAGES = goog.define("goog.html.SafeHtml.ENABLE_ERROR_MESSAGES", goog.DEBUG);
  SafeHtml.SUPPORT_STYLE_ATTRIBUTE = goog.define("goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE", true);
  SafeHtml.TextOrHtml_;
  SafeHtml.from = SafeHtml.htmlEscape;
  const VALID_NAMES_IN_TAG = /^[a-zA-Z0-9-]+$/;
  const URL_ATTRIBUTES = googObject.createSet("action", "cite", "data", "formaction", "href", "manifest", "poster", "src");
  const NOT_ALLOWED_TAG_NAMES = googObject.createSet(TagName.APPLET, TagName.BASE, TagName.EMBED, TagName.IFRAME, TagName.LINK, TagName.MATH, TagName.META, TagName.OBJECT, TagName.SCRIPT, TagName.STYLE, TagName.SVG, TagName.TEMPLATE);
  SafeHtml.AttributeValue;
  function getAttrNameAndValue(tagName, name, value) {
    if (value instanceof Const) {
      value = Const.unwrap(value);
    } else if (name.toLowerCase() == "style") {
      if (SafeHtml.SUPPORT_STYLE_ATTRIBUTE) {
        value = getStyleValue(value);
      } else {
        throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute "style" not supported.' : "");
      }
    } else if (/^on/i.test(name)) {
      throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? `Attribute "${name}` + '" requires goog.string.Const value, "' + value + '" given.' : "");
    } else if (name.toLowerCase() in URL_ATTRIBUTES) {
      if (value instanceof TrustedResourceUrl) {
        value = TrustedResourceUrl.unwrap(value);
      } else if (value instanceof SafeUrl) {
        value = SafeUrl.unwrap(value);
      } else if (typeof value === "string") {
        value = SafeUrl.sanitize(value).getTypedStringValue();
      } else {
        throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? `Attribute "${name}" on tag "${tagName}` + '" requires goog.html.SafeUrl, goog.string.Const, or' + ' string, value "' + value + '" given.' : "");
      }
    }
    if (value.implementsGoogStringTypedString) {
      value = value.getTypedStringValue();
    }
    asserts.assert(typeof value === "string" || typeof value === "number", "String or number value expected, got " + typeof value + " with value: " + value);
    return `${name}="` + internal.htmlEscape(String(value)) + '"';
  }
  function getStyleValue(value) {
    if (!goog.isObject(value)) {
      throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? 'The "style" attribute requires goog.html.SafeStyle or map ' + "of style properties, " + typeof value + " given: " + value : "");
    }
    if (!(value instanceof SafeStyle)) {
      value = SafeStyle.create(value);
    }
    return SafeStyle.unwrap(value);
  }
  SafeHtml.DOCTYPE_HTML = {valueOf:function() {
    return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3c!DOCTYPE html\x3e", Dir.NEUTRAL);
  },}.valueOf();
  SafeHtml.EMPTY = new SafeHtml(goog.global.trustedTypes && goog.global.trustedTypes.emptyHTML || "", Dir.NEUTRAL, CONSTRUCTOR_TOKEN_PRIVATE);
  SafeHtml.BR = {valueOf:function() {
    return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3cbr\x3e", Dir.NEUTRAL);
  },}.valueOf();
  exports = SafeHtml;
  return exports;
});
goog.provide("goog.html.uncheckedconversions");
goog.require("goog.asserts");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeScript");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeStyleSheet");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.string.Const");
goog.require("goog.string.internal");
goog.requireType("goog.i18n.bidi.Dir");
goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract = function(justification, html, opt_dir) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(html, opt_dir || null);
};
goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract = function(justification, script) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(script);
};
goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract = function(justification, style) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract = function(justification, styleSheet) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);
};
goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract = function(justification, url) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract = function(justification, url) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.provide("goog.dom.safe");
goog.provide("goog.dom.safe.InsertAdjacentHtmlPosition");
goog.require("goog.asserts");
goog.require("goog.dom.asserts");
goog.require("goog.functions");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeScript");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.html.uncheckedconversions");
goog.require("goog.string.Const");
goog.require("goog.string.internal");
goog.dom.safe.InsertAdjacentHtmlPosition = {AFTERBEGIN:"afterbegin", AFTEREND:"afterend", BEFOREBEGIN:"beforebegin", BEFOREEND:"beforeend"};
goog.dom.safe.insertAdjacentHtml = function(node, position, html) {
  node.insertAdjacentHTML(position, goog.html.SafeHtml.unwrapTrustedHTML(html));
};
goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_ = {"MATH":true, "SCRIPT":true, "STYLE":true, "SVG":true, "TEMPLATE":true};
goog.dom.safe.isInnerHtmlCleanupRecursive_ = goog.functions.cacheReturnValue(function() {
  if (goog.DEBUG && typeof document === "undefined") {
    return false;
  }
  var div = document.createElement("div");
  var childDiv = document.createElement("div");
  childDiv.appendChild(document.createElement("div"));
  div.appendChild(childDiv);
  if (goog.DEBUG && !div.firstChild) {
    return false;
  }
  var innerChild = div.firstChild.firstChild;
  div.innerHTML = goog.html.SafeHtml.unwrapTrustedHTML(goog.html.SafeHtml.EMPTY);
  return !innerChild.parentElement;
});
goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse = function(elem, html) {
  if (goog.dom.safe.isInnerHtmlCleanupRecursive_()) {
    while (elem.lastChild) {
      elem.removeChild(elem.lastChild);
    }
  }
  elem.innerHTML = goog.html.SafeHtml.unwrapTrustedHTML(html);
};
goog.dom.safe.setInnerHtml = function(elem, html) {
  if (goog.asserts.ENABLE_ASSERTS && elem.tagName) {
    var tagName = elem.tagName.toUpperCase();
    if (goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[tagName]) {
      throw new Error("goog.dom.safe.setInnerHtml cannot be used to set content of " + elem.tagName + ".");
    }
  }
  goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(elem, html);
};
goog.dom.safe.setInnerHtmlFromConstant = function(element, constHtml) {
  goog.dom.safe.setInnerHtml(element, goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Constant HTML to be immediatelly used."), goog.string.Const.unwrap(constHtml)));
};
goog.dom.safe.setOuterHtml = function(elem, html) {
  elem.outerHTML = goog.html.SafeHtml.unwrapTrustedHTML(html);
};
goog.dom.safe.setFormElementAction = function(form, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  goog.dom.asserts.assertIsHTMLFormElement(form).action = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setButtonFormAction = function(button, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  goog.dom.asserts.assertIsHTMLButtonElement(button).formAction = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setInputFormAction = function(input, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  goog.dom.asserts.assertIsHTMLInputElement(input).formAction = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setStyle = function(elem, style) {
  elem.style.cssText = goog.html.SafeStyle.unwrap(style);
};
goog.dom.safe.documentWrite = function(doc, html) {
  doc.write(goog.html.SafeHtml.unwrapTrustedHTML(html));
};
goog.dom.safe.setAnchorHref = function(anchor, url) {
  goog.dom.asserts.assertIsHTMLAnchorElement(anchor);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  anchor.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setImageSrc = function(imageElement, url) {
  goog.dom.asserts.assertIsHTMLImageElement(imageElement);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    var allowDataUrl = /^data:image\//i.test(url);
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url, allowDataUrl);
  }
  imageElement.src = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setAudioSrc = function(audioElement, url) {
  goog.dom.asserts.assertIsHTMLAudioElement(audioElement);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    var allowDataUrl = /^data:audio\//i.test(url);
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url, allowDataUrl);
  }
  audioElement.src = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setVideoSrc = function(videoElement, url) {
  goog.dom.asserts.assertIsHTMLVideoElement(videoElement);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    var allowDataUrl = /^data:video\//i.test(url);
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url, allowDataUrl);
  }
  videoElement.src = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setEmbedSrc = function(embed, url) {
  goog.dom.asserts.assertIsHTMLEmbedElement(embed);
  embed.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(url);
};
goog.dom.safe.setFrameSrc = function(frame, url) {
  goog.dom.asserts.assertIsHTMLFrameElement(frame);
  frame.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setIframeSrc = function(iframe, url) {
  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);
  iframe.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setIframeSrcdoc = function(iframe, html) {
  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);
  iframe.srcdoc = goog.html.SafeHtml.unwrapTrustedHTML(html);
};
goog.dom.safe.setLinkHrefAndRel = function(link, url, rel) {
  goog.dom.asserts.assertIsHTMLLinkElement(link);
  link.rel = rel;
  if (goog.string.internal.caseInsensitiveContains(rel, "stylesheet")) {
    goog.asserts.assert(url instanceof goog.html.TrustedResourceUrl, 'URL must be TrustedResourceUrl because "rel" contains "stylesheet"');
    link.href = goog.html.TrustedResourceUrl.unwrap(url);
    const win = link.ownerDocument && link.ownerDocument.defaultView;
    const nonce = goog.dom.safe.getStyleNonce(win);
    if (nonce) {
      link.setAttribute("nonce", nonce);
    }
  } else if (url instanceof goog.html.TrustedResourceUrl) {
    link.href = goog.html.TrustedResourceUrl.unwrap(url);
  } else if (url instanceof goog.html.SafeUrl) {
    link.href = goog.html.SafeUrl.unwrap(url);
  } else {
    link.href = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitizeAssertUnchanged(url));
  }
};
goog.dom.safe.setObjectData = function(object, url) {
  goog.dom.asserts.assertIsHTMLObjectElement(object);
  object.data = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(url);
};
goog.dom.safe.setScriptSrc = function(script, url) {
  goog.dom.asserts.assertIsHTMLScriptElement(script);
  script.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(url);
  goog.dom.safe.setNonceForScriptElement_(script);
};
goog.dom.safe.setScriptContent = function(script, content) {
  goog.dom.asserts.assertIsHTMLScriptElement(script);
  script.textContent = goog.html.SafeScript.unwrapTrustedScript(content);
  goog.dom.safe.setNonceForScriptElement_(script);
};
goog.dom.safe.setNonceForScriptElement_ = function(script) {
  var win = script.ownerDocument && script.ownerDocument.defaultView;
  const nonce = goog.dom.safe.getScriptNonce(win);
  if (nonce) {
    script.setAttribute("nonce", nonce);
  }
};
goog.dom.safe.setLocationHref = function(loc, url) {
  goog.dom.asserts.assertIsLocation(loc);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  loc.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.assignLocation = function(loc, url) {
  goog.dom.asserts.assertIsLocation(loc);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  loc.assign(goog.html.SafeUrl.unwrap(safeUrl));
};
goog.dom.safe.replaceLocation = function(loc, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  loc.replace(goog.html.SafeUrl.unwrap(safeUrl));
};
goog.dom.safe.openInWindow = function(url, opt_openerWin, opt_name, opt_specs) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  var win = opt_openerWin || goog.global;
  var name = opt_name instanceof goog.string.Const ? goog.string.Const.unwrap(opt_name) : opt_name || "";
  if (opt_specs !== undefined) {
    return win.open(goog.html.SafeUrl.unwrap(safeUrl), name, opt_specs);
  } else {
    return win.open(goog.html.SafeUrl.unwrap(safeUrl), name);
  }
};
goog.dom.safe.parseFromStringHtml = function(parser, html) {
  return goog.dom.safe.parseFromString(parser, html, "text/html");
};
goog.dom.safe.parseFromString = function(parser, content, type) {
  return parser.parseFromString(goog.html.SafeHtml.unwrapTrustedHTML(content), type);
};
goog.dom.safe.createImageFromBlob = function(blob) {
  if (!/^image\/.*/g.test(blob.type)) {
    throw new Error("goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.");
  }
  var objectUrl = goog.global.URL.createObjectURL(blob);
  var image = new goog.global.Image();
  image.onload = function() {
    goog.global.URL.revokeObjectURL(objectUrl);
  };
  goog.dom.safe.setImageSrc(image, goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Image blob URL."), objectUrl));
  return image;
};
goog.dom.safe.createContextualFragment = function(range, html) {
  return range.createContextualFragment(goog.html.SafeHtml.unwrapTrustedHTML(html));
};
goog.dom.safe.getScriptNonce = function(opt_window) {
  return goog.dom.safe.getNonce_("script[nonce]", opt_window);
};
goog.dom.safe.getStyleNonce = function(opt_window) {
  return goog.dom.safe.getNonce_('style[nonce],link[rel\x3d"stylesheet"][nonce]', opt_window);
};
goog.dom.safe.NONCE_PATTERN_ = /^[\w+/_-]+[=]{0,2}$/;
goog.dom.safe.getNonce_ = function(selector, win) {
  const doc = (win || goog.global).document;
  if (!doc.querySelector) {
    return "";
  }
  let el = doc.querySelector(selector);
  if (el) {
    const nonce = el["nonce"] || el.getAttribute("nonce");
    if (nonce && goog.dom.safe.NONCE_PATTERN_.test(nonce)) {
      return nonce;
    }
  }
  return "";
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.require("goog.dom.safe");
goog.require("goog.html.uncheckedconversions");
goog.require("goog.string.Const");
goog.require("goog.string.internal");
goog.string.DETECT_DOUBLE_ESCAPING = goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.FORCE_NON_DOM_HTML_UNESCAPING = goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:" "};
goog.string.startsWith = goog.string.internal.startsWith;
goog.string.endsWith = goog.string.internal.endsWith;
goog.string.caseInsensitiveStartsWith = goog.string.internal.caseInsensitiveStartsWith;
goog.string.caseInsensitiveEndsWith = goog.string.internal.caseInsensitiveEndsWith;
goog.string.caseInsensitiveEquals = goog.string.internal.caseInsensitiveEquals;
goog.string.subs = function(str, var_args) {
  const splitParts = str.split("%s");
  let returnString = "";
  const subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = goog.string.internal.isEmptyOrWhitespace;
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "" && ch <= "�";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.string.internal.trim;
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = goog.string.internal.caseInsensitiveCompare;
goog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  const tokens1 = str1.toLowerCase().match(tokenizerRegExp);
  const tokens2 = str2.toLowerCase().match(tokenizerRegExp);
  const count = Math.min(tokens1.length, tokens2.length);
  for (let i = 0; i < count; i++) {
    const a = tokens1[i];
    const b = tokens2[i];
    if (a != b) {
      const num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        const num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.intAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = goog.string.internal.newLineToBr;
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  str = goog.string.internal.htmlEscape(str, opt_isLikelyToContainHtmlChars);
  if (goog.string.DETECT_DOUBLE_ESCAPING) {
    str = str.replace(goog.string.E_RE_, "\x26#101;");
  }
  return str;
};
goog.string.E_RE_ = /e/g;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  const seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  let div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    let value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      const n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      goog.dom.safe.setInnerHtml(div, goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Single HTML entity."), s + " "));
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          const n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  const length = quoteChars.length;
  for (let i = 0; i < length; i++) {
    const quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    const endPoint = str.length - opt_trailingChars;
    const startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else if (str.length > chars) {
    let half = Math.floor(chars / 2);
    const endPos = str.length - half;
    half += chars % 2;
    str = str.substring(0, half) + "..." + str.substring(endPos);
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\v":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\\u003C"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  const sb = ['"'];
  for (let i = 0; i < s.length; i++) {
    const ch = s.charAt(i);
    const cc = ch.charCodeAt(0);
    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
  }
  sb.push('"');
  return sb.join("");
};
goog.string.escapeString = function(str) {
  const sb = [];
  for (let i = 0; i < str.length; i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  let rv = c;
  const cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = goog.string.internal.contains;
goog.string.caseInsensitiveContains = goog.string.internal.caseInsensitiveContains;
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  let resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(str, substr) {
  return str.replace(substr, "");
};
goog.string.removeAll = function(s, ss) {
  const re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.replaceAll = function(s, ss, replacement) {
  const re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, replacement.replace(/\$/g, "$$$$"));
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(string, length) {
  return string.repeat(length);
} : function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  let s = opt_precision !== undefined ? num.toFixed(opt_precision) : String(num);
  let index = s.indexOf(".");
  if (index === -1) {
    index = s.length;
  }
  const sign = s[0] === "-" ? "-" : "";
  if (sign) {
    s = s.substring(1);
  }
  return sign + goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  const x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = goog.string.internal.compareVersions;
goog.string.hashCode = function(str) {
  let result = 0;
  for (let i = 0; i < str.length; ++i) {
    result = 31 * result + str.charCodeAt(i) >>> 0;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  const num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  let delimiters = typeof opt_delimiters === "string" ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  const regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (typeof value === "string") {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  const parts = str.split(separator);
  const returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.lastComponent = function(str, separators) {
  if (!separators) {
    return str;
  } else if (typeof separators == "string") {
    separators = [separators];
  }
  let lastSeparatorIndex = -1;
  for (let i = 0; i < separators.length; i++) {
    if (separators[i] == "") {
      continue;
    }
    const currentSeparatorIndex = str.lastIndexOf(separators[i]);
    if (currentSeparatorIndex > lastSeparatorIndex) {
      lastSeparatorIndex = currentSeparatorIndex;
    }
  }
  if (lastSeparatorIndex == -1) {
    return str;
  }
  return str.slice(lastSeparatorIndex + 1);
};
goog.string.editDistance = function(a, b) {
  const v0 = [];
  const v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (let i = 0; i < b.length + 1; i++) {
    v0[i] = i;
  }
  for (let i = 0; i < a.length; i++) {
    v1[0] = i + 1;
    for (let j = 0; j < b.length; j++) {
      const cost = Number(a[i] != b[j]);
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (let j = 0; j < v0.length; j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.loadModule(function(exports) {
  "use strict";
  goog.module("goog.collections.maps");
  goog.module.declareLegacyNamespace();
  class MapLike {
    constructor() {
      this.size;
    }
    set(key, val) {
    }
    get(key) {
    }
    keys() {
    }
    values() {
    }
    has(key) {
    }
  }
  exports.MapLike = MapLike;
  function setAll(map, entries) {
    if (!entries) {
      return;
    }
    for (const [k, v] of entries) {
      map.set(k, v);
    }
  }
  exports.setAll = setAll;
  function hasValue(map, val, valueEqualityFn = defaultEqualityFn) {
    for (const v of map.values()) {
      if (valueEqualityFn(v, val)) {
        return true;
      }
    }
    return false;
  }
  exports.hasValue = hasValue;
  const defaultEqualityFn = (a, b) => a === b;
  function equals(map, otherMap, valueEqualityFn = defaultEqualityFn) {
    if (map === otherMap) {
      return true;
    }
    if (map.size !== otherMap.size) {
      return false;
    }
    for (const key of map.keys()) {
      if (!otherMap.has(key)) {
        return false;
      }
      if (!valueEqualityFn(map.get(key), otherMap.get(key))) {
        return false;
      }
    }
    return true;
  }
  exports.equals = equals;
  function transpose(map) {
    const transposed = new Map();
    for (const key of map.keys()) {
      const val = map.get(key);
      transposed.set(val, key);
    }
    return transposed;
  }
  exports.transpose = transpose;
  function toObject(map) {
    const obj = {};
    for (const key of map.keys()) {
      obj[key] = map.get(key);
    }
    return obj;
  }
  exports.toObject = toObject;
  return exports;
});
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (col.getCount && typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (col.getValues && typeof col.getValues == "function") {
    return col.getValues();
  }
  if (typeof Map !== "undefined" && col instanceof Map || typeof Set !== "undefined" && col instanceof Set) {
    return Array.from(col.values());
  }
  if (typeof col === "string") {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0; i < l; i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (col.getKeys && typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (col.getValues && typeof col.getValues == "function") {
    return undefined;
  }
  if (typeof Map !== "undefined" && col instanceof Map) {
    return Array.from(col.keys());
  }
  if (typeof Set !== "undefined" && col instanceof Set) {
    return undefined;
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    var rv = [];
    var l = col.length;
    for (var i = 0; i < l; i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (col.contains && typeof col.contains == "function") {
    return col.contains(val);
  }
  if (col.containsValue && typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    return goog.array.contains(col, val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (col.isEmpty && typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    return col.length === 0;
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (col.clear && typeof col.clear == "function") {
    col.clear();
  } else if (goog.isArrayLike(col)) {
    goog.array.clear(col);
  } else {
    goog.object.clear(col);
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (col.forEach && typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else if (goog.isArrayLike(col) || typeof col === "string") {
    Array.prototype.forEach.call(col, f, opt_obj);
  } else {
    var keys = goog.structs.getKeys(col);
    var values = goog.structs.getValues(col);
    var l = values.length;
    for (var i = 0; i < l; i++) {
      f.call(opt_obj, values[i], keys && keys[i], col);
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    return Array.prototype.filter.call(col, f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0; i < l; i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0; i < l; i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    return Array.prototype.map.call(col, f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0; i < l; i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0; i < l; i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    return Array.prototype.some.call(col, f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0; i < l; i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    return Array.prototype.every.call(col, f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0; i < l; i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^\\\\/?#]*)@)?" + "([^\\\\/?#]*?)" + "(?::([0-9]+))?" + "(?\x3d[\\\\/?#]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#([\\s\\S]*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.urlPackageSupportLoggingHandler_ = null;
goog.uri.utils.setUrlPackageSupportLoggingHandler = function(handler) {
  goog.uri.utils.urlPackageSupportLoggingHandler_ = handler;
};
goog.uri.utils.split = function(uri) {
  var result = uri.match(goog.uri.utils.splitRe_);
  if (goog.uri.utils.urlPackageSupportLoggingHandler_ && ["http", "https", "ws", "wss", "ftp"].indexOf(result[goog.uri.utils.ComponentIndex.SCHEME]) >= 0) {
    goog.uri.utils.urlPackageSupportLoggingHandler_(uri);
  }
  return result;
};
goog.uri.utils.decodeIfPossible_ = function(uri, opt_preserveReserved) {
  if (!uri) {
    return uri;
  }
  return opt_preserveReserved ? decodeURI(uri) : decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && goog.global.self && goog.global.self.location) {
    var protocol = goog.global.self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri), true);
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri), true);
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getOrigin = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], null, pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  goog.asserts.assert(uri.indexOf("#") < 0 && uri.indexOf("?") < 0, "goog.uri.utils: Fragment or query identifiers are not supported: [%s]", uri);
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.parseQueryData = function(encodedQuery, callback) {
  if (!encodedQuery) {
    return;
  }
  var pairs = encodedQuery.split("\x26");
  for (var i = 0; i < pairs.length; i++) {
    var indexOfEquals = pairs[i].indexOf("\x3d");
    var name = null;
    var value = null;
    if (indexOfEquals >= 0) {
      name = pairs[i].substring(0, indexOfEquals);
      value = pairs[i].substring(indexOfEquals + 1);
    } else {
      name = pairs[i];
    }
    callback(name, value ? goog.string.urlDecode(value) : "");
  }
};
goog.uri.utils.splitQueryData_ = function(uri) {
  var hashIndex = uri.indexOf("#");
  if (hashIndex < 0) {
    hashIndex = uri.length;
  }
  var questionIndex = uri.indexOf("?");
  var queryData;
  if (questionIndex < 0 || questionIndex > hashIndex) {
    questionIndex = hashIndex;
    queryData = "";
  } else {
    queryData = uri.substring(questionIndex + 1, hashIndex);
  }
  return [uri.substr(0, questionIndex), queryData, uri.substr(hashIndex)];
};
goog.uri.utils.joinQueryData_ = function(parts) {
  return parts[0] + (parts[1] ? "?" + parts[1] : "") + parts[2];
};
goog.uri.utils.appendQueryData_ = function(queryData, newData) {
  if (!newData) {
    return queryData;
  }
  return queryData ? queryData + "\x26" + newData : newData;
};
goog.uri.utils.appendQueryDataToUri_ = function(uri, queryData) {
  if (!queryData) {
    return uri;
  }
  var parts = goog.uri.utils.splitQueryData_(uri);
  parts[1] = goog.uri.utils.appendQueryData_(parts[1], queryData);
  return goog.uri.utils.joinQueryData_(parts);
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  goog.asserts.assertString(key);
  if (Array.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0; j < value.length; j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else if (value != null) {
    pairs.push(key + (value === "" ? "" : "\x3d" + goog.string.urlEncode(value)));
  }
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  var params = [];
  for (var i = opt_startIndex || 0; i < keysAndValues.length; i += 2) {
    var key = keysAndValues[i];
    goog.uri.utils.appendKeyValuePairs_(key, keysAndValues[i + 1], params);
  }
  return params.join("\x26");
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var params = [];
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], params);
  }
  return params.join("\x26");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  var queryData = arguments.length == 2 ? goog.uri.utils.buildQueryData(arguments[1], 0) : goog.uri.utils.buildQueryData(arguments, 1);
  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  var queryData = goog.uri.utils.buildQueryDataFromMap(map);
  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var value = opt_value != null ? "\x3d" + goog.string.urlEncode(opt_value) : "";
  return goog.uri.utils.appendQueryDataToUri_(uri, key + value);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return -1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.setParamsFromMap = function(uri, params) {
  var parts = goog.uri.utils.splitQueryData_(uri);
  var queryData = parts[1];
  var buffer = [];
  if (queryData) {
    queryData.split("\x26").forEach(function(pair) {
      var indexOfEquals = pair.indexOf("\x3d");
      var name = indexOfEquals >= 0 ? pair.substr(0, indexOfEquals) : pair;
      if (!params.hasOwnProperty(name)) {
        buffer.push(pair);
      }
    });
  }
  parts[1] = goog.uri.utils.appendQueryData_(buffer.join("\x26"), goog.uri.utils.buildQueryDataFromMap(params));
  return goog.uri.utils.joinQueryData_(parts);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return "" + baseUri + "/" + path;
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.collections.maps");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  this.scheme_ = "";
  this.userInfo_ = "";
  this.domain_ = "";
  this.port_ = null;
  this.path_ = "";
  this.fragment_ = "";
  this.isReadOnly_ = false;
  this.ignoreCase_ = false;
  this.queryData_;
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = opt_ignoreCase !== undefined ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
    this.ignoreCase_ = !!opt_ignoreCase;
    this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
    this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
    this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
    this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
    this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
    this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
    this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
  } else {
    this.ignoreCase_ = !!opt_ignoreCase;
    this.queryData_ = new goog.Uri.QueryData(null, this.ignoreCase_);
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), ":");
  }
  var domain = this.getDomain();
  if (domain || scheme == "file") {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), "@");
    }
    out.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(domain)));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_, true));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getQueryData().clone());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme, true) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return !!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return !!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain, true) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return !!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw new Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath, true) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return !!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!Array.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, values);
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName);
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return !!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return (!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw new Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
    return path;
  } else {
    var leadingSlash = goog.string.startsWith(path, "/");
    var segments = path.split("/");
    var out = [];
    for (var pos = 0; pos < segments.length;) {
      var segment = segments[pos++];
      if (segment == ".") {
        if (leadingSlash && pos == segments.length) {
          out.push("");
        }
      } else if (segment == "..") {
        if (out.length > 1 || out.length == 1 && out[0] != "") {
          out.pop();
        }
        if (leadingSlash && pos == segments.length) {
          out.push("");
        }
      } else {
        out.push(segment);
        leadingSlash = true;
      }
    }
    return out.join("/");
  }
};
goog.Uri.decodeOrEmpty_ = function(val, opt_preserveReserved) {
  if (!val) {
    return "";
  }
  return opt_preserveReserved ? decodeURI(val.replace(/%25/g, "%2525")) : decodeURIComponent(val);
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra, opt_removeDoubleEncoding) {
  if (typeof unescapedPart === "string") {
    var encoded = encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
    if (opt_removeDoubleEncoding) {
      encoded = goog.Uri.removeDoubleEncoding_(encoded);
    }
    return encoded;
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.removeDoubleEncoding_ = function(doubleEncodedString) {
  return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g, "%$1");
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_ignoreCase) {
  this.keyMap_ = null;
  this.count_ = null;
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new Map();
    this.count_ = 0;
    if (this.encodedQuery_) {
      var self = this;
      goog.uri.utils.parseQueryData(this.encodedQuery_, function(name, value) {
        self.add(goog.string.urlDecode(name), value);
      });
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw new Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = values[i];
    if (!Array.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw new Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, opt_ignoreCase);
  for (var i = 0; i < keys.length; i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.has(key)) {
    this.invalidateCache_();
    this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;
    return this.keyMap_.delete(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.has(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.forEach = function(f, opt_scope) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(values, key) {
    values.forEach(function(value) {
      f.call(opt_scope, value, key, this);
    }, this);
  }, this);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  const vals = Array.from(this.keyMap_.values());
  const keys = Array.from(this.keyMap_.keys());
  const rv = [];
  for (let i = 0; i < keys.length; i++) {
    const val = vals[i];
    for (let j = 0; j < val.length; j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  let rv = [];
  if (typeof opt_key === "string") {
    if (this.containsKey(opt_key)) {
      rv = rv.concat(this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    const values = Array.from(this.keyMap_.values());
    for (let i = 0; i < values.length; i++) {
      rv = rv.concat(values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  if (!key) {
    return opt_default;
  }
  var values = this.getValues(key);
  return values.length > 0 ? String(values[0]) : opt_default;
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ = goog.asserts.assertNumber(this.count_) + values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  const sb = [];
  const keys = Array.from(this.keyMap_.keys());
  for (var i = 0; i < keys.length; i++) {
    const key = keys[i];
    const encodedKey = goog.string.urlEncode(key);
    const val = this.getValues(key);
    for (var j = 0; j < val.length; j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData();
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = new Map(this.keyMap_);
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0; i < arguments.length; i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += String(a1);
  if (opt_a2 != null) {
    for (let i = 1; i < arguments.length; i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("cljs.core");
goog.scope(function() {
  cljs.core.goog$module$goog$math$Long = goog.module.get("goog.math.Long");
  cljs.core.goog$module$goog$object = goog.module.get("goog.object");
  cljs.core.goog$module$goog$array = goog.module.get("goog.array");
});
cljs.core._STAR_clojurescript_version_STAR_ = "1.11.4";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_unchecked_arrays_STAR_ = false;
cljs.core._STAR_warn_on_infer_STAR_ = false;
cljs.core.PROTOCOL_SENTINEL = {};
cljs.core.MODULE_URIS = null;
cljs.core.MODULE_INFOS = null;
cljs.core._STAR_target_STAR_ = goog.define("cljs.core._STAR_target_STAR_", "default");
cljs.core._STAR_global_STAR_ = goog.define("cljs.core._STAR_global_STAR_", "default");
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
cljs.core._STAR_print_fn_STAR_ = null;
cljs.core._STAR_exec_tap_fn_STAR_ = function cljs$core$_STAR_exec_tap_fn_STAR_(f) {
  var and__4251__auto__ = typeof setTimeout !== "undefined";
  if (and__4251__auto__) {
    var G__18259 = setTimeout(f, 0);
    return cljs.core.boolean$.cljs$core$IFn$_invoke$arity$1 ? cljs.core.boolean$.cljs$core$IFn$_invoke$arity$1(G__18259) : cljs.core.boolean$.call(null, G__18259);
  } else {
    return and__4251__auto__;
  }
};
cljs.core._STAR_print_err_fn_STAR_ = null;
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_namespace_maps_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core._STAR_print_fn_bodies_STAR_ = false;
cljs.core._STAR_loaded_libs_STAR_ = null;
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [cljs$cst$keyword$flush_DASH_on_DASH_newline, cljs.core._STAR_flush_on_newline_STAR_, cljs$cst$keyword$readably, cljs.core._STAR_print_readably_STAR_, cljs$cst$keyword$meta, cljs.core._STAR_print_meta_STAR_, cljs$cst$keyword$dup, cljs.core._STAR_print_dup_STAR_, cljs$cst$keyword$print_DASH_length, cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core.set_print_fn_BANG_(function() {
    var xs = arguments;
    return console.log.apply(console, cljs.core.goog$module$goog$array.clone(xs));
  });
  cljs.core.set_print_err_fn_BANG_(function() {
    var xs = arguments;
    return console.error.apply(console, cljs.core.goog$module$goog$array.clone(xs));
  });
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return "string" === goog.typeOf(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return typeof x === "string" && 1 === x.length;
};
cljs.core.any_QMARK_ = function cljs$core$any_QMARK_(x) {
  return true;
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core._STAR_command_line_args_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4251__auto__ = ty;
    if (cljs.core.truth_(and__4251__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4251__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__5751__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__5751__auto__)) {
    var s = temp__5751__auto__;
    return s;
  } else {
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function cljs$core$system_time() {
  if (typeof performance !== "undefined" && !(performance.now == null)) {
    return performance.now();
  } else {
    if (typeof process !== "undefined" && !(process.hrtime == null)) {
      var t = process.hrtime();
      return (t[0] * 1.0E9 + t[1]) / 1000000.0;
    } else {
      return (new Date()).getTime();
    }
  }
};
cljs.core.make_array = function cljs$core$make_array(var_args) {
  var G__18264 = arguments.length;
  switch(G__18264) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___19801 = arguments.length;
      var i__4865__auto___19803 = 0;
      while (true) {
        if (i__4865__auto___19803 < len__4864__auto___19801) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___19803]);
          var G__19805 = i__4865__auto___19803 + 1;
          i__4865__auto___19803 = G__19805;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic = function(type, size, more_sizes) {
  var dims = more_sizes;
  var dimarray = new Array(size);
  var n__4741__auto___19806 = dimarray.length;
  var i_19807 = 0;
  while (true) {
    if (i_19807 < n__4741__auto___19806) {
      dimarray[i_19807] = cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.make_array, null, dims) : cljs.core.apply.call(null, cljs.core.make_array, null, dims);
      var G__19808 = i_19807 + 1;
      i_19807 = G__19808;
      continue;
    } else {
    }
    break;
  }
  return dimarray;
};
cljs.core.make_array.cljs$lang$applyTo = function(seq18261) {
  var G__18262 = cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq18261) : cljs.core.first.call(null, seq18261);
  var seq18261__$1 = cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq18261) : cljs.core.next.call(null, seq18261);
  var G__18263 = cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq18261__$1) : cljs.core.first.call(null, seq18261__$1);
  var seq18261__$2 = cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq18261__$1) : cljs.core.next.call(null, seq18261__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18262, G__18263, seq18261__$2);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4741__auto___19809 = len;
  var i_19810 = 0;
  while (true) {
    if (i_19810 < n__4741__auto___19809) {
      new_arr[i_19810] = arr[i_19810];
      var G__19811 = i_19810 + 1;
      i_19810 = G__19811;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__19814 = i + 1;
      i = G__19814;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.maybe_warn = function cljs$core$maybe_warn(e) {
  if (cljs.core.truth_(cljs.core._STAR_print_err_fn_STAR_)) {
    return cljs.core._STAR_print_err_fn_STAR_.call(null, e);
  } else {
    return null;
  }
};
cljs.core.checked_aget = function cljs$core$checked_aget(var_args) {
  var G__18269 = arguments.length;
  switch(G__18269) {
    case 2:
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___19817 = arguments.length;
      var i__4865__auto___19818 = 0;
      while (true) {
        if (i__4865__auto___19818 < len__4864__auto___19817) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___19818]);
          var G__19819 = i__4865__auto___19818 + 1;
          i__4865__auto___19818 = G__19819;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  return array[idx];
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  var G__18270 = cljs.core.checked_aget;
  var G__18271 = cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array, idx);
  var G__18272 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__18270, G__18271, G__18272) : cljs.core.apply.call(null, G__18270, G__18271, G__18272);
};
cljs.core.checked_aget.cljs$lang$applyTo = function(seq18266) {
  var G__18267 = cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq18266) : cljs.core.first.call(null, seq18266);
  var seq18266__$1 = cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq18266) : cljs.core.next.call(null, seq18266);
  var G__18268 = cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq18266__$1) : cljs.core.first.call(null, seq18266__$1);
  var seq18266__$2 = cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq18266__$1) : cljs.core.next.call(null, seq18266__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18267, G__18268, seq18266__$2);
};
cljs.core.checked_aget.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset = function cljs$core$checked_aset(var_args) {
  var G__18278 = arguments.length;
  switch(G__18278) {
    case 3:
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___19823 = arguments.length;
      var i__4865__auto___19824 = 0;
      while (true) {
        if (i__4865__auto___19824 < len__4864__auto___19823) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___19824]);
          var G__19825 = i__4865__auto___19824 + 1;
          i__4865__auto___19824 = G__19825;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(3), 0, null);
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4886__auto__);
  }
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  return array[idx] = val;
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__18279 = cljs.core.checked_aset;
  var G__18280 = cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array, idx);
  var G__18281 = idx2;
  var G__18282 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__18279, G__18280, G__18281, G__18282) : cljs.core.apply.call(null, G__18279, G__18280, G__18281, G__18282);
};
cljs.core.checked_aset.cljs$lang$applyTo = function(seq18274) {
  var G__18275 = cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq18274) : cljs.core.first.call(null, seq18274);
  var seq18274__$1 = cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq18274) : cljs.core.next.call(null, seq18274);
  var G__18276 = cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq18274__$1) : cljs.core.first.call(null, seq18274__$1);
  var seq18274__$2 = cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq18274__$1) : cljs.core.next.call(null, seq18274__$1);
  var G__18277 = cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq18274__$2) : cljs.core.first.call(null, seq18274__$2);
  var seq18274__$3 = cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq18274__$2) : cljs.core.next.call(null, seq18274__$2);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18275, G__18276, G__18277, seq18274__$3);
};
cljs.core.checked_aset.cljs$lang$maxFixedArity = 3;
cljs.core.checked_aget_SINGLEQUOTE_ = function cljs$core$checked_aget_SINGLEQUOTE_(var_args) {
  var G__18287 = arguments.length;
  switch(G__18287) {
    case 2:
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___19836 = arguments.length;
      var i__4865__auto___19837 = 0;
      while (true) {
        if (i__4865__auto___19837 < len__4864__auto___19836) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___19837]);
          var G__19838 = i__4865__auto___19837 + 1;
          i__4865__auto___19837 = G__19838;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  return array[idx];
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  var G__18288 = cljs.core.checked_aget_SINGLEQUOTE_;
  var G__18289 = cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array, idx);
  var G__18290 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__18288, G__18289, G__18290) : cljs.core.apply.call(null, G__18288, G__18289, G__18290);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$applyTo = function(seq18284) {
  var G__18285 = cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq18284) : cljs.core.first.call(null, seq18284);
  var seq18284__$1 = cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq18284) : cljs.core.next.call(null, seq18284);
  var G__18286 = cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq18284__$1) : cljs.core.first.call(null, seq18284__$1);
  var seq18284__$2 = cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq18284__$1) : cljs.core.next.call(null, seq18284__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18285, G__18286, seq18284__$2);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset_SINGLEQUOTE_ = function cljs$core$checked_aset_SINGLEQUOTE_(var_args) {
  var G__18296 = arguments.length;
  switch(G__18296) {
    case 3:
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___19840 = arguments.length;
      var i__4865__auto___19845 = 0;
      while (true) {
        if (i__4865__auto___19845 < len__4864__auto___19840) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___19845]);
          var G__19846 = i__4865__auto___19845 + 1;
          i__4865__auto___19845 = G__19846;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(3), 0, null);
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4886__auto__);
  }
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  return array[idx] = val;
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__18297 = cljs.core.checked_aset_SINGLEQUOTE_;
  var G__18298 = cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array, idx);
  var G__18299 = idx2;
  var G__18300 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__18297, G__18298, G__18299, G__18300) : cljs.core.apply.call(null, G__18297, G__18298, G__18299, G__18300);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$applyTo = function(seq18292) {
  var G__18293 = cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq18292) : cljs.core.first.call(null, seq18292);
  var seq18292__$1 = cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq18292) : cljs.core.next.call(null, seq18292);
  var G__18294 = cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq18292__$1) : cljs.core.first.call(null, seq18292__$1);
  var seq18292__$2 = cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq18292__$1) : cljs.core.next.call(null, seq18292__$1);
  var G__18295 = cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq18292__$2) : cljs.core.first.call(null, seq18292__$2);
  var seq18292__$3 = cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq18292__$2) : cljs.core.next.call(null, seq18292__$2);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18293, G__18294, G__18295, seq18292__$3);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$maxFixedArity = 3;
cljs.core.aget = function cljs$core$aget(var_args) {
  var G__18305 = arguments.length;
  switch(G__18305) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___19853 = arguments.length;
      var i__4865__auto___19854 = 0;
      while (true) {
        if (i__4865__auto___19854 < len__4864__auto___19853) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___19854]);
          var G__19855 = i__4865__auto___19854 + 1;
          i__4865__auto___19854 = G__19855;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  return array[idx];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  var G__18306 = cljs.core.aget;
  var G__18307 = array[idx];
  var G__18308 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__18306, G__18307, G__18308) : cljs.core.apply.call(null, G__18306, G__18307, G__18308);
};
cljs.core.aget.cljs$lang$applyTo = function(seq18302) {
  var G__18303 = cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq18302) : cljs.core.first.call(null, seq18302);
  var seq18302__$1 = cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq18302) : cljs.core.next.call(null, seq18302);
  var G__18304 = cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq18302__$1) : cljs.core.first.call(null, seq18302__$1);
  var seq18302__$2 = cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq18302__$1) : cljs.core.next.call(null, seq18302__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18303, G__18304, seq18302__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset(var_args) {
  var G__18314 = arguments.length;
  switch(G__18314) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___19860 = arguments.length;
      var i__4865__auto___19861 = 0;
      while (true) {
        if (i__4865__auto___19861 < len__4864__auto___19860) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___19861]);
          var G__19862 = i__4865__auto___19861 + 1;
          i__4865__auto___19861 = G__19862;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(3), 0, null);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4886__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  return array[idx] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__18315 = cljs.core.aset;
  var G__18316 = array[idx];
  var G__18317 = idx2;
  var G__18318 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__18315, G__18316, G__18317, G__18318) : cljs.core.apply.call(null, G__18315, G__18316, G__18317, G__18318);
};
cljs.core.aset.cljs$lang$applyTo = function(seq18310) {
  var G__18311 = cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq18310) : cljs.core.first.call(null, seq18310);
  var seq18310__$1 = cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq18310) : cljs.core.next.call(null, seq18310);
  var G__18312 = cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq18310__$1) : cljs.core.first.call(null, seq18310__$1);
  var seq18310__$2 = cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq18310__$1) : cljs.core.next.call(null, seq18310__$1);
  var G__18313 = cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq18310__$2) : cljs.core.first.call(null, seq18310__$2);
  var seq18310__$3 = cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq18310__$2) : cljs.core.next.call(null, seq18310__$2);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18311, G__18312, G__18313, seq18310__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array(var_args) {
  var G__18320 = arguments.length;
  switch(G__18320) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__18321 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__18322 = [];
  var G__18323 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__18321, G__18322, G__18323) : cljs.core.reduce.call(null, G__18321, G__18322, G__18323);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___19875 = arguments.length;
  var i__4865__auto___19876 = 0;
  while (true) {
    if (i__4865__auto___19876 < len__4864__auto___19875) {
      args__4870__auto__.push(arguments[i__4865__auto___19876]);
      var G__19878 = i__4865__auto___19876 + 1;
      i__4865__auto___19876 = G__19878;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 2 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(2), 0, null) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4871__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq18324) {
  var G__18325 = cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq18324) : cljs.core.first.call(null, seq18324);
  var seq18324__$1 = cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq18324) : cljs.core.next.call(null, seq18324);
  var G__18326 = cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq18324__$1) : cljs.core.first.call(null, seq18324__$1);
  var seq18324__$2 = cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq18324__$1) : cljs.core.next.call(null, seq18324__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18325, G__18326, seq18324__$2);
};
cljs.core.js_symbol_QMARK_ = function cljs$core$js_symbol_QMARK_(x) {
  return goog.typeOf(x) === "symbol" || typeof Symbol !== "undefined" && x instanceof Symbol;
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
var cljs$core$IFn$_invoke$dyn_19889 = function() {
  var G__19890 = null;
  var G__19890__1 = function(this$) {
    var x__4550__auto__ = this$ == null ? null : this$;
    var m__4551__auto__ = cljs.core._invoke[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
    } else {
      var m__4549__auto__ = cljs.core._invoke["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__19890__2 = function(this$, a) {
    var x__4550__auto__ = this$ == null ? null : this$;
    var m__4551__auto__ = cljs.core._invoke[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4551__auto__.call(null, this$, a);
    } else {
      var m__4549__auto__ = cljs.core._invoke["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4549__auto__.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__19890__3 = function(this$, a, b) {
    var x__4550__auto__ = this$ == null ? null : this$;
    var m__4551__auto__ = cljs.core._invoke[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4551__auto__.call(null, this$, a, b);
    } else {
      var m__4549__auto__ = cljs.core._invoke["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4549__auto__.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__19890__4 = function(this$, a, b, c) {
    var x__4550__auto__ = this$ == null ? null : this$;
    var m__4551__auto__ = cljs.core._invoke[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4551__auto__.call(null, this$, a, b, c);
    } else {
      var m__4549__auto__ = cljs.core._invoke["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4549__auto__.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__19890__5 = function(this$, a, b, c, d) {
    var x__4550__auto__ = this$ == null ? null : this$;
    var m__4551__auto__ = cljs.core._invoke[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4551__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__4549__auto__ = cljs.core._invoke["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4549__auto__.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__19890__6 = function(this$, a, b, c, d, e) {
    var x__4550__auto__ = this$ == null ? null : this$;
    var m__4551__auto__ = cljs.core._invoke[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4551__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__4549__auto__ = cljs.core._invoke["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4549__auto__.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__19890__7 = function(this$, a, b, c, d, e, f) {
    var x__4550__auto__ = this$ == null ? null : this$;
    var m__4551__auto__ = cljs.core._invoke[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4551__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__4549__auto__ = cljs.core._invoke["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4549__auto__.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__19890__8 = function(this$, a, b, c, d, e, f, g) {
    var x__4550__auto__ = this$ == null ? null : this$;
    var m__4551__auto__ = cljs.core._invoke[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$8 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4551__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__4549__auto__ = cljs.core._invoke["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$8 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4549__auto__.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__19890__9 = function(this$, a, b, c, d, e, f, g, h) {
    var x__4550__auto__ = this$ == null ? null : this$;
    var m__4551__auto__ = cljs.core._invoke[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$9 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4551__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__4549__auto__ = cljs.core._invoke["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$9 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4549__auto__.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__19890__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    var x__4550__auto__ = this$ == null ? null : this$;
    var m__4551__auto__ = cljs.core._invoke[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$10 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4551__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__4549__auto__ = cljs.core._invoke["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$10 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4549__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__19890__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    var x__4550__auto__ = this$ == null ? null : this$;
    var m__4551__auto__ = cljs.core._invoke[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$11 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4551__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__4549__auto__ = cljs.core._invoke["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$11 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4549__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__19890__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    var x__4550__auto__ = this$ == null ? null : this$;
    var m__4551__auto__ = cljs.core._invoke[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$12 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4551__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__4549__auto__ = cljs.core._invoke["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$12 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4549__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__19890__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    var x__4550__auto__ = this$ == null ? null : this$;
    var m__4551__auto__ = cljs.core._invoke[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$13 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4551__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__4549__auto__ = cljs.core._invoke["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$13 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4549__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__19890__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var x__4550__auto__ = this$ == null ? null : this$;
    var m__4551__auto__ = cljs.core._invoke[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$14 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4551__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__4549__auto__ = cljs.core._invoke["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$14 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4549__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__19890__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var x__4550__auto__ = this$ == null ? null : this$;
    var m__4551__auto__ = cljs.core._invoke[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$15 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4551__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__4549__auto__ = cljs.core._invoke["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$15 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4549__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__19890__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var x__4550__auto__ = this$ == null ? null : this$;
    var m__4551__auto__ = cljs.core._invoke[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$16 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4551__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__4549__auto__ = cljs.core._invoke["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$16 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4549__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__19890__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var x__4550__auto__ = this$ == null ? null : this$;
    var m__4551__auto__ = cljs.core._invoke[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$17 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4551__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__4549__auto__ = cljs.core._invoke["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$17 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4549__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__19890__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var x__4550__auto__ = this$ == null ? null : this$;
    var m__4551__auto__ = cljs.core._invoke[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$18 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4551__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__4549__auto__ = cljs.core._invoke["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$18 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4549__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__19890__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var x__4550__auto__ = this$ == null ? null : this$;
    var m__4551__auto__ = cljs.core._invoke[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$19 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4551__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__4549__auto__ = cljs.core._invoke["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$19 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4549__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__19890__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var x__4550__auto__ = this$ == null ? null : this$;
    var m__4551__auto__ = cljs.core._invoke[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$20 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4551__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__4549__auto__ = cljs.core._invoke["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$20 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4549__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__19890__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var x__4550__auto__ = this$ == null ? null : this$;
    var m__4551__auto__ = cljs.core._invoke[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$21 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4551__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__4549__auto__ = cljs.core._invoke["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$21 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4549__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__19890__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var x__4550__auto__ = this$ == null ? null : this$;
    var m__4551__auto__ = cljs.core._invoke[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$22 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4551__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__4549__auto__ = cljs.core._invoke["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$22 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4549__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  G__19890 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__19890__1.call(this, this$);
      case 2:
        return G__19890__2.call(this, this$, a);
      case 3:
        return G__19890__3.call(this, this$, a, b);
      case 4:
        return G__19890__4.call(this, this$, a, b, c);
      case 5:
        return G__19890__5.call(this, this$, a, b, c, d);
      case 6:
        return G__19890__6.call(this, this$, a, b, c, d, e);
      case 7:
        return G__19890__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return G__19890__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return G__19890__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return G__19890__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__19890__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__19890__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__19890__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__19890__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__19890__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__19890__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__19890__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__19890__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__19890__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__19890__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__19890__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__19890__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19890.cljs$core$IFn$_invoke$arity$1 = G__19890__1;
  G__19890.cljs$core$IFn$_invoke$arity$2 = G__19890__2;
  G__19890.cljs$core$IFn$_invoke$arity$3 = G__19890__3;
  G__19890.cljs$core$IFn$_invoke$arity$4 = G__19890__4;
  G__19890.cljs$core$IFn$_invoke$arity$5 = G__19890__5;
  G__19890.cljs$core$IFn$_invoke$arity$6 = G__19890__6;
  G__19890.cljs$core$IFn$_invoke$arity$7 = G__19890__7;
  G__19890.cljs$core$IFn$_invoke$arity$8 = G__19890__8;
  G__19890.cljs$core$IFn$_invoke$arity$9 = G__19890__9;
  G__19890.cljs$core$IFn$_invoke$arity$10 = G__19890__10;
  G__19890.cljs$core$IFn$_invoke$arity$11 = G__19890__11;
  G__19890.cljs$core$IFn$_invoke$arity$12 = G__19890__12;
  G__19890.cljs$core$IFn$_invoke$arity$13 = G__19890__13;
  G__19890.cljs$core$IFn$_invoke$arity$14 = G__19890__14;
  G__19890.cljs$core$IFn$_invoke$arity$15 = G__19890__15;
  G__19890.cljs$core$IFn$_invoke$arity$16 = G__19890__16;
  G__19890.cljs$core$IFn$_invoke$arity$17 = G__19890__17;
  G__19890.cljs$core$IFn$_invoke$arity$18 = G__19890__18;
  G__19890.cljs$core$IFn$_invoke$arity$19 = G__19890__19;
  G__19890.cljs$core$IFn$_invoke$arity$20 = G__19890__20;
  G__19890.cljs$core$IFn$_invoke$arity$21 = G__19890__21;
  G__19890.cljs$core$IFn$_invoke$arity$22 = G__19890__22;
  return G__19890;
}();
cljs.core._invoke = function cljs$core$_invoke(var_args) {
  var G__18328 = arguments.length;
  switch(G__18328) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    return cljs$core$IFn$_invoke$dyn_19889(this$);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    return cljs$core$IFn$_invoke$dyn_19889(this$, a);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    return cljs$core$IFn$_invoke$dyn_19889(this$, a, b);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    return cljs$core$IFn$_invoke$dyn_19889(this$, a, b, c);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    return cljs$core$IFn$_invoke$dyn_19889(this$, a, b, c, d);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    return cljs$core$IFn$_invoke$dyn_19889(this$, a, b, c, d, e);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    return cljs$core$IFn$_invoke$dyn_19889(this$, a, b, c, d, e, f);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    return cljs$core$IFn$_invoke$dyn_19889(this$, a, b, c, d, e, f, g);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    return cljs$core$IFn$_invoke$dyn_19889(this$, a, b, c, d, e, f, g, h);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    return cljs$core$IFn$_invoke$dyn_19889(this$, a, b, c, d, e, f, g, h, i);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    return cljs$core$IFn$_invoke$dyn_19889(this$, a, b, c, d, e, f, g, h, i, j);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    return cljs$core$IFn$_invoke$dyn_19889(this$, a, b, c, d, e, f, g, h, i, j, k);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    return cljs$core$IFn$_invoke$dyn_19889(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    return cljs$core$IFn$_invoke$dyn_19889(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    return cljs$core$IFn$_invoke$dyn_19889(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    return cljs$core$IFn$_invoke$dyn_19889(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    return cljs$core$IFn$_invoke$dyn_19889(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    return cljs$core$IFn$_invoke$dyn_19889(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    return cljs$core$IFn$_invoke$dyn_19889(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    return cljs$core$IFn$_invoke$dyn_19889(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    return cljs$core$IFn$_invoke$dyn_19889(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    return cljs$core$IFn$_invoke$dyn_19889(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
var cljs$core$ICloneable$_clone$dyn_20017 = function(value) {
  var x__4550__auto__ = value == null ? null : value;
  var m__4551__auto__ = cljs.core._clone[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__4551__auto__.call(null, value);
  } else {
    var m__4549__auto__ = cljs.core._clone["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__4549__auto__.call(null, value);
    } else {
      throw cljs.core.missing_protocol("ICloneable.-clone", value);
    }
  }
};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    return cljs$core$ICloneable$_clone$dyn_20017(value);
  }
};
cljs.core.ICounted = function() {
};
var cljs$core$ICounted$_count$dyn_20024 = function(coll) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._count[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null, coll);
  } else {
    var m__4549__auto__ = cljs.core._count["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("ICounted.-count", coll);
    }
  }
};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    return cljs$core$ICounted$_count$dyn_20024(coll);
  }
};
cljs.core.IEmptyableCollection = function() {
};
var cljs$core$IEmptyableCollection$_empty$dyn_20026 = function(coll) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._empty[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null, coll);
  } else {
    var m__4549__auto__ = cljs.core._empty["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
    }
  }
};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    return cljs$core$IEmptyableCollection$_empty$dyn_20026(coll);
  }
};
cljs.core.ICollection = function() {
};
var cljs$core$ICollection$_conj$dyn_20028 = function(coll, o) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._conj[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4551__auto__.call(null, coll, o);
  } else {
    var m__4549__auto__ = cljs.core._conj["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4549__auto__.call(null, coll, o);
    } else {
      throw cljs.core.missing_protocol("ICollection.-conj", coll);
    }
  }
};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    return cljs$core$ICollection$_conj$dyn_20028(coll, o);
  }
};
cljs.core.IIndexed = function() {
};
var cljs$core$IIndexed$_nth$dyn_20030 = function() {
  var G__20031 = null;
  var G__20031__2 = function(coll, n) {
    var x__4550__auto__ = coll == null ? null : coll;
    var m__4551__auto__ = cljs.core._nth[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4551__auto__.call(null, coll, n);
    } else {
      var m__4549__auto__ = cljs.core._nth["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4549__auto__.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  };
  var G__20031__3 = function(coll, n, not_found) {
    var x__4550__auto__ = coll == null ? null : coll;
    var m__4551__auto__ = cljs.core._nth[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4551__auto__.call(null, coll, n, not_found);
    } else {
      var m__4549__auto__ = cljs.core._nth["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4549__auto__.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  };
  G__20031 = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20031__2.call(this, coll, n);
      case 3:
        return G__20031__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20031.cljs$core$IFn$_invoke$arity$2 = G__20031__2;
  G__20031.cljs$core$IFn$_invoke$arity$3 = G__20031__3;
  return G__20031;
}();
cljs.core._nth = function cljs$core$_nth(var_args) {
  var G__18330 = arguments.length;
  switch(G__18330) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    return cljs$core$IIndexed$_nth$dyn_20030(coll, n);
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    return cljs$core$IIndexed$_nth$dyn_20030(coll, n, not_found);
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
var cljs$core$ISeq$_first$dyn_20034 = function(coll) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._first[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null, coll);
  } else {
    var m__4549__auto__ = cljs.core._first["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("ISeq.-first", coll);
    }
  }
};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    return cljs$core$ISeq$_first$dyn_20034(coll);
  }
};
var cljs$core$ISeq$_rest$dyn_20035 = function(coll) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._rest[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null, coll);
  } else {
    var m__4549__auto__ = cljs.core._rest["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("ISeq.-rest", coll);
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    return cljs$core$ISeq$_rest$dyn_20035(coll);
  }
};
cljs.core.INext = function() {
};
var cljs$core$INext$_next$dyn_20036 = function(coll) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._next[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null, coll);
  } else {
    var m__4549__auto__ = cljs.core._next["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("INext.-next", coll);
    }
  }
};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    return cljs$core$INext$_next$dyn_20036(coll);
  }
};
cljs.core.ILookup = function() {
};
var cljs$core$ILookup$_lookup$dyn_20038 = function() {
  var G__20039 = null;
  var G__20039__2 = function(o, k) {
    var x__4550__auto__ = o == null ? null : o;
    var m__4551__auto__ = cljs.core._lookup[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__4551__auto__.call(null, o, k);
    } else {
      var m__4549__auto__ = cljs.core._lookup["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__4549__auto__.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  };
  var G__20039__3 = function(o, k, not_found) {
    var x__4550__auto__ = o == null ? null : o;
    var m__4551__auto__ = cljs.core._lookup[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4551__auto__.call(null, o, k, not_found);
    } else {
      var m__4549__auto__ = cljs.core._lookup["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4549__auto__.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  };
  G__20039 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20039__2.call(this, o, k);
      case 3:
        return G__20039__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20039.cljs$core$IFn$_invoke$arity$2 = G__20039__2;
  G__20039.cljs$core$IFn$_invoke$arity$3 = G__20039__3;
  return G__20039;
}();
cljs.core._lookup = function cljs$core$_lookup(var_args) {
  var G__18332 = arguments.length;
  switch(G__18332) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    return cljs$core$ILookup$_lookup$dyn_20038(o, k);
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    return cljs$core$ILookup$_lookup$dyn_20038(o, k, not_found);
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
var cljs$core$IAssociative$_contains_key_QMARK_$dyn_20042 = function(coll, k) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4551__auto__.call(null, coll, k);
  } else {
    var m__4549__auto__ = cljs.core._contains_key_QMARK_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4549__auto__.call(null, coll, k);
    } else {
      throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
    }
  }
};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    return cljs$core$IAssociative$_contains_key_QMARK_$dyn_20042(coll, k);
  }
};
var cljs$core$IAssociative$_assoc$dyn_20043 = function(coll, k, v) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._assoc[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4551__auto__.call(null, coll, k, v);
  } else {
    var m__4549__auto__ = cljs.core._assoc["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4549__auto__.call(null, coll, k, v);
    } else {
      throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    return cljs$core$IAssociative$_assoc$dyn_20043(coll, k, v);
  }
};
cljs.core.IFind = function() {
};
var cljs$core$IFind$_find$dyn_20045 = function(coll, k) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._find[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4551__auto__.call(null, coll, k);
  } else {
    var m__4549__auto__ = cljs.core._find["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4549__auto__.call(null, coll, k);
    } else {
      throw cljs.core.missing_protocol("IFind.-find", coll);
    }
  }
};
cljs.core._find = function cljs$core$_find(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IFind$_find$arity$2 == null)) {
    return coll.cljs$core$IFind$_find$arity$2(coll, k);
  } else {
    return cljs$core$IFind$_find$dyn_20045(coll, k);
  }
};
cljs.core.IMap = function() {
};
var cljs$core$IMap$_dissoc$dyn_20050 = function(coll, k) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._dissoc[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4551__auto__.call(null, coll, k);
  } else {
    var m__4549__auto__ = cljs.core._dissoc["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4549__auto__.call(null, coll, k);
    } else {
      throw cljs.core.missing_protocol("IMap.-dissoc", coll);
    }
  }
};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    return cljs$core$IMap$_dissoc$dyn_20050(coll, k);
  }
};
cljs.core.IMapEntry = function() {
};
var cljs$core$IMapEntry$_key$dyn_20051 = function(coll) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._key[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null, coll);
  } else {
    var m__4549__auto__ = cljs.core._key["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IMapEntry.-key", coll);
    }
  }
};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    return cljs$core$IMapEntry$_key$dyn_20051(coll);
  }
};
var cljs$core$IMapEntry$_val$dyn_20052 = function(coll) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._val[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null, coll);
  } else {
    var m__4549__auto__ = cljs.core._val["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IMapEntry.-val", coll);
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    return cljs$core$IMapEntry$_val$dyn_20052(coll);
  }
};
cljs.core.ISet = function() {
};
var cljs$core$ISet$_disjoin$dyn_20053 = function(coll, v) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._disjoin[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4551__auto__.call(null, coll, v);
  } else {
    var m__4549__auto__ = cljs.core._disjoin["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4549__auto__.call(null, coll, v);
    } else {
      throw cljs.core.missing_protocol("ISet.-disjoin", coll);
    }
  }
};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    return cljs$core$ISet$_disjoin$dyn_20053(coll, v);
  }
};
cljs.core.IStack = function() {
};
var cljs$core$IStack$_peek$dyn_20059 = function(coll) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._peek[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null, coll);
  } else {
    var m__4549__auto__ = cljs.core._peek["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IStack.-peek", coll);
    }
  }
};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    return cljs$core$IStack$_peek$dyn_20059(coll);
  }
};
var cljs$core$IStack$_pop$dyn_20063 = function(coll) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._pop[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null, coll);
  } else {
    var m__4549__auto__ = cljs.core._pop["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IStack.-pop", coll);
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    return cljs$core$IStack$_pop$dyn_20063(coll);
  }
};
cljs.core.IVector = function() {
};
var cljs$core$IVector$_assoc_n$dyn_20065 = function(coll, n, val) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._assoc_n[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4551__auto__.call(null, coll, n, val);
  } else {
    var m__4549__auto__ = cljs.core._assoc_n["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4549__auto__.call(null, coll, n, val);
    } else {
      throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
    }
  }
};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    return cljs$core$IVector$_assoc_n$dyn_20065(coll, n, val);
  }
};
cljs.core.IDeref = function() {
};
var cljs$core$IDeref$_deref$dyn_20067 = function(o) {
  var x__4550__auto__ = o == null ? null : o;
  var m__4551__auto__ = cljs.core._deref[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4551__auto__.call(null, o);
  } else {
    var m__4549__auto__ = cljs.core._deref["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4549__auto__.call(null, o);
    } else {
      throw cljs.core.missing_protocol("IDeref.-deref", o);
    }
  }
};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    return cljs$core$IDeref$_deref$dyn_20067(o);
  }
};
cljs.core.IDerefWithTimeout = function() {
};
var cljs$core$IDerefWithTimeout$_deref_with_timeout$dyn_20071 = function(o, msec, timeout_val) {
  var x__4550__auto__ = o == null ? null : o;
  var m__4551__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4551__auto__.call(null, o, msec, timeout_val);
  } else {
    var m__4549__auto__ = cljs.core._deref_with_timeout["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4549__auto__.call(null, o, msec, timeout_val);
    } else {
      throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
    }
  }
};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    return cljs$core$IDerefWithTimeout$_deref_with_timeout$dyn_20071(o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
};
var cljs$core$IMeta$_meta$dyn_20073 = function(o) {
  var x__4550__auto__ = o == null ? null : o;
  var m__4551__auto__ = cljs.core._meta[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4551__auto__.call(null, o);
  } else {
    var m__4549__auto__ = cljs.core._meta["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4549__auto__.call(null, o);
    } else {
      throw cljs.core.missing_protocol("IMeta.-meta", o);
    }
  }
};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    return cljs$core$IMeta$_meta$dyn_20073(o);
  }
};
cljs.core.IWithMeta = function() {
};
var cljs$core$IWithMeta$_with_meta$dyn_20074 = function(o, meta) {
  var x__4550__auto__ = o == null ? null : o;
  var m__4551__auto__ = cljs.core._with_meta[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4551__auto__.call(null, o, meta);
  } else {
    var m__4549__auto__ = cljs.core._with_meta["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4549__auto__.call(null, o, meta);
    } else {
      throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
    }
  }
};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    return cljs$core$IWithMeta$_with_meta$dyn_20074(o, meta);
  }
};
cljs.core.IReduce = function() {
};
var cljs$core$IReduce$_reduce$dyn_20080 = function() {
  var G__20081 = null;
  var G__20081__2 = function(coll, f) {
    var x__4550__auto__ = coll == null ? null : coll;
    var m__4551__auto__ = cljs.core._reduce[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4551__auto__.call(null, coll, f);
    } else {
      var m__4549__auto__ = cljs.core._reduce["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4549__auto__.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  };
  var G__20081__3 = function(coll, f, start) {
    var x__4550__auto__ = coll == null ? null : coll;
    var m__4551__auto__ = cljs.core._reduce[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4551__auto__.call(null, coll, f, start);
    } else {
      var m__4549__auto__ = cljs.core._reduce["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4549__auto__.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  };
  G__20081 = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return G__20081__2.call(this, coll, f);
      case 3:
        return G__20081__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20081.cljs$core$IFn$_invoke$arity$2 = G__20081__2;
  G__20081.cljs$core$IFn$_invoke$arity$3 = G__20081__3;
  return G__20081;
}();
cljs.core._reduce = function cljs$core$_reduce(var_args) {
  var G__18334 = arguments.length;
  switch(G__18334) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    return cljs$core$IReduce$_reduce$dyn_20080(coll, f);
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    return cljs$core$IReduce$_reduce$dyn_20080(coll, f, start);
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
var cljs$core$IKVReduce$_kv_reduce$dyn_20123 = function(coll, f, init) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4551__auto__.call(null, coll, f, init);
  } else {
    var m__4549__auto__ = cljs.core._kv_reduce["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4549__auto__.call(null, coll, f, init);
    } else {
      throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
    }
  }
};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    return cljs$core$IKVReduce$_kv_reduce$dyn_20123(coll, f, init);
  }
};
cljs.core.IEquiv = function() {
};
var cljs$core$IEquiv$_equiv$dyn_20135 = function(o, other) {
  var x__4550__auto__ = o == null ? null : o;
  var m__4551__auto__ = cljs.core._equiv[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__4551__auto__.call(null, o, other);
  } else {
    var m__4549__auto__ = cljs.core._equiv["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__4549__auto__.call(null, o, other);
    } else {
      throw cljs.core.missing_protocol("IEquiv.-equiv", o);
    }
  }
};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    return cljs$core$IEquiv$_equiv$dyn_20135(o, other);
  }
};
cljs.core.IHash = function() {
};
var cljs$core$IHash$_hash$dyn_20136 = function(o) {
  var x__4550__auto__ = o == null ? null : o;
  var m__4551__auto__ = cljs.core._hash[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4551__auto__.call(null, o);
  } else {
    var m__4549__auto__ = cljs.core._hash["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4549__auto__.call(null, o);
    } else {
      throw cljs.core.missing_protocol("IHash.-hash", o);
    }
  }
};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    return cljs$core$IHash$_hash$dyn_20136(o);
  }
};
cljs.core.ISeqable = function() {
};
var cljs$core$ISeqable$_seq$dyn_20137 = function(o) {
  var x__4550__auto__ = o == null ? null : o;
  var m__4551__auto__ = cljs.core._seq[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4551__auto__.call(null, o);
  } else {
    var m__4549__auto__ = cljs.core._seq["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4549__auto__.call(null, o);
    } else {
      throw cljs.core.missing_protocol("ISeqable.-seq", o);
    }
  }
};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    return cljs$core$ISeqable$_seq$dyn_20137(o);
  }
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
var cljs$core$IReversible$_rseq$dyn_20138 = function(coll) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._rseq[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null, coll);
  } else {
    var m__4549__auto__ = cljs.core._rseq["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IReversible.-rseq", coll);
    }
  }
};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    return cljs$core$IReversible$_rseq$dyn_20138(coll);
  }
};
cljs.core.ISorted = function() {
};
var cljs$core$ISorted$_sorted_seq$dyn_20145 = function(coll, ascending_QMARK_) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4551__auto__.call(null, coll, ascending_QMARK_);
  } else {
    var m__4549__auto__ = cljs.core._sorted_seq["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4549__auto__.call(null, coll, ascending_QMARK_);
    } else {
      throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
    }
  }
};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    return cljs$core$ISorted$_sorted_seq$dyn_20145(coll, ascending_QMARK_);
  }
};
var cljs$core$ISorted$_sorted_seq_from$dyn_20146 = function(coll, k, ascending_QMARK_) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4551__auto__.call(null, coll, k, ascending_QMARK_);
  } else {
    var m__4549__auto__ = cljs.core._sorted_seq_from["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4549__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    return cljs$core$ISorted$_sorted_seq_from$dyn_20146(coll, k, ascending_QMARK_);
  }
};
var cljs$core$ISorted$_entry_key$dyn_20147 = function(coll, entry) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._entry_key[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4551__auto__.call(null, coll, entry);
  } else {
    var m__4549__auto__ = cljs.core._entry_key["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4549__auto__.call(null, coll, entry);
    } else {
      throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    return cljs$core$ISorted$_entry_key$dyn_20147(coll, entry);
  }
};
var cljs$core$ISorted$_comparator$dyn_20170 = function(coll) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._comparator[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null, coll);
  } else {
    var m__4549__auto__ = cljs.core._comparator["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("ISorted.-comparator", coll);
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    return cljs$core$ISorted$_comparator$dyn_20170(coll);
  }
};
cljs.core.IWriter = function() {
};
var cljs$core$IWriter$_write$dyn_20176 = function(writer, s) {
  var x__4550__auto__ = writer == null ? null : writer;
  var m__4551__auto__ = cljs.core._write[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4551__auto__.call(null, writer, s);
  } else {
    var m__4549__auto__ = cljs.core._write["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4549__auto__.call(null, writer, s);
    } else {
      throw cljs.core.missing_protocol("IWriter.-write", writer);
    }
  }
};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    return cljs$core$IWriter$_write$dyn_20176(writer, s);
  }
};
var cljs$core$IWriter$_flush$dyn_20182 = function(writer) {
  var x__4550__auto__ = writer == null ? null : writer;
  var m__4551__auto__ = cljs.core._flush[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__4551__auto__.call(null, writer);
  } else {
    var m__4549__auto__ = cljs.core._flush["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__4549__auto__.call(null, writer);
    } else {
      throw cljs.core.missing_protocol("IWriter.-flush", writer);
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    return cljs$core$IWriter$_flush$dyn_20182(writer);
  }
};
cljs.core.IPrintWithWriter = function() {
};
var cljs$core$IPrintWithWriter$_pr_writer$dyn_20192 = function(o, writer, opts) {
  var x__4550__auto__ = o == null ? null : o;
  var m__4551__auto__ = cljs.core._pr_writer[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4551__auto__.call(null, o, writer, opts);
  } else {
    var m__4549__auto__ = cljs.core._pr_writer["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4549__auto__.call(null, o, writer, opts);
    } else {
      throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
    }
  }
};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    return cljs$core$IPrintWithWriter$_pr_writer$dyn_20192(o, writer, opts);
  }
};
cljs.core.IPending = function() {
};
var cljs$core$IPending$_realized_QMARK_$dyn_20193 = function(x) {
  var x__4550__auto__ = x == null ? null : x;
  var m__4551__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4551__auto__.call(null, x);
  } else {
    var m__4549__auto__ = cljs.core._realized_QMARK_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4549__auto__.call(null, x);
    } else {
      throw cljs.core.missing_protocol("IPending.-realized?", x);
    }
  }
};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(x) {
  if (!(x == null) && !(x.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return x.cljs$core$IPending$_realized_QMARK_$arity$1(x);
  } else {
    return cljs$core$IPending$_realized_QMARK_$dyn_20193(x);
  }
};
cljs.core.IWatchable = function() {
};
var cljs$core$IWatchable$_notify_watches$dyn_20194 = function(this$, oldval, newval) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = cljs.core._notify_watches[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4551__auto__.call(null, this$, oldval, newval);
  } else {
    var m__4549__auto__ = cljs.core._notify_watches["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4549__auto__.call(null, this$, oldval, newval);
    } else {
      throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
    }
  }
};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    return cljs$core$IWatchable$_notify_watches$dyn_20194(this$, oldval, newval);
  }
};
var cljs$core$IWatchable$_add_watch$dyn_20197 = function(this$, key, f) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = cljs.core._add_watch[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4551__auto__.call(null, this$, key, f);
  } else {
    var m__4549__auto__ = cljs.core._add_watch["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4549__auto__.call(null, this$, key, f);
    } else {
      throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    return cljs$core$IWatchable$_add_watch$dyn_20197(this$, key, f);
  }
};
var cljs$core$IWatchable$_remove_watch$dyn_20202 = function(this$, key) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = cljs.core._remove_watch[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4551__auto__.call(null, this$, key);
  } else {
    var m__4549__auto__ = cljs.core._remove_watch["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4549__auto__.call(null, this$, key);
    } else {
      throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    return cljs$core$IWatchable$_remove_watch$dyn_20202(this$, key);
  }
};
cljs.core.IEditableCollection = function() {
};
var cljs$core$IEditableCollection$_as_transient$dyn_20213 = function(coll) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._as_transient[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null, coll);
  } else {
    var m__4549__auto__ = cljs.core._as_transient["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
    }
  }
};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    return cljs$core$IEditableCollection$_as_transient$dyn_20213(coll);
  }
};
cljs.core.ITransientCollection = function() {
};
var cljs$core$ITransientCollection$_conj_BANG_$dyn_20214 = function(tcoll, val) {
  var x__4550__auto__ = tcoll == null ? null : tcoll;
  var m__4551__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4551__auto__.call(null, tcoll, val);
  } else {
    var m__4549__auto__ = cljs.core._conj_BANG_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4549__auto__.call(null, tcoll, val);
    } else {
      throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
    }
  }
};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    return cljs$core$ITransientCollection$_conj_BANG_$dyn_20214(tcoll, val);
  }
};
var cljs$core$ITransientCollection$_persistent_BANG_$dyn_20217 = function(tcoll) {
  var x__4550__auto__ = tcoll == null ? null : tcoll;
  var m__4551__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4551__auto__.call(null, tcoll);
  } else {
    var m__4549__auto__ = cljs.core._persistent_BANG_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4549__auto__.call(null, tcoll);
    } else {
      throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    return cljs$core$ITransientCollection$_persistent_BANG_$dyn_20217(tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
};
var cljs$core$ITransientAssociative$_assoc_BANG_$dyn_20218 = function(tcoll, key, val) {
  var x__4550__auto__ = tcoll == null ? null : tcoll;
  var m__4551__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4551__auto__.call(null, tcoll, key, val);
  } else {
    var m__4549__auto__ = cljs.core._assoc_BANG_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4549__auto__.call(null, tcoll, key, val);
    } else {
      throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
    }
  }
};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    return cljs$core$ITransientAssociative$_assoc_BANG_$dyn_20218(tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
};
var cljs$core$ITransientMap$_dissoc_BANG_$dyn_20224 = function(tcoll, key) {
  var x__4550__auto__ = tcoll == null ? null : tcoll;
  var m__4551__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4551__auto__.call(null, tcoll, key);
  } else {
    var m__4549__auto__ = cljs.core._dissoc_BANG_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4549__auto__.call(null, tcoll, key);
    } else {
      throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
    }
  }
};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    return cljs$core$ITransientMap$_dissoc_BANG_$dyn_20224(tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
};
var cljs$core$ITransientVector$_assoc_n_BANG_$dyn_20230 = function(tcoll, n, val) {
  var x__4550__auto__ = tcoll == null ? null : tcoll;
  var m__4551__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4551__auto__.call(null, tcoll, n, val);
  } else {
    var m__4549__auto__ = cljs.core._assoc_n_BANG_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4549__auto__.call(null, tcoll, n, val);
    } else {
      throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
    }
  }
};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    return cljs$core$ITransientVector$_assoc_n_BANG_$dyn_20230(tcoll, n, val);
  }
};
var cljs$core$ITransientVector$_pop_BANG_$dyn_20238 = function(tcoll) {
  var x__4550__auto__ = tcoll == null ? null : tcoll;
  var m__4551__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4551__auto__.call(null, tcoll);
  } else {
    var m__4549__auto__ = cljs.core._pop_BANG_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4549__auto__.call(null, tcoll);
    } else {
      throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    return cljs$core$ITransientVector$_pop_BANG_$dyn_20238(tcoll);
  }
};
cljs.core.ITransientSet = function() {
};
var cljs$core$ITransientSet$_disjoin_BANG_$dyn_20250 = function(tcoll, v) {
  var x__4550__auto__ = tcoll == null ? null : tcoll;
  var m__4551__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4551__auto__.call(null, tcoll, v);
  } else {
    var m__4549__auto__ = cljs.core._disjoin_BANG_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4549__auto__.call(null, tcoll, v);
    } else {
      throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
    }
  }
};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    return cljs$core$ITransientSet$_disjoin_BANG_$dyn_20250(tcoll, v);
  }
};
cljs.core.IComparable = function() {
};
var cljs$core$IComparable$_compare$dyn_20256 = function(x, y) {
  var x__4550__auto__ = x == null ? null : x;
  var m__4551__auto__ = cljs.core._compare[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__4551__auto__.call(null, x, y);
  } else {
    var m__4549__auto__ = cljs.core._compare["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__4549__auto__.call(null, x, y);
    } else {
      throw cljs.core.missing_protocol("IComparable.-compare", x);
    }
  }
};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    return cljs$core$IComparable$_compare$dyn_20256(x, y);
  }
};
cljs.core.IChunk = function() {
};
var cljs$core$IChunk$_drop_first$dyn_20261 = function(coll) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._drop_first[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null, coll);
  } else {
    var m__4549__auto__ = cljs.core._drop_first["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
    }
  }
};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    return cljs$core$IChunk$_drop_first$dyn_20261(coll);
  }
};
cljs.core.IChunkedSeq = function() {
};
var cljs$core$IChunkedSeq$_chunked_first$dyn_20262 = function(coll) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._chunked_first[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null, coll);
  } else {
    var m__4549__auto__ = cljs.core._chunked_first["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
    }
  }
};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    return cljs$core$IChunkedSeq$_chunked_first$dyn_20262(coll);
  }
};
var cljs$core$IChunkedSeq$_chunked_rest$dyn_20268 = function(coll) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null, coll);
  } else {
    var m__4549__auto__ = cljs.core._chunked_rest["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    return cljs$core$IChunkedSeq$_chunked_rest$dyn_20268(coll);
  }
};
cljs.core.IChunkedNext = function() {
};
var cljs$core$IChunkedNext$_chunked_next$dyn_20269 = function(coll) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._chunked_next[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null, coll);
  } else {
    var m__4549__auto__ = cljs.core._chunked_next["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
    }
  }
};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    return cljs$core$IChunkedNext$_chunked_next$dyn_20269(coll);
  }
};
cljs.core.INamed = function() {
};
var cljs$core$INamed$_name$dyn_20275 = function(x) {
  var x__4550__auto__ = x == null ? null : x;
  var m__4551__auto__ = cljs.core._name[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4551__auto__.call(null, x);
  } else {
    var m__4549__auto__ = cljs.core._name["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4549__auto__.call(null, x);
    } else {
      throw cljs.core.missing_protocol("INamed.-name", x);
    }
  }
};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    return cljs$core$INamed$_name$dyn_20275(x);
  }
};
var cljs$core$INamed$_namespace$dyn_20276 = function(x) {
  var x__4550__auto__ = x == null ? null : x;
  var m__4551__auto__ = cljs.core._namespace[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4551__auto__.call(null, x);
  } else {
    var m__4549__auto__ = cljs.core._namespace["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4549__auto__.call(null, x);
    } else {
      throw cljs.core.missing_protocol("INamed.-namespace", x);
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    return cljs$core$INamed$_namespace$dyn_20276(x);
  }
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
var cljs$core$IReset$_reset_BANG_$dyn_20287 = function(o, new_value) {
  var x__4550__auto__ = o == null ? null : o;
  var m__4551__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4551__auto__.call(null, o, new_value);
  } else {
    var m__4549__auto__ = cljs.core._reset_BANG_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4549__auto__.call(null, o, new_value);
    } else {
      throw cljs.core.missing_protocol("IReset.-reset!", o);
    }
  }
};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    return cljs$core$IReset$_reset_BANG_$dyn_20287(o, new_value);
  }
};
cljs.core.ISwap = function() {
};
var cljs$core$ISwap$_swap_BANG_$dyn_20318 = function() {
  var G__20319 = null;
  var G__20319__2 = function(o, f) {
    var x__4550__auto__ = o == null ? null : o;
    var m__4551__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__4551__auto__.call(null, o, f);
    } else {
      var m__4549__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__4549__auto__.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  };
  var G__20319__3 = function(o, f, a) {
    var x__4550__auto__ = o == null ? null : o;
    var m__4551__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4551__auto__.call(null, o, f, a);
    } else {
      var m__4549__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4549__auto__.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  };
  var G__20319__4 = function(o, f, a, b) {
    var x__4550__auto__ = o == null ? null : o;
    var m__4551__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4551__auto__.call(null, o, f, a, b);
    } else {
      var m__4549__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4549__auto__.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  };
  var G__20319__5 = function(o, f, a, b, xs) {
    var x__4550__auto__ = o == null ? null : o;
    var m__4551__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4550__auto__)];
    if (!(m__4551__auto__ == null)) {
      return m__4551__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4551__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__4549__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4549__auto__ == null)) {
        return m__4549__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4549__auto__.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  };
  G__20319 = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return G__20319__2.call(this, o, f);
      case 3:
        return G__20319__3.call(this, o, f, a);
      case 4:
        return G__20319__4.call(this, o, f, a, b);
      case 5:
        return G__20319__5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20319.cljs$core$IFn$_invoke$arity$2 = G__20319__2;
  G__20319.cljs$core$IFn$_invoke$arity$3 = G__20319__3;
  G__20319.cljs$core$IFn$_invoke$arity$4 = G__20319__4;
  G__20319.cljs$core$IFn$_invoke$arity$5 = G__20319__5;
  return G__20319;
}();
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_(var_args) {
  var G__18336 = arguments.length;
  switch(G__18336) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    return cljs$core$ISwap$_swap_BANG_$dyn_20318(o, f);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    return cljs$core$ISwap$_swap_BANG_$dyn_20318(o, f, a);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    return cljs$core$ISwap$_swap_BANG_$dyn_20318(o, f, a, b);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    return cljs$core$ISwap$_swap_BANG_$dyn_20318(o, f, a, b, xs);
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
var cljs$core$IVolatile$_vreset_BANG_$dyn_20365 = function(o, new_value) {
  var x__4550__auto__ = o == null ? null : o;
  var m__4551__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4551__auto__.call(null, o, new_value);
  } else {
    var m__4549__auto__ = cljs.core._vreset_BANG_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4549__auto__.call(null, o, new_value);
    } else {
      throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
    }
  }
};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    return cljs$core$IVolatile$_vreset_BANG_$dyn_20365(o, new_value);
  }
};
cljs.core.IIterable = function() {
};
var cljs$core$IIterable$_iterator$dyn_20366 = function(coll) {
  var x__4550__auto__ = coll == null ? null : coll;
  var m__4551__auto__ = cljs.core._iterator[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4551__auto__.call(null, coll);
  } else {
    var m__4549__auto__ = cljs.core._iterator["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4549__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IIterable.-iterator", coll);
    }
  }
};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    return cljs$core$IIterable$_iterator$dyn_20366(coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$sb], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer();
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math !== "undefined" && typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  return h1__$6 ^ h1__$6 >>> 16;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__20371 = i + 2;
        var G__20372 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__20371;
        h1 = G__20372;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__20376 = i + 1;
          var G__20377 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__20376;
          hash = G__20377;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.goog$module$goog$object.set(cljs.core.string_hash_cache, k, h);
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  if (k == null) {
    return 0;
  } else {
    var h = cljs.core.string_hash_cache[k];
    if (typeof h === "number") {
      return h;
    } else {
      return cljs.core.add_to_string_hash_cache(k);
    }
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null) ^ 0;
  } else {
    if (typeof o === "number") {
      if (isFinite(o)) {
        return Math.floor(o) % 2147483647;
      } else {
        var G__18342 = o;
        switch(G__18342) {
          case Infinity:
            return 2146435072;
            break;
          case -Infinity:
            return -1048576;
            break;
          default:
            return 2146959360;
        }
      }
    } else {
      if (o === true) {
        return 1231;
      } else {
        if (o === false) {
          return 1237;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf() ^ 0;
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o) ^ 0;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(c, x) {
  return x instanceof c;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4251__auto__ = cljs.core.not(a.ns);
      if (and__4251__auto__) {
        return b.ns;
      } else {
        return and__4251__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.goog$module$goog$array.defaultCompare(a.ns, b.ns);
          if (0 === nsc) {
            return cljs.core.goog$module$goog$array.defaultCompare(a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return cljs.core.goog$module$goog$array.defaultCompare(a.name, b.name);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function(unused__9633__auto__) {
  var self__ = this;
  var self__ = this;
  var G__18344 = arguments.length - 1;
  switch(G__18344) {
    case 1:
      return self__.cljs$core$IFn$_invoke$arity$1(arguments[1]);
      break;
    case 2:
      return self__.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
cljs.core.Symbol.prototype.apply = function(self__, args18343) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args18343)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4360__auto__ = self__._hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$ns, cljs$cst$symbol$name, cljs$cst$symbol$str, cljs.core.with_meta(cljs$cst$symbol$_hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs$cst$symbol$_meta], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.symbol = function cljs$core$symbol(var_args) {
  var G__18346 = arguments.length;
  switch(G__18346) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  while (true) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      if (typeof name === "string") {
        var idx = name.indexOf("/");
        if (idx < 1) {
          return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
        } else {
          return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
        }
      } else {
        if (cljs.core.var_QMARK_(name)) {
          return name.sym;
        } else {
          if (name instanceof cljs.core.Keyword) {
            var G__20386 = name.fqn;
            name = G__20386;
            continue;
          } else {
            throw new Error("no conversion to symbol");
          }
        }
      }
    }
    break;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns), "/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 6717441;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return ["#'", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.sym)].join("");
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    var G__18348 = this$__$1.sym;
    var G__18349 = other.sym;
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(G__18348, G__18349) : cljs.core._EQ_.call(null, G__18348, G__18349);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash_symbol(self__.sym);
};
cljs.core.Var.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.call = function(unused__9633__auto__) {
  var self__ = this;
  var self__ = this;
  var G__18350 = arguments.length - 1;
  switch(G__18350) {
    case 0:
      return self__.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return self__.cljs$core$IFn$_invoke$arity$1(arguments[1]);
      break;
    case 2:
      return self__.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
      break;
    case 3:
      return self__.cljs$core$IFn$_invoke$arity$3(arguments[1], arguments[2], arguments[3]);
      break;
    case 4:
      return self__.cljs$core$IFn$_invoke$arity$4(arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 5:
      return self__.cljs$core$IFn$_invoke$arity$5(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 6:
      return self__.cljs$core$IFn$_invoke$arity$6(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 7:
      return self__.cljs$core$IFn$_invoke$arity$7(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 8:
      return self__.cljs$core$IFn$_invoke$arity$8(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 9:
      return self__.cljs$core$IFn$_invoke$arity$9(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 10:
      return self__.cljs$core$IFn$_invoke$arity$10(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 11:
      return self__.cljs$core$IFn$_invoke$arity$11(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 12:
      return self__.cljs$core$IFn$_invoke$arity$12(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 13:
      return self__.cljs$core$IFn$_invoke$arity$13(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 14:
      return self__.cljs$core$IFn$_invoke$arity$14(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 15:
      return self__.cljs$core$IFn$_invoke$arity$15(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 16:
      return self__.cljs$core$IFn$_invoke$arity$16(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 17:
      return self__.cljs$core$IFn$_invoke$arity$17(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 18:
      return self__.cljs$core$IFn$_invoke$arity$18(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 19:
      return self__.cljs$core$IFn$_invoke$arity$19(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 20:
      return self__.cljs$core$IFn$_invoke$arity$20(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 21:
      return self__.cljs$core$IFn$_invoke$arity$21(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
cljs.core.Var.prototype.apply = function(self__, args18347) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args18347)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  var fexpr__18351 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__18351.cljs$core$IFn$_invoke$arity$0 ? fexpr__18351.cljs$core$IFn$_invoke$arity$0() : fexpr__18351.call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var fexpr__18352 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__18352.cljs$core$IFn$_invoke$arity$1 ? fexpr__18352.cljs$core$IFn$_invoke$arity$1(a) : fexpr__18352.call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var fexpr__18353 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__18353.cljs$core$IFn$_invoke$arity$2 ? fexpr__18353.cljs$core$IFn$_invoke$arity$2(a, b) : fexpr__18353.call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var fexpr__18354 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__18354.cljs$core$IFn$_invoke$arity$3 ? fexpr__18354.cljs$core$IFn$_invoke$arity$3(a, b, c) : fexpr__18354.call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var fexpr__18355 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__18355.cljs$core$IFn$_invoke$arity$4 ? fexpr__18355.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : fexpr__18355.call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var fexpr__18356 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__18356.cljs$core$IFn$_invoke$arity$5 ? fexpr__18356.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : fexpr__18356.call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var fexpr__18357 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__18357.cljs$core$IFn$_invoke$arity$6 ? fexpr__18357.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : fexpr__18357.call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var fexpr__18358 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__18358.cljs$core$IFn$_invoke$arity$7 ? fexpr__18358.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : fexpr__18358.call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var fexpr__18359 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__18359.cljs$core$IFn$_invoke$arity$8 ? fexpr__18359.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : fexpr__18359.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var fexpr__18360 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__18360.cljs$core$IFn$_invoke$arity$9 ? fexpr__18360.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : fexpr__18360.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var fexpr__18361 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__18361.cljs$core$IFn$_invoke$arity$10 ? fexpr__18361.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : fexpr__18361.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var fexpr__18362 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__18362.cljs$core$IFn$_invoke$arity$11 ? fexpr__18362.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : fexpr__18362.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var fexpr__18363 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__18363.cljs$core$IFn$_invoke$arity$12 ? fexpr__18363.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : fexpr__18363.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var fexpr__18364 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__18364.cljs$core$IFn$_invoke$arity$13 ? fexpr__18364.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : fexpr__18364.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var fexpr__18365 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__18365.cljs$core$IFn$_invoke$arity$14 ? fexpr__18365.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : fexpr__18365.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var fexpr__18366 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__18366.cljs$core$IFn$_invoke$arity$15 ? fexpr__18366.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : fexpr__18366.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var fexpr__18367 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__18367.cljs$core$IFn$_invoke$arity$16 ? fexpr__18367.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : fexpr__18367.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var fexpr__18368 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__18368.cljs$core$IFn$_invoke$arity$17 ? fexpr__18368.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : fexpr__18368.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var fexpr__18369 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__18369.cljs$core$IFn$_invoke$arity$18 ? fexpr__18369.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : fexpr__18369.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var fexpr__18370 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__18370.cljs$core$IFn$_invoke$arity$19 ? fexpr__18370.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : fexpr__18370.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var fexpr__18371 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__18371.cljs$core$IFn$_invoke$arity$20 ? fexpr__18371.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : fexpr__18371.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__18372 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  var G__18373 = a;
  var G__18374 = b;
  var G__18375 = c;
  var G__18376 = d;
  var G__18377 = e;
  var G__18378 = f;
  var G__18379 = g;
  var G__18380 = h;
  var G__18381 = i;
  var G__18382 = j;
  var G__18383 = k;
  var G__18384 = l;
  var G__18385 = m;
  var G__18386 = n;
  var G__18387 = o;
  var G__18388 = p;
  var G__18389 = q;
  var G__18390 = r;
  var G__18391 = s;
  var G__18392 = t;
  var G__18393 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18372, G__18373, G__18374, G__18375, G__18376, G__18377, G__18378, G__18379, G__18380, G__18381, G__18382, G__18383, G__18384, G__18385, G__18386, G__18387, G__18388, G__18389, G__18390, G__18391, G__18392, G__18393) : cljs.core.apply.call(null, G__18372, G__18373, G__18374, G__18375, G__18376, G__18377, G__18378, G__18379, G__18380, G__18381, G__18382, G__18383, G__18384, G__18385, G__18386, 
  G__18387, G__18388, G__18389, G__18390, G__18391, G__18392, G__18393);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$val, cljs$cst$symbol$sym, cljs$cst$symbol$_meta], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 131072 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.js_iterable_QMARK_ = function cljs$core$js_iterable_QMARK_(x) {
  return !(x == null) && !(x[cljs.core.ITER_SYMBOL] == null);
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || cljs.core.PROTOCOL_SENTINEL === value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0, null);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0, null);
          }
        } else {
          if (cljs.core.js_iterable_QMARK_(coll)) {
            var G__18397 = cljs.core.goog$module$goog$object.get(coll, cljs.core.ITER_SYMBOL).call(coll);
            return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__18397) : cljs.core.es6_iterator_seq.call(null, G__18397);
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
              return cljs.core._seq(coll);
            } else {
              throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll), " is not ISeqable"].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return s.cljs$core$ISeq$_rest$arity$1(null);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_(var_args) {
  var G__18405 = arguments.length;
  switch(G__18405) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20407 = arguments.length;
      var i__4865__auto___20408 = 0;
      while (true) {
        if (i__4865__auto___20408 < len__4864__auto___20407) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20408]);
          var G__20409 = i__4865__auto___20408 + 1;
          i__4865__auto___20408 = G__20409;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__20413 = y;
        var G__20414 = cljs.core.first(more);
        var G__20415 = cljs.core.next(more);
        x = G__20413;
        y = G__20414;
        more = G__20415;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq18402) {
  var G__18403 = cljs.core.first(seq18402);
  var seq18402__$1 = cljs.core.next(seq18402);
  var G__18404 = cljs.core.first(seq18402__$1);
  var seq18402__$2 = cljs.core.next(seq18402__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18403, G__18404, seq18402__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$s, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(self__.iter) : cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$value, cljs$cst$symbol$iter, cljs.core.with_meta(cljs$cst$symbol$_rest, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return null;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__20425 = n + 1;
      var G__20426 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__20427 = cljs.core.next(coll__$1);
      n = G__20425;
      hash_code = G__20426;
      coll__$1 = G__20427;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__20428 = n + 1;
      var G__20429 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__20430 = cljs.core.next(coll__$1);
      n = G__20428;
      hash_code = G__20429;
      coll__$1 = G__20430;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    return cljs.core.goog$module$goog$array.defaultCompare(this$__$1.valueOf(), other.valueOf());
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(other)].join(""));
  }
};
cljs.core.Inst = function() {
};
var cljs$core$Inst$inst_ms_STAR_$dyn_20431 = function(inst) {
  var x__4550__auto__ = inst == null ? null : inst;
  var m__4551__auto__ = cljs.core.inst_ms_STAR_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__4551__auto__.call(null, inst);
  } else {
    var m__4549__auto__ = cljs.core.inst_ms_STAR_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__4549__auto__.call(null, inst);
    } else {
      throw cljs.core.missing_protocol("Inst.inst-ms*", inst);
    }
  }
};
cljs.core.inst_ms_STAR_ = function cljs$core$inst_ms_STAR_(inst) {
  if (!(inst == null) && !(inst.cljs$core$Inst$inst_ms_STAR_$arity$1 == null)) {
    return inst.cljs$core$Inst$inst_ms_STAR_$arity$1(inst);
  } else {
    return cljs$core$Inst$inst_ms_STAR_$dyn_20431(inst);
  }
};
Date.prototype.cljs$core$Inst$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$Inst$inst_ms_STAR_$arity$1 = function(inst) {
  var inst__$1 = this;
  return inst__$1.getTime();
};
cljs.core.inst_ms = function cljs$core$inst_ms(inst) {
  return cljs.core.inst_ms_STAR_(inst);
};
cljs.core.inst_QMARK_ = function cljs$core$inst_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$Inst$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
  }
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$val], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce(var_args) {
  var G__18408 = arguments.length;
  switch(G__18408) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cicoll.cljs$core$ICounted$_count$arity$1(null);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cicoll.cljs$core$IIndexed$_nth$arity$2(null, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__18409 = val;
          var G__18410 = cicoll.cljs$core$IIndexed$_nth$arity$2(null, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18409, G__18410) : f.call(null, G__18409, G__18410);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__20435 = nval;
          var G__20436 = n + 1;
          val = G__20435;
          n = G__20436;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cicoll.cljs$core$ICounted$_count$arity$1(null);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__18411 = val__$1;
        var G__18412 = cicoll.cljs$core$IIndexed$_nth$arity$2(null, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18411, G__18412) : f.call(null, G__18411, G__18412);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__20438 = nval;
        var G__20439 = n + 1;
        val__$1 = G__20438;
        n = G__20439;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.array_reduce = function cljs$core$array_reduce(var_args) {
  var G__18414 = arguments.length;
  switch(G__18414) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__18415 = val;
          var G__18416 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18415, G__18416) : f.call(null, G__18415, G__18416);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__20442 = nval;
          var G__20443 = n + 1;
          val = G__20442;
          n = G__20443;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__18417 = val__$1;
        var G__18418 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18417, G__18418) : f.call(null, G__18417, G__18418);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__20444 = nval;
        var G__20445 = n + 1;
        val__$1 = G__20444;
        n = G__20445;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__18419 = val__$1;
        var G__18420 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18419, G__18420) : f.call(null, G__18419, G__18420);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__20447 = nval;
        var G__20448 = n + 1;
        val__$1 = G__20447;
        n = G__20448;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core._indexOf = function cljs$core$_indexOf(var_args) {
  var G__18424 = arguments.length;
  switch(G__18424) {
    case 2:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll);
  if (start >= len) {
    return -1;
  } else {
    var idx = start > 0 ? start : start < 0 ? function() {
      var x__4336__auto__ = 0;
      var y__4337__auto__ = start + len;
      return x__4336__auto__ > y__4337__auto__ ? x__4336__auto__ : y__4337__auto__;
    }() : start;
    while (true) {
      if (idx < len) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx) : cljs.core.nth.call(null, coll, idx), x)) {
          return idx;
        } else {
          var G__20451 = idx + 1;
          idx = G__20451;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._indexOf.cljs$lang$maxFixedArity = 3;
cljs.core._lastIndexOf = function cljs$core$_lastIndexOf(var_args) {
  var G__18426 = arguments.length;
  switch(G__18426) {
    case 2:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll);
  if (len === 0) {
    return -1;
  } else {
    var idx = start > 0 ? function() {
      var x__4339__auto__ = len - 1;
      var y__4340__auto__ = start;
      return x__4339__auto__ < y__4340__auto__ ? x__4339__auto__ : y__4340__auto__;
    }() : start < 0 ? len + start : start;
    while (true) {
      if (idx >= 0) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx) : cljs.core.nth.call(null, coll, idx), x)) {
          return idx;
        } else {
          var G__20460 = idx - 1;
          idx = G__20460;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._lastIndexOf.cljs$lang$maxFixedArity = 3;
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$arr, cljs.core.with_meta(cljs$cst$symbol$i, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i, meta) {
  this.arr = arr;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 166592766;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.indexOf = function() {
  var G__20463 = null;
  var G__20463__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__20463__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__20463 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__20463__1.call(this, x);
      case 2:
        return G__20463__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20463.cljs$core$IFn$_invoke$arity$1 = G__20463__1;
  G__20463.cljs$core$IFn$_invoke$arity$2 = G__20463__2;
  return G__20463;
}();
cljs.core.IndexedSeq.prototype.lastIndexOf = function() {
  var G__20464 = null;
  var G__20464__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
  };
  var G__20464__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__20464 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__20464__1.call(this, x);
      case 2:
        return G__20464__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20464.cljs$core$IFn$_invoke$arity$1 = G__20464__1;
  G__20464.cljs$core$IFn$_invoke$arity$2 = G__20464__2;
  return G__20464;
}();
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (0 <= i__$1 && i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    throw new Error("Index out of bounds");
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (0 <= i__$1 && i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, self__.meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__4336__auto__ = 0;
  var y__4337__auto__ = self__.arr.length - self__.i;
  return x__4336__auto__ > y__4337__auto__ ? x__4336__auto__ : y__4337__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = coll__$1.cljs$core$ICounted$_count$arity$1(null);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.IndexedSeq(self__.arr, self__.i, new_meta);
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$arr, cljs$cst$symbol$i, cljs$cst$symbol$meta], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i, meta) {
  return new cljs.core.IndexedSeq(arr, i, meta);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq(var_args) {
  var G__18428 = arguments.length;
  switch(G__18428) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i, null);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq(var_args) {
  var G__18430 = arguments.length;
  switch(G__18430) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.indexOf = function() {
  var G__20471 = null;
  var G__20471__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__20471__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__20471 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__20471__1.call(this, x);
      case 2:
        return G__20471__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20471.cljs$core$IFn$_invoke$arity$1 = G__20471__1;
  G__20471.cljs$core$IFn$_invoke$arity$2 = G__20471__2;
  return G__20471;
}();
cljs.core.RSeq.prototype.lastIndexOf = function() {
  var G__20472 = null;
  var G__20472__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
  };
  var G__20472__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__20472 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__20472__1.call(this, x);
      case 2:
        return G__20472__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20472.cljs$core$IFn$_invoke$arity$1 = G__20472__1;
  G__20472.cljs$core$IFn$_invoke$arity$2 = G__20472__2;
  return G__20472;
}();
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1) : cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1) : cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
  }
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$ci, cljs$cst$symbol$i, cljs$cst$symbol$meta], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__20474 = sn;
      s = G__20474;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj(var_args) {
  var G__18435 = arguments.length;
  switch(G__18435) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20479 = arguments.length;
      var i__4865__auto___20480 = 0;
      while (true) {
        if (i__4865__auto___20480 < len__4864__auto___20479) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20480]);
          var G__20482 = i__4865__auto___20480 + 1;
          i__4865__auto___20480 = G__20482;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return new cljs.core.List(null, x, null, 1, null);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__20483 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__20484 = cljs.core.first(xs);
      var G__20485 = cljs.core.next(xs);
      coll = G__20483;
      x = G__20484;
      xs = G__20485;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq18432) {
  var G__18433 = cljs.core.first(seq18432);
  var seq18432__$1 = cljs.core.next(seq18432);
  var G__18434 = cljs.core.first(seq18432__$1);
  var seq18432__$2 = cljs.core.next(seq18432__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18433, G__18434, seq18432__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 4 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IEmptyableCollection$ ? true : false : false) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 4 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IEmptyableCollection$ ? true : !coll.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEmptyableCollection, coll) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEmptyableCollection, coll)) {
        return cljs.core._empty(coll);
      } else {
        return null;
      }
    }
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__20492 = cljs.core.next(s);
      var G__20493 = acc + 1;
      s = G__20492;
      acc = G__20493;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth(var_args) {
  var G__18441 = arguments.length;
  switch(G__18441) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__20500 = cljs.core.next(coll);
            var G__20501 = n - 1;
            coll = G__20500;
            n = G__20501;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__20503 = cljs.core.next(coll);
            var G__20504 = n - 1;
            var G__20505 = not_found;
            coll = G__20503;
            n = G__20504;
            not_found = G__20505;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth(var_args) {
  var G__18443 = arguments.length;
  switch(G__18443) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("Index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (-1 < n && n < coll.length) {
            return coll[n | 0];
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (typeof coll === "string") {
            if (-1 < n && n < coll.length) {
              return coll.charAt(n | 0);
            } else {
              throw new Error("Index out of bounds");
            }
          } else {
            if (function() {
              var or__4253__auto__ = !(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false;
              if (or__4253__auto__) {
                return or__4253__auto__;
              } else {
                if (!(coll == null)) {
                  if (coll.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISequential$) {
                    return true;
                  } else {
                    return false;
                  }
                } else {
                  return false;
                }
              }
            }()) {
              if (n < 0) {
                throw new Error("Index out of bounds");
              } else {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth(coll, n);
              } else {
                throw new Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("Index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (-1 < n && n < coll.length) {
            return coll[n | 0];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (-1 < n && n < coll.length) {
              return coll.charAt(n | 0);
            } else {
              return not_found;
            }
          } else {
            if (function() {
              var or__4253__auto__ = !(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false;
              if (or__4253__auto__) {
                return or__4253__auto__;
              } else {
                if (!(coll == null)) {
                  if (coll.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISequential$) {
                    return true;
                  } else {
                    return false;
                  }
                } else {
                  return false;
                }
              }
            }()) {
              if (n < 0) {
                return not_found;
              } else {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth(coll, n, not_found);
              } else {
                throw new Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    var temp__5751__auto__ = n__$1 > 0 && cljs.core.seq(xs);
    if (temp__5751__auto__) {
      var xs__$1 = temp__5751__auto__;
      var G__20516 = n__$1 - 1;
      var G__20517 = cljs.core.rest(xs__$1);
      n__$1 = G__20516;
      xs = G__20517;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get(var_args) {
  var G__18451 = arguments.length;
  switch(G__18451) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (!(k == null) && k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (!(k == null) && (-1 < k && k < o.length)) {
            return o.charAt(k | 0);
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (!(k == null) && (-1 < k && k < o.length)) {
          return o[k | 0];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (!(k == null) && (-1 < k && k < o.length)) {
            return o.charAt(k | 0);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc(var_args) {
  var G__18459 = arguments.length;
  switch(G__18459) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20533 = arguments.length;
      var i__4865__auto___20534 = 0;
      while (true) {
        if (i__4865__auto___20534 < len__4864__auto___20533) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20534]);
          var G__20536 = i__4865__auto___20534 + 1;
          i__4865__auto___20534 = G__20536;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(3), 0, null);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4886__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 512 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IAssociative$ ? true : false : false) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(null, k, v);
  } else {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentArrayMap.createAsIfByAssoc([k, v]);
    }
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__20539 = ret;
      var G__20540 = cljs.core.first(kvs);
      var G__20541 = cljs.core.second(kvs);
      var G__20542 = cljs.core.nnext(kvs);
      coll = G__20539;
      k = G__20540;
      v = G__20541;
      kvs = G__20542;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq18455) {
  var G__18456 = cljs.core.first(seq18455);
  var seq18455__$1 = cljs.core.next(seq18455);
  var G__18457 = cljs.core.first(seq18455__$1);
  var seq18455__$2 = cljs.core.next(seq18455__$1);
  var G__18458 = cljs.core.first(seq18455__$2);
  var seq18455__$3 = cljs.core.next(seq18455__$2);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18456, G__18457, G__18458, seq18455__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc(var_args) {
  var G__18465 = arguments.length;
  switch(G__18465) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20548 = arguments.length;
      var i__4865__auto___20549 = 0;
      while (true) {
        if (i__4865__auto___20549 < len__4864__auto___20548) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20549]);
          var G__20552 = i__4865__auto___20549 + 1;
          i__4865__auto___20549 = G__20552;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__20554 = ret;
        var G__20555 = cljs.core.first(ks);
        var G__20556 = cljs.core.next(ks);
        coll = G__20554;
        k = G__20555;
        ks = G__20556;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq18462) {
  var G__18463 = cljs.core.first(seq18462);
  var seq18462__$1 = cljs.core.next(seq18462);
  var G__18464 = cljs.core.first(seq18462__$1);
  var seq18462__$2 = cljs.core.next(seq18462__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18463, G__18464, seq18462__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4253__auto__ = typeof f === "function";
  if (or__4253__auto__) {
    return or__4253__auto__;
  } else {
    if (!(f == null)) {
      if (false || cljs.core.PROTOCOL_SENTINEL === f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MetaFn.prototype.call = function(unused__9633__auto__) {
  var self__ = this;
  var self__ = this;
  var G__18468 = arguments.length - 1;
  switch(G__18468) {
    case 0:
      return self__.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return self__.cljs$core$IFn$_invoke$arity$1(arguments[1]);
      break;
    case 2:
      return self__.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
      break;
    case 3:
      return self__.cljs$core$IFn$_invoke$arity$3(arguments[1], arguments[2], arguments[3]);
      break;
    case 4:
      return self__.cljs$core$IFn$_invoke$arity$4(arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 5:
      return self__.cljs$core$IFn$_invoke$arity$5(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 6:
      return self__.cljs$core$IFn$_invoke$arity$6(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 7:
      return self__.cljs$core$IFn$_invoke$arity$7(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 8:
      return self__.cljs$core$IFn$_invoke$arity$8(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 9:
      return self__.cljs$core$IFn$_invoke$arity$9(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 10:
      return self__.cljs$core$IFn$_invoke$arity$10(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 11:
      return self__.cljs$core$IFn$_invoke$arity$11(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 12:
      return self__.cljs$core$IFn$_invoke$arity$12(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 13:
      return self__.cljs$core$IFn$_invoke$arity$13(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 14:
      return self__.cljs$core$IFn$_invoke$arity$14(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 15:
      return self__.cljs$core$IFn$_invoke$arity$15(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 16:
      return self__.cljs$core$IFn$_invoke$arity$16(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 17:
      return self__.cljs$core$IFn$_invoke$arity$17(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 18:
      return self__.cljs$core$IFn$_invoke$arity$18(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 19:
      return self__.cljs$core$IFn$_invoke$arity$19(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 20:
      return self__.cljs$core$IFn$_invoke$arity$20(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 21:
      return self__.cljs$core$IFn$_invoke$arity$21(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
cljs.core.MetaFn.prototype.apply = function(self__, args18467) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args18467)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$afn, cljs$cst$symbol$meta], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (typeof o === "function") {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__4251__auto__ = !(o == null);
    if (and__4251__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__4251__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj(var_args) {
  var G__18474 = arguments.length;
  switch(G__18474) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20572 = arguments.length;
      var i__4865__auto___20573 = 0;
      while (true) {
        if (i__4865__auto___20573 < len__4864__auto___20572) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20573]);
          var G__20574 = i__4865__auto___20573 + 1;
          i__4865__auto___20573 = G__20574;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__20575 = ret;
        var G__20576 = cljs.core.first(ks);
        var G__20577 = cljs.core.next(ks);
        coll = G__20575;
        k = G__20576;
        ks = G__20577;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq18471) {
  var G__18472 = cljs.core.first(seq18471);
  var seq18471__$1 = cljs.core.next(seq18471);
  var G__18473 = cljs.core.first(seq18471__$1);
  var seq18471__$2 = cljs.core.next(seq18471__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18472, G__18473, seq18471__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.ifind_QMARK_ = function cljs$core$ifind_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IFind$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IFind, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IFind, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj(var_args) {
  var G__18488 = arguments.length;
  switch(G__18488) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20595 = arguments.length;
      var i__4865__auto___20596 = 0;
      while (true) {
        if (i__4865__auto___20596 < len__4864__auto___20595) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20596]);
          var G__20597 = i__4865__auto___20596 + 1;
          i__4865__auto___20596 = G__20597;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(0), 0, null);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__4886__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.goog$module$goog$object.create, keyvals) : cljs.core.apply.call(null, cljs.core.goog$module$goog$object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq18487) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq18487));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  return cljs.core.goog$module$goog$object.getKeys(obj);
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__20601 = i__$1 + 1;
      var G__20602 = j__$1 + 1;
      var G__20603 = len__$1 - 1;
      i__$1 = G__20601;
      j__$1 = G__20602;
      len__$1 = G__20603;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__20604 = i__$1 - 1;
      var G__20605 = j__$1 - 1;
      var G__20606 = len__$1 - 1;
      i__$1 = G__20604;
      j__$1 = G__20605;
      len__$1 = G__20606;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.boolean_QMARK_ = function cljs$core$boolean_QMARK_(x) {
  return x === true || x === false;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  var or__4253__auto__ = s == null;
  if (or__4253__auto__) {
    return or__4253__auto__;
  } else {
    var or__4253__auto____$1 = !(s == null) ? s.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$ISeqable$ ? true : !s.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
    if (or__4253__auto____$1) {
      return or__4253__auto____$1;
    } else {
      return cljs.core.array_QMARK_(s) || typeof s === "string";
    }
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4253__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4253__auto__) {
    return or__4253__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || cljs.core.PROTOCOL_SENTINEL === f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && (!isNaN(n) && (!(n === Infinity) && parseFloat(n) === parseInt(n, 10)));
};
cljs.core.LongImpl = cljs.core.goog$module$goog$math$Long;
cljs.core.int_QMARK_ = function cljs$core$int_QMARK_(x) {
  return cljs.core.integer_QMARK_(x) || (x instanceof goog.math.Integer || x instanceof cljs.core.goog$module$goog$math$Long);
};
cljs.core.pos_int_QMARK_ = function cljs$core$pos_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x > 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
    } else {
      if (x instanceof cljs.core.goog$module$goog$math$Long) {
        return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
      } else {
        return false;
      }
    }
  }
};
cljs.core.neg_int_QMARK_ = function cljs$core$neg_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x < 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return x.isNegative();
    } else {
      if (x instanceof cljs.core.goog$module$goog$math$Long) {
        return x.isNegative();
      } else {
        return false;
      }
    }
  }
};
cljs.core.nat_int_QMARK_ = function cljs$core$nat_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return !(x < 0);
  } else {
    if (x instanceof goog.math.Integer) {
      return cljs.core.not(x.isNegative());
    } else {
      if (x instanceof cljs.core.goog$module$goog$math$Long) {
        return cljs.core.not(x.isNegative());
      } else {
        return false;
      }
    }
  }
};
cljs.core.float_QMARK_ = function cljs$core$float_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.double_QMARK_ = function cljs$core$double_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.infinite_QMARK_ = function cljs$core$infinite_QMARK_(x) {
  return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 512 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IAssociative$ ? true : false : false) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(null, v);
  } else {
    if (cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, coll)) {
      return cljs.core._contains_key_QMARK_(coll, v);
    } else {
      if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
        return false;
      } else {
        return true;
      }
    }
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (cljs.core.ifind_QMARK_(coll)) {
    return cljs.core._find(coll, k);
  } else {
    if (!(coll == null) && (cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k))) {
      return new cljs.core.MapEntry(k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k), null);
    } else {
      return null;
    }
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_(var_args) {
  var G__18501 = arguments.length;
  switch(G__18501) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20625 = arguments.length;
      var i__4865__auto___20626 = 0;
      while (true) {
        if (i__4865__auto___20626 < len__4864__auto___20625) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20626]);
          var G__20627 = i__4865__auto___20626 + 1;
          i__4865__auto___20626 = G__20627;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.createAsIfByAssoc([x, y]);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__20634 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__20635 = etc;
          s = G__20634;
          xs = G__20635;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq18498) {
  var G__18499 = cljs.core.first(seq18498);
  var seq18498__$1 = cljs.core.next(seq18498);
  var G__18500 = cljs.core.first(seq18498__$1);
  var seq18498__$2 = cljs.core.next(seq18498__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18499, G__18500, seq18498__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return cljs.core.goog$module$goog$array.defaultCompare(x, y);
          } else {
            throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || (cljs.core.array_QMARK_(x) || (x === true || x === false))) && cljs.core.type(x) === cljs.core.type(y)) {
              return cljs.core.goog$module$goog$array.defaultCompare(x, y);
            } else {
              throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed(var_args) {
  var G__18504 = arguments.length;
  switch(G__18504) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__20637 = xs;
      var G__20638 = ys;
      var G__20639 = len;
      var G__20640 = n + 1;
      xs = G__20637;
      ys = G__20638;
      len = G__20639;
      n = G__20640;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort(var_args) {
  var G__18506 = arguments.length;
  switch(G__18506) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
    cljs.core.goog$module$goog$array.stableSort(a, cljs.core.fn__GT_comparator(comp));
    return cljs.core.with_meta(cljs.core.seq(a), cljs.core.meta(coll));
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by(var_args) {
  var G__18508 = arguments.length;
  switch(G__18508) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    var G__18510 = keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x);
    var G__18511 = keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y);
    var fexpr__18509 = cljs.core.fn__GT_comparator(comp);
    return fexpr__18509.cljs$core$IFn$_invoke$arity$2 ? fexpr__18509.cljs$core$IFn$_invoke$arity$2(G__18510, G__18511) : fexpr__18509.call(null, G__18510, G__18511);
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce(var_args) {
  var G__18513 = arguments.length;
  switch(G__18513) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__5751__auto__ = cljs.core.seq(coll);
  if (temp__5751__auto__) {
    var s = temp__5751__auto__;
    var G__18514 = f;
    var G__18515 = cljs.core.first(s);
    var G__18516 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__18514, G__18515, G__18516) : cljs.core.reduce.call(null, G__18514, G__18515, G__18516);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__18517 = val__$1;
        var G__18518 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18517, G__18518) : f.call(null, G__18517, G__18518);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__20644 = nval;
        var G__20645 = cljs.core.next(coll__$1);
        val__$1 = G__20644;
        coll__$1 = G__20645;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
  cljs.core.goog$module$goog$array.shuffle(a);
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null, a);
};
cljs.core.iter_reduce = function cljs$core$iter_reduce(var_args) {
  var G__18520 = arguments.length;
  switch(G__18520) {
    case 2:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  var iter = cljs.core._iterator(coll);
  if (cljs.core.truth_(iter.hasNext())) {
    var init = iter.next();
    var acc = init;
    while (true) {
      if (iter.hasNext()) {
        var nacc = function() {
          var G__18521 = acc;
          var G__18522 = iter.next();
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18521, G__18522) : f.call(null, G__18521, G__18522);
        }();
        if (cljs.core.reduced_QMARK_(nacc)) {
          return cljs.core.deref(nacc);
        } else {
          var G__20647 = nacc;
          acc = G__20647;
          continue;
        }
      } else {
        return acc;
      }
      break;
    }
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, init) {
  var iter = cljs.core._iterator(coll);
  var acc = init;
  while (true) {
    if (iter.hasNext()) {
      var nacc = function() {
        var G__18523 = acc;
        var G__18524 = iter.next();
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18523, G__18524) : f.call(null, G__18523, G__18524);
      }();
      if (cljs.core.reduced_QMARK_(nacc)) {
        return cljs.core.deref(nacc);
      } else {
        var G__20649 = nacc;
        acc = G__20649;
        continue;
      }
    } else {
      return acc;
    }
    break;
  }
};
cljs.core.iter_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce = function cljs$core$reduce(var_args) {
  var G__18526 = arguments.length;
  switch(G__18526) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce(coll, f);
        } else {
          if (cljs.core.iterable_QMARK_(coll)) {
            return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce(coll, f, val);
        } else {
          if (cljs.core.iterable_QMARK_(coll)) {
            return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing(var_args) {
  var G__18530 = arguments.length;
  switch(G__18530) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__20652 = null;
    var G__20652__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__20652__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__20652__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__20652 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__20652__0.call(this);
        case 1:
          return G__20652__1.call(this, x);
        case 2:
          return G__20652__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__20652.cljs$core$IFn$_invoke$arity$0 = G__20652__0;
    G__20652.cljs$core$IFn$_invoke$arity$1 = G__20652__1;
    G__20652.cljs$core$IFn$_invoke$arity$2 = G__20652__2;
    return G__20652;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce(var_args) {
  var G__18532 = arguments.length;
  switch(G__18532) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_(var_args) {
  var G__18537 = arguments.length;
  switch(G__18537) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20657 = arguments.length;
      var i__4865__auto___20658 = 0;
      while (true) {
        if (i__4865__auto___20658 < len__4864__auto___20657) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20658]);
          var G__20659 = i__4865__auto___20658 + 1;
          i__4865__auto___20658 = G__20659;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq18534) {
  var G__18535 = cljs.core.first(seq18534);
  var seq18534__$1 = cljs.core.next(seq18534);
  var G__18536 = cljs.core.first(seq18534__$1);
  var seq18534__$2 = cljs.core.next(seq18534__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18535, G__18536, seq18534__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_(var_args) {
  var G__18542 = arguments.length;
  switch(G__18542) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20661 = arguments.length;
      var i__4865__auto___20662 = 0;
      while (true) {
        if (i__4865__auto___20662 < len__4864__auto___20661) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20662]);
          var G__20663 = i__4865__auto___20662 + 1;
          i__4865__auto___20662 = G__20663;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq18539) {
  var G__18540 = cljs.core.first(seq18539);
  var seq18539__$1 = cljs.core.next(seq18539);
  var G__18541 = cljs.core.first(seq18539__$1);
  var seq18539__$2 = cljs.core.next(seq18539__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18540, G__18541, seq18539__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_(var_args) {
  var G__18547 = arguments.length;
  switch(G__18547) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20671 = arguments.length;
      var i__4865__auto___20672 = 0;
      while (true) {
        if (i__4865__auto___20672 < len__4864__auto___20671) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20672]);
          var G__20673 = i__4865__auto___20672 + 1;
          i__4865__auto___20672 = G__20673;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq18544) {
  var G__18545 = cljs.core.first(seq18544);
  var seq18544__$1 = cljs.core.next(seq18544);
  var G__18546 = cljs.core.first(seq18544__$1);
  var seq18544__$2 = cljs.core.next(seq18544__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18545, G__18546, seq18544__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_(var_args) {
  var G__18552 = arguments.length;
  switch(G__18552) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20675 = arguments.length;
      var i__4865__auto___20676 = 0;
      while (true) {
        if (i__4865__auto___20676 < len__4864__auto___20675) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20676]);
          var G__20677 = i__4865__auto___20676 + 1;
          i__4865__auto___20676 = G__20677;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq18549) {
  var G__18550 = cljs.core.first(seq18549);
  var seq18549__$1 = cljs.core.next(seq18549);
  var G__18551 = cljs.core.first(seq18549__$1);
  var seq18549__$2 = cljs.core.next(seq18549__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18550, G__18551, seq18549__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_(var_args) {
  var G__18557 = arguments.length;
  switch(G__18557) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20680 = arguments.length;
      var i__4865__auto___20681 = 0;
      while (true) {
        if (i__4865__auto___20681 < len__4864__auto___20680) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20681]);
          var G__20682 = i__4865__auto___20681 + 1;
          i__4865__auto___20681 = G__20682;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__20683 = y;
        var G__20684 = cljs.core.first(more);
        var G__20685 = cljs.core.next(more);
        x = G__20683;
        y = G__20684;
        more = G__20685;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq18554) {
  var G__18555 = cljs.core.first(seq18554);
  var seq18554__$1 = cljs.core.next(seq18554);
  var G__18556 = cljs.core.first(seq18554__$1);
  var seq18554__$2 = cljs.core.next(seq18554__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18555, G__18556, seq18554__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_(var_args) {
  var G__18562 = arguments.length;
  switch(G__18562) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20687 = arguments.length;
      var i__4865__auto___20688 = 0;
      while (true) {
        if (i__4865__auto___20688 < len__4864__auto___20687) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20688]);
          var G__20689 = i__4865__auto___20688 + 1;
          i__4865__auto___20688 = G__20689;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__20690 = y;
        var G__20691 = cljs.core.first(more);
        var G__20692 = cljs.core.next(more);
        x = G__20690;
        y = G__20691;
        more = G__20692;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq18559) {
  var G__18560 = cljs.core.first(seq18559);
  var seq18559__$1 = cljs.core.next(seq18559);
  var G__18561 = cljs.core.first(seq18559__$1);
  var seq18559__$2 = cljs.core.next(seq18559__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18560, G__18561, seq18559__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_(var_args) {
  var G__18567 = arguments.length;
  switch(G__18567) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20694 = arguments.length;
      var i__4865__auto___20695 = 0;
      while (true) {
        if (i__4865__auto___20695 < len__4864__auto___20694) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20695]);
          var G__20696 = i__4865__auto___20695 + 1;
          i__4865__auto___20695 = G__20696;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__20697 = y;
        var G__20698 = cljs.core.first(more);
        var G__20699 = cljs.core.next(more);
        x = G__20697;
        y = G__20698;
        more = G__20699;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq18564) {
  var G__18565 = cljs.core.first(seq18564);
  var seq18564__$1 = cljs.core.next(seq18564);
  var G__18566 = cljs.core.first(seq18564__$1);
  var seq18564__$2 = cljs.core.next(seq18564__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18565, G__18566, seq18564__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_(var_args) {
  var G__18572 = arguments.length;
  switch(G__18572) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20704 = arguments.length;
      var i__4865__auto___20705 = 0;
      while (true) {
        if (i__4865__auto___20705 < len__4864__auto___20704) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20705]);
          var G__20706 = i__4865__auto___20705 + 1;
          i__4865__auto___20705 = G__20706;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__20707 = y;
        var G__20708 = cljs.core.first(more);
        var G__20709 = cljs.core.next(more);
        x = G__20707;
        y = G__20708;
        more = G__20709;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq18569) {
  var G__18570 = cljs.core.first(seq18569);
  var seq18569__$1 = cljs.core.next(seq18569);
  var G__18571 = cljs.core.first(seq18569__$1);
  var seq18569__$2 = cljs.core.next(seq18569__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18570, G__18571, seq18569__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max(var_args) {
  var G__18577 = arguments.length;
  switch(G__18577) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20712 = arguments.length;
      var i__4865__auto___20713 = 0;
      while (true) {
        if (i__4865__auto___20713 < len__4864__auto___20712) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20713]);
          var G__20714 = i__4865__auto___20713 + 1;
          i__4865__auto___20713 = G__20714;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4336__auto__ = x;
  var y__4337__auto__ = y;
  return x__4336__auto__ > y__4337__auto__ ? x__4336__auto__ : y__4337__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__4336__auto__ = x;
    var y__4337__auto__ = y;
    return x__4336__auto__ > y__4337__auto__ ? x__4336__auto__ : y__4337__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq18574) {
  var G__18575 = cljs.core.first(seq18574);
  var seq18574__$1 = cljs.core.next(seq18574);
  var G__18576 = cljs.core.first(seq18574__$1);
  var seq18574__$2 = cljs.core.next(seq18574__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18575, G__18576, seq18574__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min(var_args) {
  var G__18582 = arguments.length;
  switch(G__18582) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20718 = arguments.length;
      var i__4865__auto___20719 = 0;
      while (true) {
        if (i__4865__auto___20719 < len__4864__auto___20718) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20719]);
          var G__20720 = i__4865__auto___20719 + 1;
          i__4865__auto___20719 = G__20720;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4339__auto__ = x;
  var y__4340__auto__ = y;
  return x__4339__auto__ < y__4340__auto__ ? x__4339__auto__ : y__4340__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__4339__auto__ = x;
    var y__4340__auto__ = y;
    return x__4339__auto__ < y__4340__auto__ ? x__4339__auto__ : y__4340__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq18579) {
  var G__18580 = cljs.core.first(seq18579);
  var seq18579__$1 = cljs.core.next(seq18579);
  var G__18581 = cljs.core.first(seq18579__$1);
  var seq18579__$2 = cljs.core.next(seq18579__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18580, G__18581, seq18579__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add(var_args) {
  var G__18587 = arguments.length;
  switch(G__18587) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20725 = arguments.length;
      var i__4865__auto___20726 = 0;
      while (true) {
        if (i__4865__auto___20726 < len__4864__auto___20725) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20726]);
          var G__20727 = i__4865__auto___20726 + 1;
          i__4865__auto___20726 = G__20727;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq18584) {
  var G__18585 = cljs.core.first(seq18584);
  var seq18584__$1 = cljs.core.next(seq18584);
  var G__18586 = cljs.core.first(seq18584__$1);
  var seq18584__$2 = cljs.core.next(seq18584__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18585, G__18586, seq18584__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int(var_args) {
  var G__18592 = arguments.length;
  switch(G__18592) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20729 = arguments.length;
      var i__4865__auto___20730 = 0;
      while (true) {
        if (i__4865__auto___20730 < len__4864__auto___20729) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20730]);
          var G__20731 = i__4865__auto___20730 + 1;
          i__4865__auto___20730 = G__20731;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq18589) {
  var G__18590 = cljs.core.first(seq18589);
  var seq18589__$1 = cljs.core.next(seq18589);
  var G__18591 = cljs.core.first(seq18589__$1);
  var seq18589__$2 = cljs.core.next(seq18589__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18590, G__18591, seq18589__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int(var_args) {
  var G__18597 = arguments.length;
  switch(G__18597) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20733 = arguments.length;
      var i__4865__auto___20734 = 0;
      while (true) {
        if (i__4865__auto___20734 < len__4864__auto___20733) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20734]);
          var G__20735 = i__4865__auto___20734 + 1;
          i__4865__auto___20734 = G__20735;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq18594) {
  var G__18595 = cljs.core.first(seq18594);
  var seq18594__$1 = cljs.core.next(seq18594);
  var G__18596 = cljs.core.first(seq18594__$1);
  var seq18594__$2 = cljs.core.next(seq18594__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18595, G__18596, seq18594__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply(var_args) {
  var G__18602 = arguments.length;
  switch(G__18602) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20740 = arguments.length;
      var i__4865__auto___20741 = 0;
      while (true) {
        if (i__4865__auto___20741 < len__4864__auto___20740) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20741]);
          var G__20742 = i__4865__auto___20741 + 1;
          i__4865__auto___20741 = G__20742;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq18599) {
  var G__18600 = cljs.core.first(seq18599);
  var seq18599__$1 = cljs.core.next(seq18599);
  var G__18601 = cljs.core.first(seq18599__$1);
  var seq18599__$2 = cljs.core.next(seq18599__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18600, G__18601, seq18599__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int(var_args) {
  var G__18607 = arguments.length;
  switch(G__18607) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20747 = arguments.length;
      var i__4865__auto___20749 = 0;
      while (true) {
        if (i__4865__auto___20749 < len__4864__auto___20747) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20749]);
          var G__20750 = i__4865__auto___20749 + 1;
          i__4865__auto___20749 = G__20750;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq18604) {
  var G__18605 = cljs.core.first(seq18604);
  var seq18604__$1 = cljs.core.next(seq18604);
  var G__18606 = cljs.core.first(seq18604__$1);
  var seq18604__$2 = cljs.core.next(seq18604__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18605, G__18606, seq18604__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x, n) : cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract(var_args) {
  var G__18612 = arguments.length;
  switch(G__18612) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20752 = arguments.length;
      var i__4865__auto___20753 = 0;
      while (true) {
        if (i__4865__auto___20753 < len__4864__auto___20752) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20753]);
          var G__20754 = i__4865__auto___20753 + 1;
          i__4865__auto___20753 = G__20754;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq18609) {
  var G__18610 = cljs.core.first(seq18609);
  var seq18609__$1 = cljs.core.next(seq18609);
  var G__18611 = cljs.core.first(seq18609__$1);
  var seq18609__$2 = cljs.core.next(seq18609__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18610, G__18611, seq18609__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int(var_args) {
  var G__18617 = arguments.length;
  switch(G__18617) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20759 = arguments.length;
      var i__4865__auto___20760 = 0;
      while (true) {
        if (i__4865__auto___20760 < len__4864__auto___20759) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20760]);
          var G__20761 = i__4865__auto___20760 + 1;
          i__4865__auto___20760 = G__20761;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq18614) {
  var G__18615 = cljs.core.first(seq18614);
  var seq18614__$1 = cljs.core.next(seq18614);
  var G__18616 = cljs.core.first(seq18614__$1);
  var seq18614__$2 = cljs.core.next(seq18614__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18615, G__18616, seq18614__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor(var_args) {
  var G__18622 = arguments.length;
  switch(G__18622) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20774 = arguments.length;
      var i__4865__auto___20775 = 0;
      while (true) {
        if (i__4865__auto___20775 < len__4864__auto___20774) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20775]);
          var G__20776 = i__4865__auto___20775 + 1;
          i__4865__auto___20775 = G__20776;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq18619) {
  var G__18620 = cljs.core.first(seq18619);
  var seq18619__$1 = cljs.core.next(seq18619);
  var G__18621 = cljs.core.first(seq18619__$1);
  var seq18619__$2 = cljs.core.next(seq18619__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18620, G__18621, seq18619__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and(var_args) {
  var G__18627 = arguments.length;
  switch(G__18627) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20784 = arguments.length;
      var i__4865__auto___20786 = 0;
      while (true) {
        if (i__4865__auto___20786 < len__4864__auto___20784) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20786]);
          var G__20787 = i__4865__auto___20786 + 1;
          i__4865__auto___20786 = G__20787;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq18624) {
  var G__18625 = cljs.core.first(seq18624);
  var seq18624__$1 = cljs.core.next(seq18624);
  var G__18626 = cljs.core.first(seq18624__$1);
  var seq18624__$2 = cljs.core.next(seq18624__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18625, G__18626, seq18624__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or(var_args) {
  var G__18632 = arguments.length;
  switch(G__18632) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20792 = arguments.length;
      var i__4865__auto___20793 = 0;
      while (true) {
        if (i__4865__auto___20793 < len__4864__auto___20792) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20793]);
          var G__20795 = i__4865__auto___20793 + 1;
          i__4865__auto___20793 = G__20795;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq18629) {
  var G__18630 = cljs.core.first(seq18629);
  var seq18629__$1 = cljs.core.next(seq18629);
  var G__18631 = cljs.core.first(seq18629__$1);
  var seq18629__$2 = cljs.core.next(seq18629__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18630, G__18631, seq18629__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not(var_args) {
  var G__18637 = arguments.length;
  switch(G__18637) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20799 = arguments.length;
      var i__4865__auto___20800 = 0;
      while (true) {
        if (i__4865__auto___20800 < len__4864__auto___20799) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20800]);
          var G__20802 = i__4865__auto___20800 + 1;
          i__4865__auto___20800 = G__20802;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq18634) {
  var G__18635 = cljs.core.first(seq18634);
  var seq18634__$1 = cljs.core.next(seq18634);
  var G__18636 = cljs.core.first(seq18634__$1);
  var seq18634__$2 = cljs.core.next(seq18634__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18635, G__18636, seq18634__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_(var_args) {
  var G__18642 = arguments.length;
  switch(G__18642) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20825 = arguments.length;
      var i__4865__auto___20826 = 0;
      while (true) {
        if (i__4865__auto___20826 < len__4864__auto___20825) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20826]);
          var G__20827 = i__4865__auto___20826 + 1;
          i__4865__auto___20826 = G__20827;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__20828 = y;
        var G__20829 = cljs.core.first(more);
        var G__20830 = cljs.core.next(more);
        x = G__20828;
        y = G__20829;
        more = G__20830;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq18639) {
  var G__18640 = cljs.core.first(seq18639);
  var seq18639__$1 = cljs.core.next(seq18639);
  var G__18641 = cljs.core.first(seq18639__$1);
  var seq18639__$2 = cljs.core.next(seq18639__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18640, G__18641, seq18639__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(x) {
  return x > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(x) {
  return x === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__20846 = n__$1 - 1;
      var G__20847 = cljs.core.next(xs);
      n__$1 = G__20846;
      xs = G__20847;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str(var_args) {
  var G__18646 = arguments.length;
  switch(G__18646) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20849 = arguments.length;
      var i__4865__auto___20850 = 0;
      while (true) {
        if (i__4865__auto___20850 < len__4864__auto___20849) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20850]);
          var G__20854 = i__4865__auto___20850 + 1;
          i__4865__auto___20850 = G__20854;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(1), 0, null);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4886__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer(cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__20859 = sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
      var G__20860 = cljs.core.next(more);
      sb = G__20859;
      more = G__20860;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq18644) {
  var G__18645 = cljs.core.first(seq18644);
  var seq18644__$1 = cljs.core.next(seq18644);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18645, seq18644__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs(var_args) {
  var G__18648 = arguments.length;
  switch(G__18648) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && (cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y))) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__20869 = cljs.core.next(xs);
            var G__20870 = cljs.core.next(ys);
            xs = G__20869;
            ys = G__20870;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__20872 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__20873 = cljs.core.next(s);
        res = G__20872;
        s = G__20873;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__20874 = (h + (cljs.core.hash(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e)) ^ cljs.core.hash(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__20875 = cljs.core.next(s);
      h = G__20874;
      s = G__20875;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__20876 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__20877 = cljs.core.next(s__$1);
      h = G__20876;
      s__$1 = G__20877;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__18649_20879 = cljs.core.seq(fn_map);
  var chunk__18650_20880 = null;
  var count__18651_20881 = 0;
  var i__18652_20882 = 0;
  while (true) {
    if (i__18652_20882 < count__18651_20881) {
      var vec__18659_20883 = chunk__18650_20880.cljs$core$IIndexed$_nth$arity$2(null, i__18652_20882);
      var key_name_20884 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18659_20883, 0, null);
      var f_20885 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18659_20883, 1, null);
      var str_name_20887 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_20884) : cljs.core.name.call(null, key_name_20884);
      cljs.core.goog$module$goog$object.set(obj, str_name_20887, f_20885);
      var G__20888 = seq__18649_20879;
      var G__20889 = chunk__18650_20880;
      var G__20890 = count__18651_20881;
      var G__20891 = i__18652_20882 + 1;
      seq__18649_20879 = G__20888;
      chunk__18650_20880 = G__20889;
      count__18651_20881 = G__20890;
      i__18652_20882 = G__20891;
      continue;
    } else {
      var temp__5753__auto___20893 = cljs.core.seq(seq__18649_20879);
      if (temp__5753__auto___20893) {
        var seq__18649_20894__$1 = temp__5753__auto___20893;
        if (cljs.core.chunked_seq_QMARK_(seq__18649_20894__$1)) {
          var c__4679__auto___20895 = cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__18649_20894__$1) : cljs.core.chunk_first.call(null, seq__18649_20894__$1);
          var G__20896 = cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__18649_20894__$1) : cljs.core.chunk_rest.call(null, seq__18649_20894__$1);
          var G__20898 = c__4679__auto___20895;
          var G__20899 = cljs.core.count(c__4679__auto___20895);
          var G__20900 = 0;
          seq__18649_20879 = G__20896;
          chunk__18650_20880 = G__20898;
          count__18651_20881 = G__20899;
          i__18652_20882 = G__20900;
          continue;
        } else {
          var vec__18662_20903 = cljs.core.first(seq__18649_20894__$1);
          var key_name_20904 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18662_20903, 0, null);
          var f_20905 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18662_20903, 1, null);
          var str_name_20906 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_20904) : cljs.core.name.call(null, key_name_20904);
          cljs.core.goog$module$goog$object.set(obj, str_name_20906, f_20905);
          var G__20907 = cljs.core.next(seq__18649_20894__$1);
          var G__20908 = null;
          var G__20909 = 0;
          var G__20910 = 0;
          seq__18649_20879 = G__20907;
          chunk__18650_20880 = G__20908;
          count__18651_20881 = G__20909;
          i__18652_20882 = G__20910;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.indexOf = function() {
  var G__20911 = null;
  var G__20911__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__20911__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__20911 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__20911__1.call(this, x);
      case 2:
        return G__20911__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20911.cljs$core$IFn$_invoke$arity$1 = G__20911__1;
  G__20911.cljs$core$IFn$_invoke$arity$2 = G__20911__2;
  return G__20911;
}();
cljs.core.List.prototype.lastIndexOf = function() {
  var G__20913 = null;
  var G__20913__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__20913__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__20913 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__20913__1.call(this, x);
      case 2:
        return G__20913__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20913.cljs$core$IFn$_invoke$arity$1 = G__20913__1;
  G__20913.cljs$core$IFn$_invoke$arity$2 = G__20913__2;
  return G__20913;
}();
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.List(new_meta, self__.first, self__.rest, self__.count, self__.__hash);
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta, cljs$cst$symbol$first, cljs$cst$symbol$rest, cljs$cst$symbol$count, cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.indexOf = function() {
  var G__20932 = null;
  var G__20932__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__20932__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__20932 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__20932__1.call(this, x);
      case 2:
        return G__20932__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20932.cljs$core$IFn$_invoke$arity$1 = G__20932__1;
  G__20932.cljs$core$IFn$_invoke$arity$2 = G__20932__2;
  return G__20932;
}();
cljs.core.EmptyList.prototype.lastIndexOf = function() {
  var G__20935 = null;
  var G__20935__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__20935__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__20935 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__20935__1.call(this, x);
      case 2:
        return G__20935__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20935.cljs$core$IFn$_invoke$arity$1 = G__20935__1;
  G__20935.cljs$core$IFn$_invoke$arity$2 = G__20935__2;
  return G__20935;
}();
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.EmptyList(new_meta);
  }
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(rev) {
  return cljs.core._rseq(rev);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    var or__4253__auto__ = cljs.core.rseq(coll);
    if (or__4253__auto__) {
      return or__4253__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___20946 = arguments.length;
  var i__4865__auto___20947 = 0;
  while (true) {
    if (i__4865__auto___20947 < len__4864__auto___20946) {
      args__4870__auto__.push(arguments[i__4865__auto___20947]);
      var G__20949 = i__4865__auto___20947 + 1;
      i__4865__auto___20947 = G__20949;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(cljs.core._first(xs__$1));
        var G__20956 = cljs.core._next(xs__$1);
        xs__$1 = G__20956;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__20960 = i - 1;
      var G__20961 = cljs.core._conj(r, arr[i - 1]);
      i = G__20960;
      r = G__20961;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq18667) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq18667));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.indexOf = function() {
  var G__20967 = null;
  var G__20967__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__20967__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__20967 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__20967__1.call(this, x);
      case 2:
        return G__20967__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20967.cljs$core$IFn$_invoke$arity$1 = G__20967__1;
  G__20967.cljs$core$IFn$_invoke$arity$2 = G__20967__2;
  return G__20967;
}();
cljs.core.Cons.prototype.lastIndexOf = function() {
  var G__20968 = null;
  var G__20968__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__20968__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__20968 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__20968__1.call(this, x);
      case 2:
        return G__20968__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20968.cljs$core$IFn$_invoke$arity$1 = G__20968__1;
  G__20968.cljs$core$IFn$_invoke$arity$2 = G__20968__2;
  return G__20968;
}();
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Cons(new_meta, self__.first, self__.rest, self__.__hash);
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, null);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta, cljs$cst$symbol$first, cljs$cst$symbol$rest, cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (coll == null) {
    return new cljs.core.List(null, x, null, 1, null);
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return new cljs.core.Cons(null, x, coll, null);
    } else {
      return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
    }
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4251__auto__ = cljs.core.not(a.ns);
      if (and__4251__auto__) {
        return b.ns;
      } else {
        return and__4251__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.goog$module$goog$array.defaultCompare(a.ns, b.ns);
          if (0 === nsc) {
            return cljs.core.goog$module$goog$array.defaultCompare(a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return cljs.core.goog$module$goog$array.defaultCompare(a.name, b.name);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function(unused__9633__auto__) {
  var self__ = this;
  var self__ = this;
  var G__18670 = arguments.length - 1;
  switch(G__18670) {
    case 1:
      return self__.cljs$core$IFn$_invoke$arity$1(arguments[1]);
      break;
    case 2:
      return self__.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
cljs.core.Keyword.prototype.apply = function(self__, args18669) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args18669)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4360__auto__ = self__._hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$ns, cljs$cst$symbol$name, cljs$cst$symbol$fqn, cljs.core.with_meta(cljs$cst$symbol$_hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error(["Doesn't support namespace: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(""));
  }
};
cljs.core.ident_QMARK_ = function cljs$core$ident_QMARK_(x) {
  return x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol;
};
cljs.core.simple_ident_QMARK_ = function cljs$core$simple_ident_QMARK_(x) {
  return cljs.core.ident_QMARK_(x) && cljs.core.namespace(x) == null;
};
cljs.core.qualified_ident_QMARK_ = function cljs$core$qualified_ident_QMARK_(x) {
  return cljs.core.boolean$(function() {
    var and__4251__auto__ = cljs.core.ident_QMARK_(x);
    if (and__4251__auto__) {
      var and__4251__auto____$1 = cljs.core.namespace(x);
      if (cljs.core.truth_(and__4251__auto____$1)) {
        return true;
      } else {
        return and__4251__auto____$1;
      }
    } else {
      return and__4251__auto__;
    }
  }());
};
cljs.core.simple_symbol_QMARK_ = function cljs$core$simple_symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol && cljs.core.namespace(x) == null;
};
cljs.core.qualified_symbol_QMARK_ = function cljs$core$qualified_symbol_QMARK_(x) {
  return cljs.core.boolean$(function() {
    var and__4251__auto__ = x instanceof cljs.core.Symbol;
    if (and__4251__auto__) {
      var and__4251__auto____$1 = cljs.core.namespace(x);
      if (cljs.core.truth_(and__4251__auto____$1)) {
        return true;
      } else {
        return and__4251__auto____$1;
      }
    } else {
      return and__4251__auto__;
    }
  }());
};
cljs.core.simple_keyword_QMARK_ = function cljs$core$simple_keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword && cljs.core.namespace(x) == null;
};
cljs.core.qualified_keyword_QMARK_ = function cljs$core$qualified_keyword_QMARK_(x) {
  return cljs.core.boolean$(function() {
    var and__4251__auto__ = x instanceof cljs.core.Keyword;
    if (and__4251__auto__) {
      var and__4251__auto____$1 = cljs.core.namespace(x);
      if (cljs.core.truth_(and__4251__auto____$1)) {
        return true;
      } else {
        return and__4251__auto____$1;
      }
    } else {
      return and__4251__auto__;
    }
  }());
};
cljs.core.keyword = function cljs$core$keyword(var_args) {
  var G__18673 = arguments.length;
  switch(G__18673) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name), name.str, null);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("/", name)) {
        return new cljs.core.Keyword(null, name, name, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var ns__$1 = ns instanceof cljs.core.Keyword ? cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(ns) : cljs.core.name.call(null, ns) : ns instanceof cljs.core.Symbol ? cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(ns) : cljs.core.name.call(null, ns) : ns;
  var name__$1 = name instanceof cljs.core.Keyword ? cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name) : name instanceof cljs.core.Symbol ? cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name) : name;
  return new cljs.core.Keyword(ns__$1, name__$1, [cljs.core.truth_(ns__$1) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1), "/"].join("") : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$1)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.indexOf = function() {
  var G__21085 = null;
  var G__21085__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__21085__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21085 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21085__1.call(this, x);
      case 2:
        return G__21085__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21085.cljs$core$IFn$_invoke$arity$1 = G__21085__1;
  G__21085.cljs$core$IFn$_invoke$arity$2 = G__21085__2;
  return G__21085;
}();
cljs.core.LazySeq.prototype.lastIndexOf = function() {
  var G__21088 = null;
  var G__21088__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__21088__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21088 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21088__1.call(this, x);
      case 2:
        return G__21088__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21088.cljs$core$IFn$_invoke$arity$1 = G__21088__1;
  G__21088.cljs$core$IFn$_invoke$arity$2 = G__21088__2;
  return G__21088;
}();
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.not(self__.fn);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__21089 = ls.sval();
        ls = G__21089;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.LazySeq(new_meta, function() {
      return coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
    }, null, self__.__hash);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta, cljs.core.with_meta(cljs$cst$symbol$fn, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$s, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$buf, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$end, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$arr, cljs$cst$symbol$off, cljs$cst$symbol$end], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk(var_args) {
  var G__18675 = arguments.length;
  switch(G__18675) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.indexOf = function() {
  var G__21124 = null;
  var G__21124__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__21124__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21124 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21124__1.call(this, x);
      case 2:
        return G__21124__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21124.cljs$core$IFn$_invoke$arity$1 = G__21124__1;
  G__21124.cljs$core$IFn$_invoke$arity$2 = G__21124__2;
  return G__21124;
}();
cljs.core.ChunkedCons.prototype.lastIndexOf = function() {
  var G__21125 = null;
  var G__21125__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__21125__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21125 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21125__1.call(this, x);
      case 2:
        return G__21125__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21125.cljs$core$IFn$_invoke$arity$1 = G__21125__1;
  G__21125.cljs$core$IFn$_invoke$arity$2 = G__21125__2;
  return G__21125;
}();
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, null, null);
  } else {
    if (self__.more == null) {
      return null;
    } else {
      return cljs.core._seq(self__.more);
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, null, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.ChunkedCons(self__.chunk, self__.more, new_meta, self__.__hash);
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$chunk, cljs$cst$symbol$more, cljs$cst$symbol$meta, cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$IChunkedNext$ ? true : false : false) {
    return s.cljs$core$IChunkedNext$_chunked_next$arity$1(null);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(coll) {
  var ary = [];
  var s = cljs.core.seq(coll);
  while (true) {
    if (!(s == null)) {
      ary.push(cljs.core.first(s));
      var G__21137 = cljs.core.next(s);
      s = G__21137;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_21138 = 0;
  var xs_21139 = cljs.core.seq(coll);
  while (true) {
    if (xs_21139 == null) {
    } else {
      ret[i_21138] = cljs.core.to_array(cljs.core.first(xs_21139));
      var G__21140 = i_21138 + 1;
      var G__21141 = cljs.core.next(xs_21139);
      i_21138 = G__21140;
      xs_21139 = G__21141;
      continue;
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array(var_args) {
  var G__18678 = arguments.length;
  switch(G__18678) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__21147 = i + 1;
        var G__21148 = cljs.core.next(s__$1);
        i = G__21147;
        s__$1 = G__21148;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4741__auto___21149 = size;
    var i_21150 = 0;
    while (true) {
      if (i_21150 < n__4741__auto___21149) {
        a[i_21150] = init_val_or_seq;
        var G__21153 = i_21150 + 1;
        i_21150 = G__21153;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array(var_args) {
  var G__18680 = arguments.length;
  switch(G__18680) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__21157 = i + 1;
        var G__21158 = cljs.core.next(s__$1);
        i = G__21157;
        s__$1 = G__21158;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4741__auto___21159 = size;
    var i_21160 = 0;
    while (true) {
      if (i_21160 < n__4741__auto___21159) {
        a[i_21160] = init_val_or_seq;
        var G__21161 = i_21160 + 1;
        i_21160 = G__21161;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array(var_args) {
  var G__18682 = arguments.length;
  switch(G__18682) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__21163 = i + 1;
        var G__21164 = cljs.core.next(s__$1);
        i = G__21163;
        s__$1 = G__21164;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4741__auto___21165 = size;
    var i_21166 = 0;
    while (true) {
      if (i_21166 < n__4741__auto___21165) {
        a[i_21166] = init_val_or_seq;
        var G__21168 = i_21166 + 1;
        i_21166 = G__21168;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array(var_args) {
  var G__18684 = arguments.length;
  switch(G__18684) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__21173 = i + 1;
        var G__21174 = cljs.core.next(s__$1);
        i = G__21173;
        s__$1 = G__21174;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4741__auto___21175 = size;
    var i_21176 = 0;
    while (true) {
      if (i_21176 < n__4741__auto___21175) {
        a[i_21176] = init_val_or_seq;
        var G__21178 = i_21176 + 1;
        i_21176 = G__21178;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(n, coll) {
  if (cljs.core.counted_QMARK_(coll)) {
    return cljs.core.count(coll);
  } else {
    var i = 0;
    var s = cljs.core.seq(coll);
    while (true) {
      if (!(s == null) && i < n) {
        var G__21179 = i + 1;
        var G__21180 = cljs.core.next(s);
        i = G__21179;
        s = G__21180;
        continue;
      } else {
        return i;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    var n = cljs.core.next(arglist);
    if (n == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs.core.spread.cljs$core$IFn$_invoke$arity$1 ? cljs.core.spread.cljs$core$IFn$_invoke$arity$1(n) : cljs.core.spread.call(null, n));
    }
  }
};
cljs.core.concat = function cljs$core$concat(var_args) {
  var G__18689 = arguments.length;
  switch(G__18689) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___21184 = arguments.length;
      var i__4865__auto___21185 = 0;
      while (true) {
        if (i__4865__auto___21185 < len__4864__auto___21184) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___21185]);
          var G__21186 = i__4865__auto___21185 + 1;
          i__4865__auto___21185 = G__21186;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq18686) {
  var G__18687 = cljs.core.first(seq18686);
  var seq18686__$1 = cljs.core.next(seq18686);
  var G__18688 = cljs.core.first(seq18686__$1);
  var seq18686__$2 = cljs.core.next(seq18686__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18687, G__18688, seq18686__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_(var_args) {
  var G__18696 = arguments.length;
  switch(G__18696) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___21192 = arguments.length;
      var i__4865__auto___21193 = 0;
      while (true) {
        if (i__4865__auto___21193 < len__4864__auto___21192) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___21193]);
          var G__21196 = i__4865__auto___21193 + 1;
          i__4865__auto___21193 = G__21196;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(4), 0, null);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4886__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq18691) {
  var G__18692 = cljs.core.first(seq18691);
  var seq18691__$1 = cljs.core.next(seq18691);
  var G__18693 = cljs.core.first(seq18691__$1);
  var seq18691__$2 = cljs.core.next(seq18691__$1);
  var G__18694 = cljs.core.first(seq18691__$2);
  var seq18691__$3 = cljs.core.next(seq18691__$2);
  var G__18695 = cljs.core.first(seq18691__$3);
  var seq18691__$4 = cljs.core.next(seq18691__$3);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18692, G__18693, G__18694, G__18695, seq18691__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_(var_args) {
  var G__18701 = arguments.length;
  switch(G__18701) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___21202 = arguments.length;
      var i__4865__auto___21203 = 0;
      while (true) {
        if (i__4865__auto___21203 < len__4864__auto___21202) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___21203]);
          var G__21204 = i__4865__auto___21203 + 1;
          i__4865__auto___21203 = G__21204;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(tcoll) {
  return tcoll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__21206 = ntcoll;
      var G__21207 = cljs.core.first(vals);
      var G__21208 = cljs.core.next(vals);
      tcoll = G__21206;
      val = G__21207;
      vals = G__21208;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq18698) {
  var G__18699 = cljs.core.first(seq18698);
  var seq18698__$1 = cljs.core.next(seq18698);
  var G__18700 = cljs.core.first(seq18698__$1);
  var seq18698__$2 = cljs.core.next(seq18698__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18699, G__18700, seq18698__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_(var_args) {
  var G__18707 = arguments.length;
  switch(G__18707) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___21212 = arguments.length;
      var i__4865__auto___21213 = 0;
      while (true) {
        if (i__4865__auto___21213 < len__4864__auto___21212) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___21213]);
          var G__21215 = i__4865__auto___21213 + 1;
          i__4865__auto___21213 = G__21215;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(3), 0, null);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4886__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__21217 = ntcoll;
      var G__21218 = cljs.core.first(kvs);
      var G__21219 = cljs.core.second(kvs);
      var G__21220 = cljs.core.nnext(kvs);
      tcoll = G__21217;
      key = G__21218;
      val = G__21219;
      kvs = G__21220;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq18703) {
  var G__18704 = cljs.core.first(seq18703);
  var seq18703__$1 = cljs.core.next(seq18703);
  var G__18705 = cljs.core.first(seq18703__$1);
  var seq18703__$2 = cljs.core.next(seq18703__$1);
  var G__18706 = cljs.core.first(seq18703__$2);
  var seq18703__$3 = cljs.core.next(seq18703__$2);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18704, G__18705, G__18706, seq18703__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_(var_args) {
  var G__18712 = arguments.length;
  switch(G__18712) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___21223 = arguments.length;
      var i__4865__auto___21224 = 0;
      while (true) {
        if (i__4865__auto___21224 < len__4864__auto___21223) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___21224]);
          var G__21226 = i__4865__auto___21224 + 1;
          i__4865__auto___21224 = G__21226;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__21228 = ntcoll;
      var G__21229 = cljs.core.first(ks);
      var G__21230 = cljs.core.next(ks);
      tcoll = G__21228;
      key = G__21229;
      ks = G__21230;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq18709) {
  var G__18710 = cljs.core.first(seq18709);
  var seq18709__$1 = cljs.core.next(seq18709);
  var G__18711 = cljs.core.first(seq18709__$1);
  var seq18709__$2 = cljs.core.next(seq18709__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18710, G__18711, seq18709__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_(var_args) {
  var G__18717 = arguments.length;
  switch(G__18717) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___21236 = arguments.length;
      var i__4865__auto___21237 = 0;
      while (true) {
        if (i__4865__auto___21237 < len__4864__auto___21236) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___21237]);
          var G__21239 = i__4865__auto___21237 + 1;
          i__4865__auto___21237 = G__21239;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__21240 = ntcoll;
      var G__21241 = cljs.core.first(vals);
      var G__21242 = cljs.core.next(vals);
      tcoll = G__21240;
      val = G__21241;
      vals = G__21242;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq18714) {
  var G__18715 = cljs.core.first(seq18714);
  var seq18714__$1 = cljs.core.next(seq18714);
  var G__18716 = cljs.core.first(seq18714__$1);
  var seq18714__$2 = cljs.core.next(seq18714__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18715, G__18716, seq18714__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a1 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a1) : f.call(null, a1);
    } else {
      var b2 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a1, b2) : f.call(null, a1, b2);
      } else {
        var c3 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a1, b2, c3) : f.call(null, a1, b2, c3);
        } else {
          var d4 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a1, b2, c3, d4) : f.call(null, a1, b2, c3, d4);
          } else {
            var e5 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a1, b2, c3, d4, e5) : f.call(null, a1, b2, c3, d4, e5);
            } else {
              var f6 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a1, b2, c3, d4, e5, f6) : f.call(null, a1, b2, c3, d4, e5, f6);
              } else {
                var g7 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a1, b2, c3, d4, e5, f6, g7) : f.call(null, a1, b2, c3, d4, e5, f6, g7);
                } else {
                  var h8 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a1, b2, c3, d4, e5, f6, g7, h8) : f.call(null, a1, b2, c3, d4, e5, f6, g7, h8);
                  } else {
                    var i9 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a1, b2, c3, d4, e5, f6, g7, h8, i9) : f.call(null, a1, b2, c3, d4, e5, f6, g7, h8, i9);
                    } else {
                      var j10 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a1, b2, c3, d4, e5, f6, g7, h8, i9, j10) : f.call(null, a1, b2, c3, d4, e5, f6, g7, h8, i9, j10);
                      } else {
                        var k11 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a1, b2, c3, d4, e5, f6, g7, h8, i9, j10, k11) : f.call(null, a1, b2, c3, d4, e5, f6, g7, h8, i9, j10, k11);
                        } else {
                          var l12 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a1, b2, c3, d4, e5, f6, g7, h8, i9, j10, k11, l12) : f.call(null, a1, b2, c3, d4, e5, f6, g7, h8, i9, j10, k11, l12);
                          } else {
                            var m13 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a1, b2, c3, d4, e5, f6, g7, h8, i9, j10, k11, l12, m13) : f.call(null, a1, b2, c3, d4, e5, f6, g7, h8, i9, j10, k11, l12, m13);
                            } else {
                              var n14 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a1, b2, c3, d4, e5, f6, g7, h8, i9, j10, k11, l12, m13, n14) : f.call(null, a1, b2, c3, d4, e5, f6, g7, h8, i9, j10, k11, l12, m13, n14);
                              } else {
                                var o15 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a1, b2, c3, d4, e5, f6, g7, h8, i9, j10, k11, l12, m13, n14, o15) : f.call(null, a1, b2, c3, d4, e5, f6, g7, h8, i9, j10, k11, l12, m13, n14, o15);
                                } else {
                                  var p16 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a1, b2, c3, d4, e5, f6, g7, h8, i9, j10, k11, l12, m13, n14, o15, p16) : f.call(null, a1, b2, c3, d4, e5, f6, g7, h8, i9, j10, k11, l12, m13, n14, o15, p16);
                                  } else {
                                    var q17 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a1, b2, c3, d4, e5, f6, g7, h8, i9, j10, k11, l12, m13, n14, o15, p16, q17) : f.call(null, a1, b2, c3, d4, e5, f6, g7, h8, i9, j10, k11, l12, m13, n14, o15, p16, q17);
                                    } else {
                                      var r18 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a1, b2, c3, d4, e5, f6, g7, h8, i9, j10, k11, l12, m13, n14, o15, p16, q17, r18) : f.call(null, a1, b2, c3, d4, e5, f6, g7, h8, i9, j10, k11, l12, m13, n14, o15, p16, q17, r18);
                                      } else {
                                        var s19 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a1, b2, c3, d4, e5, f6, g7, h8, i9, j10, k11, l12, m13, n14, o15, p16, q17, r18, s19) : f.call(null, a1, b2, c3, d4, e5, f6, g7, h8, i9, j10, k11, l12, m13, n14, o15, p16, q17, r18, s19);
                                        } else {
                                          var t20 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a1, b2, c3, d4, e5, f6, g7, h8, i9, j10, k11, l12, m13, n14, o15, p16, q17, r18, s19, t20) : f.call(null, a1, b2, c3, d4, e5, f6, g7, h8, i9, j10, k11, l12, m13, n14, o15, p16, q17, r18, s19, t20);
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.next_STAR_ = function cljs$core$next_STAR_(coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$INext$ ? true : false : false) {
    return coll.cljs$core$INext$_next$arity$1(null);
  } else {
    return cljs.core.seq(cljs.core.rest(coll));
  }
};
cljs.core.apply_to_simple = function cljs$core$apply_to_simple(var_args) {
  var G__18720 = arguments.length;
  switch(G__18720) {
    case 2:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$0) {
      return f.cljs$core$IFn$_invoke$arity$0();
    } else {
      return f.call(f);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3 = function(f, a0, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$1) {
      return f.cljs$core$IFn$_invoke$arity$1(a0);
    } else {
      return f.call(f, a0);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f, a0, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4 = function(f, a0, a1, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$2) {
      return f.cljs$core$IFn$_invoke$arity$2(a0, a1);
    } else {
      return f.call(f, a0, a1);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f, a0, a1, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5 = function(f, a0, a1, a2, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$3) {
      return f.cljs$core$IFn$_invoke$arity$3(a0, a1, a2);
    } else {
      return f.call(f, a0, a1, a2);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f, a0, a1, a2, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6 = function(f, a0, a1, a2, a3, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$4) {
      return f.cljs$core$IFn$_invoke$arity$4(a0, a1, a2, a3);
    } else {
      return f.call(f, a0, a1, a2, a3);
    }
  } else {
    var a4 = cljs.core._first(args);
    var next_4 = cljs.core.next(args);
    if (next_4 == null) {
      if (f.cljs$core$IFn$_invoke$arity$5) {
        return f.cljs$core$IFn$_invoke$arity$5(a0, a1, a2, a3, a4);
      } else {
        return f.call(f, a0, a1, a2, a3, a4);
      }
    } else {
      var a5 = cljs.core._first(next_4);
      var next_5 = cljs.core.next(next_4);
      if (next_5 == null) {
        if (f.cljs$core$IFn$_invoke$arity$6) {
          return f.cljs$core$IFn$_invoke$arity$6(a0, a1, a2, a3, a4, a5);
        } else {
          return f.call(f, a0, a1, a2, a3, a4, a5);
        }
      } else {
        var a6 = cljs.core._first(next_5);
        var next_6 = cljs.core.next(next_5);
        if (next_6 == null) {
          if (f.cljs$core$IFn$_invoke$arity$7) {
            return f.cljs$core$IFn$_invoke$arity$7(a0, a1, a2, a3, a4, a5, a6);
          } else {
            return f.call(f, a0, a1, a2, a3, a4, a5, a6);
          }
        } else {
          var a7 = cljs.core._first(next_6);
          var next_7 = cljs.core.next(next_6);
          if (next_7 == null) {
            if (f.cljs$core$IFn$_invoke$arity$8) {
              return f.cljs$core$IFn$_invoke$arity$8(a0, a1, a2, a3, a4, a5, a6, a7);
            } else {
              return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7);
            }
          } else {
            var a8 = cljs.core._first(next_7);
            var next_8 = cljs.core.next(next_7);
            if (next_8 == null) {
              if (f.cljs$core$IFn$_invoke$arity$9) {
                return f.cljs$core$IFn$_invoke$arity$9(a0, a1, a2, a3, a4, a5, a6, a7, a8);
              } else {
                return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8);
              }
            } else {
              var a9 = cljs.core._first(next_8);
              var next_9 = cljs.core.next(next_8);
              if (next_9 == null) {
                if (f.cljs$core$IFn$_invoke$arity$10) {
                  return f.cljs$core$IFn$_invoke$arity$10(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
                } else {
                  return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
                }
              } else {
                var a10 = cljs.core._first(next_9);
                var next_10 = cljs.core.next(next_9);
                if (next_10 == null) {
                  if (f.cljs$core$IFn$_invoke$arity$11) {
                    return f.cljs$core$IFn$_invoke$arity$11(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
                  } else {
                    return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
                  }
                } else {
                  var a11 = cljs.core._first(next_10);
                  var next_11 = cljs.core.next(next_10);
                  if (next_11 == null) {
                    if (f.cljs$core$IFn$_invoke$arity$12) {
                      return f.cljs$core$IFn$_invoke$arity$12(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
                    } else {
                      return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
                    }
                  } else {
                    var a12 = cljs.core._first(next_11);
                    var next_12 = cljs.core.next(next_11);
                    if (next_12 == null) {
                      if (f.cljs$core$IFn$_invoke$arity$13) {
                        return f.cljs$core$IFn$_invoke$arity$13(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
                      } else {
                        return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
                      }
                    } else {
                      var a13 = cljs.core._first(next_12);
                      var next_13 = cljs.core.next(next_12);
                      if (next_13 == null) {
                        if (f.cljs$core$IFn$_invoke$arity$14) {
                          return f.cljs$core$IFn$_invoke$arity$14(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
                        } else {
                          return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
                        }
                      } else {
                        var a14 = cljs.core._first(next_13);
                        var next_14 = cljs.core.next(next_13);
                        if (next_14 == null) {
                          if (f.cljs$core$IFn$_invoke$arity$15) {
                            return f.cljs$core$IFn$_invoke$arity$15(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
                          } else {
                            return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
                          }
                        } else {
                          var a15 = cljs.core._first(next_14);
                          var next_15 = cljs.core.next(next_14);
                          if (next_15 == null) {
                            if (f.cljs$core$IFn$_invoke$arity$16) {
                              return f.cljs$core$IFn$_invoke$arity$16(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
                            } else {
                              return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
                            }
                          } else {
                            var a16 = cljs.core._first(next_15);
                            var next_16 = cljs.core.next(next_15);
                            if (next_16 == null) {
                              if (f.cljs$core$IFn$_invoke$arity$17) {
                                return f.cljs$core$IFn$_invoke$arity$17(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
                              } else {
                                return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
                              }
                            } else {
                              var a17 = cljs.core._first(next_16);
                              var next_17 = cljs.core.next(next_16);
                              if (next_17 == null) {
                                if (f.cljs$core$IFn$_invoke$arity$18) {
                                  return f.cljs$core$IFn$_invoke$arity$18(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
                                } else {
                                  return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
                                }
                              } else {
                                var a18 = cljs.core._first(next_17);
                                var next_18 = cljs.core.next(next_17);
                                if (next_18 == null) {
                                  if (f.cljs$core$IFn$_invoke$arity$19) {
                                    return f.cljs$core$IFn$_invoke$arity$19(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
                                  } else {
                                    return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
                                  }
                                } else {
                                  var a19 = cljs.core._first(next_18);
                                  var next_19 = cljs.core.next(next_18);
                                  if (next_19 == null) {
                                    if (f.cljs$core$IFn$_invoke$arity$20) {
                                      return f.cljs$core$IFn$_invoke$arity$20(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
                                    } else {
                                      return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
                                    }
                                  } else {
                                    var arr__4789__auto__ = [a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19];
                                    var s__4790__auto___21277 = next_19;
                                    while (true) {
                                      if (s__4790__auto___21277) {
                                        arr__4789__auto__.push(cljs.core._first(s__4790__auto___21277));
                                        var G__21278 = cljs.core.next(s__4790__auto___21277);
                                        s__4790__auto___21277 = G__21278;
                                        continue;
                                      } else {
                                      }
                                      break;
                                    }
                                    return f.apply(f, arr__4789__auto__);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply_to_simple.cljs$lang$maxFixedArity = 6;
cljs.core.apply = function cljs$core$apply(var_args) {
  var G__18728 = arguments.length;
  switch(G__18728) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___21280 = arguments.length;
      var i__4865__auto___21281 = 0;
      while (true) {
        if (i__4865__auto___21281 < len__4864__auto___21280) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___21281]);
          var G__21282 = i__4865__auto___21281 + 1;
          i__4865__auto___21281 = G__21282;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(5), 0, null);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__4886__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  if (f.cljs$lang$applyTo) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = cljs.core.bounded_count(fixed_arity + 1, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = cljs.core.bounded_count(fixed_arity, args) + 1;
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f, x, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 2 + cljs.core.bounded_count(fixed_arity - 1, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f, x, y, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 3 + cljs.core.bounded_count(fixed_arity - 2, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f, x, y, z, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  if (f.cljs$lang$applyTo) {
    var spread_args = cljs.core.spread(args);
    var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, spread_args))));
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 4 + cljs.core.bounded_count(fixed_arity - 3, spread_args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f, a, b, c, d, cljs.core.spread(args));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq18722) {
  var G__18723 = cljs.core.first(seq18722);
  var seq18722__$1 = cljs.core.next(seq18722);
  var G__18724 = cljs.core.first(seq18722__$1);
  var seq18722__$2 = cljs.core.next(seq18722__$1);
  var G__18725 = cljs.core.first(seq18722__$2);
  var seq18722__$3 = cljs.core.next(seq18722__$2);
  var G__18726 = cljs.core.first(seq18722__$3);
  var seq18722__$4 = cljs.core.next(seq18722__$3);
  var G__18727 = cljs.core.first(seq18722__$4);
  var seq18722__$5 = cljs.core.next(seq18722__$4);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18723, G__18724, G__18725, G__18726, G__18727, seq18722__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.__destructure_map = function cljs$core$__destructure_map(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISeq$ ? true : false : false) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, x);
  } else {
    return x;
  }
};
cljs.core.vary_meta = function cljs$core$vary_meta(var_args) {
  var G__18738 = arguments.length;
  switch(G__18738) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___21299 = arguments.length;
      var i__4865__auto___21300 = 0;
      while (true) {
        if (i__4865__auto___21300 < len__4864__auto___21299) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___21300]);
          var G__21301 = i__4865__auto___21300 + 1;
          i__4865__auto___21300 = G__21301;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(6), 0, null);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4886__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__18739 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18739) : f.call(null, G__18739);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__18740 = cljs.core.meta(obj);
    var G__18741 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18740, G__18741) : f.call(null, G__18740, G__18741);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__18742 = cljs.core.meta(obj);
    var G__18743 = a;
    var G__18744 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18742, G__18743, G__18744) : f.call(null, G__18742, G__18743, G__18744);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__18745 = cljs.core.meta(obj);
    var G__18746 = a;
    var G__18747 = b;
    var G__18748 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18745, G__18746, G__18747, G__18748) : f.call(null, G__18745, G__18746, G__18747, G__18748);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__18749 = cljs.core.meta(obj);
    var G__18750 = a;
    var G__18751 = b;
    var G__18752 = c;
    var G__18753 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__18749, G__18750, G__18751, G__18752, G__18753) : f.call(null, G__18749, G__18750, G__18751, G__18752, G__18753);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq18731) {
  var G__18732 = cljs.core.first(seq18731);
  var seq18731__$1 = cljs.core.next(seq18731);
  var G__18733 = cljs.core.first(seq18731__$1);
  var seq18731__$2 = cljs.core.next(seq18731__$1);
  var G__18734 = cljs.core.first(seq18731__$2);
  var seq18731__$3 = cljs.core.next(seq18731__$2);
  var G__18735 = cljs.core.first(seq18731__$3);
  var seq18731__$4 = cljs.core.next(seq18731__$3);
  var G__18736 = cljs.core.first(seq18731__$4);
  var seq18731__$5 = cljs.core.next(seq18731__$4);
  var G__18737 = cljs.core.first(seq18731__$5);
  var seq18731__$6 = cljs.core.next(seq18731__$5);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18732, G__18733, G__18734, G__18735, G__18736, G__18737, seq18731__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_(var_args) {
  var G__18758 = arguments.length;
  switch(G__18758) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___21303 = arguments.length;
      var i__4865__auto___21304 = 0;
      while (true) {
        if (i__4865__auto___21304 < len__4864__auto___21303) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___21304]);
          var G__21305 = i__4865__auto___21304 + 1;
          i__4865__auto___21304 = G__21305;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq18755) {
  var G__18756 = cljs.core.first(seq18755);
  var seq18755__$1 = cljs.core.next(seq18755);
  var G__18757 = cljs.core.first(seq18755__$1);
  var seq18755__$2 = cljs.core.next(seq18755__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18756, G__18757, seq18755__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.t_cljs$core18759 !== "undefined") {
  } else {
    cljs.core.t_cljs$core18759 = function(meta18760) {
      this.meta18760 = meta18760;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t_cljs$core18759.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18761, meta18760__$1) {
      var self__ = this;
      var _18761__$1 = this;
      return new cljs.core.t_cljs$core18759(meta18760__$1);
    };
    cljs.core.t_cljs$core18759.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18761) {
      var self__ = this;
      var _18761__$1 = this;
      return self__.meta18760;
    };
    cljs.core.t_cljs$core18759.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t_cljs$core18759.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t_cljs$core18759.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t_cljs$core18759.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta18760], null);
    };
    cljs.core.t_cljs$core18759.cljs$lang$type = true;
    cljs.core.t_cljs$core18759.cljs$lang$ctorStr = "cljs.core/t_cljs$core18759";
    cljs.core.t_cljs$core18759.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "cljs.core/t_cljs$core18759");
    };
    cljs.core.__GT_t_cljs$core18759 = function cljs$core$nil_iter_$___GT_t_cljs$core18759(meta18760) {
      return new cljs.core.t_cljs$core18759(meta18760);
    };
  }
  return new cljs.core.t_cljs$core18759(cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$s, cljs.core.with_meta(cljs$cst$symbol$i, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$arr, cljs.core.with_meta(cljs$cst$symbol$i, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (!this$.hasNext()) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$_seq, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$_next, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (cljs.core.iterable_QMARK_(coll)) {
    return cljs.core._iterator(coll);
  } else {
    if (coll == null) {
      return cljs.core.nil_iter();
    } else {
      if (typeof coll === "string") {
        return cljs.core.string_iter(coll);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          return cljs.core.array_iter(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error(["Cannot create iterator from ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.Many = function(vals) {
  this.vals = vals;
};
cljs.core.Many.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  self__.vals.push(o);
  return this$;
};
cljs.core.Many.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  return self__.vals.shift();
};
cljs.core.Many.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return self__.vals.length === 0;
};
cljs.core.Many.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return ["Many: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.vals)].join("");
};
cljs.core.Many.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$vals], null);
};
cljs.core.Many.cljs$lang$type = true;
cljs.core.Many.cljs$lang$ctorStr = "cljs.core/Many";
cljs.core.Many.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/Many");
};
cljs.core.__GT_Many = function cljs$core$__GT_Many(vals) {
  return new cljs.core.Many(vals);
};
cljs.core.NONE = {};
cljs.core.Single = function(val) {
  this.val = val;
};
cljs.core.Single.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  if (self__.val === cljs.core.NONE) {
    self__.val = o;
    return this$;
  } else {
    return new cljs.core.Many([self__.val, o]);
  }
};
cljs.core.Single.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  if (self__.val === cljs.core.NONE) {
    throw new Error("Removing object from empty buffer");
  } else {
    var ret = self__.val;
    self__.val = cljs.core.NONE;
    return ret;
  }
};
cljs.core.Single.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return self__.val === cljs.core.NONE;
};
cljs.core.Single.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return ["Single: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.val)].join("");
};
cljs.core.Single.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$val, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.Single.cljs$lang$type = true;
cljs.core.Single.cljs$lang$ctorStr = "cljs.core/Single";
cljs.core.Single.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/Single");
};
cljs.core.__GT_Single = function cljs$core$__GT_Single(val) {
  return new cljs.core.Single(val);
};
cljs.core.Empty = function() {
};
cljs.core.Empty.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  return new cljs.core.Single(o);
};
cljs.core.Empty.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  throw new Error("Removing object from empty buffer");
};
cljs.core.Empty.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return true;
};
cljs.core.Empty.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return "Empty";
};
cljs.core.Empty.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.Empty.cljs$lang$type = true;
cljs.core.Empty.cljs$lang$ctorStr = "cljs.core/Empty";
cljs.core.Empty.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/Empty");
};
cljs.core.__GT_Empty = function cljs$core$__GT_Empty() {
  return new cljs.core.Empty();
};
cljs.core.EMPTY = new cljs.core.Empty();
cljs.core.MultiIterator = function(iters) {
  this.iters = iters;
};
cljs.core.MultiIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (!iter.hasNext()) {
        return false;
      } else {
        var G__21322 = cljs.core.next(iters__$1);
        iters__$1 = G__21322;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var nexts = [];
  var n__4741__auto___21323 = self__.iters.length;
  var i_21324 = 0;
  while (true) {
    if (i_21324 < n__4741__auto___21323) {
      nexts[i_21324] = self__.iters[i_21324].next();
      var G__21325 = i_21324 + 1;
      i_21324 = G__21325;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(nexts, 0);
};
cljs.core.MultiIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$iters], null);
};
cljs.core.MultiIterator.cljs$lang$type = true;
cljs.core.MultiIterator.cljs$lang$ctorStr = "cljs.core/MultiIterator";
cljs.core.MultiIterator.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/MultiIterator");
};
cljs.core.__GT_MultiIterator = function cljs$core$__GT_MultiIterator(iters) {
  return new cljs.core.MultiIterator(iters);
};
cljs.core.chunkIteratorSeq = function cljs$core$chunkIteratorSeq(iter) {
  return new cljs.core.LazySeq(null, function() {
    if (iter.hasNext()) {
      var arr = [];
      var n = 0;
      while (true) {
        if (cljs.core.truth_(function() {
          var and__4251__auto__ = iter.hasNext();
          if (cljs.core.truth_(and__4251__auto__)) {
            return n < 32;
          } else {
            return and__4251__auto__;
          }
        }())) {
          arr[n] = iter.next();
          var G__21327 = n + 1;
          n = G__21327;
          continue;
        } else {
          return cljs.core.chunk_cons(cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arr, 0, n), cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1(iter) : cljs.core.chunkIteratorSeq.call(null, iter));
        }
        break;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.TransformerIterator = function(buffer, _next, completed, xf, sourceIter, multi) {
  this.buffer = buffer;
  this._next = _next;
  this.completed = completed;
  this.xf = xf;
  this.sourceIter = sourceIter;
  this.multi = multi;
};
cljs.core.TransformerIterator.prototype.step = function() {
  var self__ = this;
  var this$ = this;
  if (!(self__._next === cljs.core.NONE)) {
    return true;
  } else {
    while (true) {
      if (self__._next === cljs.core.NONE) {
        if (self__.buffer.isEmpty()) {
          if (self__.completed) {
            return false;
          } else {
            if (self__.sourceIter.hasNext()) {
              var iter = self__.multi ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xf, cljs.core.cons(null, self__.sourceIter.next())) : function() {
                var G__18762 = null;
                var G__18763 = self__.sourceIter.next();
                return self__.xf.cljs$core$IFn$_invoke$arity$2 ? self__.xf.cljs$core$IFn$_invoke$arity$2(G__18762, G__18763) : self__.xf.call(null, G__18762, G__18763);
              }();
              if (cljs.core.reduced_QMARK_(iter)) {
                self__.xf.cljs$core$IFn$_invoke$arity$1 ? self__.xf.cljs$core$IFn$_invoke$arity$1(null) : self__.xf.call(null, null);
                self__.completed = true;
              } else {
              }
              continue;
            } else {
              self__.xf.cljs$core$IFn$_invoke$arity$1 ? self__.xf.cljs$core$IFn$_invoke$arity$1(null) : self__.xf.call(null, null);
              self__.completed = true;
              continue;
            }
          }
        } else {
          self__._next = self__.buffer.remove();
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  }
};
cljs.core.TransformerIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return this$.step();
};
cljs.core.TransformerIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    var ret = self__._next;
    self__._next = cljs.core.NONE;
    return ret;
  } else {
    throw new Error("No such element");
  }
};
cljs.core.TransformerIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.TransformerIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$buffer, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$_next, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$completed, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$xf, 
  new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs$cst$symbol$sourceIter, cljs$cst$symbol$multi], null);
};
cljs.core.TransformerIterator.cljs$lang$type = true;
cljs.core.TransformerIterator.cljs$lang$ctorStr = "cljs.core/TransformerIterator";
cljs.core.TransformerIterator.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/TransformerIterator");
};
cljs.core.__GT_TransformerIterator = function cljs$core$__GT_TransformerIterator(buffer, _next, completed, xf, sourceIter, multi) {
  return new cljs.core.TransformerIterator(buffer, _next, completed, xf, sourceIter, multi);
};
cljs.core.TransformerIterator.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.transformer_iterator = function cljs$core$transformer_iterator(xform, sourceIter, multi) {
  var iterator = new cljs.core.TransformerIterator(cljs.core.EMPTY, cljs.core.NONE, false, null, sourceIter, multi);
  iterator.xf = function() {
    var G__18764 = function() {
      var G__21334 = null;
      var G__21334__0 = function() {
        return null;
      };
      var G__21334__1 = function(acc) {
        return acc;
      };
      var G__21334__2 = function(acc, o) {
        iterator.buffer = iterator.buffer.add(o);
        return acc;
      };
      G__21334 = function(acc, o) {
        switch(arguments.length) {
          case 0:
            return G__21334__0.call(this);
          case 1:
            return G__21334__1.call(this, acc);
          case 2:
            return G__21334__2.call(this, acc, o);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21334.cljs$core$IFn$_invoke$arity$0 = G__21334__0;
      G__21334.cljs$core$IFn$_invoke$arity$1 = G__21334__1;
      G__21334.cljs$core$IFn$_invoke$arity$2 = G__21334__2;
      return G__21334;
    }();
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__18764) : xform.call(null, G__18764);
  }();
  return iterator;
};
cljs.core.TransformerIterator.create = function(xform, source) {
  return cljs.core.transformer_iterator(xform, source, false);
};
cljs.core.TransformerIterator.createMulti = function(xform, sources) {
  return cljs.core.transformer_iterator(xform, new cljs.core.MultiIterator(cljs.core.to_array(sources)), true);
};
cljs.core.sequence = function cljs$core$sequence(var_args) {
  var G__18769 = arguments.length;
  switch(G__18769) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___21338 = arguments.length;
      var i__4865__auto___21339 = 0;
      while (true) {
        if (i__4865__auto___21339 < len__4864__auto___21338) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___21339]);
          var G__21340 = i__4865__auto___21339 + 1;
          i__4865__auto___21339 = G__21340;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__4253__auto__ = cljs.core.seq(coll);
    if (or__4253__auto__) {
      return or__4253__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  var or__4253__auto__ = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.create(xform, cljs.core.iter(coll)));
  if (cljs.core.truth_(or__4253__auto__)) {
    return or__4253__auto__;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  var or__4253__auto__ = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.createMulti(xform, function() {
    var G__18770 = cljs.core.iter;
    var G__18771 = cljs.core.cons(coll, colls);
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.map.cljs$core$IFn$_invoke$arity$2(G__18770, G__18771) : cljs.core.map.call(null, G__18770, G__18771);
  }()));
  if (cljs.core.truth_(or__4253__auto__)) {
    return or__4253__auto__;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sequence.cljs$lang$applyTo = function(seq18766) {
  var G__18767 = cljs.core.first(seq18766);
  var seq18766__$1 = cljs.core.next(seq18766);
  var G__18768 = cljs.core.first(seq18766__$1);
  var seq18766__$2 = cljs.core.next(seq18766__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18767, G__18768, seq18766__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__18772 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__18772) : pred.call(null, G__18772);
      }())) {
        var G__21344 = pred;
        var G__21345 = cljs.core.next(coll);
        pred = G__21344;
        coll = G__21345;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    var temp__5753__auto__ = cljs.core.seq(coll);
    if (temp__5753__auto__) {
      var s = temp__5753__auto__;
      var or__4253__auto__ = function() {
        var G__18773 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__18773) : pred.call(null, G__18773);
      }();
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        var G__21346 = pred;
        var G__21348 = cljs.core.next(s);
        pred = G__21346;
        coll = G__21348;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error(["Argument must be an integer: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__21349 = null;
    var G__21349__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__21349__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__21349__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__21349__3 = function() {
      var G__21350__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__21350 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__21351__i = 0, G__21351__a = new Array(arguments.length - 2);
          while (G__21351__i < G__21351__a.length) {
            G__21351__a[G__21351__i] = arguments[G__21351__i + 2];
            ++G__21351__i;
          }
          zs = new cljs.core.IndexedSeq(G__21351__a, 0, null);
        }
        return G__21350__delegate.call(this, x, y, zs);
      };
      G__21350.cljs$lang$maxFixedArity = 2;
      G__21350.cljs$lang$applyTo = function(arglist__21352) {
        var x = cljs.core.first(arglist__21352);
        arglist__21352 = cljs.core.next(arglist__21352);
        var y = cljs.core.first(arglist__21352);
        var zs = cljs.core.rest(arglist__21352);
        return G__21350__delegate(x, y, zs);
      };
      G__21350.cljs$core$IFn$_invoke$arity$variadic = G__21350__delegate;
      return G__21350;
    }();
    G__21349 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__21349__0.call(this);
        case 1:
          return G__21349__1.call(this, x);
        case 2:
          return G__21349__2.call(this, x, y);
        default:
          var G__21353 = null;
          if (arguments.length > 2) {
            var G__21354__i = 0, G__21354__a = new Array(arguments.length - 2);
            while (G__21354__i < G__21354__a.length) {
              G__21354__a[G__21354__i] = arguments[G__21354__i + 2];
              ++G__21354__i;
            }
            G__21353 = new cljs.core.IndexedSeq(G__21354__a, 0, null);
          }
          return G__21349__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__21353);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__21349.cljs$lang$maxFixedArity = 2;
    G__21349.cljs$lang$applyTo = G__21349__3.cljs$lang$applyTo;
    G__21349.cljs$core$IFn$_invoke$arity$0 = G__21349__0;
    G__21349.cljs$core$IFn$_invoke$arity$1 = G__21349__1;
    G__21349.cljs$core$IFn$_invoke$arity$2 = G__21349__2;
    G__21349.cljs$core$IFn$_invoke$arity$variadic = G__21349__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__21349;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__21363__delegate = function(args) {
      return x;
    };
    var G__21363 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__21364__i = 0, G__21364__a = new Array(arguments.length - 0);
        while (G__21364__i < G__21364__a.length) {
          G__21364__a[G__21364__i] = arguments[G__21364__i + 0];
          ++G__21364__i;
        }
        args = new cljs.core.IndexedSeq(G__21364__a, 0, null);
      }
      return G__21363__delegate.call(this, args);
    };
    G__21363.cljs$lang$maxFixedArity = 0;
    G__21363.cljs$lang$applyTo = function(arglist__21365) {
      var args = cljs.core.seq(arglist__21365);
      return G__21363__delegate(args);
    };
    G__21363.cljs$core$IFn$_invoke$arity$variadic = G__21363__delegate;
    return G__21363;
  }();
};
cljs.core.comp = function cljs$core$comp(var_args) {
  var G__18779 = arguments.length;
  switch(G__18779) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___21367 = arguments.length;
      var i__4865__auto___21368 = 0;
      while (true) {
        if (i__4865__auto___21368 < len__4864__auto___21367) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___21368]);
          var G__21369 = i__4865__auto___21368 + 1;
          i__4865__auto___21368 = G__21369;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(3), 0, null);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4886__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__21370 = null;
    var G__21370__0 = function() {
      var G__18780 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18780) : f.call(null, G__18780);
    };
    var G__21370__1 = function(x) {
      var G__18781 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18781) : f.call(null, G__18781);
    };
    var G__21370__2 = function(x, y) {
      var G__18782 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18782) : f.call(null, G__18782);
    };
    var G__21370__3 = function(x, y, z) {
      var G__18783 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18783) : f.call(null, G__18783);
    };
    var G__21370__4 = function() {
      var G__21371__delegate = function(x, y, z, args) {
        var G__18784 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18784) : f.call(null, G__18784);
      };
      var G__21371 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__21373__i = 0, G__21373__a = new Array(arguments.length - 3);
          while (G__21373__i < G__21373__a.length) {
            G__21373__a[G__21373__i] = arguments[G__21373__i + 3];
            ++G__21373__i;
          }
          args = new cljs.core.IndexedSeq(G__21373__a, 0, null);
        }
        return G__21371__delegate.call(this, x, y, z, args);
      };
      G__21371.cljs$lang$maxFixedArity = 3;
      G__21371.cljs$lang$applyTo = function(arglist__21374) {
        var x = cljs.core.first(arglist__21374);
        arglist__21374 = cljs.core.next(arglist__21374);
        var y = cljs.core.first(arglist__21374);
        arglist__21374 = cljs.core.next(arglist__21374);
        var z = cljs.core.first(arglist__21374);
        var args = cljs.core.rest(arglist__21374);
        return G__21371__delegate(x, y, z, args);
      };
      G__21371.cljs$core$IFn$_invoke$arity$variadic = G__21371__delegate;
      return G__21371;
    }();
    G__21370 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__21370__0.call(this);
        case 1:
          return G__21370__1.call(this, x);
        case 2:
          return G__21370__2.call(this, x, y);
        case 3:
          return G__21370__3.call(this, x, y, z);
        default:
          var G__21375 = null;
          if (arguments.length > 3) {
            var G__21376__i = 0, G__21376__a = new Array(arguments.length - 3);
            while (G__21376__i < G__21376__a.length) {
              G__21376__a[G__21376__i] = arguments[G__21376__i + 3];
              ++G__21376__i;
            }
            G__21375 = new cljs.core.IndexedSeq(G__21376__a, 0, null);
          }
          return G__21370__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__21375);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__21370.cljs$lang$maxFixedArity = 3;
    G__21370.cljs$lang$applyTo = G__21370__4.cljs$lang$applyTo;
    G__21370.cljs$core$IFn$_invoke$arity$0 = G__21370__0;
    G__21370.cljs$core$IFn$_invoke$arity$1 = G__21370__1;
    G__21370.cljs$core$IFn$_invoke$arity$2 = G__21370__2;
    G__21370.cljs$core$IFn$_invoke$arity$3 = G__21370__3;
    G__21370.cljs$core$IFn$_invoke$arity$variadic = G__21370__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__21370;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__21378 = null;
    var G__21378__0 = function() {
      var G__18785 = function() {
        var G__18786 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18786) : g.call(null, G__18786);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18785) : f.call(null, G__18785);
    };
    var G__21378__1 = function(x) {
      var G__18787 = function() {
        var G__18788 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18788) : g.call(null, G__18788);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18787) : f.call(null, G__18787);
    };
    var G__21378__2 = function(x, y) {
      var G__18789 = function() {
        var G__18790 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18790) : g.call(null, G__18790);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18789) : f.call(null, G__18789);
    };
    var G__21378__3 = function(x, y, z) {
      var G__18791 = function() {
        var G__18792 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18792) : g.call(null, G__18792);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18791) : f.call(null, G__18791);
    };
    var G__21378__4 = function() {
      var G__21383__delegate = function(x, y, z, args) {
        var G__18793 = function() {
          var G__18794 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18794) : g.call(null, G__18794);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18793) : f.call(null, G__18793);
      };
      var G__21383 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__21384__i = 0, G__21384__a = new Array(arguments.length - 3);
          while (G__21384__i < G__21384__a.length) {
            G__21384__a[G__21384__i] = arguments[G__21384__i + 3];
            ++G__21384__i;
          }
          args = new cljs.core.IndexedSeq(G__21384__a, 0, null);
        }
        return G__21383__delegate.call(this, x, y, z, args);
      };
      G__21383.cljs$lang$maxFixedArity = 3;
      G__21383.cljs$lang$applyTo = function(arglist__21385) {
        var x = cljs.core.first(arglist__21385);
        arglist__21385 = cljs.core.next(arglist__21385);
        var y = cljs.core.first(arglist__21385);
        arglist__21385 = cljs.core.next(arglist__21385);
        var z = cljs.core.first(arglist__21385);
        var args = cljs.core.rest(arglist__21385);
        return G__21383__delegate(x, y, z, args);
      };
      G__21383.cljs$core$IFn$_invoke$arity$variadic = G__21383__delegate;
      return G__21383;
    }();
    G__21378 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__21378__0.call(this);
        case 1:
          return G__21378__1.call(this, x);
        case 2:
          return G__21378__2.call(this, x, y);
        case 3:
          return G__21378__3.call(this, x, y, z);
        default:
          var G__21386 = null;
          if (arguments.length > 3) {
            var G__21387__i = 0, G__21387__a = new Array(arguments.length - 3);
            while (G__21387__i < G__21387__a.length) {
              G__21387__a[G__21387__i] = arguments[G__21387__i + 3];
              ++G__21387__i;
            }
            G__21386 = new cljs.core.IndexedSeq(G__21387__a, 0, null);
          }
          return G__21378__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__21386);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__21378.cljs$lang$maxFixedArity = 3;
    G__21378.cljs$lang$applyTo = G__21378__4.cljs$lang$applyTo;
    G__21378.cljs$core$IFn$_invoke$arity$0 = G__21378__0;
    G__21378.cljs$core$IFn$_invoke$arity$1 = G__21378__1;
    G__21378.cljs$core$IFn$_invoke$arity$2 = G__21378__2;
    G__21378.cljs$core$IFn$_invoke$arity$3 = G__21378__3;
    G__21378.cljs$core$IFn$_invoke$arity$variadic = G__21378__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__21378;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function() {
    var G__21388__delegate = function(args) {
      var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
      var fs__$2 = cljs.core.next(fs__$1);
      while (true) {
        if (fs__$2) {
          var G__21389 = function() {
            var fexpr__18795 = cljs.core.first(fs__$2);
            return fexpr__18795.cljs$core$IFn$_invoke$arity$1 ? fexpr__18795.cljs$core$IFn$_invoke$arity$1(ret) : fexpr__18795.call(null, ret);
          }();
          var G__21390 = cljs.core.next(fs__$2);
          ret = G__21389;
          fs__$2 = G__21390;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__21388 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__21391__i = 0, G__21391__a = new Array(arguments.length - 0);
        while (G__21391__i < G__21391__a.length) {
          G__21391__a[G__21391__i] = arguments[G__21391__i + 0];
          ++G__21391__i;
        }
        args = new cljs.core.IndexedSeq(G__21391__a, 0, null);
      }
      return G__21388__delegate.call(this, args);
    };
    G__21388.cljs$lang$maxFixedArity = 0;
    G__21388.cljs$lang$applyTo = function(arglist__21392) {
      var args = cljs.core.seq(arglist__21392);
      return G__21388__delegate(args);
    };
    G__21388.cljs$core$IFn$_invoke$arity$variadic = G__21388__delegate;
    return G__21388;
  }();
};
cljs.core.comp.cljs$lang$applyTo = function(seq18775) {
  var G__18776 = cljs.core.first(seq18775);
  var seq18775__$1 = cljs.core.next(seq18775);
  var G__18777 = cljs.core.first(seq18775__$1);
  var seq18775__$2 = cljs.core.next(seq18775__$1);
  var G__18778 = cljs.core.first(seq18775__$2);
  var seq18775__$3 = cljs.core.next(seq18775__$2);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18776, G__18777, G__18778, seq18775__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial(var_args) {
  var G__18802 = arguments.length;
  switch(G__18802) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___21398 = arguments.length;
      var i__4865__auto___21399 = 0;
      while (true) {
        if (i__4865__auto___21399 < len__4864__auto___21398) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___21399]);
          var G__21400 = i__4865__auto___21399 + 1;
          i__4865__auto___21399 = G__21400;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(4), 0, null);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4886__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__21401 = null;
    var G__21401__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__21401__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__21401__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__21401__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__21401__4 = function() {
      var G__21402__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0));
      };
      var G__21402 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__21403__i = 0, G__21403__a = new Array(arguments.length - 3);
          while (G__21403__i < G__21403__a.length) {
            G__21403__a[G__21403__i] = arguments[G__21403__i + 3];
            ++G__21403__i;
          }
          args = new cljs.core.IndexedSeq(G__21403__a, 0, null);
        }
        return G__21402__delegate.call(this, x, y, z, args);
      };
      G__21402.cljs$lang$maxFixedArity = 3;
      G__21402.cljs$lang$applyTo = function(arglist__21404) {
        var x = cljs.core.first(arglist__21404);
        arglist__21404 = cljs.core.next(arglist__21404);
        var y = cljs.core.first(arglist__21404);
        arglist__21404 = cljs.core.next(arglist__21404);
        var z = cljs.core.first(arglist__21404);
        var args = cljs.core.rest(arglist__21404);
        return G__21402__delegate(x, y, z, args);
      };
      G__21402.cljs$core$IFn$_invoke$arity$variadic = G__21402__delegate;
      return G__21402;
    }();
    G__21401 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__21401__0.call(this);
        case 1:
          return G__21401__1.call(this, x);
        case 2:
          return G__21401__2.call(this, x, y);
        case 3:
          return G__21401__3.call(this, x, y, z);
        default:
          var G__21405 = null;
          if (arguments.length > 3) {
            var G__21406__i = 0, G__21406__a = new Array(arguments.length - 3);
            while (G__21406__i < G__21406__a.length) {
              G__21406__a[G__21406__i] = arguments[G__21406__i + 3];
              ++G__21406__i;
            }
            G__21405 = new cljs.core.IndexedSeq(G__21406__a, 0, null);
          }
          return G__21401__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__21405);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__21401.cljs$lang$maxFixedArity = 3;
    G__21401.cljs$lang$applyTo = G__21401__4.cljs$lang$applyTo;
    G__21401.cljs$core$IFn$_invoke$arity$0 = G__21401__0;
    G__21401.cljs$core$IFn$_invoke$arity$1 = G__21401__1;
    G__21401.cljs$core$IFn$_invoke$arity$2 = G__21401__2;
    G__21401.cljs$core$IFn$_invoke$arity$3 = G__21401__3;
    G__21401.cljs$core$IFn$_invoke$arity$variadic = G__21401__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__21401;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__21407 = null;
    var G__21407__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__21407__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__21407__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__21407__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__21407__4 = function() {
      var G__21408__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([z, args], 0));
      };
      var G__21408 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__21409__i = 0, G__21409__a = new Array(arguments.length - 3);
          while (G__21409__i < G__21409__a.length) {
            G__21409__a[G__21409__i] = arguments[G__21409__i + 3];
            ++G__21409__i;
          }
          args = new cljs.core.IndexedSeq(G__21409__a, 0, null);
        }
        return G__21408__delegate.call(this, x, y, z, args);
      };
      G__21408.cljs$lang$maxFixedArity = 3;
      G__21408.cljs$lang$applyTo = function(arglist__21410) {
        var x = cljs.core.first(arglist__21410);
        arglist__21410 = cljs.core.next(arglist__21410);
        var y = cljs.core.first(arglist__21410);
        arglist__21410 = cljs.core.next(arglist__21410);
        var z = cljs.core.first(arglist__21410);
        var args = cljs.core.rest(arglist__21410);
        return G__21408__delegate(x, y, z, args);
      };
      G__21408.cljs$core$IFn$_invoke$arity$variadic = G__21408__delegate;
      return G__21408;
    }();
    G__21407 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__21407__0.call(this);
        case 1:
          return G__21407__1.call(this, x);
        case 2:
          return G__21407__2.call(this, x, y);
        case 3:
          return G__21407__3.call(this, x, y, z);
        default:
          var G__21411 = null;
          if (arguments.length > 3) {
            var G__21412__i = 0, G__21412__a = new Array(arguments.length - 3);
            while (G__21412__i < G__21412__a.length) {
              G__21412__a[G__21412__i] = arguments[G__21412__i + 3];
              ++G__21412__i;
            }
            G__21411 = new cljs.core.IndexedSeq(G__21412__a, 0, null);
          }
          return G__21407__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__21411);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__21407.cljs$lang$maxFixedArity = 3;
    G__21407.cljs$lang$applyTo = G__21407__4.cljs$lang$applyTo;
    G__21407.cljs$core$IFn$_invoke$arity$0 = G__21407__0;
    G__21407.cljs$core$IFn$_invoke$arity$1 = G__21407__1;
    G__21407.cljs$core$IFn$_invoke$arity$2 = G__21407__2;
    G__21407.cljs$core$IFn$_invoke$arity$3 = G__21407__3;
    G__21407.cljs$core$IFn$_invoke$arity$variadic = G__21407__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__21407;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__21415 = null;
    var G__21415__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__21415__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__21415__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__21415__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__21415__4 = function() {
      var G__21417__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([y, z, args], 0));
      };
      var G__21417 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__21418__i = 0, G__21418__a = new Array(arguments.length - 3);
          while (G__21418__i < G__21418__a.length) {
            G__21418__a[G__21418__i] = arguments[G__21418__i + 3];
            ++G__21418__i;
          }
          args = new cljs.core.IndexedSeq(G__21418__a, 0, null);
        }
        return G__21417__delegate.call(this, x, y, z, args);
      };
      G__21417.cljs$lang$maxFixedArity = 3;
      G__21417.cljs$lang$applyTo = function(arglist__21420) {
        var x = cljs.core.first(arglist__21420);
        arglist__21420 = cljs.core.next(arglist__21420);
        var y = cljs.core.first(arglist__21420);
        arglist__21420 = cljs.core.next(arglist__21420);
        var z = cljs.core.first(arglist__21420);
        var args = cljs.core.rest(arglist__21420);
        return G__21417__delegate(x, y, z, args);
      };
      G__21417.cljs$core$IFn$_invoke$arity$variadic = G__21417__delegate;
      return G__21417;
    }();
    G__21415 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__21415__0.call(this);
        case 1:
          return G__21415__1.call(this, x);
        case 2:
          return G__21415__2.call(this, x, y);
        case 3:
          return G__21415__3.call(this, x, y, z);
        default:
          var G__21421 = null;
          if (arguments.length > 3) {
            var G__21422__i = 0, G__21422__a = new Array(arguments.length - 3);
            while (G__21422__i < G__21422__a.length) {
              G__21422__a[G__21422__i] = arguments[G__21422__i + 3];
              ++G__21422__i;
            }
            G__21421 = new cljs.core.IndexedSeq(G__21422__a, 0, null);
          }
          return G__21415__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__21421);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__21415.cljs$lang$maxFixedArity = 3;
    G__21415.cljs$lang$applyTo = G__21415__4.cljs$lang$applyTo;
    G__21415.cljs$core$IFn$_invoke$arity$0 = G__21415__0;
    G__21415.cljs$core$IFn$_invoke$arity$1 = G__21415__1;
    G__21415.cljs$core$IFn$_invoke$arity$2 = G__21415__2;
    G__21415.cljs$core$IFn$_invoke$arity$3 = G__21415__3;
    G__21415.cljs$core$IFn$_invoke$arity$variadic = G__21415__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__21415;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__21423__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__21423 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__21424__i = 0, G__21424__a = new Array(arguments.length - 0);
        while (G__21424__i < G__21424__a.length) {
          G__21424__a[G__21424__i] = arguments[G__21424__i + 0];
          ++G__21424__i;
        }
        args = new cljs.core.IndexedSeq(G__21424__a, 0, null);
      }
      return G__21423__delegate.call(this, args);
    };
    G__21423.cljs$lang$maxFixedArity = 0;
    G__21423.cljs$lang$applyTo = function(arglist__21425) {
      var args = cljs.core.seq(arglist__21425);
      return G__21423__delegate(args);
    };
    G__21423.cljs$core$IFn$_invoke$arity$variadic = G__21423__delegate;
    return G__21423;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq18797) {
  var G__18798 = cljs.core.first(seq18797);
  var seq18797__$1 = cljs.core.next(seq18797);
  var G__18799 = cljs.core.first(seq18797__$1);
  var seq18797__$2 = cljs.core.next(seq18797__$1);
  var G__18800 = cljs.core.first(seq18797__$2);
  var seq18797__$3 = cljs.core.next(seq18797__$2);
  var G__18801 = cljs.core.first(seq18797__$3);
  var seq18797__$4 = cljs.core.next(seq18797__$3);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18798, G__18799, G__18800, G__18801, seq18797__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil(var_args) {
  var G__18804 = arguments.length;
  switch(G__18804) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__21429 = null;
    var G__21429__1 = function(a) {
      var G__18805 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18805) : f.call(null, G__18805);
    };
    var G__21429__2 = function(a, b) {
      var G__18806 = a == null ? x : a;
      var G__18807 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18806, G__18807) : f.call(null, G__18806, G__18807);
    };
    var G__21429__3 = function(a, b, c) {
      var G__18808 = a == null ? x : a;
      var G__18809 = b;
      var G__18810 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18808, G__18809, G__18810) : f.call(null, G__18808, G__18809, G__18810);
    };
    var G__21429__4 = function() {
      var G__21436__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__21436 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__21438__i = 0, G__21438__a = new Array(arguments.length - 3);
          while (G__21438__i < G__21438__a.length) {
            G__21438__a[G__21438__i] = arguments[G__21438__i + 3];
            ++G__21438__i;
          }
          ds = new cljs.core.IndexedSeq(G__21438__a, 0, null);
        }
        return G__21436__delegate.call(this, a, b, c, ds);
      };
      G__21436.cljs$lang$maxFixedArity = 3;
      G__21436.cljs$lang$applyTo = function(arglist__21439) {
        var a = cljs.core.first(arglist__21439);
        arglist__21439 = cljs.core.next(arglist__21439);
        var b = cljs.core.first(arglist__21439);
        arglist__21439 = cljs.core.next(arglist__21439);
        var c = cljs.core.first(arglist__21439);
        var ds = cljs.core.rest(arglist__21439);
        return G__21436__delegate(a, b, c, ds);
      };
      G__21436.cljs$core$IFn$_invoke$arity$variadic = G__21436__delegate;
      return G__21436;
    }();
    G__21429 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__21429__1.call(this, a);
        case 2:
          return G__21429__2.call(this, a, b);
        case 3:
          return G__21429__3.call(this, a, b, c);
        default:
          var G__21440 = null;
          if (arguments.length > 3) {
            var G__21441__i = 0, G__21441__a = new Array(arguments.length - 3);
            while (G__21441__i < G__21441__a.length) {
              G__21441__a[G__21441__i] = arguments[G__21441__i + 3];
              ++G__21441__i;
            }
            G__21440 = new cljs.core.IndexedSeq(G__21441__a, 0, null);
          }
          return G__21429__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__21440);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__21429.cljs$lang$maxFixedArity = 3;
    G__21429.cljs$lang$applyTo = G__21429__4.cljs$lang$applyTo;
    G__21429.cljs$core$IFn$_invoke$arity$1 = G__21429__1;
    G__21429.cljs$core$IFn$_invoke$arity$2 = G__21429__2;
    G__21429.cljs$core$IFn$_invoke$arity$3 = G__21429__3;
    G__21429.cljs$core$IFn$_invoke$arity$variadic = G__21429__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__21429;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__21442 = null;
    var G__21442__2 = function(a, b) {
      var G__18811 = a == null ? x : a;
      var G__18812 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18811, G__18812) : f.call(null, G__18811, G__18812);
    };
    var G__21442__3 = function(a, b, c) {
      var G__18813 = a == null ? x : a;
      var G__18814 = b == null ? y : b;
      var G__18815 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18813, G__18814, G__18815) : f.call(null, G__18813, G__18814, G__18815);
    };
    var G__21442__4 = function() {
      var G__21444__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__21444 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__21445__i = 0, G__21445__a = new Array(arguments.length - 3);
          while (G__21445__i < G__21445__a.length) {
            G__21445__a[G__21445__i] = arguments[G__21445__i + 3];
            ++G__21445__i;
          }
          ds = new cljs.core.IndexedSeq(G__21445__a, 0, null);
        }
        return G__21444__delegate.call(this, a, b, c, ds);
      };
      G__21444.cljs$lang$maxFixedArity = 3;
      G__21444.cljs$lang$applyTo = function(arglist__21446) {
        var a = cljs.core.first(arglist__21446);
        arglist__21446 = cljs.core.next(arglist__21446);
        var b = cljs.core.first(arglist__21446);
        arglist__21446 = cljs.core.next(arglist__21446);
        var c = cljs.core.first(arglist__21446);
        var ds = cljs.core.rest(arglist__21446);
        return G__21444__delegate(a, b, c, ds);
      };
      G__21444.cljs$core$IFn$_invoke$arity$variadic = G__21444__delegate;
      return G__21444;
    }();
    G__21442 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__21442__2.call(this, a, b);
        case 3:
          return G__21442__3.call(this, a, b, c);
        default:
          var G__21448 = null;
          if (arguments.length > 3) {
            var G__21449__i = 0, G__21449__a = new Array(arguments.length - 3);
            while (G__21449__i < G__21449__a.length) {
              G__21449__a[G__21449__i] = arguments[G__21449__i + 3];
              ++G__21449__i;
            }
            G__21448 = new cljs.core.IndexedSeq(G__21449__a, 0, null);
          }
          return G__21442__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__21448);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__21442.cljs$lang$maxFixedArity = 3;
    G__21442.cljs$lang$applyTo = G__21442__4.cljs$lang$applyTo;
    G__21442.cljs$core$IFn$_invoke$arity$2 = G__21442__2;
    G__21442.cljs$core$IFn$_invoke$arity$3 = G__21442__3;
    G__21442.cljs$core$IFn$_invoke$arity$variadic = G__21442__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__21442;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__21450 = null;
    var G__21450__2 = function(a, b) {
      var G__18816 = a == null ? x : a;
      var G__18817 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18816, G__18817) : f.call(null, G__18816, G__18817);
    };
    var G__21450__3 = function(a, b, c) {
      var G__18818 = a == null ? x : a;
      var G__18819 = b == null ? y : b;
      var G__18820 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18818, G__18819, G__18820) : f.call(null, G__18818, G__18819, G__18820);
    };
    var G__21450__4 = function() {
      var G__21455__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__21455 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__21456__i = 0, G__21456__a = new Array(arguments.length - 3);
          while (G__21456__i < G__21456__a.length) {
            G__21456__a[G__21456__i] = arguments[G__21456__i + 3];
            ++G__21456__i;
          }
          ds = new cljs.core.IndexedSeq(G__21456__a, 0, null);
        }
        return G__21455__delegate.call(this, a, b, c, ds);
      };
      G__21455.cljs$lang$maxFixedArity = 3;
      G__21455.cljs$lang$applyTo = function(arglist__21457) {
        var a = cljs.core.first(arglist__21457);
        arglist__21457 = cljs.core.next(arglist__21457);
        var b = cljs.core.first(arglist__21457);
        arglist__21457 = cljs.core.next(arglist__21457);
        var c = cljs.core.first(arglist__21457);
        var ds = cljs.core.rest(arglist__21457);
        return G__21455__delegate(a, b, c, ds);
      };
      G__21455.cljs$core$IFn$_invoke$arity$variadic = G__21455__delegate;
      return G__21455;
    }();
    G__21450 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__21450__2.call(this, a, b);
        case 3:
          return G__21450__3.call(this, a, b, c);
        default:
          var G__21458 = null;
          if (arguments.length > 3) {
            var G__21459__i = 0, G__21459__a = new Array(arguments.length - 3);
            while (G__21459__i < G__21459__a.length) {
              G__21459__a[G__21459__i] = arguments[G__21459__i + 3];
              ++G__21459__i;
            }
            G__21458 = new cljs.core.IndexedSeq(G__21459__a, 0, null);
          }
          return G__21450__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__21458);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__21450.cljs$lang$maxFixedArity = 3;
    G__21450.cljs$lang$applyTo = G__21450__4.cljs$lang$applyTo;
    G__21450.cljs$core$IFn$_invoke$arity$2 = G__21450__2;
    G__21450.cljs$core$IFn$_invoke$arity$3 = G__21450__3;
    G__21450.cljs$core$IFn$_invoke$arity$variadic = G__21450__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__21450;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed(var_args) {
  var G__18822 = arguments.length;
  switch(G__18822) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(-1) : cljs.core.volatile_BANG_.call(null, -1);
    return function() {
      var G__21461 = null;
      var G__21461__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__21461__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__21461__2 = function(result, input) {
        var G__18823 = result;
        var G__18824 = function() {
          var G__18825 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
          var G__18826 = input;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18825, G__18826) : f.call(null, G__18825, G__18826);
        }();
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18823, G__18824) : rf.call(null, G__18823, G__18824);
      };
      G__21461 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__21461__0.call(this);
          case 1:
            return G__21461__1.call(this, result);
          case 2:
            return G__21461__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21461.cljs$core$IFn$_invoke$arity$0 = G__21461__0;
      G__21461.cljs$core$IFn$_invoke$arity$1 = G__21461__1;
      G__21461.cljs$core$IFn$_invoke$arity$2 = G__21461__2;
      return G__21461;
    }();
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__5753__auto__ = cljs.core.seq(coll__$1);
      if (temp__5753__auto__) {
        var s = temp__5753__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4741__auto___21467 = size;
          var i_21468 = 0;
          while (true) {
            if (i_21468 < n__4741__auto___21467) {
              cljs.core.chunk_append(b, function() {
                var G__18831 = idx + i_21468;
                var G__18832 = cljs.core._nth(c, i_21468);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18831, G__18832) : f.call(null, G__18831, G__18832);
              }());
              var G__21469 = i_21468 + 1;
              i_21468 = G__21469;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__18833 = idx;
            var G__18834 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18833, G__18834) : f.call(null, G__18833, G__18834);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep(var_args) {
  var G__18836 = arguments.length;
  switch(G__18836) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__21471 = null;
      var G__21471__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__21471__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__21471__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__21471 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__21471__0.call(this);
          case 1:
            return G__21471__1.call(this, result);
          case 2:
            return G__21471__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21471.cljs$core$IFn$_invoke$arity$0 = G__21471__0;
      G__21471.cljs$core$IFn$_invoke$arity$1 = G__21471__1;
      G__21471.cljs$core$IFn$_invoke$arity$2 = G__21471__2;
      return G__21471;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5753__auto__ = cljs.core.seq(coll);
    if (temp__5753__auto__) {
      var s = temp__5753__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4741__auto___21472 = size;
        var i_21473 = 0;
        while (true) {
          if (i_21473 < n__4741__auto___21472) {
            var x_21475 = function() {
              var G__18837 = cljs.core._nth(c, i_21473);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18837) : f.call(null, G__18837);
            }();
            if (x_21475 == null) {
            } else {
              cljs.core.chunk_append(b, x_21475);
            }
            var G__21476 = i_21473 + 1;
            i_21473 = G__21476;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__18838 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18838) : f.call(null, G__18838);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__18839 = cljs.core.seq(self__.watches);
  var chunk__18840 = null;
  var count__18841 = 0;
  var i__18842 = 0;
  while (true) {
    if (i__18842 < count__18841) {
      var vec__18849 = chunk__18840.cljs$core$IIndexed$_nth$arity$2(null, i__18842);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18849, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18849, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__21484 = seq__18839;
      var G__21485 = chunk__18840;
      var G__21486 = count__18841;
      var G__21487 = i__18842 + 1;
      seq__18839 = G__21484;
      chunk__18840 = G__21485;
      count__18841 = G__21486;
      i__18842 = G__21487;
      continue;
    } else {
      var temp__5753__auto__ = cljs.core.seq(seq__18839);
      if (temp__5753__auto__) {
        var seq__18839__$1 = temp__5753__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__18839__$1)) {
          var c__4679__auto__ = cljs.core.chunk_first(seq__18839__$1);
          var G__21488 = cljs.core.chunk_rest(seq__18839__$1);
          var G__21489 = c__4679__auto__;
          var G__21490 = cljs.core.count(c__4679__auto__);
          var G__21491 = 0;
          seq__18839 = G__21488;
          chunk__18840 = G__21489;
          count__18841 = G__21490;
          i__18842 = G__21491;
          continue;
        } else {
          var vec__18852 = cljs.core.first(seq__18839__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18852, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18852, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__21495 = cljs.core.next(seq__18839__$1);
          var G__21496 = null;
          var G__21497 = 0;
          var G__21498 = 0;
          seq__18839 = G__21495;
          chunk__18840 = G__21496;
          count__18841 = G__21497;
          i__18842 = G__21498;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$state, cljs$cst$symbol$meta, cljs$cst$symbol$validator, cljs$cst$symbol$watches], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom(var_args) {
  var G__18858 = arguments.length;
  switch(G__18858) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___21500 = arguments.length;
      var i__4865__auto___21501 = 0;
      while (true) {
        if (i__4865__auto___21501 < len__4864__auto___21500) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___21501]);
          var G__21502 = i__4865__auto___21501 + 1;
          i__4865__auto___21501 = G__21502;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(1), 0, null);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4886__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__18859) {
  var map__18860 = p__18859;
  var map__18860__$1 = cljs.core.__destructure_map(map__18860);
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__18860__$1, cljs$cst$keyword$meta);
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__18860__$1, cljs$cst$keyword$validator);
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq18856) {
  var G__18857 = cljs.core.first(seq18856);
  var seq18856__$1 = cljs.core.next(seq18856);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18857, seq18856__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error("Validator rejected reference state");
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      a.cljs$core$IWatchable$_notify_watches$arity$3(null, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.reset_vals_BANG_ = function cljs$core$reset_vals_BANG_(a, new_value) {
  var validate = a.validator;
  if (validate == null) {
  } else {
    if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
    } else {
      throw new Error("Validator rejected reference state");
    }
  }
  var old_value = a.state;
  a.state = new_value;
  if (a.watches == null) {
  } else {
    cljs.core._notify_watches(a, old_value, new_value);
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_value, new_value], null);
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_(var_args) {
  var G__18867 = arguments.length;
  switch(G__18867) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___21516 = arguments.length;
      var i__4865__auto___21517 = 0;
      while (true) {
        if (i__4865__auto___21517 < len__4864__auto___21516) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___21517]);
          var G__21518 = i__4865__auto___21517 + 1;
          i__4865__auto___21517 = G__21518;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(4), 0, null);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4886__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__18868 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18868) : f.call(null, G__18868);
    }());
  } else {
    return cljs.core._swap_BANG_(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__18869 = a.state;
      var G__18870 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18869, G__18870) : f.call(null, G__18869, G__18870);
    }());
  } else {
    return cljs.core._swap_BANG_(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__18871 = a.state;
      var G__18872 = x;
      var G__18873 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18871, G__18872, G__18873) : f.call(null, G__18871, G__18872, G__18873);
    }());
  } else {
    return cljs.core._swap_BANG_(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq18862) {
  var G__18863 = cljs.core.first(seq18862);
  var seq18862__$1 = cljs.core.next(seq18862);
  var G__18864 = cljs.core.first(seq18862__$1);
  var seq18862__$2 = cljs.core.next(seq18862__$1);
  var G__18865 = cljs.core.first(seq18862__$2);
  var seq18862__$3 = cljs.core.next(seq18862__$2);
  var G__18866 = cljs.core.first(seq18862__$3);
  var seq18862__$4 = cljs.core.next(seq18862__$3);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18863, G__18864, G__18865, G__18866, seq18862__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.swap_vals_BANG_ = function cljs$core$swap_vals_BANG_(var_args) {
  var G__18880 = arguments.length;
  switch(G__18880) {
    case 2:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___21520 = arguments.length;
      var i__4865__auto___21521 = 0;
      while (true) {
        if (i__4865__auto___21521 < len__4864__auto___21520) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___21521]);
          var G__21522 = i__4865__auto___21521 + 1;
          i__4865__auto___21521 = G__21522;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(4), 0, null);
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4886__auto__);
  }
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__18881 = a.state;
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18881) : f.call(null, G__18881);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__18882 = a.state;
    var G__18883 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18882, G__18883) : f.call(null, G__18882, G__18883);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__18884 = a.state;
    var G__18885 = x;
    var G__18886 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18884, G__18885, G__18886) : f.call(null, G__18884, G__18885, G__18886);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  return cljs.core.reset_vals_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
};
cljs.core.swap_vals_BANG_.cljs$lang$applyTo = function(seq18875) {
  var G__18876 = cljs.core.first(seq18875);
  var seq18875__$1 = cljs.core.next(seq18875);
  var G__18877 = cljs.core.first(seq18875__$1);
  var seq18875__$2 = cljs.core.next(seq18875__$1);
  var G__18878 = cljs.core.first(seq18875__$2);
  var seq18875__$3 = cljs.core.next(seq18875__$2);
  var G__18879 = cljs.core.first(seq18875__$3);
  var seq18875__$4 = cljs.core.next(seq18875__$3);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18876, G__18877, G__18878, G__18879, seq18875__$4);
};
cljs.core.swap_vals_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  if (!(val == null) && cljs.core.not(function() {
    var G__18887 = cljs.core._deref(iref);
    return val.cljs$core$IFn$_invoke$arity$1 ? val.cljs$core$IFn$_invoke$arity$1(G__18887) : val.call(null, G__18887);
  }())) {
    throw new Error("Validator rejected reference state");
  } else {
  }
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$state, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed(var_args) {
  var G__18889 = arguments.length;
  switch(G__18889) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function() {
      var G__21543 = null;
      var G__21543__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__21543__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__21543__2 = function(result, input) {
        var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
        var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__21543 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__21543__0.call(this);
          case 1:
            return G__21543__1.call(this, result);
          case 2:
            return G__21543__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21543.cljs$core$IFn$_invoke$arity$0 = G__21543__0;
      G__21543.cljs$core$IFn$_invoke$arity$1 = G__21543__1;
      G__21543.cljs$core$IFn$_invoke$arity$2 = G__21543__2;
      return G__21543;
    }();
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__5753__auto__ = cljs.core.seq(coll__$1);
      if (temp__5753__auto__) {
        var s = temp__5753__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4741__auto___21547 = size;
          var i_21548 = 0;
          while (true) {
            if (i_21548 < n__4741__auto___21547) {
              var x_21549 = function() {
                var G__18894 = idx + i_21548;
                var G__18895 = cljs.core._nth(c, i_21548);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18894, G__18895) : f.call(null, G__18894, G__18895);
              }();
              if (x_21549 == null) {
              } else {
                cljs.core.chunk_append(b, x_21549);
              }
              var G__21550 = i_21548 + 1;
              i_21548 = G__21550;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__18896 = idx;
            var G__18897 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18896, G__18897) : f.call(null, G__18896, G__18897);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred(var_args) {
  var G__18909 = arguments.length;
  switch(G__18909) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___21552 = arguments.length;
      var i__4865__auto___21553 = 0;
      while (true) {
        if (i__4865__auto___21553 < len__4864__auto___21552) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___21553]);
          var G__21554 = i__4865__auto___21553 + 1;
          i__4865__auto___21553 = G__21554;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(3), 0, null);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4886__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4251__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4251__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__4251__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4251__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4251__auto__)) {
          var and__4251__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__4251__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__4251__auto____$1;
          }
        } else {
          return and__4251__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__21557__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4251__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4251__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__4251__auto__;
          }
        }());
      };
      var G__21557 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__21558__i = 0, G__21558__a = new Array(arguments.length - 3);
          while (G__21558__i < G__21558__a.length) {
            G__21558__a[G__21558__i] = arguments[G__21558__i + 3];
            ++G__21558__i;
          }
          args = new cljs.core.IndexedSeq(G__21558__a, 0, null);
        }
        return G__21557__delegate.call(this, x, y, z, args);
      };
      G__21557.cljs$lang$maxFixedArity = 3;
      G__21557.cljs$lang$applyTo = function(arglist__21559) {
        var x = cljs.core.first(arglist__21559);
        arglist__21559 = cljs.core.next(arglist__21559);
        var y = cljs.core.first(arglist__21559);
        arglist__21559 = cljs.core.next(arglist__21559);
        var z = cljs.core.first(arglist__21559);
        var args = cljs.core.rest(arglist__21559);
        return G__21557__delegate(x, y, z, args);
      };
      G__21557.cljs$core$IFn$_invoke$arity$variadic = G__21557__delegate;
      return G__21557;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__21561 = null;
          if (arguments.length > 3) {
            var G__21562__i = 0, G__21562__a = new Array(arguments.length - 3);
            while (G__21562__i < G__21562__a.length) {
              G__21562__a[G__21562__i] = arguments[G__21562__i + 3];
              ++G__21562__i;
            }
            G__21561 = new cljs.core.IndexedSeq(G__21562__a, 0, null);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__21561);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4251__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4251__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__4251__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4251__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4251__auto__)) {
          var and__4251__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4251__auto____$1)) {
            var and__4251__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__4251__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__4251__auto____$2;
            }
          } else {
            return and__4251__auto____$1;
          }
        } else {
          return and__4251__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4251__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4251__auto__)) {
          var and__4251__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4251__auto____$1)) {
            var and__4251__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__4251__auto____$2)) {
              var and__4251__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__4251__auto____$3)) {
                var and__4251__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4251__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__4251__auto____$4;
                }
              } else {
                return and__4251__auto____$3;
              }
            } else {
              return and__4251__auto____$2;
            }
          } else {
            return and__4251__auto____$1;
          }
        } else {
          return and__4251__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__21566__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4251__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4251__auto__)) {
            return cljs.core.every_QMARK_(function(p1__18898_SHARP_) {
              var and__4251__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__18898_SHARP_) : p1.call(null, p1__18898_SHARP_);
              if (cljs.core.truth_(and__4251__auto____$1)) {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__18898_SHARP_) : p2.call(null, p1__18898_SHARP_);
              } else {
                return and__4251__auto____$1;
              }
            }, args);
          } else {
            return and__4251__auto__;
          }
        }());
      };
      var G__21566 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__21567__i = 0, G__21567__a = new Array(arguments.length - 3);
          while (G__21567__i < G__21567__a.length) {
            G__21567__a[G__21567__i] = arguments[G__21567__i + 3];
            ++G__21567__i;
          }
          args = new cljs.core.IndexedSeq(G__21567__a, 0, null);
        }
        return G__21566__delegate.call(this, x, y, z, args);
      };
      G__21566.cljs$lang$maxFixedArity = 3;
      G__21566.cljs$lang$applyTo = function(arglist__21568) {
        var x = cljs.core.first(arglist__21568);
        arglist__21568 = cljs.core.next(arglist__21568);
        var y = cljs.core.first(arglist__21568);
        arglist__21568 = cljs.core.next(arglist__21568);
        var z = cljs.core.first(arglist__21568);
        var args = cljs.core.rest(arglist__21568);
        return G__21566__delegate(x, y, z, args);
      };
      G__21566.cljs$core$IFn$_invoke$arity$variadic = G__21566__delegate;
      return G__21566;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__21569 = null;
          if (arguments.length > 3) {
            var G__21570__i = 0, G__21570__a = new Array(arguments.length - 3);
            while (G__21570__i < G__21570__a.length) {
              G__21570__a[G__21570__i] = arguments[G__21570__i + 3];
              ++G__21570__i;
            }
            G__21569 = new cljs.core.IndexedSeq(G__21570__a, 0, null);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__21569);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4251__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4251__auto__)) {
          var and__4251__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4251__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__4251__auto____$1;
          }
        } else {
          return and__4251__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4251__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4251__auto__)) {
          var and__4251__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4251__auto____$1)) {
            var and__4251__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4251__auto____$2)) {
              var and__4251__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4251__auto____$3)) {
                var and__4251__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4251__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__4251__auto____$4;
                }
              } else {
                return and__4251__auto____$3;
              }
            } else {
              return and__4251__auto____$2;
            }
          } else {
            return and__4251__auto____$1;
          }
        } else {
          return and__4251__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4251__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4251__auto__)) {
          var and__4251__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4251__auto____$1)) {
            var and__4251__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4251__auto____$2)) {
              var and__4251__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4251__auto____$3)) {
                var and__4251__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4251__auto____$4)) {
                  var and__4251__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__4251__auto____$5)) {
                    var and__4251__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__4251__auto____$6)) {
                      var and__4251__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__4251__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__4251__auto____$7;
                      }
                    } else {
                      return and__4251__auto____$6;
                    }
                  } else {
                    return and__4251__auto____$5;
                  }
                } else {
                  return and__4251__auto____$4;
                }
              } else {
                return and__4251__auto____$3;
              }
            } else {
              return and__4251__auto____$2;
            }
          } else {
            return and__4251__auto____$1;
          }
        } else {
          return and__4251__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__21572__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4251__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4251__auto__)) {
            return cljs.core.every_QMARK_(function(p1__18899_SHARP_) {
              var and__4251__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__18899_SHARP_) : p1.call(null, p1__18899_SHARP_);
              if (cljs.core.truth_(and__4251__auto____$1)) {
                var and__4251__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__18899_SHARP_) : p2.call(null, p1__18899_SHARP_);
                if (cljs.core.truth_(and__4251__auto____$2)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__18899_SHARP_) : p3.call(null, p1__18899_SHARP_);
                } else {
                  return and__4251__auto____$2;
                }
              } else {
                return and__4251__auto____$1;
              }
            }, args);
          } else {
            return and__4251__auto__;
          }
        }());
      };
      var G__21572 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__21573__i = 0, G__21573__a = new Array(arguments.length - 3);
          while (G__21573__i < G__21573__a.length) {
            G__21573__a[G__21573__i] = arguments[G__21573__i + 3];
            ++G__21573__i;
          }
          args = new cljs.core.IndexedSeq(G__21573__a, 0, null);
        }
        return G__21572__delegate.call(this, x, y, z, args);
      };
      G__21572.cljs$lang$maxFixedArity = 3;
      G__21572.cljs$lang$applyTo = function(arglist__21575) {
        var x = cljs.core.first(arglist__21575);
        arglist__21575 = cljs.core.next(arglist__21575);
        var y = cljs.core.first(arglist__21575);
        arglist__21575 = cljs.core.next(arglist__21575);
        var z = cljs.core.first(arglist__21575);
        var args = cljs.core.rest(arglist__21575);
        return G__21572__delegate(x, y, z, args);
      };
      G__21572.cljs$core$IFn$_invoke$arity$variadic = G__21572__delegate;
      return G__21572;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__21576 = null;
          if (arguments.length > 3) {
            var G__21577__i = 0, G__21577__a = new Array(arguments.length - 3);
            while (G__21577__i < G__21577__a.length) {
              G__21577__a[G__21577__i] = arguments[G__21577__i + 3];
              ++G__21577__i;
            }
            G__21576 = new cljs.core.IndexedSeq(G__21577__a, 0, null);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__21576);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function() {
    var cljs$core$epn = null;
    var cljs$core$epn__0 = function() {
      return true;
    };
    var cljs$core$epn__1 = function(x) {
      return cljs.core.every_QMARK_(function(p1__18900_SHARP_) {
        return p1__18900_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18900_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__18900_SHARP_.call(null, x);
      }, ps__$1);
    };
    var cljs$core$epn__2 = function(x, y) {
      return cljs.core.every_QMARK_(function(p1__18901_SHARP_) {
        var and__4251__auto__ = p1__18901_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18901_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__18901_SHARP_.call(null, x);
        if (cljs.core.truth_(and__4251__auto__)) {
          return p1__18901_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18901_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__18901_SHARP_.call(null, y);
        } else {
          return and__4251__auto__;
        }
      }, ps__$1);
    };
    var cljs$core$epn__3 = function(x, y, z) {
      return cljs.core.every_QMARK_(function(p1__18902_SHARP_) {
        var and__4251__auto__ = p1__18902_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18902_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__18902_SHARP_.call(null, x);
        if (cljs.core.truth_(and__4251__auto__)) {
          var and__4251__auto____$1 = p1__18902_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18902_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__18902_SHARP_.call(null, y);
          if (cljs.core.truth_(and__4251__auto____$1)) {
            return p1__18902_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18902_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__18902_SHARP_.call(null, z);
          } else {
            return and__4251__auto____$1;
          }
        } else {
          return and__4251__auto__;
        }
      }, ps__$1);
    };
    var cljs$core$epn__4 = function() {
      var G__21580__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4251__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4251__auto__)) {
            return cljs.core.every_QMARK_(function(p1__18903_SHARP_) {
              return cljs.core.every_QMARK_(p1__18903_SHARP_, args);
            }, ps__$1);
          } else {
            return and__4251__auto__;
          }
        }());
      };
      var G__21580 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__21581__i = 0, G__21581__a = new Array(arguments.length - 3);
          while (G__21581__i < G__21581__a.length) {
            G__21581__a[G__21581__i] = arguments[G__21581__i + 3];
            ++G__21581__i;
          }
          args = new cljs.core.IndexedSeq(G__21581__a, 0, null);
        }
        return G__21580__delegate.call(this, x, y, z, args);
      };
      G__21580.cljs$lang$maxFixedArity = 3;
      G__21580.cljs$lang$applyTo = function(arglist__21582) {
        var x = cljs.core.first(arglist__21582);
        arglist__21582 = cljs.core.next(arglist__21582);
        var y = cljs.core.first(arglist__21582);
        arglist__21582 = cljs.core.next(arglist__21582);
        var z = cljs.core.first(arglist__21582);
        var args = cljs.core.rest(arglist__21582);
        return G__21580__delegate(x, y, z, args);
      };
      G__21580.cljs$core$IFn$_invoke$arity$variadic = G__21580__delegate;
      return G__21580;
    }();
    cljs$core$epn = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$epn__0.call(this);
        case 1:
          return cljs$core$epn__1.call(this, x);
        case 2:
          return cljs$core$epn__2.call(this, x, y);
        case 3:
          return cljs$core$epn__3.call(this, x, y, z);
        default:
          var G__21583 = null;
          if (arguments.length > 3) {
            var G__21584__i = 0, G__21584__a = new Array(arguments.length - 3);
            while (G__21584__i < G__21584__a.length) {
              G__21584__a[G__21584__i] = arguments[G__21584__i + 3];
              ++G__21584__i;
            }
            G__21583 = new cljs.core.IndexedSeq(G__21584__a, 0, null);
          }
          return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__21583);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$epn.cljs$lang$maxFixedArity = 3;
    cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$epn;
  }();
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq18905) {
  var G__18906 = cljs.core.first(seq18905);
  var seq18905__$1 = cljs.core.next(seq18905);
  var G__18907 = cljs.core.first(seq18905__$1);
  var seq18905__$2 = cljs.core.next(seq18905__$1);
  var G__18908 = cljs.core.first(seq18905__$2);
  var seq18905__$3 = cljs.core.next(seq18905__$2);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18906, G__18907, G__18908, seq18905__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn(var_args) {
  var G__18921 = arguments.length;
  switch(G__18921) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___21587 = arguments.length;
      var i__4865__auto___21588 = 0;
      while (true) {
        if (i__4865__auto___21588 < len__4864__auto___21587) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___21588]);
          var G__21589 = i__4865__auto___21588 + 1;
          i__4865__auto___21588 = G__21589;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(3), 0, null);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4886__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__4253__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__4253__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        var or__4253__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__4253__auto____$1)) {
          return or__4253__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__21594__delegate = function(x, y, z, args) {
        var or__4253__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4253__auto__)) {
          return or__4253__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__21594 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__21595__i = 0, G__21595__a = new Array(arguments.length - 3);
          while (G__21595__i < G__21595__a.length) {
            G__21595__a[G__21595__i] = arguments[G__21595__i + 3];
            ++G__21595__i;
          }
          args = new cljs.core.IndexedSeq(G__21595__a, 0, null);
        }
        return G__21594__delegate.call(this, x, y, z, args);
      };
      G__21594.cljs$lang$maxFixedArity = 3;
      G__21594.cljs$lang$applyTo = function(arglist__21596) {
        var x = cljs.core.first(arglist__21596);
        arglist__21596 = cljs.core.next(arglist__21596);
        var y = cljs.core.first(arglist__21596);
        arglist__21596 = cljs.core.next(arglist__21596);
        var z = cljs.core.first(arglist__21596);
        var args = cljs.core.rest(arglist__21596);
        return G__21594__delegate(x, y, z, args);
      };
      G__21594.cljs$core$IFn$_invoke$arity$variadic = G__21594__delegate;
      return G__21594;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__21597 = null;
          if (arguments.length > 3) {
            var G__21598__i = 0, G__21598__a = new Array(arguments.length - 3);
            while (G__21598__i < G__21598__a.length) {
              G__21598__a[G__21598__i] = arguments[G__21598__i + 3];
              ++G__21598__i;
            }
            G__21597 = new cljs.core.IndexedSeq(G__21598__a, 0, null);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__21597);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__4253__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__4253__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        var or__4253__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4253__auto____$1)) {
          return or__4253__auto____$1;
        } else {
          var or__4253__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__4253__auto____$2)) {
            return or__4253__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__4253__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        var or__4253__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4253__auto____$1)) {
          return or__4253__auto____$1;
        } else {
          var or__4253__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__4253__auto____$2)) {
            return or__4253__auto____$2;
          } else {
            var or__4253__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__4253__auto____$3)) {
              return or__4253__auto____$3;
            } else {
              var or__4253__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4253__auto____$4)) {
                return or__4253__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__21599__delegate = function(x, y, z, args) {
        var or__4253__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4253__auto__)) {
          return or__4253__auto__;
        } else {
          return cljs.core.some(function(p1__18910_SHARP_) {
            var or__4253__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__18910_SHARP_) : p1.call(null, p1__18910_SHARP_);
            if (cljs.core.truth_(or__4253__auto____$1)) {
              return or__4253__auto____$1;
            } else {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__18910_SHARP_) : p2.call(null, p1__18910_SHARP_);
            }
          }, args);
        }
      };
      var G__21599 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__21600__i = 0, G__21600__a = new Array(arguments.length - 3);
          while (G__21600__i < G__21600__a.length) {
            G__21600__a[G__21600__i] = arguments[G__21600__i + 3];
            ++G__21600__i;
          }
          args = new cljs.core.IndexedSeq(G__21600__a, 0, null);
        }
        return G__21599__delegate.call(this, x, y, z, args);
      };
      G__21599.cljs$lang$maxFixedArity = 3;
      G__21599.cljs$lang$applyTo = function(arglist__21601) {
        var x = cljs.core.first(arglist__21601);
        arglist__21601 = cljs.core.next(arglist__21601);
        var y = cljs.core.first(arglist__21601);
        arglist__21601 = cljs.core.next(arglist__21601);
        var z = cljs.core.first(arglist__21601);
        var args = cljs.core.rest(arglist__21601);
        return G__21599__delegate(x, y, z, args);
      };
      G__21599.cljs$core$IFn$_invoke$arity$variadic = G__21599__delegate;
      return G__21599;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__21602 = null;
          if (arguments.length > 3) {
            var G__21603__i = 0, G__21603__a = new Array(arguments.length - 3);
            while (G__21603__i < G__21603__a.length) {
              G__21603__a[G__21603__i] = arguments[G__21603__i + 3];
              ++G__21603__i;
            }
            G__21602 = new cljs.core.IndexedSeq(G__21603__a, 0, null);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__21602);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__4253__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        var or__4253__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4253__auto____$1)) {
          return or__4253__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__4253__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        var or__4253__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4253__auto____$1)) {
          return or__4253__auto____$1;
        } else {
          var or__4253__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4253__auto____$2)) {
            return or__4253__auto____$2;
          } else {
            var or__4253__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4253__auto____$3)) {
              return or__4253__auto____$3;
            } else {
              var or__4253__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4253__auto____$4)) {
                return or__4253__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__4253__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        var or__4253__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4253__auto____$1)) {
          return or__4253__auto____$1;
        } else {
          var or__4253__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4253__auto____$2)) {
            return or__4253__auto____$2;
          } else {
            var or__4253__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4253__auto____$3)) {
              return or__4253__auto____$3;
            } else {
              var or__4253__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4253__auto____$4)) {
                return or__4253__auto____$4;
              } else {
                var or__4253__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__4253__auto____$5)) {
                  return or__4253__auto____$5;
                } else {
                  var or__4253__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__4253__auto____$6)) {
                    return or__4253__auto____$6;
                  } else {
                    var or__4253__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__4253__auto____$7)) {
                      return or__4253__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__21608__delegate = function(x, y, z, args) {
        var or__4253__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4253__auto__)) {
          return or__4253__auto__;
        } else {
          return cljs.core.some(function(p1__18911_SHARP_) {
            var or__4253__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__18911_SHARP_) : p1.call(null, p1__18911_SHARP_);
            if (cljs.core.truth_(or__4253__auto____$1)) {
              return or__4253__auto____$1;
            } else {
              var or__4253__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__18911_SHARP_) : p2.call(null, p1__18911_SHARP_);
              if (cljs.core.truth_(or__4253__auto____$2)) {
                return or__4253__auto____$2;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__18911_SHARP_) : p3.call(null, p1__18911_SHARP_);
              }
            }
          }, args);
        }
      };
      var G__21608 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__21609__i = 0, G__21609__a = new Array(arguments.length - 3);
          while (G__21609__i < G__21609__a.length) {
            G__21609__a[G__21609__i] = arguments[G__21609__i + 3];
            ++G__21609__i;
          }
          args = new cljs.core.IndexedSeq(G__21609__a, 0, null);
        }
        return G__21608__delegate.call(this, x, y, z, args);
      };
      G__21608.cljs$lang$maxFixedArity = 3;
      G__21608.cljs$lang$applyTo = function(arglist__21610) {
        var x = cljs.core.first(arglist__21610);
        arglist__21610 = cljs.core.next(arglist__21610);
        var y = cljs.core.first(arglist__21610);
        arglist__21610 = cljs.core.next(arglist__21610);
        var z = cljs.core.first(arglist__21610);
        var args = cljs.core.rest(arglist__21610);
        return G__21608__delegate(x, y, z, args);
      };
      G__21608.cljs$core$IFn$_invoke$arity$variadic = G__21608__delegate;
      return G__21608;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__21611 = null;
          if (arguments.length > 3) {
            var G__21612__i = 0, G__21612__a = new Array(arguments.length - 3);
            while (G__21612__i < G__21612__a.length) {
              G__21612__a[G__21612__i] = arguments[G__21612__i + 3];
              ++G__21612__i;
            }
            G__21611 = new cljs.core.IndexedSeq(G__21612__a, 0, null);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__21611);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function() {
    var cljs$core$spn = null;
    var cljs$core$spn__0 = function() {
      return null;
    };
    var cljs$core$spn__1 = function(x) {
      return cljs.core.some(function(p1__18912_SHARP_) {
        return p1__18912_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18912_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__18912_SHARP_.call(null, x);
      }, ps__$1);
    };
    var cljs$core$spn__2 = function(x, y) {
      return cljs.core.some(function(p1__18913_SHARP_) {
        var or__4253__auto__ = p1__18913_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18913_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__18913_SHARP_.call(null, x);
        if (cljs.core.truth_(or__4253__auto__)) {
          return or__4253__auto__;
        } else {
          return p1__18913_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18913_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__18913_SHARP_.call(null, y);
        }
      }, ps__$1);
    };
    var cljs$core$spn__3 = function(x, y, z) {
      return cljs.core.some(function(p1__18914_SHARP_) {
        var or__4253__auto__ = p1__18914_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18914_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__18914_SHARP_.call(null, x);
        if (cljs.core.truth_(or__4253__auto__)) {
          return or__4253__auto__;
        } else {
          var or__4253__auto____$1 = p1__18914_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18914_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__18914_SHARP_.call(null, y);
          if (cljs.core.truth_(or__4253__auto____$1)) {
            return or__4253__auto____$1;
          } else {
            return p1__18914_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18914_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__18914_SHARP_.call(null, z);
          }
        }
      }, ps__$1);
    };
    var cljs$core$spn__4 = function() {
      var G__21613__delegate = function(x, y, z, args) {
        var or__4253__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4253__auto__)) {
          return or__4253__auto__;
        } else {
          return cljs.core.some(function(p1__18915_SHARP_) {
            return cljs.core.some(p1__18915_SHARP_, args);
          }, ps__$1);
        }
      };
      var G__21613 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__21614__i = 0, G__21614__a = new Array(arguments.length - 3);
          while (G__21614__i < G__21614__a.length) {
            G__21614__a[G__21614__i] = arguments[G__21614__i + 3];
            ++G__21614__i;
          }
          args = new cljs.core.IndexedSeq(G__21614__a, 0, null);
        }
        return G__21613__delegate.call(this, x, y, z, args);
      };
      G__21613.cljs$lang$maxFixedArity = 3;
      G__21613.cljs$lang$applyTo = function(arglist__21615) {
        var x = cljs.core.first(arglist__21615);
        arglist__21615 = cljs.core.next(arglist__21615);
        var y = cljs.core.first(arglist__21615);
        arglist__21615 = cljs.core.next(arglist__21615);
        var z = cljs.core.first(arglist__21615);
        var args = cljs.core.rest(arglist__21615);
        return G__21613__delegate(x, y, z, args);
      };
      G__21613.cljs$core$IFn$_invoke$arity$variadic = G__21613__delegate;
      return G__21613;
    }();
    cljs$core$spn = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$spn__0.call(this);
        case 1:
          return cljs$core$spn__1.call(this, x);
        case 2:
          return cljs$core$spn__2.call(this, x, y);
        case 3:
          return cljs$core$spn__3.call(this, x, y, z);
        default:
          var G__21617 = null;
          if (arguments.length > 3) {
            var G__21618__i = 0, G__21618__a = new Array(arguments.length - 3);
            while (G__21618__i < G__21618__a.length) {
              G__21618__a[G__21618__i] = arguments[G__21618__i + 3];
              ++G__21618__i;
            }
            G__21617 = new cljs.core.IndexedSeq(G__21618__a, 0, null);
          }
          return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__21617);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$spn.cljs$lang$maxFixedArity = 3;
    cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$spn;
  }();
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq18917) {
  var G__18918 = cljs.core.first(seq18917);
  var seq18917__$1 = cljs.core.next(seq18917);
  var G__18919 = cljs.core.first(seq18917__$1);
  var seq18917__$2 = cljs.core.next(seq18917__$1);
  var G__18920 = cljs.core.first(seq18917__$2);
  var seq18917__$3 = cljs.core.next(seq18917__$2);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18918, G__18919, G__18920, seq18917__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map(var_args) {
  var G__18929 = arguments.length;
  switch(G__18929) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___21620 = arguments.length;
      var i__4865__auto___21621 = 0;
      while (true) {
        if (i__4865__auto___21621 < len__4864__auto___21620) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___21621]);
          var G__21622 = i__4865__auto___21621 + 1;
          i__4865__auto___21621 = G__21622;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(4), 0, null);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4886__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__21623 = null;
      var G__21623__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__21623__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__21623__2 = function(result, input) {
        var G__18930 = result;
        var G__18931 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18930, G__18931) : rf.call(null, G__18930, G__18931);
      };
      var G__21623__3 = function() {
        var G__21624__delegate = function(result, input, inputs) {
          var G__18932 = result;
          var G__18933 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18932, G__18933) : rf.call(null, G__18932, G__18933);
        };
        var G__21624 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__21625__i = 0, G__21625__a = new Array(arguments.length - 2);
            while (G__21625__i < G__21625__a.length) {
              G__21625__a[G__21625__i] = arguments[G__21625__i + 2];
              ++G__21625__i;
            }
            inputs = new cljs.core.IndexedSeq(G__21625__a, 0, null);
          }
          return G__21624__delegate.call(this, result, input, inputs);
        };
        G__21624.cljs$lang$maxFixedArity = 2;
        G__21624.cljs$lang$applyTo = function(arglist__21626) {
          var result = cljs.core.first(arglist__21626);
          arglist__21626 = cljs.core.next(arglist__21626);
          var input = cljs.core.first(arglist__21626);
          var inputs = cljs.core.rest(arglist__21626);
          return G__21624__delegate(result, input, inputs);
        };
        G__21624.cljs$core$IFn$_invoke$arity$variadic = G__21624__delegate;
        return G__21624;
      }();
      G__21623 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__21623__0.call(this);
          case 1:
            return G__21623__1.call(this, result);
          case 2:
            return G__21623__2.call(this, result, input);
          default:
            var G__21628 = null;
            if (arguments.length > 2) {
              var G__21629__i = 0, G__21629__a = new Array(arguments.length - 2);
              while (G__21629__i < G__21629__a.length) {
                G__21629__a[G__21629__i] = arguments[G__21629__i + 2];
                ++G__21629__i;
              }
              G__21628 = new cljs.core.IndexedSeq(G__21629__a, 0, null);
            }
            return G__21623__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__21628);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21623.cljs$lang$maxFixedArity = 2;
      G__21623.cljs$lang$applyTo = G__21623__3.cljs$lang$applyTo;
      G__21623.cljs$core$IFn$_invoke$arity$0 = G__21623__0;
      G__21623.cljs$core$IFn$_invoke$arity$1 = G__21623__1;
      G__21623.cljs$core$IFn$_invoke$arity$2 = G__21623__2;
      G__21623.cljs$core$IFn$_invoke$arity$variadic = G__21623__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__21623;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5753__auto__ = cljs.core.seq(coll);
    if (temp__5753__auto__) {
      var s = temp__5753__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4741__auto___21630 = size;
        var i_21631 = 0;
        while (true) {
          if (i_21631 < n__4741__auto___21630) {
            cljs.core.chunk_append(b, function() {
              var G__18934 = cljs.core._nth(c, i_21631);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18934) : f.call(null, G__18934);
            }());
            var G__21633 = i_21631 + 1;
            i_21631 = G__21633;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__18935 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18935) : f.call(null, G__18935);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__18936 = cljs.core.first(s1);
        var G__18937 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18936, G__18937) : f.call(null, G__18936, G__18937);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && (s2 && s3)) {
      return cljs.core.cons(function() {
        var G__18938 = cljs.core.first(s1);
        var G__18939 = cljs.core.first(s2);
        var G__18940 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18938, G__18939, G__18940) : f.call(null, G__18938, G__18939, G__18940);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__18922_SHARP_) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__18922_SHARP_);
  }, step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq18924) {
  var G__18925 = cljs.core.first(seq18924);
  var seq18924__$1 = cljs.core.next(seq18924);
  var G__18926 = cljs.core.first(seq18924__$1);
  var seq18924__$2 = cljs.core.next(seq18924__$1);
  var G__18927 = cljs.core.first(seq18924__$2);
  var seq18924__$3 = cljs.core.next(seq18924__$2);
  var G__18928 = cljs.core.first(seq18924__$3);
  var seq18924__$4 = cljs.core.next(seq18924__$3);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18925, G__18926, G__18927, G__18928, seq18924__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take(var_args) {
  var G__18942 = arguments.length;
  switch(G__18942) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function() {
      var G__21635 = null;
      var G__21635__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__21635__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__21635__2 = function(result, input) {
        var n__$1 = cljs.core.deref(na);
        var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
        var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
        if (!(nn > 0)) {
          return cljs.core.ensure_reduced(result__$1);
        } else {
          return result__$1;
        }
      };
      G__21635 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__21635__0.call(this);
          case 1:
            return G__21635__1.call(this, result);
          case 2:
            return G__21635__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21635.cljs$core$IFn$_invoke$arity$0 = G__21635__0;
      G__21635.cljs$core$IFn$_invoke$arity$1 = G__21635__1;
      G__21635.cljs$core$IFn$_invoke$arity$2 = G__21635__2;
      return G__21635;
    }();
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__5753__auto__ = cljs.core.seq(coll);
      if (temp__5753__auto__) {
        var s = temp__5753__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop(var_args) {
  var G__18944 = arguments.length;
  switch(G__18944) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function() {
      var G__21637 = null;
      var G__21637__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__21637__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__21637__2 = function(result, input) {
        var n__$1 = cljs.core.deref(na);
        na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
        if (n__$1 > 0) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__21637 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__21637__0.call(this);
          case 1:
            return G__21637__1.call(this, result);
          case 2:
            return G__21637__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21637.cljs$core$IFn$_invoke$arity$0 = G__21637__0;
      G__21637.cljs$core$IFn$_invoke$arity$1 = G__21637__1;
      G__21637.cljs$core$IFn$_invoke$arity$2 = G__21637__2;
      return G__21637;
    }();
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__21638 = n__$1 - 1;
        var G__21639 = cljs.core.rest(s);
        n__$1 = G__21638;
        coll__$1 = G__21639;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step(n, coll);
  }, null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last(var_args) {
  var G__18946 = arguments.length;
  switch(G__18946) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__21641 = cljs.core.next(s);
      var G__21642 = cljs.core.next(lead);
      s = G__21641;
      lead = G__21642;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while(var_args) {
  var G__18948 = arguments.length;
  switch(G__18948) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function() {
      var G__21644 = null;
      var G__21644__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__21644__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__21644__2 = function(result, input) {
        var drop_QMARK_ = cljs.core.deref(da);
        if (cljs.core.truth_(function() {
          var and__4251__auto__ = drop_QMARK_;
          if (cljs.core.truth_(and__4251__auto__)) {
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
          } else {
            return and__4251__auto__;
          }
        }())) {
          return result;
        } else {
          cljs.core.vreset_BANG_(da, null);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__21644 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__21644__0.call(this);
          case 1:
            return G__21644__1.call(this, result);
          case 2:
            return G__21644__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21644.cljs$core$IFn$_invoke$arity$0 = G__21644__0;
      G__21644.cljs$core$IFn$_invoke$arity$1 = G__21644__1;
      G__21644.cljs$core$IFn$_invoke$arity$2 = G__21644__2;
      return G__21644;
    }();
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__4251__auto__ = s;
        if (and__4251__auto__) {
          var G__18949 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__18949) : pred__$1.call(null, G__18949);
        } else {
          return and__4251__auto__;
        }
      }())) {
        var G__21645 = pred__$1;
        var G__21646 = cljs.core.rest(s);
        pred__$1 = G__21645;
        coll__$1 = G__21646;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step(pred, coll);
  }, null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.Cycle = function(meta, all, prev, current, _next) {
  this.meta = meta;
  this.all = all;
  this.prev = prev;
  this.current = current;
  this._next = _next;
  this.cljs$lang$protocol_mask$partition0$ = 26083532;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Cycle.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cycle.prototype.currentval = function() {
  var self__ = this;
  var coll = this;
  if (self__.current) {
  } else {
    var temp__5751__auto___21647 = cljs.core.next(self__.prev);
    if (temp__5751__auto___21647) {
      var c_21648 = temp__5751__auto___21647;
      self__.current = c_21648;
    } else {
      self__.current = self__.all;
    }
  }
  return self__.current;
};
cljs.core.Cycle.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cycle.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.Cycle.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Cycle.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return !(self__.current == null);
};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  var s = coll__$1.currentval();
  var ret = cljs.core.first(s);
  while (true) {
    var s__$1 = function() {
      var or__4253__auto__ = cljs.core.next(s);
      if (or__4253__auto__) {
        return or__4253__auto__;
      } else {
        return self__.all;
      }
    }();
    var ret__$1 = function() {
      var G__18952 = ret;
      var G__18953 = cljs.core.first(s__$1);
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18952, G__18953) : f.call(null, G__18952, G__18953);
    }();
    if (cljs.core.reduced_QMARK_(ret__$1)) {
      return cljs.core.deref(ret__$1);
    } else {
      var G__21649 = s__$1;
      var G__21650 = ret__$1;
      s = G__21649;
      ret = G__21650;
      continue;
    }
    break;
  }
};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  var s = coll__$1.currentval();
  var ret = start;
  while (true) {
    var ret__$1 = function() {
      var G__18954 = ret;
      var G__18955 = cljs.core.first(s);
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18954, G__18955) : f.call(null, G__18954, G__18955);
    }();
    if (cljs.core.reduced_QMARK_(ret__$1)) {
      return cljs.core.deref(ret__$1);
    } else {
      var G__21651 = function() {
        var or__4253__auto__ = cljs.core.next(s);
        if (or__4253__auto__) {
          return or__4253__auto__;
        } else {
          return self__.all;
        }
      }();
      var G__21652 = ret__$1;
      s = G__21651;
      ret = G__21652;
      continue;
    }
    break;
  }
};
cljs.core.Cycle.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(coll__$1.currentval());
};
cljs.core.Cycle.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__._next == null) {
    self__._next = new cljs.core.Cycle(null, self__.all, coll__$1.currentval(), null, null);
  } else {
  }
  return self__._next;
};
cljs.core.Cycle.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cycle.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Cycle(new_meta, self__.all, self__.prev, self__.current, self__._next);
  }
};
cljs.core.Cycle.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Cycle.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta, cljs$cst$symbol$all, cljs$cst$symbol$prev, cljs.core.with_meta(cljs$cst$symbol$current, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$_next, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.Cycle.cljs$lang$type = true;
cljs.core.Cycle.cljs$lang$ctorStr = "cljs.core/Cycle";
cljs.core.Cycle.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/Cycle");
};
cljs.core.__GT_Cycle = function cljs$core$__GT_Cycle(meta, all, prev, current, _next) {
  return new cljs.core.Cycle(meta, all, prev, current, _next);
};
cljs.core.cycle = function cljs$core$cycle(coll) {
  var temp__5751__auto__ = cljs.core.seq(coll);
  if (temp__5751__auto__) {
    var vals = temp__5751__auto__;
    return new cljs.core.Cycle(null, vals, null, vals, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.Repeat = function(meta, count, val, next, __hash) {
  this.meta = meta;
  this.count = count;
  this.val = val;
  this.next = next;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Repeat.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Repeat.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Repeat.prototype.indexOf = function() {
  var G__21653 = null;
  var G__21653__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__21653__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21653 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21653__1.call(this, x);
      case 2:
        return G__21653__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21653.cljs$core$IFn$_invoke$arity$1 = G__21653__1;
  G__21653.cljs$core$IFn$_invoke$arity$2 = G__21653__2;
  return G__21653;
}();
cljs.core.Repeat.prototype.lastIndexOf = function() {
  var G__21654 = null;
  var G__21654__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__21654__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21654 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21654__1.call(this, x);
      case 2:
        return G__21654__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21654.cljs$core$IFn$_invoke$arity$1 = G__21654__1;
  G__21654.cljs$core$IFn$_invoke$arity$2 = G__21654__2;
  return G__21654;
}();
cljs.core.Repeat.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Repeat.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    if (self__.count > 1) {
      self__.next = new cljs.core.Repeat(null, self__.count - 1, self__.val, null, null);
      return self__.next;
    } else {
      if (-1 === self__.count) {
        return coll__$1;
      } else {
        return null;
      }
    }
  } else {
    return self__.next;
  }
};
cljs.core.Repeat.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.Repeat.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Repeat.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Repeat.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return false;
};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === -1) {
    var ret = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.val, self__.val) : f.call(null, self__.val, self__.val);
    while (true) {
      if (cljs.core.reduced_QMARK_(ret)) {
        return cljs.core.deref(ret);
      } else {
        var G__21657 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        ret = G__21657;
        continue;
      }
      break;
    }
  } else {
    var i = 1;
    var ret = self__.val;
    while (true) {
      if (i < self__.count) {
        var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        if (cljs.core.reduced_QMARK_(ret__$1)) {
          return cljs.core.deref(ret__$1);
        } else {
          var G__21661 = i + 1;
          var G__21662 = ret__$1;
          i = G__21661;
          ret = G__21662;
          continue;
        }
      } else {
        return ret;
      }
      break;
    }
  }
};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === -1) {
    var ret = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(start, self__.val) : f.call(null, start, self__.val);
    while (true) {
      if (cljs.core.reduced_QMARK_(ret)) {
        return cljs.core.deref(ret);
      } else {
        var G__21663 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        ret = G__21663;
        continue;
      }
      break;
    }
  } else {
    var i = 0;
    var ret = start;
    while (true) {
      if (i < self__.count) {
        var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        if (cljs.core.reduced_QMARK_(ret__$1)) {
          return cljs.core.deref(ret__$1);
        } else {
          var G__21664 = i + 1;
          var G__21665 = ret__$1;
          i = G__21664;
          ret = G__21665;
          continue;
        }
      } else {
        return ret;
      }
      break;
    }
  }
};
cljs.core.Repeat.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.val;
};
cljs.core.Repeat.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    if (self__.count > 1) {
      self__.next = new cljs.core.Repeat(null, self__.count - 1, self__.val, null, null);
      return self__.next;
    } else {
      if (-1 === self__.count) {
        return coll__$1;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return self__.next;
  }
};
cljs.core.Repeat.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Repeat.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Repeat(new_meta, self__.count, self__.val, self__.next, null);
  }
};
cljs.core.Repeat.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Repeat.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta, cljs$cst$symbol$count, cljs$cst$symbol$val, cljs.core.with_meta(cljs$cst$symbol$next, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.Repeat.cljs$lang$type = true;
cljs.core.Repeat.cljs$lang$ctorStr = "cljs.core/Repeat";
cljs.core.Repeat.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/Repeat");
};
cljs.core.__GT_Repeat = function cljs$core$__GT_Repeat(meta, count, val, next, __hash) {
  return new cljs.core.Repeat(meta, count, val, next, __hash);
};
cljs.core.repeat = function cljs$core$repeat(var_args) {
  var G__18957 = arguments.length;
  switch(G__18957) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Repeat(null, -1, x, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  if (n > 0) {
    return new cljs.core.Repeat(null, n, x, null, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly(var_args) {
  var G__18959 = arguments.length;
  switch(G__18959) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.UNREALIZED_SEED = {};
cljs.core.Iterate = function(meta, f, prev_seed, seed, next) {
  this.meta = meta;
  this.f = f;
  this.prev_seed = prev_seed;
  this.seed = seed;
  this.next = next;
  this.cljs$lang$protocol_mask$partition0$ = 26083532;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Iterate.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Iterate.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Iterate.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.Iterate.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Iterate.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return !(self__.seed === cljs.core.UNREALIZED_SEED);
};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, rf) {
  var self__ = this;
  var coll__$1 = this;
  var first = coll__$1.cljs$core$ISeq$_first$arity$1(null);
  var v = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(first) : self__.f.call(null, first);
  var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(first, v) : rf.call(null, first, v);
  var v__$1 = v;
  while (true) {
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.deref(ret);
    } else {
      var v__$2 = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(v__$1) : self__.f.call(null, v__$1);
      var G__21672 = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(ret, v__$2) : rf.call(null, ret, v__$2);
      var G__21673 = v__$2;
      ret = G__21672;
      v__$1 = G__21673;
      continue;
    }
    break;
  }
};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, rf, start) {
  var self__ = this;
  var coll__$1 = this;
  var v = coll__$1.cljs$core$ISeq$_first$arity$1(null);
  var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(start, v) : rf.call(null, start, v);
  var v__$1 = v;
  while (true) {
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.deref(ret);
    } else {
      var v__$2 = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(v__$1) : self__.f.call(null, v__$1);
      var G__21674 = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(ret, v__$2) : rf.call(null, ret, v__$2);
      var G__21675 = v__$2;
      ret = G__21674;
      v__$1 = G__21675;
      continue;
    }
    break;
  }
};
cljs.core.Iterate.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.UNREALIZED_SEED === self__.seed) {
    self__.seed = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(self__.prev_seed) : self__.f.call(null, self__.prev_seed);
  } else {
  }
  return self__.seed;
};
cljs.core.Iterate.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    self__.next = new cljs.core.Iterate(null, self__.f, coll__$1.cljs$core$ISeq$_first$arity$1(null), cljs.core.UNREALIZED_SEED, null);
  } else {
  }
  return self__.next;
};
cljs.core.Iterate.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Iterate.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Iterate(new_meta, self__.f, self__.prev_seed, self__.seed, self__.next);
  }
};
cljs.core.Iterate.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Iterate.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta, cljs$cst$symbol$f, cljs$cst$symbol$prev_DASH_seed, cljs.core.with_meta(cljs$cst$symbol$seed, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$next, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.Iterate.cljs$lang$type = true;
cljs.core.Iterate.cljs$lang$ctorStr = "cljs.core/Iterate";
cljs.core.Iterate.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/Iterate");
};
cljs.core.__GT_Iterate = function cljs$core$__GT_Iterate(meta, f, prev_seed, seed, next) {
  return new cljs.core.Iterate(meta, f, prev_seed, seed, next);
};
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return new cljs.core.Iterate(null, f, null, x, null);
};
cljs.core.interleave = function cljs$core$interleave(var_args) {
  var G__18964 = arguments.length;
  switch(G__18964) {
    case 0:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___21677 = arguments.length;
      var i__4865__auto___21678 = 0;
      while (true) {
        if (i__4865__auto___21678 < len__4864__auto___21677) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___21678]);
          var G__21679 = i__4865__auto___21678 + 1;
          i__4865__auto___21678 = G__21679;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(2), 0, null);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4886__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.List.EMPTY;
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$1 = function(c1) {
  return new cljs.core.LazySeq(null, function() {
    return c1;
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq18961) {
  var G__18962 = cljs.core.first(seq18961);
  var seq18961__$1 = cljs.core.next(seq18961);
  var G__18963 = cljs.core.first(seq18961__$1);
  var seq18961__$2 = cljs.core.next(seq18961__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18962, G__18963, seq18961__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose(var_args) {
  var G__18966 = arguments.length;
  switch(G__18966) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function() {
      var G__21681 = null;
      var G__21681__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__21681__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__21681__2 = function(result, input) {
        if (cljs.core.truth_(cljs.core.deref(started))) {
          var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
          if (cljs.core.reduced_QMARK_(sepr)) {
            return sepr;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
          }
        } else {
          cljs.core.vreset_BANG_(started, true);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__21681 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__21681__0.call(this);
          case 1:
            return G__21681__1.call(this, result);
          case 2:
            return G__21681__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21681.cljs$core$IFn$_invoke$arity$0 = G__21681__0;
      G__21681.cljs$core$IFn$_invoke$arity$1 = G__21681__1;
      G__21681.cljs$core$IFn$_invoke$arity$2 = G__21681__2;
      return G__21681;
    }();
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__5751__auto__ = cljs.core.seq(coll);
      if (temp__5751__auto__) {
        var coll__$1 = temp__5751__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat(var_args) {
  var G__18970 = arguments.length;
  switch(G__18970) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___21687 = arguments.length;
      var i__4865__auto___21688 = 0;
      while (true) {
        if (i__4865__auto___21688 < len__4864__auto___21687) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___21688]);
          var G__21689 = i__4865__auto___21688 + 1;
          i__4865__auto___21688 = G__21689;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(1), 0, null);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4886__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq18968) {
  var G__18969 = cljs.core.first(seq18968);
  var seq18968__$1 = cljs.core.next(seq18968);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18969, seq18968__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter(var_args) {
  var G__18972 = arguments.length;
  switch(G__18972) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__21691 = null;
      var G__21691__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__21691__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__21691__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__21691 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__21691__0.call(this);
          case 1:
            return G__21691__1.call(this, result);
          case 2:
            return G__21691__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21691.cljs$core$IFn$_invoke$arity$0 = G__21691__0;
      G__21691.cljs$core$IFn$_invoke$arity$1 = G__21691__1;
      G__21691.cljs$core$IFn$_invoke$arity$2 = G__21691__2;
      return G__21691;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5753__auto__ = cljs.core.seq(coll);
    if (temp__5753__auto__) {
      var s = temp__5753__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4741__auto___21692 = size;
        var i_21693 = 0;
        while (true) {
          if (i_21693 < n__4741__auto___21692) {
            if (cljs.core.truth_(function() {
              var G__18973 = cljs.core._nth(c, i_21693);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__18973) : pred.call(null, G__18973);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth(c, i_21693));
            } else {
            }
            var G__21694 = i_21693 + 1;
            i_21693 = G__21694;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove(var_args) {
  var G__18975 = arguments.length;
  switch(G__18975) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__18976_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__18976_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into(var_args) {
  var G__18978 = arguments.length;
  switch(G__18978) {
    case 0:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$1 = function(to) {
  return to;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv(var_args) {
  var G__18987 = arguments.length;
  switch(G__18987) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___21701 = arguments.length;
      var i__4865__auto___21702 = 0;
      while (true) {
        if (i__4865__auto___21702 < len__4864__auto___21701) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___21702]);
          var G__21706 = i__4865__auto___21702 + 1;
          i__4865__auto___21702 = G__21706;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(4), 0, null);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4886__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq18982) {
  var G__18983 = cljs.core.first(seq18982);
  var seq18982__$1 = cljs.core.next(seq18982);
  var G__18984 = cljs.core.first(seq18982__$1);
  var seq18982__$2 = cljs.core.next(seq18982__$1);
  var G__18985 = cljs.core.first(seq18982__$2);
  var seq18982__$3 = cljs.core.next(seq18982__$2);
  var G__18986 = cljs.core.first(seq18982__$3);
  var seq18982__$4 = cljs.core.next(seq18982__$3);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18983, G__18984, G__18985, G__18986, seq18982__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition(var_args) {
  var G__18989 = arguments.length;
  switch(G__18989) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5753__auto__ = cljs.core.seq(coll);
    if (temp__5753__auto__) {
      var s = temp__5753__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5753__auto__ = cljs.core.seq(coll);
    if (temp__5753__auto__) {
      var s = temp__5753__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return new cljs.core.List(null, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)), null, 1, null);
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in(var_args) {
  var G__18991 = arguments.length;
  switch(G__18991) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.get, m, ks);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (!(ks__$1 == null)) {
      var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
      if (sentinel === m__$2) {
        return not_found;
      } else {
        var G__21709 = sentinel;
        var G__21710 = m__$2;
        var G__21711 = cljs.core.next(ks__$1);
        sentinel = G__21709;
        m__$1 = G__21710;
        ks__$1 = G__21711;
        continue;
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__18992, v) {
  var vec__18993 = p__18992;
  var seq__18994 = cljs.core.seq(vec__18993);
  var first__18995 = cljs.core.first(seq__18994);
  var seq__18994__$1 = cljs.core.next(seq__18994);
  var k = first__18995;
  var ks = seq__18994__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__18996 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__18997 = ks;
      var G__18998 = v;
      return cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3 ? cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3(G__18996, G__18997, G__18998) : cljs.core.assoc_in.call(null, G__18996, G__18997, G__18998);
    }());
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in(var_args) {
  var G__19007 = arguments.length;
  switch(G__19007) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___21716 = arguments.length;
      var i__4865__auto___21717 = 0;
      while (true) {
        if (i__4865__auto___21717 < len__4864__auto___21716) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___21717]);
          var G__21718 = i__4865__auto___21717 + 1;
          i__4865__auto___21717 = G__21718;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(6), 0, null);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4886__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__19008, f) {
  var vec__19009 = p__19008;
  var seq__19010 = cljs.core.seq(vec__19009);
  var first__19011 = cljs.core.first(seq__19010);
  var seq__19010__$1 = cljs.core.next(seq__19010);
  var k = first__19011;
  var ks = seq__19010__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__19012 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19012) : f.call(null, G__19012);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__19013, f, a) {
  var vec__19014 = p__19013;
  var seq__19015 = cljs.core.seq(vec__19014);
  var first__19016 = cljs.core.first(seq__19015);
  var seq__19015__$1 = cljs.core.next(seq__19015);
  var k = first__19016;
  var ks = seq__19015__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__19017 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__19018 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19017, G__19018) : f.call(null, G__19017, G__19018);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__19019, f, a, b) {
  var vec__19020 = p__19019;
  var seq__19021 = cljs.core.seq(vec__19020);
  var first__19022 = cljs.core.first(seq__19021);
  var seq__19021__$1 = cljs.core.next(seq__19021);
  var k = first__19022;
  var ks = seq__19021__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__19023 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__19024 = a;
      var G__19025 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19023, G__19024, G__19025) : f.call(null, G__19023, G__19024, G__19025);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__19026, f, a, b, c) {
  var vec__19027 = p__19026;
  var seq__19028 = cljs.core.seq(vec__19027);
  var first__19029 = cljs.core.first(seq__19028);
  var seq__19028__$1 = cljs.core.next(seq__19028);
  var k = first__19029;
  var ks = seq__19028__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__19030 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__19031 = a;
      var G__19032 = b;
      var G__19033 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19030, G__19031, G__19032, G__19033) : f.call(null, G__19030, G__19031, G__19032, G__19033);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__19034, f, a, b, c, args) {
  var vec__19035 = p__19034;
  var seq__19036 = cljs.core.seq(vec__19035);
  var first__19037 = cljs.core.first(seq__19036);
  var seq__19036__$1 = cljs.core.next(seq__19036);
  var k = first__19037;
  var ks = seq__19036__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq19000) {
  var G__19001 = cljs.core.first(seq19000);
  var seq19000__$1 = cljs.core.next(seq19000);
  var G__19002 = cljs.core.first(seq19000__$1);
  var seq19000__$2 = cljs.core.next(seq19000__$1);
  var G__19003 = cljs.core.first(seq19000__$2);
  var seq19000__$3 = cljs.core.next(seq19000__$2);
  var G__19004 = cljs.core.first(seq19000__$3);
  var seq19000__$4 = cljs.core.next(seq19000__$3);
  var G__19005 = cljs.core.first(seq19000__$4);
  var seq19000__$5 = cljs.core.next(seq19000__$4);
  var G__19006 = cljs.core.first(seq19000__$5);
  var seq19000__$6 = cljs.core.next(seq19000__$5);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19001, G__19002, G__19003, G__19004, G__19005, G__19006, seq19000__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update(var_args) {
  var G__19046 = arguments.length;
  switch(G__19046) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___21722 = arguments.length;
      var i__4865__auto___21723 = 0;
      while (true) {
        if (i__4865__auto___21723 < len__4864__auto___21722) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___21723]);
          var G__21724 = i__4865__auto___21723 + 1;
          i__4865__auto___21723 = G__21724;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(6), 0, null);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4886__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__19047 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19047) : f.call(null, G__19047);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__19048 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__19049 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19048, G__19049) : f.call(null, G__19048, G__19049);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__19050 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__19051 = x;
    var G__19052 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19050, G__19051, G__19052) : f.call(null, G__19050, G__19051, G__19052);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__19053 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__19054 = x;
    var G__19055 = y;
    var G__19056 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19053, G__19054, G__19055, G__19056) : f.call(null, G__19053, G__19054, G__19055, G__19056);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq19039) {
  var G__19040 = cljs.core.first(seq19039);
  var seq19039__$1 = cljs.core.next(seq19039);
  var G__19041 = cljs.core.first(seq19039__$1);
  var seq19039__$2 = cljs.core.next(seq19039__$1);
  var G__19042 = cljs.core.first(seq19039__$2);
  var seq19039__$3 = cljs.core.next(seq19039__$2);
  var G__19043 = cljs.core.first(seq19039__$3);
  var seq19039__$4 = cljs.core.next(seq19039__$3);
  var G__19044 = cljs.core.first(seq19039__$4);
  var seq19039__$5 = cljs.core.next(seq19039__$4);
  var G__19045 = cljs.core.first(seq19039__$5);
  var seq19039__$6 = cljs.core.next(seq19039__$5);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19040, G__19041, G__19042, G__19043, G__19044, G__19045, seq19039__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$edit, cljs$cst$symbol$arr], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__21729 = ll - 5;
      var G__21730 = r;
      ll = G__21729;
      ret = G__21730;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = function() {
        var G__19057 = pv;
        var G__19058 = level - 5;
        var G__19059 = child;
        var G__19060 = tailnode;
        return cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4(G__19057, G__19058, G__19059, G__19060) : cljs.core.push_tail.call(null, G__19057, G__19058, G__19059, G__19060);
      }();
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error(["No item ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(i), " in vector of length ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__21731 = cljs.core.pv_aget(node, 0);
      var G__21732 = level - 5;
      node = G__21731;
      level = G__21732;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__21733 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__21734 = level - 5;
        node = G__21733;
        level = G__21734;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, function() {
      var G__19061 = pv;
      var G__19062 = level - 5;
      var G__19063 = cljs.core.pv_aget(node, subidx);
      var G__19064 = i;
      var G__19065 = val;
      return cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5 ? cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5(G__19061, G__19062, G__19063, G__19064, G__19065) : cljs.core.do_assoc.call(null, G__19061, G__19062, G__19063, G__19064, G__19065);
    }());
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = function() {
      var G__19066 = pv;
      var G__19067 = level - 5;
      var G__19068 = cljs.core.pv_aget(node, subidx);
      return cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3(G__19066, G__19067, G__19068) : cljs.core.pop_tail.call(null, G__19066, G__19067, G__19068);
    }();
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$i, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$base, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$arr, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs$cst$symbol$v, cljs$cst$symbol$start, 
  cljs$cst$symbol$end], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.pv_reduce = function cljs$core$pv_reduce(var_args) {
  var G__19070 = arguments.length;
  switch(G__19070) {
    case 4:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4 = function(pv, f, start, end) {
  if (start < end) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(pv, f, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(pv, start), start + 1, end);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5 = function(pv, f, init, start, end) {
  var acc = init;
  var i = start;
  var arr = cljs.core.unchecked_array_for(pv, start);
  while (true) {
    if (i < end) {
      var j = i & 31;
      var arr__$1 = j === 0 ? cljs.core.unchecked_array_for(pv, i) : arr;
      var nacc = function() {
        var G__19071 = acc;
        var G__19072 = arr__$1[j];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19071, G__19072) : f.call(null, G__19071, G__19072);
      }();
      if (cljs.core.reduced_QMARK_(nacc)) {
        return cljs.core.deref(nacc);
      } else {
        var G__21740 = nacc;
        var G__21741 = i + 1;
        var G__21742 = arr__$1;
        acc = G__21740;
        i = G__21741;
        arr = G__21742;
        continue;
      }
    } else {
      return acc;
    }
    break;
  }
};
cljs.core.pv_reduce.cljs$lang$maxFixedArity = 5;
cljs.core.APersistentVector = function() {
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentVector.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IFind$_find$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return new cljs.core.MapEntry(n, cljs.core.unchecked_array_for(coll__$1, n)[n & 31], null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.indexOf = function() {
  var G__21743 = null;
  var G__21743__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__21743__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21743 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21743__1.call(this, x);
      case 2:
        return G__21743__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21743.cljs$core$IFn$_invoke$arity$1 = G__21743__1;
  G__21743.cljs$core$IFn$_invoke$arity$2 = G__21743__2;
  return G__21743;
}();
cljs.core.PersistentVector.prototype.lastIndexOf = function() {
  var G__21744 = null;
  var G__21744__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__21744__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21744 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21744__1.call(this, x);
      case 2:
        return G__21744__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21744.cljs$core$IFn$_invoke$arity$1 = G__21744__1;
  G__21744.cljs$core$IFn$_invoke$arity$2 = G__21744__2;
  return G__21744;
}();
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__19074 = init__$2;
              var G__19075 = j + i;
              var G__19076 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19074, G__19075, G__19076) : f.call(null, G__19074, G__19075, G__19076);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__21745 = j + 1;
              var G__21746 = init__$3;
              j = G__21745;
              init__$2 = G__21746;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__21747 = i + len;
        var G__21748 = init__$2;
        i = G__21747;
        init__$1 = G__21748;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$APersistentVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return coll__$1.cljs$core$ICollection$_conj$arity$2(null, val);
    } else {
      throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds  [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt), "]"].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return coll__$1.cljs$core$IIndexed$_nth$arity$2(null, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = coll__$1.cljs$core$IIterable$_iterator$arity$1(null);
      var you_iter = other.cljs$core$IIterable$_iterator$arity$1(null);
      while (true) {
        if (me_iter.hasNext()) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(v__$1, f, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__19077 = init__$2;
              var G__19078 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19077, G__19078) : f.call(null, G__19077, G__19078);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__21756 = j + 1;
              var G__21757 = init__$3;
              j = G__21756;
              init__$2 = G__21757;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__21758 = i + len;
        var G__21759 = init__$2;
        i = G__21758;
        init__$1 = G__21759;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IVector$_assoc_n$arity$3(null, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.integer_QMARK_(k)) {
    return 0 <= k && k < self__.cnt;
  } else {
    return false;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0, null);
    } else {
      var G__19079 = coll__$1;
      var G__19080 = cljs.core.first_array_for_longvec(coll__$1);
      var G__19081 = 0;
      var G__19082 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19079, G__19080, G__19081, G__19082) : cljs.core.chunked_seq.call(null, G__19079, G__19080, G__19081, G__19082);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentVector(new_meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4741__auto___21765 = len;
    var i_21766 = 0;
    while (true) {
      if (i_21766 < n__4741__auto___21765) {
        new_tail[i_21766] = self__.tail[i_21766];
        var G__21770 = i_21766 + 1;
        i_21766 = G__21770;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function(unused__9633__auto__) {
  var self__ = this;
  var self__ = this;
  var G__19083 = arguments.length - 1;
  switch(G__19083) {
    case 1:
      return self__.cljs$core$IFn$_invoke$arity$1(arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
cljs.core.PersistentVector.prototype.apply = function(self__, args19073) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19073)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  if (typeof k === "number") {
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  } else {
    throw new Error("Key must be integer");
  }
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta, cljs$cst$symbol$cnt, cljs$cst$symbol$shift, cljs$cst$symbol$root, cljs$cst$symbol$tail, cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__21774 = i + 1;
        var G__21775 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__21774;
        out = G__21775;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.truth_(cljs.core.map_entry_QMARK_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.map_entry_QMARK_.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.map_entry_QMARK_.call(null, coll))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.key.call(null, coll), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.val.call(null, coll)], null);
  } else {
    if (cljs.core.vector_QMARK_(coll)) {
      return cljs.core.with_meta(coll, null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.PersistentVector.fromArray(coll, true);
      } else {
        return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
      }
    }
  }
};
cljs.core.vector = function cljs$core$vector(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___21780 = arguments.length;
  var i__4865__auto___21781 = 0;
  while (true) {
    if (i__4865__auto___21781 < len__4864__auto___21780) {
      args__4870__auto__.push(arguments[i__4865__auto___21781]);
      var G__21782 = i__4865__auto___21781 + 1;
      i__4865__auto___21781 = G__21782;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, !cljs.core.array_QMARK_(args.arr));
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq19084) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19084));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.indexOf = function() {
  var G__21783 = null;
  var G__21783__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__21783__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21783 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21783__1.call(this, x);
      case 2:
        return G__21783__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21783.cljs$core$IFn$_invoke$arity$1 = G__21783__1;
  G__21783.cljs$core$IFn$_invoke$arity$2 = G__21783__2;
  return G__21783;
}();
cljs.core.ChunkedSeq.prototype.lastIndexOf = function() {
  var G__21784 = null;
  var G__21784__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__21784__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21784 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21784__1.call(this, x);
      case 2:
        return G__21784__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21784.cljs$core$IFn$_invoke$arity$1 = G__21784__1;
  G__21784.cljs$core$IFn$_invoke$arity$2 = G__21784__2;
  return G__21784;
}();
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__19085 = self__.vec;
      var G__19086 = self__.node;
      var G__19087 = self__.i;
      var G__19088 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19085, G__19086, G__19087, G__19088) : cljs.core.chunked_seq.call(null, G__19085, G__19086, G__19087, G__19088);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return coll__$1.cljs$core$IChunkedNext$_chunked_next$arity$1(null);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.vec, f, self__.i + self__.off, cljs.core.count(self__.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.vec, f, start, self__.i + self__.off, cljs.core.count(self__.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__19089 = self__.vec;
      var G__19090 = self__.node;
      var G__19091 = self__.i;
      var G__19092 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19089, G__19090, G__19091, G__19092) : cljs.core.chunked_seq.call(null, G__19089, G__19090, G__19091, G__19092);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return coll__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__19093 = self__.vec;
    var G__19094 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__19095 = end;
    var G__19096 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19093, G__19094, G__19095, G__19096) : cljs.core.chunked_seq.call(null, G__19093, G__19094, G__19095, G__19096);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, new_meta) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, new_meta);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__19097 = self__.vec;
    var G__19098 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__19099 = end;
    var G__19100 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19097, G__19098, G__19099, G__19100) : cljs.core.chunked_seq.call(null, G__19097, G__19098, G__19099, G__19100);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$vec, cljs$cst$symbol$node, cljs$cst$symbol$i, cljs$cst$symbol$off, cljs$cst$symbol$meta, cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq(var_args) {
  var G__19102 = arguments.length;
  switch(G__19102) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.Subvec.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IFind$_find$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0) {
    return null;
  } else {
    var idx = self__.start + n;
    if (idx < self__.end) {
      return new cljs.core.MapEntry(n, cljs.core._lookup(self__.v, idx), null);
    } else {
      return null;
    }
  }
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.indexOf = function() {
  var G__21795 = null;
  var G__21795__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__21795__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__21795 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__21795__1.call(this, x);
      case 2:
        return G__21795__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21795.cljs$core$IFn$_invoke$arity$1 = G__21795__1;
  G__21795.cljs$core$IFn$_invoke$arity$2 = G__21795__2;
  return G__21795;
}();
cljs.core.Subvec.prototype.lastIndexOf = function() {
  var G__21796 = null;
  var G__21796__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__21796__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__21796 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__21796__1.call(this, x);
      case 2:
        return G__21796__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21796.cljs$core$IFn$_invoke$arity$1 = G__21796__1;
  G__21796.cljs$core$IFn$_invoke$arity$2 = G__21796__2;
  return G__21796;
}();
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__19104 = init__$1;
        var G__19105 = j;
        var G__19106 = cljs.core._nth(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19104, G__19105, G__19106) : f.call(null, G__19104, G__19105, G__19106);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__21797 = i + 1;
        var G__21798 = j + 1;
        var G__21799 = init__$2;
        i = G__21797;
        j = G__21798;
        init__$1 = G__21799;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  if (n < 0 || self__.end + 1 <= v_pos) {
    throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll__$1.cljs$core$ICounted$_count$arity$1(null)), "]"].join(""));
  } else {
    var G__19107 = self__.meta;
    var G__19108 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
    var G__19109 = self__.start;
    var G__19110 = function() {
      var x__4336__auto__ = self__.end;
      var y__4337__auto__ = v_pos + 1;
      return x__4336__auto__ > y__4337__auto__ ? x__4336__auto__ : y__4337__auto__;
    }();
    var G__19111 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__19107, G__19108, G__19109, G__19110, G__19111) : cljs.core.build_subvec.call(null, G__19107, G__19108, G__19109, G__19110, G__19111);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.ranged_iterator(self__.v, self__.start, self__.end);
  } else {
    return cljs.core.seq_iter(coll__$1);
  }
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    return null;
  } else {
    return cljs.core._nth(self__.v, self__.end - 1);
  }
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__19113 = self__.meta;
    var G__19114 = self__.v;
    var G__19115 = self__.start;
    var G__19116 = self__.end - 1;
    var G__19117 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__19113, G__19114, G__19115, G__19116, G__19117) : cljs.core.build_subvec.call(null, G__19113, G__19114, G__19115, G__19116, G__19117);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.v, f, self__.start, self__.end);
  } else {
    return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.v, f, init, self__.start, self__.end);
  } else {
    return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, init);
  }
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return coll__$1.cljs$core$IVector$_assoc_n$arity$3(null, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, key) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.integer_QMARK_(key)) {
    return 0 <= key && key < self__.end - self__.start;
  } else {
    return false;
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function cljs$core$subvec_seq(i) {
    if (i === self__.end) {
      return null;
    } else {
      return cljs.core.cons(cljs.core._nth(self__.v, i), new cljs.core.LazySeq(null, function() {
        return cljs$core$subvec_seq(i + 1);
      }, null, null));
    }
  };
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(new_meta, self__.v, self__.start, self__.end, self__.__hash) : cljs.core.build_subvec.call(null, new_meta, self__.v, self__.start, self__.end, self__.__hash);
  }
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__19120 = self__.meta;
  var G__19121 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__19122 = self__.start;
  var G__19123 = self__.end + 1;
  var G__19124 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__19120, G__19121, G__19122, G__19123, G__19124) : cljs.core.build_subvec.call(null, G__19120, G__19121, G__19122, G__19123, G__19124);
};
cljs.core.Subvec.prototype.call = function(unused__9633__auto__) {
  var self__ = this;
  var self__ = this;
  var G__19125 = arguments.length - 1;
  switch(G__19125) {
    case 1:
      return self__.cljs$core$IFn$_invoke$arity$1(arguments[1]);
      break;
    case 2:
      return self__.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
cljs.core.Subvec.prototype.apply = function(self__, args19103) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19103)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta, cljs$cst$symbol$v, cljs$cst$symbol$start, cljs$cst$symbol$end, cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__21805 = meta;
      var G__21806 = v.v;
      var G__21807 = v.start + start;
      var G__21808 = v.start + end;
      var G__21809 = __hash;
      meta = G__21805;
      v = G__21806;
      start = G__21807;
      end = G__21808;
      __hash = G__21809;
      continue;
    } else {
      if (cljs.core.vector_QMARK_(v)) {
      } else {
        throw new Error("v must satisfy IVector");
      }
      if (start < 0 || (end < start || end > cljs.core.count(v))) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec(var_args) {
  var G__19127 = arguments.length;
  switch(G__19127) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start | 0, end | 0, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      var G__19130 = tv;
      var G__19131 = level - 5;
      var G__19132 = child;
      var G__19133 = tail_node;
      return cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4(G__19130, G__19131, G__19132, G__19133) : cljs.core.tv_push_tail.call(null, G__19130, G__19131, G__19132, G__19133);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = function() {
      var G__19134 = tv;
      var G__19135 = level - 5;
      var G__19136 = cljs.core.pv_aget(node__$1, subidx);
      return cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3(G__19134, G__19135, G__19136) : cljs.core.tv_pop_tail.call(null, G__19134, G__19135, G__19136);
    }();
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__21817 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__21818 = level - 5;
        node = G__21817;
        level = G__21818;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return tcoll__$1.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(null, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function cljs$core$go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
          if (level === 0) {
            cljs.core.pv_aset(node__$1, n & 31, val);
            return node__$1;
          } else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
            return node__$1;
          }
        }(self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return tcoll__$1.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, val);
      } else {
        throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds for TransientVector of length", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return coll__$1.cljs$core$IIndexed$_nth$arity$2(null, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (!self__.root.edit) {
    throw new Error("lookup after persistent!");
  } else {
    if (typeof k === "number") {
      return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
    } else {
      return not_found;
    }
  }
};
cljs.core.TransientVector.prototype.call = function(unused__9633__auto__) {
  var self__ = this;
  var self__ = this;
  var G__19138 = arguments.length - 1;
  switch(G__19138) {
    case 1:
      return self__.cljs$core$IFn$_invoke$arity$1(arguments[1]);
      break;
    case 2:
      return self__.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
cljs.core.TransientVector.prototype.apply = function(self__, args19137) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19137)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$cnt, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$shift, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$root, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$tail, 
  new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4253__auto__ = !(self__.fseq == null) && cljs.core.seq(self__.fseq);
  if (or__4253__auto__) {
    return or__4253__auto__;
  } else {
    var and__4251__auto__ = !(self__.riter == null);
    if (and__4251__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__4251__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.fseq == null)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (!(self__.riter == null) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$fseq, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs$cst$symbol$riter], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850700;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.indexOf = function() {
  var G__21820 = null;
  var G__21820__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__21820__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21820 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21820__1.call(this, x);
      case 2:
        return G__21820__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21820.cljs$core$IFn$_invoke$arity$1 = G__21820__1;
  G__21820.cljs$core$IFn$_invoke$arity$2 = G__21820__2;
  return G__21820;
}();
cljs.core.PersistentQueueSeq.prototype.lastIndexOf = function() {
  var G__21821 = null;
  var G__21821__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__21821__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21821 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21821__1.call(this, x);
      case 2:
        return G__21821__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21821.cljs$core$IFn$_invoke$arity$1 = G__21821__1;
  G__21821.cljs$core$IFn$_invoke$arity$2 = G__21821__2;
  return G__21821;
}();
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__5751__auto__ = cljs.core.next(self__.front);
  if (temp__5751__auto__) {
    var f1 = temp__5751__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (!(self__.rear == null)) {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    } else {
      return null;
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__5751__auto__ = cljs.core.next(self__.front);
  if (temp__5751__auto__) {
    var f1 = temp__5751__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentQueueSeq(new_meta, self__.front, self__.rear, self__.__hash);
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta, cljs$cst$symbol$front, cljs$cst$symbol$rear, cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.indexOf = function() {
  var G__21828 = null;
  var G__21828__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__21828__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21828 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21828__1.call(this, x);
      case 2:
        return G__21828__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21828.cljs$core$IFn$_invoke$arity$1 = G__21828__1;
  G__21828.cljs$core$IFn$_invoke$arity$2 = G__21828__2;
  return G__21828;
}();
cljs.core.PersistentQueue.prototype.lastIndexOf = function() {
  var G__21829 = null;
  var G__21829__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count.cljs$core$IFn$_invoke$arity$1 ? self__.count.cljs$core$IFn$_invoke$arity$1(coll) : self__.count.call(null, coll));
  };
  var G__21829__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21829 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21829__1.call(this, x);
      case 2:
        return G__21829__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21829.cljs$core$IFn$_invoke$arity$1 = G__21829__1;
  G__21829.cljs$core$IFn$_invoke$arity$2 = G__21829__2;
  return G__21829;
}();
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__5751__auto__ = cljs.core.next(self__.front);
    if (temp__5751__auto__) {
      var f1 = temp__5751__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4253__auto__ = self__.front;
    if (cljs.core.truth_(or__4253__auto__)) {
      return or__4253__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentQueue(new_meta, self__.count, self__.front, self__.rear, self__.__hash);
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4253__auto__ = self__.rear;
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta, cljs$cst$symbol$count, cljs$cst$symbol$front, cljs$cst$symbol$rear, cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv();
};
cljs.core.never_equiv = new cljs.core.NeverEquiv();
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) && !cljs.core.record_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? (!(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 1048576 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IKVReduce$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, x)) ? cljs.core.reduce_kv(function(_, k, v) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, k, cljs.core.never_equiv), v)) {
      return true;
    } else {
      return cljs.core.reduced(false);
    }
  }, true, x) : cljs.core.every_QMARK_(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__21833 = i + incr;
        i = G__21833;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__21834 = i + 1;
      var G__21835 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, cljs.core.goog$module$goog$object.get(so, k__$1));
      i = G__21834;
      out = G__21835;
      continue;
    } else {
      return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_21836 = 0;
  while (true) {
    if (i_21836 < l) {
      var k_21837 = ks[i_21836];
      cljs.core.goog$module$goog$object.set(new_obj, k_21837, cljs.core.goog$module$goog$object.get(obj, k_21837));
      var G__21838 = i_21836 + 1;
      i_21836 = G__21838;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "string" && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return new cljs.core.MapEntry(k, self__.strobj[k], null);
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "string" && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__19144 = init__$1;
        var G__19145 = k;
        var G__19146 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19144, G__19145, G__19146) : f.call(null, G__19144, G__19145, G__19146);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__21839 = cljs.core.rest(keys__$1);
        var G__21840 = init__$2;
        keys__$1 = G__21839;
        init__$1 = G__21840;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "string" && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "string") {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        cljs.core.goog$module$goog$object.set(new_strobj, k, v);
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        cljs.core.goog$module$goog$object.set(new_strobj, k, v);
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "string" && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__19142_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__19142_SHARP_, self__.strobj[p1__19142_SHARP_]], null);
    }, self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.ObjMap(new_meta, self__.keys, self__.strobj, self__.update_count, self__.__hash);
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth(entry, 0), cljs.core._nth(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function(unused__9633__auto__) {
  var self__ = this;
  var self__ = this;
  var G__19147 = arguments.length - 1;
  switch(G__19147) {
    case 1:
      return self__.cljs$core$IFn$_invoke$arity$1(arguments[1]);
      break;
    case 2:
      return self__.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
cljs.core.ObjMap.prototype.apply = function(self__, args19143) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19143)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta, cljs$cst$symbol$keys, cljs$cst$symbol$strobj, cljs$cst$symbol$update_DASH_count, cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4253__auto__ = self__.i < self__.base_count;
  if (or__4253__auto__) {
    return or__4253__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.MapEntry(k, cljs.core._lookup(self__.record, k), null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$i, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs$cst$symbol$record, cljs$cst$symbol$base_DASH_count, cljs$cst$symbol$fields, cljs$cst$symbol$ext_DASH_map_DASH_iter], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__19150 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19150, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19150, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$s, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$s, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__21843 = i + 2;
        i = G__21843;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__21845 = i + 2;
        i = G__21845;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__21846 = i + 2;
        i = G__21846;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__21847 = i + 2;
        i = G__21847;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__21848 = i + 2;
        i = G__21848;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (typeof k === "string" || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_21852 = 0;
  while (true) {
    if (i_21852 < l) {
      narr[i_21852] = arr[i_21852];
      var G__21853 = i_21852 + 1;
      i_21852 = G__21853;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.MapEntry = function(key, val, __hash) {
  this.key = key;
  this.val = val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MapEntry.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__19154 = k;
  switch(G__19154) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.MapEntry.prototype.indexOf = function() {
  var G__21855 = null;
  var G__21855__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__21855__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21855 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21855__1.call(this, x);
      case 2:
        return G__21855__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21855.cljs$core$IFn$_invoke$arity$1 = G__21855__1;
  G__21855.cljs$core$IFn$_invoke$arity$2 = G__21855__2;
  return G__21855;
}();
cljs.core.MapEntry.prototype.lastIndexOf = function() {
  var G__21856 = null;
  var G__21856__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__21856__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21856 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21856__1.call(this, x);
      case 2:
        return G__21856__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21856.cljs$core$IFn$_invoke$arity$1 = G__21856__1;
  G__21856.cljs$core$IFn$_invoke$arity$2 = G__21856__2;
  return G__21856;
}();
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.MapEntry.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.MapEntry.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.MapEntry.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.MapEntry.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.MapEntry.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.MapEntry.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.MapEntry.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.MapEntry.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.MapEntry.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.MapEntry.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.MapEntry.prototype.call = function(unused__9633__auto__) {
  var self__ = this;
  var self__ = this;
  var G__19155 = arguments.length - 1;
  switch(G__19155) {
    case 1:
      return self__.cljs$core$IFn$_invoke$arity$1(arguments[1]);
      break;
    case 2:
      return self__.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
cljs.core.MapEntry.prototype.apply = function(self__, args19153) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19153)));
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.MapEntry.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$key, cljs$cst$symbol$val, cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.MapEntry.cljs$lang$type = true;
cljs.core.MapEntry.cljs$lang$ctorStr = "cljs.core/MapEntry";
cljs.core.MapEntry.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/MapEntry");
};
cljs.core.__GT_MapEntry = function cljs$core$__GT_MapEntry(key, val, __hash) {
  return new cljs.core.MapEntry(key, val, __hash);
};
cljs.core.map_entry_QMARK_ = function cljs$core$map_entry_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2048 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMapEntry$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.indexOf = function() {
  var G__21866 = null;
  var G__21866__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__21866__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21866 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21866__1.call(this, x);
      case 2:
        return G__21866__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21866.cljs$core$IFn$_invoke$arity$1 = G__21866__1;
  G__21866.cljs$core$IFn$_invoke$arity$2 = G__21866__2;
  return G__21866;
}();
cljs.core.PersistentArrayMapSeq.prototype.lastIndexOf = function() {
  var G__21867 = null;
  var G__21867__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__21867__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21867 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21867__1.call(this, x);
      case 2:
        return G__21867__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21867.cljs$core$IFn$_invoke$arity$1 = G__21867__1;
  G__21867.cljs$core$IFn$_invoke$arity$2 = G__21867__2;
  return G__21867;
}();
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, null);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.MapEntry(self__.arr[self__.i], self__.arr[self__.i + 1], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__._meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$arr, cljs$cst$symbol$i, cljs$cst$symbol$_meta], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.MapEntry(self__.arr[self__.i], self__.arr[self__.i + 1], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$arr, cljs.core.with_meta(cljs$cst$symbol$i, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs$cst$symbol$cnt], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return null;
  } else {
    return new cljs.core.MapEntry(self__.arr[idx], self__.arr[idx + 1], null);
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__19158 = cljs.core.seq(coll);
  var chunk__19159 = null;
  var count__19160 = 0;
  var i__19161 = 0;
  while (true) {
    if (i__19161 < count__19160) {
      var vec__19168 = chunk__19159.cljs$core$IIndexed$_nth$arity$2(null, i__19161);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19168, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19168, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__21877 = seq__19158;
      var G__21878 = chunk__19159;
      var G__21879 = count__19160;
      var G__21880 = i__19161 + 1;
      seq__19158 = G__21877;
      chunk__19159 = G__21878;
      count__19160 = G__21879;
      i__19161 = G__21880;
      continue;
    } else {
      var temp__5753__auto__ = cljs.core.seq(seq__19158);
      if (temp__5753__auto__) {
        var seq__19158__$1 = temp__5753__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__19158__$1)) {
          var c__4679__auto__ = cljs.core.chunk_first(seq__19158__$1);
          var G__21882 = cljs.core.chunk_rest(seq__19158__$1);
          var G__21883 = c__4679__auto__;
          var G__21884 = cljs.core.count(c__4679__auto__);
          var G__21885 = 0;
          seq__19158 = G__21882;
          chunk__19159 = G__21883;
          count__19160 = G__21884;
          i__19161 = G__21885;
          continue;
        } else {
          var vec__19171 = cljs.core.first(seq__19158__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19171, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19171, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__21886 = cljs.core.next(seq__19158__$1);
          var G__21887 = null;
          var G__21888 = 0;
          var G__21889 = 0;
          seq__19158 = G__21886;
          chunk__19159 = G__21887;
          count__19160 = G__21888;
          i__19161 = G__21889;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__19174 = init__$1;
        var G__19175 = self__.arr[i];
        var G__19176 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19174, G__19175, G__19176) : f.call(null, G__19174, G__19175, G__19176);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__21890 = i + 2;
        var G__21891 = init__$2;
        i = G__21890;
        init__$1 = G__21891;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.map_QMARK_(other) && !cljs.core.record_QMARK_(other)) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__21893 = i + 2;
              i = G__21893;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__21898 = s + 2;
            var G__21899 = d;
            s = G__21898;
            d = G__21899;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__21900 = s + 2;
            var G__21901 = d + 2;
            s = G__21900;
            d = G__21901;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__19179 = cljs.core.aclone(self__.arr);
        G__19179[idx + 1] = v;
        return G__19179;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentArrayMap(new_meta, self__.cnt, self__.arr, self__.__hash);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth(entry, 0), cljs.core._nth(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__21903 = cljs.core._assoc(ret, cljs.core._nth(e, 0), cljs.core._nth(e, 1));
          var G__21904 = cljs.core.next(es);
          ret = G__21903;
          es = G__21904;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function(unused__9633__auto__) {
  var self__ = this;
  var self__ = this;
  var G__19180 = arguments.length - 1;
  switch(G__19180) {
    case 1:
      return self__.cljs$core$IFn$_invoke$arity$1(arguments[1]);
      break;
    case 2:
      return self__.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args19157) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19157)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta, cljs$cst$symbol$cnt, cljs$cst$symbol$arr, cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_21914 = 0;
    while (true) {
      if (i_21914 < arr__$1.length) {
        var k_21915 = arr__$1[i_21914];
        var v_21916 = arr__$1[i_21914 + 1];
        var idx_21917 = cljs.core.array_index_of(ret, k_21915);
        if (idx_21917 === -1) {
          ret.push(k_21915);
          ret.push(v_21916);
        } else {
        }
        var G__21918 = i_21914 + 2;
        i_21914 = G__21918;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var cnt = arr__$2.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
};
cljs.core.PersistentArrayMap.createWithCheck = function(arr) {
  var ret = [];
  var i_21919 = 0;
  while (true) {
    if (i_21919 < arr.length) {
      var k_21920 = arr[i_21919];
      var v_21921 = arr[i_21919 + 1];
      var idx_21922 = cljs.core.array_index_of(ret, k_21920);
      if (idx_21922 === -1) {
        var G__19181_21923 = ret;
        G__19181_21923.push(k_21920);
        G__19181_21923.push(v_21921);
      } else {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(k_21920)].join(""));
      }
      var G__21924 = i_21919 + 2;
      i_21919 = G__21924;
      continue;
    } else {
    }
    break;
  }
  var cnt = arr.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr, null);
};
cljs.core.PersistentArrayMap.createAsIfByAssoc = function(arr) {
  var ret = [];
  var i_21925 = 0;
  while (true) {
    if (i_21925 < arr.length) {
      var k_21926 = arr[i_21925];
      var v_21927 = arr[i_21925 + 1];
      var idx_21928 = cljs.core.array_index_of(ret, k_21926);
      if (idx_21928 === -1) {
        var G__19182_21929 = ret;
        G__19182_21929.push(k_21926);
        G__19182_21929.push(v_21927);
      } else {
        ret[idx_21928 + 1] = v_21927;
      }
      var G__21930 = i_21925 + 2;
      i_21925 = G__21930;
      continue;
    } else {
    }
    break;
  }
  return new cljs.core.PersistentArrayMap(null, ret.length / 2, ret, null);
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    if (cljs.core.map_entry_QMARK_(o)) {
      return tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      if (cljs.core.vector_QMARK_(o)) {
        return tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(0) : o.call(null, 0), o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(1) : o.call(null, 1));
      } else {
        var es = cljs.core.seq(o);
        var tcoll__$2 = tcoll__$1;
        while (true) {
          var temp__5751__auto__ = cljs.core.first(es);
          if (cljs.core.truth_(temp__5751__auto__)) {
            var e = temp__5751__auto__;
            var G__21931 = cljs.core.next(es);
            var G__21932 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
            es = G__21931;
            tcoll__$2 = G__21932;
            continue;
          } else {
            return tcoll__$2;
          }
          break;
        }
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len, self__.arr) : cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__19184_21933 = self__.arr;
      G__19184_21933.pop();
      G__19184_21933.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.call = function(unused__9633__auto__) {
  var self__ = this;
  var self__ = this;
  var G__19185 = arguments.length - 1;
  switch(G__19185) {
    case 1:
      return self__.cljs$core$IFn$_invoke$arity$1(arguments[1]);
      break;
    case 2:
      return self__.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
cljs.core.TransientArrayMap.prototype.apply = function(self__, args19183) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19183)));
};
cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(key) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(key, not_found) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$editable_QMARK_, new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$tag, cljs$cst$symbol$boolean, cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$len, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs$cst$symbol$arr], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__21935 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__21936 = i + 2;
      out = G__21935;
      i = G__21936;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$val, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set(var_args) {
  var G__19187 = arguments.length;
  switch(G__19187) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__19188 = cljs.core.aclone(arr);
  G__19188[i] = a;
  return G__19188;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__19189 = cljs.core.aclone(arr);
  G__19189[i] = a;
  G__19189[j] = b;
  return G__19189;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set(var_args) {
  var G__19191 = arguments.length;
  switch(G__19191) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__19192 = init__$1;
          var G__19193 = k;
          var G__19194 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19192, G__19193, G__19194) : f.call(null, G__19192, G__19193, G__19194);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return init__$2;
      } else {
        var G__21953 = i + 2;
        var G__21954 = init__$2;
        i = G__21953;
        init__$1 = G__21954;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = !(key == null) ? self__.next_entry = new cljs.core.MapEntry(key, node_or_val, null) : !(node_or_val == null) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__4253__auto__ = !(self__.next_entry == null);
  if (or__4253__auto__) {
    return or__4253__auto__;
  } else {
    var or__4253__auto____$1 = !(self__.next_iter == null);
    if (or__4253__auto____$1) {
      return or__4253__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (!(self__.next_entry == null)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (!(self__.next_iter == null)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$arr, cljs.core.with_meta(cljs$cst$symbol$i, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$next_DASH_entry, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$next_DASH_iter, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], 
  null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_.val = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_21964 = 0;
        var j_21965 = 0;
        while (true) {
          if (i_21964 < 32) {
            if ((self__.bitmap >>> i_21964 & 1) === 0) {
              var G__21966 = i_21964 + 1;
              var G__21967 = j_21965;
              i_21964 = G__21966;
              j_21965 = G__21967;
              continue;
            } else {
              nodes[i_21964] = !(self__.arr[j_21965] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_21965]), self__.arr[j_21965], self__.arr[j_21965 + 1], added_leaf_QMARK_) : self__.arr[j_21965 + 1];
              var G__21968 = i_21964 + 1;
              var G__21969 = j_21965 + 2;
              i_21964 = G__21968;
              j_21965 = G__21969;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__19195 = edit__$1;
          var G__19196 = shift + 5;
          var G__19197 = key_or_nil;
          var G__19198 = val_or_node;
          var G__19199 = hash;
          var G__19200 = key;
          var G__19201 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__19195, G__19196, G__19197, G__19198, G__19199, G__19200, G__19201) : cljs.core.create_node.call(null, G__19195, G__19196, G__19197, G__19198, G__19199, G__19200, G__19201);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_21973 = 0;
      var j_21974 = 0;
      while (true) {
        if (i_21973 < 32) {
          if ((self__.bitmap >>> i_21973 & 1) === 0) {
            var G__21975 = i_21973 + 1;
            var G__21976 = j_21974;
            i_21973 = G__21975;
            j_21974 = G__21976;
            continue;
          } else {
            nodes[i_21973] = !(self__.arr[j_21974] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_21974]), self__.arr[j_21974], self__.arr[j_21974 + 1], added_leaf_QMARK_) : self__.arr[j_21974 + 1];
            var G__21977 = i_21973 + 1;
            var G__21978 = j_21974 + 2;
            i_21973 = G__21977;
            j_21974 = G__21978;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__19202 = shift + 5;
          var G__19203 = key_or_nil;
          var G__19204 = val_or_node;
          var G__19205 = hash;
          var G__19206 = key;
          var G__19207 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__19202, G__19203, G__19204, G__19205, G__19206, G__19207) : cljs.core.create_node.call(null, G__19202, G__19203, G__19204, G__19205, G__19206, G__19207);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.MapEntry(key_or_nil, val_or_node, null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$edit, cljs.core.with_meta(cljs$cst$symbol$bitmap, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$arr, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__21979 = i + 1;
        var G__21980 = j + 2;
        var G__21981 = bitmap | 1 << i;
        i = G__21979;
        j = G__21980;
        bitmap = G__21981;
        continue;
      } else {
        var G__21982 = i + 1;
        var G__21983 = j;
        var G__21984 = bitmap;
        i = G__21982;
        j = G__21983;
        bitmap = G__21984;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(!(self__.next_iter == null) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (!(node == null)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$arr, cljs.core.with_meta(cljs$cst$symbol$i, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$next_DASH_iter, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return init__$2;
        } else {
          var G__21985 = i + 1;
          var G__21986 = init__$2;
          i = G__21985;
          init__$1 = G__21986;
          continue;
        }
      } else {
        var G__21987 = i + 1;
        var G__21988 = init__$1;
        i = G__21987;
        init__$1 = G__21988;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$edit, cljs.core.with_meta(cljs$cst$symbol$cnt, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$arr, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__21992 = i + 2;
        i = G__21992;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_.val = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx + 1], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.MapEntry(self__.arr[idx], self__.arr[idx + 1], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$edit, cljs.core.with_meta(cljs$cst$symbol$collision_DASH_hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$cnt, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$arr, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], 
  null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node(var_args) {
  var G__19209 = arguments.length;
  switch(G__19209) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.indexOf = function() {
  var G__22000 = null;
  var G__22000__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__22000__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22000 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22000__1.call(this, x);
      case 2:
        return G__22000__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22000.cljs$core$IFn$_invoke$arity$1 = G__22000__1;
  G__22000.cljs$core$IFn$_invoke$arity$2 = G__22000__2;
  return G__22000;
}();
cljs.core.NodeSeq.prototype.lastIndexOf = function() {
  var G__22001 = null;
  var G__22001__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__22001__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22001 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22001__1.call(this, x);
      case 2:
        return G__22001__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22001.cljs$core$IFn$_invoke$arity$1 = G__22001__1;
  G__22001.cljs$core$IFn$_invoke$arity$2 = G__22001__2;
  return G__22001;
}();
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__19210 = self__.nodes;
    var G__19211 = self__.i + 2;
    var G__19212 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__19210, G__19211, G__19212) : cljs.core.create_inode_seq.call(null, G__19210, G__19211, G__19212);
  } else {
    var G__19213 = self__.nodes;
    var G__19214 = self__.i;
    var G__19215 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__19213, G__19214, G__19215) : cljs.core.create_inode_seq.call(null, G__19213, G__19214, G__19215);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.MapEntry(self__.nodes[self__.i], self__.nodes[self__.i + 1], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = self__.s == null ? function() {
    var G__19216 = self__.nodes;
    var G__19217 = self__.i + 2;
    var G__19218 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__19216, G__19217, G__19218) : cljs.core.create_inode_seq.call(null, G__19216, G__19217, G__19218);
  }() : function() {
    var G__19219 = self__.nodes;
    var G__19220 = self__.i;
    var G__19221 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__19219, G__19220, G__19221) : cljs.core.create_inode_seq.call(null, G__19219, G__19220, G__19221);
  }();
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.NodeSeq(new_meta, self__.nodes, self__.i, self__.s, self__.__hash);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta, cljs$cst$symbol$nodes, cljs$cst$symbol$i, cljs$cst$symbol$s, cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq(var_args) {
  var G__19223 = arguments.length;
  switch(G__19223) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__5751__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__5751__auto__)) {
            var node = temp__5751__auto__;
            var temp__5751__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__5751__auto____$1)) {
              var node_seq = temp__5751__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__22005 = j + 2;
              j = G__22005;
              continue;
            }
          } else {
            var G__22006 = j + 2;
            j = G__22006;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.indexOf = function() {
  var G__22007 = null;
  var G__22007__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__22007__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22007 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22007__1.call(this, x);
      case 2:
        return G__22007__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22007.cljs$core$IFn$_invoke$arity$1 = G__22007__1;
  G__22007.cljs$core$IFn$_invoke$arity$2 = G__22007__2;
  return G__22007;
}();
cljs.core.ArrayNodeSeq.prototype.lastIndexOf = function() {
  var G__22009 = null;
  var G__22009__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__22009__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22009 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22009__1.call(this, x);
      case 2:
        return G__22009__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22009.cljs$core$IFn$_invoke$arity$1 = G__22009__1;
  G__22009.cljs$core$IFn$_invoke$arity$2 = G__22009__2;
  return G__22009;
}();
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__19224 = self__.nodes;
  var G__19225 = self__.i;
  var G__19226 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(G__19224, G__19225, G__19226) : cljs.core.create_array_node_seq.call(null, G__19224, G__19225, G__19226);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = function() {
    var G__19227 = self__.nodes;
    var G__19228 = self__.i;
    var G__19229 = cljs.core.next(self__.s);
    return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(G__19227, G__19228, G__19229) : cljs.core.create_array_node_seq.call(null, G__19227, G__19228, G__19229);
  }();
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.ArrayNodeSeq(new_meta, self__.nodes, self__.i, self__.s, self__.__hash);
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta, cljs$cst$symbol$nodes, cljs$cst$symbol$i, cljs$cst$symbol$s, cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq(var_args) {
  var G__19231 = arguments.length;
  switch(G__19231) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__5751__auto__ = nodes[j];
        if (cljs.core.truth_(temp__5751__auto__)) {
          var nj = temp__5751__auto__;
          var temp__5751__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__5751__auto____$1)) {
            var ns = temp__5751__auto____$1;
            return new cljs.core.ArrayNodeSeq(null, nodes, j + 1, ns, null);
          } else {
            var G__22015 = j + 1;
            j = G__22015;
            continue;
          }
        } else {
          var G__22016 = j + 1;
          j = G__22016;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 3;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return !self__.seen || self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return new cljs.core.MapEntry(null, self__.nil_val, null);
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$nil_DASH_val, cljs$cst$symbol$root_DASH_iter, cljs.core.with_meta(cljs$cst$symbol$seen, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.MapEntry(null, self__.nil_val, null);
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_find(0, cljs.core.hash(k), k, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__19233 = cljs.core.seq(coll);
  var chunk__19234 = null;
  var count__19235 = 0;
  var i__19236 = 0;
  while (true) {
    if (i__19236 < count__19235) {
      var vec__19243 = chunk__19234.cljs$core$IIndexed$_nth$arity$2(null, i__19236);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19243, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19243, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__22020 = seq__19233;
      var G__22021 = chunk__19234;
      var G__22022 = count__19235;
      var G__22023 = i__19236 + 1;
      seq__19233 = G__22020;
      chunk__19234 = G__22021;
      count__19235 = G__22022;
      i__19236 = G__22023;
      continue;
    } else {
      var temp__5753__auto__ = cljs.core.seq(seq__19233);
      if (temp__5753__auto__) {
        var seq__19233__$1 = temp__5753__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__19233__$1)) {
          var c__4679__auto__ = cljs.core.chunk_first(seq__19233__$1);
          var G__22024 = cljs.core.chunk_rest(seq__19233__$1);
          var G__22025 = c__4679__auto__;
          var G__22026 = cljs.core.count(c__4679__auto__);
          var G__22027 = 0;
          seq__19233 = G__22024;
          chunk__19234 = G__22025;
          count__19235 = G__22026;
          i__19236 = G__22027;
          continue;
        } else {
          var vec__19246 = cljs.core.first(seq__19233__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19246, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19246, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__22028 = cljs.core.next(seq__19233__$1);
          var G__22029 = null;
          var G__22030 = 0;
          var G__22031 = 0;
          seq__19233 = G__22028;
          chunk__19234 = G__22029;
          count__19235 = G__22030;
          i__19236 = G__22031;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref(init__$1);
  } else {
    if (!(self__.root == null)) {
      return cljs.core.unreduced(self__.root.kv_reduce(f, init__$1));
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter();
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.MapEntry(null, self__.nil_val, null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentHashMap(new_meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth(entry, 0), cljs.core._nth(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__22032 = cljs.core._assoc(ret, cljs.core._nth(e, 0), cljs.core._nth(e, 1));
          var G__22033 = cljs.core.next(es);
          ret = G__22032;
          es = G__22033;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function(unused__9633__auto__) {
  var self__ = this;
  var self__ = this;
  var G__19251 = arguments.length - 1;
  switch(G__19251) {
    case 1:
      return self__.cljs$core$IFn$_invoke$arity$1(arguments[1]);
      break;
    case 2:
      return self__.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
cljs.core.PersistentHashMap.prototype.apply = function(self__, args19232) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19232)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta, cljs$cst$symbol$cnt, cljs$cst$symbol$root, cljs.core.with_meta(cljs$cst$symbol$has_DASH_nil_QMARK_, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$boolean], null)), cljs$cst$symbol$nil_DASH_val, cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__22049 = i + 2;
      var G__22050 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__22049;
      ret = G__22050;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      if (vs.length <= i) {
        throw new Error(["No value supplied for key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(ks[i])].join(""));
      } else {
        var G__22051 = i + 1;
        var G__22052 = cljs.core._assoc_BANG_(out, ks[i], vs[i]);
        i = G__22051;
        out = G__22052;
        continue;
      }
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.createWithCheck = function(arr) {
  var len = arr.length;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i_22053 = 0;
  while (true) {
    if (i_22053 < len) {
      cljs.core._assoc_BANG_(ret, arr[i_22053], arr[i_22053 + 1]);
      if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._count(ret), i_22053 / 2 + 1)) {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arr[i_22053])].join(""));
      } else {
        var G__22054 = i_22053 + 2;
        i_22053 = G__22054;
        continue;
      }
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(ret);
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (cljs.core.map_entry_QMARK_(o)) {
      return tcoll.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      if (cljs.core.vector_QMARK_(o)) {
        return tcoll.assoc_BANG_(o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(0) : o.call(null, 0), o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(1) : o.call(null, 1));
      } else {
        var es = cljs.core.seq(o);
        var tcoll__$1 = tcoll;
        while (true) {
          var temp__5751__auto__ = cljs.core.first(es);
          if (cljs.core.truth_(temp__5751__auto__)) {
            var e = temp__5751__auto__;
            var G__22055 = cljs.core.next(es);
            var G__22056 = tcoll__$1.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
            es = G__22055;
            tcoll__$1 = G__22056;
            continue;
          } else {
            return tcoll__$1;
          }
          break;
        }
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (removed_leaf_QMARK_.val) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.call = function(unused__9633__auto__) {
  var self__ = this;
  var self__ = this;
  var G__19253 = arguments.length - 1;
  switch(G__19253) {
    case 1:
      return self__.cljs$core$IFn$_invoke$arity$1(arguments[1]);
      break;
    case 2:
      return self__.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
cljs.core.TransientHashMap.prototype.apply = function(self__, args19252) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19252)));
};
cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(key) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$2(null, key);
};
cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(key, not_found) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$edit, new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$tag, cljs$cst$symbol$boolean, cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$root, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$count, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, 
  true], null)), cljs.core.with_meta(cljs$cst$symbol$has_DASH_nil_QMARK_, new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$tag, cljs$cst$symbol$boolean, cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$nil_DASH_val, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__22059 = ascending_QMARK_ ? t.left : t.right;
      var G__22060 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__22059;
      stack__$1 = G__22060;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.indexOf = function() {
  var G__22064 = null;
  var G__22064__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__22064__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22064 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22064__1.call(this, x);
      case 2:
        return G__22064__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22064.cljs$core$IFn$_invoke$arity$1 = G__22064__1;
  G__22064.cljs$core$IFn$_invoke$arity$2 = G__22064__2;
  return G__22064;
}();
cljs.core.PersistentTreeMapSeq.prototype.lastIndexOf = function() {
  var G__22065 = null;
  var G__22065__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__22065__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22065 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22065__1.call(this, x);
      case 2:
        return G__22065__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22065.cljs$core$IFn$_invoke$arity$1 = G__22065__1;
  G__22065.cljs$core$IFn$_invoke$arity$2 = G__22065__2;
  return G__22065;
}();
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (next_stack == null) {
    return null;
  } else {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentTreeMapSeq(new_meta, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta, cljs$cst$symbol$stack, cljs.core.with_meta(cljs$cst$symbol$ascending_QMARK_, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$boolean], null)), cljs$cst$symbol$cnt, cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? function() {
    var G__19254 = node.left;
    var G__19255 = f;
    var G__19256 = init;
    return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__19254, G__19255, G__19256) : cljs.core.tree_map_kv_reduce.call(null, G__19254, G__19255, G__19256);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return init__$1;
  } else {
    var init__$2 = function() {
      var G__19257 = init__$1;
      var G__19258 = node.key;
      var G__19259 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19257, G__19258, G__19259) : f.call(null, G__19257, G__19258, G__19259);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return init__$2;
    } else {
      if (!(node.right == null)) {
        var G__19260 = node.right;
        var G__19261 = f;
        var G__19262 = init__$2;
        return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__19260, G__19261, G__19262) : cljs.core.tree_map_kv_reduce.call(null, G__19260, G__19261, G__19262);
      } else {
        return init__$2;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__19264 = k;
  switch(G__19264) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.BlackNode.prototype.lastIndexOf = function() {
  var G__22070 = null;
  var G__22070__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__22070__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22070 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22070__1.call(this, x);
      case 2:
        return G__22070__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22070.cljs$core$IFn$_invoke$arity$1 = G__22070__1;
  G__22070.cljs$core$IFn$_invoke$arity$2 = G__22070__2;
  return G__22070;
}();
cljs.core.BlackNode.prototype.indexOf = function() {
  var G__22071 = null;
  var G__22071__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__22071__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22071 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22071__1.call(this, x);
      case 2:
        return G__22071__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22071.cljs$core$IFn$_invoke$arity$1 = G__22071__1;
  G__22071.cljs$core$IFn$_invoke$arity$2 = G__22071__2;
  return G__22071;
}();
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function(unused__9633__auto__) {
  var self__ = this;
  var self__ = this;
  var G__19265 = arguments.length - 1;
  switch(G__19265) {
    case 1:
      return self__.cljs$core$IFn$_invoke$arity$1(arguments[1]);
      break;
    case 2:
      return self__.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
cljs.core.BlackNode.prototype.apply = function(self__, args19263) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19263)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$key, cljs$cst$symbol$val, cljs$cst$symbol$left, cljs$cst$symbol$right, cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__19267 = k;
  switch(G__19267) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.RedNode.prototype.lastIndexOf = function() {
  var G__22083 = null;
  var G__22083__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__22083__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22083 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22083__1.call(this, x);
      case 2:
        return G__22083__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22083.cljs$core$IFn$_invoke$arity$1 = G__22083__1;
  G__22083.cljs$core$IFn$_invoke$arity$2 = G__22083__2;
  return G__22083;
}();
cljs.core.RedNode.prototype.indexOf = function() {
  var G__22095 = null;
  var G__22095__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__22095__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22095 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22095__1.call(this, x);
      case 2:
        return G__22095__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22095.cljs$core$IFn$_invoke$arity$1 = G__22095__1;
  G__22095.cljs$core$IFn$_invoke$arity$2 = G__22095__2;
  return G__22095;
}();
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function(unused__9633__auto__) {
  var self__ = this;
  var self__ = this;
  var G__19268 = arguments.length - 1;
  switch(G__19268) {
    case 1:
      return self__.cljs$core$IFn$_invoke$arity$1(arguments[1]);
      break;
    case 2:
      return self__.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
cljs.core.RedNode.prototype.apply = function(self__, args19266) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19266)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$key, cljs$cst$symbol$val, cljs$cst$symbol$left, cljs$cst$symbol$right, cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__19269 = k;
      var G__19270 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__19269, G__19270) : comp.call(null, G__19269, G__19270);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = function() {
          var G__19271 = comp;
          var G__19272 = tree.left;
          var G__19273 = k;
          var G__19274 = v;
          var G__19275 = found;
          return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__19271, G__19272, G__19273, G__19274, G__19275) : cljs.core.tree_map_add.call(null, G__19271, G__19272, G__19273, G__19274, G__19275);
        }();
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = function() {
          var G__19276 = comp;
          var G__19277 = tree.right;
          var G__19278 = k;
          var G__19279 = v;
          var G__19280 = found;
          return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__19276, G__19277, G__19278, G__19279, G__19280) : cljs.core.tree_map_add.call(null, G__19276, G__19277, G__19278, G__19279, G__19280);
        }();
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = function() {
            var G__19281 = left.right;
            var G__19282 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__19281, G__19282) : cljs.core.tree_map_append.call(null, G__19281, G__19282);
          }();
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, function() {
            var G__19283 = left.right;
            var G__19284 = right;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__19283, G__19284) : cljs.core.tree_map_append.call(null, G__19283, G__19284);
          }(), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, function() {
            var G__19285 = left;
            var G__19286 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__19285, G__19286) : cljs.core.tree_map_append.call(null, G__19285, G__19286);
          }(), right.right, null);
        } else {
          var app = function() {
            var G__19287 = left.right;
            var G__19288 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__19287, G__19288) : cljs.core.tree_map_append.call(null, G__19287, G__19288);
          }();
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__19289 = k;
      var G__19290 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__19289, G__19290) : comp.call(null, G__19289, G__19290);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = function() {
          var G__19291 = comp;
          var G__19292 = tree.left;
          var G__19293 = k;
          var G__19294 = found;
          return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__19291, G__19292, G__19293, G__19294) : cljs.core.tree_map_remove.call(null, G__19291, G__19292, G__19293, G__19294);
        }();
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = function() {
          var G__19295 = comp;
          var G__19296 = tree.right;
          var G__19297 = k;
          var G__19298 = found;
          return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__19295, G__19296, G__19297, G__19298) : cljs.core.tree_map_remove.call(null, G__19295, G__19296, G__19297, G__19298);
        }();
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, function() {
        var G__19299 = comp;
        var G__19300 = tree.left;
        var G__19301 = k;
        var G__19302 = v;
        return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__19299, G__19300, G__19301, G__19302) : cljs.core.tree_map_replace.call(null, G__19299, G__19300, G__19301, G__19302);
      }(), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, function() {
        var G__19303 = comp;
        var G__19304 = tree.right;
        var G__19305 = k;
        var G__19306 = v;
        return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__19303, G__19304, G__19305, G__19306) : cljs.core.tree_map_replace.call(null, G__19303, G__19304, G__19305, G__19306);
      }());
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.entry_at(k);
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__19308 = cljs.core.seq(coll);
  var chunk__19309 = null;
  var count__19310 = 0;
  var i__19311 = 0;
  while (true) {
    if (i__19311 < count__19310) {
      var vec__19318 = chunk__19309.cljs$core$IIndexed$_nth$arity$2(null, i__19311);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19318, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19318, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__22123 = seq__19308;
      var G__22124 = chunk__19309;
      var G__22125 = count__19310;
      var G__22126 = i__19311 + 1;
      seq__19308 = G__22123;
      chunk__19309 = G__22124;
      count__19310 = G__22125;
      i__19311 = G__22126;
      continue;
    } else {
      var temp__5753__auto__ = cljs.core.seq(seq__19308);
      if (temp__5753__auto__) {
        var seq__19308__$1 = temp__5753__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__19308__$1)) {
          var c__4679__auto__ = cljs.core.chunk_first(seq__19308__$1);
          var G__22127 = cljs.core.chunk_rest(seq__19308__$1);
          var G__22128 = c__4679__auto__;
          var G__22129 = cljs.core.count(c__4679__auto__);
          var G__22130 = 0;
          seq__19308 = G__22127;
          chunk__19309 = G__22128;
          count__19310 = G__22129;
          i__19311 = G__22130;
          continue;
        } else {
          var vec__19321 = cljs.core.first(seq__19308__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19321, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19321, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__22131 = cljs.core.next(seq__19308__$1);
          var G__22132 = null;
          var G__22133 = 0;
          var G__22134 = 0;
          seq__19308 = G__22131;
          chunk__19309 = G__22132;
          count__19310 = G__22133;
          i__19311 = G__22134;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__19324 = k;
        var G__19325 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__19324, G__19325) : self__.comp.call(null, G__19324, G__19325);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__22138 = t.left;
          t = G__22138;
          continue;
        } else {
          var G__22139 = t.right;
          t = G__22139;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.unreduced(cljs.core.tree_map_kv_reduce(self__.tree, f, init));
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, new_meta, self__.__hash);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth(entry, 0), cljs.core._nth(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__22140 = cljs.core._assoc(ret, cljs.core._nth(e, 0), cljs.core._nth(e, 1));
          var G__22141 = cljs.core.next(es);
          ret = G__22140;
          es = G__22141;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function(unused__9633__auto__) {
  var self__ = this;
  var self__ = this;
  var G__19326 = arguments.length - 1;
  switch(G__19326) {
    case 1:
      return self__.cljs$core$IFn$_invoke$arity$1(arguments[1]);
      break;
    case 2:
      return self__.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args19307) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19307)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__19329 = k;
          var G__19330 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__19329, G__19330) : self__.comp.call(null, G__19329, G__19330);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__22143 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__22144 = t.left;
              stack = G__22143;
              t = G__22144;
              continue;
            } else {
              var G__22145 = stack;
              var G__22146 = t.right;
              stack = G__22145;
              t = G__22146;
              continue;
            }
          } else {
            if (c > 0) {
              var G__22147 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__22148 = t.right;
              stack = G__22147;
              t = G__22148;
              continue;
            } else {
              var G__22149 = stack;
              var G__22150 = t.left;
              stack = G__22149;
              t = G__22150;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$comp, cljs$cst$symbol$tree, cljs$cst$symbol$cnt, cljs$cst$symbol$meta, cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___22151 = arguments.length;
  var i__4865__auto___22152 = 0;
  while (true) {
    if (i__4865__auto___22152 < len__4864__auto___22151) {
      args__4870__auto__.push(arguments[i__4865__auto___22152]);
      var G__22153 = i__4865__auto___22152 + 1;
      i__4865__auto___22152 = G__22153;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var in_SINGLEQUOTE_ = cljs.core.next(in$);
      if (in_SINGLEQUOTE_ == null) {
        throw new Error(["No value supplied for key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(in$))].join(""));
      } else {
        var G__22154 = cljs.core.next(in_SINGLEQUOTE_);
        var G__22155 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.first(in_SINGLEQUOTE_));
        in$ = G__22154;
        out = G__22155;
        continue;
      }
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq19331) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19331));
};
cljs.core.array_map = function cljs$core$array_map(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___22156 = arguments.length;
  var i__4865__auto___22157 = 0;
  while (true) {
    if (i__4865__auto___22157 < len__4864__auto___22156) {
      args__4870__auto__.push(arguments[i__4865__auto___22157]);
      var G__22158 = i__4865__auto___22157 + 1;
      i__4865__auto___22157 = G__22158;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.createAsIfByAssoc(arr);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq19332) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19332));
};
cljs.core.obj_map = function cljs$core$obj_map(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___22159 = arguments.length;
  var i__4865__auto___22160 = 0;
  while (true) {
    if (i__4865__auto___22160 < len__4864__auto___22159) {
      args__4870__auto__.push(arguments[i__4865__auto___22160]);
      var G__22161 = i__4865__auto___22160 + 1;
      i__4865__auto___22160 = G__22161;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      cljs.core.goog$module$goog$object.set(obj, cljs.core.first(kvs), cljs.core.second(kvs));
      var G__22162 = cljs.core.nnext(kvs);
      kvs = G__22162;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq19333) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19333));
};
cljs.core.sorted_map = function cljs$core$sorted_map(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___22163 = arguments.length;
  var i__4865__auto___22164 = 0;
  while (true) {
    if (i__4865__auto___22164 < len__4864__auto___22163) {
      args__4870__auto__.push(arguments[i__4865__auto___22164]);
      var G__22165 = i__4865__auto___22164 + 1;
      i__4865__auto___22164 = G__22165;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__22166 = cljs.core.nnext(in$);
      var G__22167 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__22166;
      out = G__22167;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq19336) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19336));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___22168 = arguments.length;
  var i__4865__auto___22169 = 0;
  while (true) {
    if (i__4865__auto___22169 < len__4864__auto___22168) {
      args__4870__auto__.push(arguments[i__4865__auto___22169]);
      var G__22170 = i__4865__auto___22169 + 1;
      i__4865__auto___22169 = G__22170;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 1 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4871__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__22171 = cljs.core.nnext(in$);
      var G__22172 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__22171;
      out = G__22172;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq19337) {
  var G__19338 = cljs.core.first(seq19337);
  var seq19337__$1 = cljs.core.next(seq19337);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19338, seq19337__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.indexOf = function() {
  var G__22174 = null;
  var G__22174__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__22174__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22174 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22174__1.call(this, x);
      case 2:
        return G__22174__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22174.cljs$core$IFn$_invoke$arity$1 = G__22174__1;
  G__22174.cljs$core$IFn$_invoke$arity$2 = G__22174__2;
  return G__22174;
}();
cljs.core.KeySeq.prototype.lastIndexOf = function() {
  var G__22178 = null;
  var G__22178__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__22178__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22178 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22178__1.call(this, x);
      case 2:
        return G__22178__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22178.cljs$core$IFn$_invoke$arity$1 = G__22178__1;
  G__22178.cljs$core$IFn$_invoke$arity$2 = G__22178__2;
  return G__22178;
}();
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, null);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__._meta) {
    return coll__$1;
  } else {
    return new cljs.core.KeySeq(self__.mseq, new_meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$mseq, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$not_DASH_native], null)), cljs$cst$symbol$_meta], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.keys = function cljs$core$keys(map) {
  var temp__5753__auto__ = cljs.core.seq(map);
  if (temp__5753__auto__) {
    var mseq = temp__5753__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.indexOf = function() {
  var G__22183 = null;
  var G__22183__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__22183__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22183 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22183__1.call(this, x);
      case 2:
        return G__22183__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22183.cljs$core$IFn$_invoke$arity$1 = G__22183__1;
  G__22183.cljs$core$IFn$_invoke$arity$2 = G__22183__2;
  return G__22183;
}();
cljs.core.ValSeq.prototype.lastIndexOf = function() {
  var G__22184 = null;
  var G__22184__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__22184__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22184 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22184__1.call(this, x);
      case 2:
        return G__22184__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22184.cljs$core$IFn$_invoke$arity$1 = G__22184__1;
  G__22184.cljs$core$IFn$_invoke$arity$2 = G__22184__2;
  return G__22184;
}();
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, null);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__._meta) {
    return coll__$1;
  } else {
    return new cljs.core.ValSeq(self__.mseq, new_meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$mseq, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$not_DASH_native], null)), cljs$cst$symbol$_meta], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.vals = function cljs$core$vals(map) {
  var temp__5753__auto__ = cljs.core.seq(map);
  if (temp__5753__auto__) {
    var mseq = temp__5753__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___22188 = arguments.length;
  var i__4865__auto___22189 = 0;
  while (true) {
    if (i__4865__auto___22189 < len__4864__auto___22188) {
      args__4870__auto__.push(arguments[i__4865__auto___22189]);
      var G__22190 = i__4865__auto___22189 + 1;
      i__4865__auto___22189 = G__22190;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__19343_SHARP_, p2__19344_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__4253__auto__ = p1__19343_SHARP_;
        if (cljs.core.truth_(or__4253__auto__)) {
          return or__4253__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__19344_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq19345) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19345));
};
cljs.core.merge_with = function cljs$core$merge_with(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___22191 = arguments.length;
  var i__4865__auto___22192 = 0;
  while (true) {
    if (i__4865__auto___22192 < len__4864__auto___22191) {
      args__4870__auto__.push(arguments[i__4865__auto___22192]);
      var G__22193 = i__4865__auto___22192 + 1;
      i__4865__auto___22192 = G__22193;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 1 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(1), 0, null) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4871__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.key(e);
      var v = cljs.core.val(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__19348 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__19349 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19348, G__19349) : f.call(null, G__19348, G__19349);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(m1, m2) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
        var or__4253__auto__ = m1;
        if (cljs.core.truth_(or__4253__auto__)) {
          return or__4253__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), cljs.core.seq(m2));
    };
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq19346) {
  var G__19347 = cljs.core.first(seq19346);
  var seq19346__$1 = cljs.core.next(seq19346);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19347, seq19346__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, cljs$cst$keyword$cljs_DOT_core_SLASH_not_DASH_found);
      var G__22194 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, cljs$cst$keyword$cljs_DOT_core_SLASH_not_DASH_found) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__22195 = cljs.core.next(keys);
      ret = G__22194;
      keys = G__22195;
      continue;
    } else {
      return cljs.core._with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().key;
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$iter], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__19353 = cljs.core.seq(coll);
  var chunk__19354 = null;
  var count__19355 = 0;
  var i__19356 = 0;
  while (true) {
    if (i__19356 < count__19355) {
      var vec__19363 = chunk__19354.cljs$core$IIndexed$_nth$arity$2(null, i__19356);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19363, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19363, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__22196 = seq__19353;
      var G__22197 = chunk__19354;
      var G__22198 = count__19355;
      var G__22199 = i__19356 + 1;
      seq__19353 = G__22196;
      chunk__19354 = G__22197;
      count__19355 = G__22198;
      i__19356 = G__22199;
      continue;
    } else {
      var temp__5753__auto__ = cljs.core.seq(seq__19353);
      if (temp__5753__auto__) {
        var seq__19353__$1 = temp__5753__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__19353__$1)) {
          var c__4679__auto__ = cljs.core.chunk_first(seq__19353__$1);
          var G__22201 = cljs.core.chunk_rest(seq__19353__$1);
          var G__22202 = c__4679__auto__;
          var G__22203 = cljs.core.count(c__4679__auto__);
          var G__22204 = 0;
          seq__19353 = G__22201;
          chunk__19354 = G__22202;
          count__19355 = G__22203;
          i__19356 = G__22204;
          continue;
        } else {
          var vec__19366 = cljs.core.first(seq__19353__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19366, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19366, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__22205 = cljs.core.next(seq__19353__$1);
          var G__22206 = null;
          var G__22207 = 0;
          var G__22208 = 0;
          seq__19353 = G__22205;
          chunk__19354 = G__22206;
          count__19355 = G__22207;
          i__19356 = G__22208;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var temp__5751__auto__ = cljs.core._find(self__.hash_map, v);
  if (cljs.core.truth_(temp__5751__auto__)) {
    var entry = temp__5751__auto__;
    return cljs.core.key(entry);
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var and__4251__auto__ = cljs.core.set_QMARK_(other);
  if (and__4251__auto__) {
    var and__4251__auto____$1 = cljs.core.count(coll__$1) === cljs.core.count(other);
    if (and__4251__auto____$1) {
      try {
        return cljs.core.reduce_kv(function(p1__19351_SHARP_, p2__19350_SHARP_) {
          var or__4253__auto__ = cljs.core.contains_QMARK_(other, p2__19350_SHARP_);
          if (or__4253__auto__) {
            return or__4253__auto__;
          } else {
            return cljs.core.reduced(false);
          }
        }, true, self__.hash_map);
      } catch (e19369) {
        if (e19369 instanceof Error) {
          var ex = e19369;
          return false;
        } else {
          throw e19369;
        }
      }
    } else {
      return and__4251__auto____$1;
    }
  } else {
    return and__4251__auto__;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentHashSet(new_meta, self__.hash_map, self__.__hash);
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function(unused__9633__auto__) {
  var self__ = this;
  var self__ = this;
  var G__19370 = arguments.length - 1;
  switch(G__19370) {
    case 1:
      return self__.cljs$core$IFn$_invoke$arity$1(arguments[1]);
      break;
    case 2:
      return self__.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
cljs.core.PersistentHashSet.prototype.apply = function(self__, args19352) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19352)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta, cljs$cst$symbol$hash_DASH_map, cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__22210 = i + 1;
        var G__22211 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__22210;
        out = G__22211;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__22212 = i + 1;
        var G__22213 = cljs.core._conj_BANG_(out, items[i]);
        i = G__22212;
        out = G__22213;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.createWithCheck = function(items) {
  var len = items.length;
  var t = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
  var n__4741__auto___22214 = len;
  var i_22215 = 0;
  while (true) {
    if (i_22215 < n__4741__auto___22214) {
      cljs.core._conj_BANG_(t, items[i_22215]);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(t), i_22215 + 1)) {
      } else {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(items[i_22215])].join(""));
      }
      var G__22216 = i_22215 + 1;
      i_22215 = G__22216;
      continue;
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(t);
};
cljs.core.PersistentHashSet.createAsIfByAssoc = function(items) {
  var len = items.length;
  var t = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
  var n__4741__auto___22217 = len;
  var i_22218 = 0;
  while (true) {
    if (i_22218 < n__4741__auto___22217) {
      cljs.core._conj_BANG_(t, items[i_22218]);
      var G__22219 = i_22218 + 1;
      i_22218 = G__22219;
      continue;
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(t);
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function(unused__9633__auto__) {
  var self__ = this;
  var self__ = this;
  var G__19372 = arguments.length - 1;
  switch(G__19372) {
    case 1:
      return self__.cljs$core$IFn$_invoke$arity$1(arguments[1]);
      break;
    case 2:
      return self__.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
cljs.core.TransientHashSet.prototype.apply = function(self__, args19371) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19371)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$transient_DASH_map, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__19376 = cljs.core.seq(coll);
  var chunk__19377 = null;
  var count__19378 = 0;
  var i__19379 = 0;
  while (true) {
    if (i__19379 < count__19378) {
      var vec__19386 = chunk__19377.cljs$core$IIndexed$_nth$arity$2(null, i__19379);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19386, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19386, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__22221 = seq__19376;
      var G__22222 = chunk__19377;
      var G__22223 = count__19378;
      var G__22224 = i__19379 + 1;
      seq__19376 = G__22221;
      chunk__19377 = G__22222;
      count__19378 = G__22223;
      i__19379 = G__22224;
      continue;
    } else {
      var temp__5753__auto__ = cljs.core.seq(seq__19376);
      if (temp__5753__auto__) {
        var seq__19376__$1 = temp__5753__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__19376__$1)) {
          var c__4679__auto__ = cljs.core.chunk_first(seq__19376__$1);
          var G__22225 = cljs.core.chunk_rest(seq__19376__$1);
          var G__22226 = c__4679__auto__;
          var G__22227 = cljs.core.count(c__4679__auto__);
          var G__22228 = 0;
          seq__19376 = G__22225;
          chunk__19377 = G__22226;
          count__19378 = G__22227;
          i__19379 = G__22228;
          continue;
        } else {
          var vec__19389 = cljs.core.first(seq__19376__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19389, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19389, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__22229 = cljs.core.next(seq__19376__$1);
          var G__22230 = null;
          var G__22231 = 0;
          var G__22232 = 0;
          seq__19376 = G__22229;
          chunk__19377 = G__22230;
          count__19378 = G__22231;
          i__19379 = G__22232;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var and__4251__auto__ = cljs.core.set_QMARK_(other);
  if (and__4251__auto__) {
    var and__4251__auto____$1 = cljs.core.count(coll__$1) === cljs.core.count(other);
    if (and__4251__auto____$1) {
      try {
        return cljs.core.reduce_kv(function(p1__19374_SHARP_, p2__19373_SHARP_) {
          var or__4253__auto__ = cljs.core.contains_QMARK_(other, p2__19373_SHARP_);
          if (or__4253__auto__) {
            return or__4253__auto__;
          } else {
            return cljs.core.reduced(false);
          }
        }, true, self__.tree_map);
      } catch (e19392) {
        if (e19392 instanceof Error) {
          var ex = e19392;
          return false;
        } else {
          throw e19392;
        }
      }
    } else {
      return and__4251__auto____$1;
    }
  } else {
    return and__4251__auto__;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentTreeSet(new_meta, self__.tree_map, self__.__hash);
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function(unused__9633__auto__) {
  var self__ = this;
  var self__ = this;
  var G__19393 = arguments.length - 1;
  switch(G__19393) {
    case 1:
      return self__.cljs$core$IFn$_invoke$arity$1(arguments[1]);
      break;
    case 2:
      return self__.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args19375) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19375)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta, cljs$cst$symbol$tree_DASH_map, cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4738__auto__ = arr;
    var l__4739__auto__ = a__4738__auto__.length;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < l__4739__auto__) {
        var G__22239 = i + 1;
        var G__22240 = cljs.core._conj_BANG_(res, arr[i]);
        i = G__22239;
        res = G__22240;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  if (cljs.core.set_QMARK_(coll)) {
    return cljs.core.with_meta(coll, null);
  } else {
    var in$ = cljs.core.seq(coll);
    if (in$ == null) {
      return cljs.core.PersistentHashSet.EMPTY;
    } else {
      if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
        return cljs.core.PersistentHashSet.createAsIfByAssoc(in$.arr);
      } else {
        var in$__$1 = in$;
        var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__22241 = cljs.core.next(in$__$1);
            var G__22242 = cljs.core._conj_BANG_(out, cljs.core._first(in$__$1));
            in$__$1 = G__22241;
            out = G__22242;
            continue;
          } else {
            return cljs.core.persistent_BANG_(out);
          }
          break;
        }
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set(var_args) {
  var G__19396 = arguments.length;
  switch(G__19396) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___22247 = arguments.length;
      var i__4865__auto___22248 = 0;
      while (true) {
        if (i__4865__auto___22248 < len__4864__auto___22247) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___22248]);
          var G__22249 = i__4865__auto___22248 + 1;
          i__4865__auto___22248 = G__22249;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(0), 0, null);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__4886__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq19395) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19395));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___22250 = arguments.length;
  var i__4865__auto___22251 = 0;
  while (true) {
    if (i__4865__auto___22251 < len__4864__auto___22250) {
      args__4870__auto__.push(arguments[i__4865__auto___22251]);
      var G__22252 = i__4865__auto___22251 + 1;
      i__4865__auto___22251 = G__22252;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq19397) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19397));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___22253 = arguments.length;
  var i__4865__auto___22254 = 0;
  while (true) {
    if (i__4865__auto___22254 < len__4864__auto___22253) {
      args__4870__auto__.push(arguments[i__4865__auto___22254]);
      var G__22255 = i__4865__auto___22254 + 1;
      i__4865__auto___22254 = G__22255;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 1 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4871__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq19398) {
  var G__19399 = cljs.core.first(seq19398);
  var seq19398__$1 = cljs.core.next(seq19398);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19399, seq19398__$1);
};
cljs.core.replace = function cljs$core$replace(var_args) {
  var G__19403 = arguments.length;
  switch(G__19403) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__19400_SHARP_) {
    var temp__5751__auto__ = cljs.core.find(smap, p1__19400_SHARP_);
    if (cljs.core.truth_(temp__5751__auto__)) {
      var e = temp__5751__auto__;
      return cljs.core.val(e);
    } else {
      return p1__19400_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, i) {
      var temp__5751__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
      if (cljs.core.truth_(temp__5751__auto__)) {
        var e = temp__5751__auto__;
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
      } else {
        return v;
      }
    }, coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__19401_SHARP_) {
      var temp__5751__auto__ = cljs.core.find(smap, p1__19401_SHARP_);
      if (cljs.core.truth_(temp__5751__auto__)) {
        var e = temp__5751__auto__;
        return cljs.core.second(e);
      } else {
        return p1__19401_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct(var_args) {
  var G__19405 = arguments.length;
  switch(G__19405) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function() {
      var G__22258 = null;
      var G__22258__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__22258__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__22258__2 = function(result, input) {
        if (cljs.core.contains_QMARK_(cljs.core.deref(seen), input)) {
          return result;
        } else {
          seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__22258 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__22258__0.call(this);
          case 1:
            return G__22258__1.call(this, result);
          case 2:
            return G__22258__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__22258.cljs$core$IFn$_invoke$arity$0 = G__22258__0;
      G__22258.cljs$core$IFn$_invoke$arity$1 = G__22258__1;
      G__22258.cljs$core$IFn$_invoke$arity$2 = G__22258__2;
      return G__22258;
    }();
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__19406, seen__$1) {
        while (true) {
          var vec__19407 = p__19406;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19407, 0, null);
          var xs__$1 = vec__19407;
          var temp__5753__auto__ = cljs.core.seq(xs__$1);
          if (temp__5753__auto__) {
            var s = temp__5753__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__22259 = cljs.core.rest(s);
              var G__22260 = seen__$1;
              p__19406 = G__22259;
              seen__$1 = G__22260;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }(xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__22261 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__22262 = cljs.core.next(s__$1);
      ret = G__22261;
      s__$1 = G__22262;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error(["Doesn't support name: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__22263 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__22264 = cljs.core.next(ks);
      var G__22265 = cljs.core.next(vs);
      map = G__22263;
      ks = G__22264;
      vs = G__22265;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key(var_args) {
  var G__19418 = arguments.length;
  switch(G__19418) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___22267 = arguments.length;
      var i__4865__auto___22268 = 0;
      while (true) {
        if (i__4865__auto___22268 < len__4864__auto___22267) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___22268]);
          var G__22270 = i__4865__auto___22268 + 1;
          i__4865__auto___22268 = G__22270;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(3), 0, null);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4886__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__19411_SHARP_, p2__19412_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__19411_SHARP_, p2__19412_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq19414) {
  var G__19415 = cljs.core.first(seq19414);
  var seq19414__$1 = cljs.core.next(seq19414);
  var G__19416 = cljs.core.first(seq19414__$1);
  var seq19414__$2 = cljs.core.next(seq19414__$1);
  var G__19417 = cljs.core.first(seq19414__$2);
  var seq19414__$3 = cljs.core.next(seq19414__$2);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19415, G__19416, G__19417, seq19414__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key(var_args) {
  var G__19426 = arguments.length;
  switch(G__19426) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___22272 = arguments.length;
      var i__4865__auto___22273 = 0;
      while (true) {
        if (i__4865__auto___22273 < len__4864__auto___22272) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___22273]);
          var G__22274 = i__4865__auto___22273 + 1;
          i__4865__auto___22273 = G__22274;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(3), 0, null);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4886__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__19419_SHARP_, p2__19420_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__19419_SHARP_, p2__19420_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq19422) {
  var G__19423 = cljs.core.first(seq19422);
  var seq19422__$1 = cljs.core.next(seq19422);
  var G__19424 = cljs.core.first(seq19422__$1);
  var seq19422__$2 = cljs.core.next(seq19422__$1);
  var G__19425 = cljs.core.first(seq19422__$2);
  var seq19422__$3 = cljs.core.next(seq19422__$2);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19423, G__19424, G__19425, seq19422__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$arr, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all(var_args) {
  var G__19428 = arguments.length;
  switch(G__19428) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function() {
      var G__22276 = null;
      var G__22276__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__22276__1 = function(result) {
        var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
          var v = cljs.core.vec(a.toArray());
          a.clear();
          return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
        }();
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
      };
      var G__22276__2 = function(result, input) {
        a.add(input);
        if (n === a.size()) {
          var v = cljs.core.vec(a.toArray());
          a.clear();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        } else {
          return result;
        }
      };
      G__22276 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__22276__0.call(this);
          case 1:
            return G__22276__1.call(this, result);
          case 2:
            return G__22276__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__22276.cljs$core$IFn$_invoke$arity$0 = G__22276__0;
      G__22276.cljs$core$IFn$_invoke$arity$1 = G__22276__1;
      G__22276.cljs$core$IFn$_invoke$arity$2 = G__22276__2;
      return G__22276;
    }();
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5753__auto__ = cljs.core.seq(coll);
    if (temp__5753__auto__) {
      var s = temp__5753__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while(var_args) {
  var G__19430 = arguments.length;
  switch(G__19430) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__22278 = null;
      var G__22278__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__22278__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__22278__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__22278 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__22278__0.call(this);
          case 1:
            return G__22278__1.call(this, result);
          case 2:
            return G__22278__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__22278.cljs$core$IFn$_invoke$arity$0 = G__22278__0;
      G__22278.cljs$core$IFn$_invoke$arity$1 = G__22278__1;
      G__22278.cljs$core$IFn$_invoke$arity$2 = G__22278__2;
      return G__22278;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5753__auto__ = cljs.core.seq(coll);
    if (temp__5753__auto__) {
      var s = temp__5753__auto__;
      if (cljs.core.truth_(function() {
        var G__19431 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19431) : pred.call(null, G__19431);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__19432 = function() {
      var G__19434 = cljs.core._entry_key(sc, e);
      var G__19435 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__19434, G__19435) : comp.call(null, G__19434, G__19435);
    }();
    var G__19433 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__19432, G__19433) : test.call(null, G__19432, G__19433);
  };
};
cljs.core.subseq = function cljs$core$subseq(var_args) {
  var G__19437 = arguments.length;
  switch(G__19437) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(function() {
    var fexpr__19438 = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._GT_, cljs.core._GT__EQ_]);
    return fexpr__19438.cljs$core$IFn$_invoke$arity$1 ? fexpr__19438.cljs$core$IFn$_invoke$arity$1(test) : fexpr__19438.call(null, test);
  }())) {
    var temp__5753__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__5753__auto__)) {
      var vec__19439 = temp__5753__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19439, 0, null);
      var s = vec__19439;
      if (cljs.core.truth_(include(e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__5753__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__5753__auto__)) {
    var vec__19442 = temp__5753__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19442, 0, null);
    var s = vec__19442;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key)(e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq(var_args) {
  var G__19446 = arguments.length;
  switch(G__19446) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(function() {
    var fexpr__19447 = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._LT_, cljs.core._LT__EQ_]);
    return fexpr__19447.cljs$core$IFn$_invoke$arity$1 ? fexpr__19447.cljs$core$IFn$_invoke$arity$1(test) : fexpr__19447.call(null, test);
  }())) {
    var temp__5753__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__5753__auto__)) {
      var vec__19448 = temp__5753__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19448, 0, null);
      var s = vec__19448;
      if (cljs.core.truth_(include(e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__5753__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__5753__auto__)) {
    var vec__19451 = temp__5753__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19451, 0, null);
    var s = vec__19451;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key)(e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.IntegerRangeChunk = function(start, step, count) {
  this.start = start;
  this.step = step;
  this.count = count;
  this.cljs$lang$protocol_mask$partition0$ = 82;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.IntegerRangeChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.IntegerRangeChunk.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.start;
};
cljs.core.IntegerRangeChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.start + i * self__.step;
};
cljs.core.IntegerRangeChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.count) {
    return self__.start + i * self__.step;
  } else {
    return not_found;
  }
};
cljs.core.IntegerRangeChunk.prototype.cljs$core$IChunk$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.IntegerRangeChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count <= 1) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.IntegerRangeChunk(self__.start + self__.step, self__.step, self__.count - 1);
  }
};
cljs.core.IntegerRangeChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$start, cljs$cst$symbol$step, cljs$cst$symbol$count], null);
};
cljs.core.IntegerRangeChunk.cljs$lang$type = true;
cljs.core.IntegerRangeChunk.cljs$lang$ctorStr = "cljs.core/IntegerRangeChunk";
cljs.core.IntegerRangeChunk.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/IntegerRangeChunk");
};
cljs.core.__GT_IntegerRangeChunk = function cljs$core$__GT_IntegerRangeChunk(start, step, count) {
  return new cljs.core.IntegerRangeChunk(start, step, count);
};
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$i, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs$cst$symbol$end, cljs$cst$symbol$step], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.IntegerRange = function(meta, start, end, step, chunk, chunk_next, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.chunk = chunk;
  this.chunk_next = chunk_next;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 140800;
};
cljs.core.IntegerRange.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IntegerRange.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IntegerRange.prototype.indexOf = function() {
  var G__22288 = null;
  var G__22288__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__22288__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__22288 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__22288__1.call(this, x);
      case 2:
        return G__22288__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22288.cljs$core$IFn$_invoke$arity$1 = G__22288__1;
  G__22288.cljs$core$IFn$_invoke$arity$2 = G__22288__2;
  return G__22288;
}();
cljs.core.IntegerRange.prototype.lastIndexOf = function() {
  var G__22289 = null;
  var G__22289__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__22289__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__22289 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__22289__1.call(this, x);
      case 2:
        return G__22289__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22289.cljs$core$IFn$_invoke$arity$1 = G__22289__1;
  G__22289.cljs$core$IFn$_invoke$arity$2 = G__22289__2;
  return G__22289;
}();
cljs.core.IntegerRange.prototype.forceChunk = function() {
  var self__ = this;
  var coll = this;
  if (self__.chunk == null) {
    var count = coll.cljs$core$ICounted$_count$arity$1(null);
    if (count > 32) {
      self__.chunk_next = new cljs.core.IntegerRange(null, self__.start + self__.step * 32, self__.end, self__.step, null, null, null);
      return self__.chunk = new cljs.core.IntegerRangeChunk(self__.start, self__.step, 32);
    } else {
      return self__.chunk = new cljs.core.IntegerRangeChunk(self__.start, self__.step, count);
    }
  } else {
    return null;
  }
};
cljs.core.IntegerRange.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (0 <= n && n < rng__$1.cljs$core$ICounted$_count$arity$1(null)) {
    return self__.start + n * self__.step;
  } else {
    if (0 <= n && (self__.start > self__.end && self__.step === 0)) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.IntegerRange.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (0 <= n && n < rng__$1.cljs$core$ICounted$_count$arity$1(null)) {
    return self__.start + n * self__.step;
  } else {
    if (0 <= n && (self__.start > self__.end && self__.step === 0)) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.IntegerRange.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.IntegerRange.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.IntegerRange.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IntegerRange(self__.meta, self__.start, self__.end, self__.step, self__.chunk, self__.chunk_next, self__.__hash);
};
cljs.core.IntegerRange.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.IntegerRange(null, self__.start + self__.step, self__.end, self__.step, null, null, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.IntegerRange(null, self__.start + self__.step, self__.end, self__.step, null, null, null);
    } else {
      return null;
    }
  }
};
cljs.core.IntegerRange.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return Math.ceil((self__.end - self__.start) / self__.step);
};
cljs.core.IntegerRange.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.IntegerRange.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.IntegerRange.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IntegerRange.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.IntegerRange.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref(ret__$1);
      } else {
        var G__22293 = i + self__.step;
        var G__22294 = ret__$1;
        i = G__22293;
        ret = G__22294;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.IntegerRange.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.start;
};
cljs.core.IntegerRange.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var s = rng__$1.cljs$core$INext$_next$arity$1(null);
  if (s == null) {
    return cljs.core.List.EMPTY;
  } else {
    return s;
  }
};
cljs.core.IntegerRange.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return rng__$1;
};
cljs.core.IntegerRange.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  rng__$1.forceChunk();
  return self__.chunk;
};
cljs.core.IntegerRange.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  rng__$1.forceChunk();
  if (self__.chunk_next == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.chunk_next;
  }
};
cljs.core.IntegerRange.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, new_meta) {
  var self__ = this;
  var rng__$1 = this;
  if (new_meta === self__.meta) {
    return rng__$1;
  } else {
    return new cljs.core.IntegerRange(new_meta, self__.start, self__.end, self__.step, self__.chunk, self__.chunk_next, self__.__hash);
  }
};
cljs.core.IntegerRange.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.IntegerRange.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.seq(rng__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null));
};
cljs.core.IntegerRange.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta, cljs$cst$symbol$start, cljs$cst$symbol$end, cljs$cst$symbol$step, cljs.core.with_meta(cljs$cst$symbol$chunk, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$chunk_DASH_next, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 
  1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.IntegerRange.cljs$lang$type = true;
cljs.core.IntegerRange.cljs$lang$ctorStr = "cljs.core/IntegerRange";
cljs.core.IntegerRange.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/IntegerRange");
};
cljs.core.__GT_IntegerRange = function cljs$core$__GT_IntegerRange(meta, start, end, step, chunk, chunk_next, __hash) {
  return new cljs.core.IntegerRange(meta, start, end, step, chunk, chunk_next, __hash);
};
cljs.core.IntegerRange.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.Range = function(meta, start, end, step, chunk, chunk_next, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.chunk = chunk;
  this.chunk_next = chunk_next;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 140800;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.indexOf = function() {
  var G__22295 = null;
  var G__22295__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__22295__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__22295 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__22295__1.call(this, x);
      case 2:
        return G__22295__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22295.cljs$core$IFn$_invoke$arity$1 = G__22295__1;
  G__22295.cljs$core$IFn$_invoke$arity$2 = G__22295__2;
  return G__22295;
}();
cljs.core.Range.prototype.lastIndexOf = function() {
  var G__22296 = null;
  var G__22296__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__22296__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__22296 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__22296__1.call(this, x);
      case 2:
        return G__22296__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22296.cljs$core$IFn$_invoke$arity$1 = G__22296__1;
  G__22296.cljs$core$IFn$_invoke$arity$2 = G__22296__2;
  return G__22296;
}();
cljs.core.Range.prototype.forceChunk = function() {
  var self__ = this;
  var coll = this;
  if (self__.chunk == null) {
    var arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
    var val = function() {
      var n = 0;
      var val = self__.start;
      while (true) {
        if (n < 32) {
          arr[n] = val;
          var n__$1 = n + 1;
          var val__$1 = val + self__.step;
          if (self__.step > 0 ? val__$1 < self__.end : val__$1 > self__.end) {
            var G__22297 = n__$1;
            var G__22298 = val__$1;
            n = G__22297;
            val = G__22298;
            continue;
          } else {
            return self__.chunk = cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arr, 0, n__$1);
          }
        } else {
          return val;
        }
        break;
      }
    }();
    if (self__.chunk == null) {
      self__.chunk = cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arr, 0, 32);
      if (self__.step > 0 ? val < self__.end : val > self__.end) {
        return self__.chunk_next = new cljs.core.Range(null, val, self__.end, self__.step, null, null, null);
      } else {
        return null;
      }
    } else {
      return null;
    }
  } else {
    return null;
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.chunk, self__.chunk_next, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(null, self__.start + self__.step, self__.end, self__.step, null, null, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(null, self__.start + self__.step, self__.end, self__.step, null, null, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, rng__$1);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref(ret__$1);
      } else {
        var G__22299 = i + self__.step;
        var G__22300 = ret__$1;
        i = G__22299;
        ret = G__22300;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.start;
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var s = rng__$1.cljs$core$INext$_next$arity$1(null);
  if (s == null) {
    return cljs.core.List.EMPTY;
  } else {
    return s;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return rng__$1;
};
cljs.core.Range.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  rng__$1.forceChunk();
  return self__.chunk;
};
cljs.core.Range.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  rng__$1.forceChunk();
  if (self__.chunk_next == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.chunk_next;
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, new_meta) {
  var self__ = this;
  var rng__$1 = this;
  if (new_meta === self__.meta) {
    return rng__$1;
  } else {
    return new cljs.core.Range(new_meta, self__.start, self__.end, self__.step, self__.chunk, self__.chunk_next, self__.__hash);
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.seq(rng__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null));
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta, cljs$cst$symbol$start, cljs$cst$symbol$end, cljs$cst$symbol$step, cljs.core.with_meta(cljs$cst$symbol$chunk, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$chunk_DASH_next, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 
  1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, chunk, chunk_next, __hash) {
  return new cljs.core.Range(meta, start, end, step, chunk, chunk_next, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.range = function cljs$core$range(var_args) {
  var G__19455 = arguments.length;
  switch(G__19455) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  if (step > 0) {
    if (end <= start) {
      return cljs.core.List.EMPTY;
    } else {
      if (cljs.core.integer_QMARK_(start) && (cljs.core.integer_QMARK_(end) && cljs.core.integer_QMARK_(step))) {
        return new cljs.core.IntegerRange(null, start, end, step, null, null, null);
      } else {
        return new cljs.core.Range(null, start, end, step, null, null, null);
      }
    }
  } else {
    if (step < 0) {
      if (end >= start) {
        return cljs.core.List.EMPTY;
      } else {
        if (cljs.core.integer_QMARK_(start) && (cljs.core.integer_QMARK_(end) && cljs.core.integer_QMARK_(step))) {
          return new cljs.core.IntegerRange(null, start, end, step, null, null, null);
        } else {
          return new cljs.core.Range(null, start, end, step, null, null, null);
        }
      }
    } else {
      if (end === start) {
        return cljs.core.List.EMPTY;
      } else {
        return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(start);
      }
    }
  }
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth(var_args) {
  var G__19457 = arguments.length;
  switch(G__19457) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function() {
      var G__22305 = null;
      var G__22305__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__22305__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__22305__2 = function(result, input) {
        var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
        if (cljs.core.rem(i, n) === 0) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__22305 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__22305__0.call(this);
          case 1:
            return G__22305__1.call(this, result);
          case 2:
            return G__22305__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__22305.cljs$core$IFn$_invoke$arity$0 = G__22305__0;
      G__22305.cljs$core$IFn$_invoke$arity$1 = G__22305__1;
      G__22305.cljs$core$IFn$_invoke$arity$2 = G__22305__2;
      return G__22305;
    }();
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5753__auto__ = cljs.core.seq(coll);
    if (temp__5753__auto__) {
      var s = temp__5753__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by(var_args) {
  var G__19460 = arguments.length;
  switch(G__19460) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(cljs$cst$keyword$cljs_DOT_core_SLASH_none);
    return function() {
      var G__22309 = null;
      var G__22309__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__22309__1 = function(result) {
        var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
          var v = cljs.core.vec(a.toArray());
          a.clear();
          return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
        }();
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
      };
      var G__22309__2 = function(result, input) {
        var pval = cljs.core.deref(pa);
        var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        cljs.core.vreset_BANG_(pa, val);
        if (cljs.core.keyword_identical_QMARK_(pval, cljs$cst$keyword$cljs_DOT_core_SLASH_none) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
          a.add(input);
          return result;
        } else {
          var v = cljs.core.vec(a.toArray());
          a.clear();
          var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          if (cljs.core.reduced_QMARK_(ret)) {
          } else {
            a.add(input);
          }
          return ret;
        }
      };
      G__22309 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__22309__0.call(this);
          case 1:
            return G__22309__1.call(this, result);
          case 2:
            return G__22309__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__22309.cljs$core$IFn$_invoke$arity$0 = G__22309__0;
      G__22309.cljs$core$IFn$_invoke$arity$1 = G__22309__1;
      G__22309.cljs$core$IFn$_invoke$arity$2 = G__22309__2;
      return G__22309;
    }();
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5753__auto__ = cljs.core.seq(coll);
    if (temp__5753__auto__) {
      var s = temp__5753__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(p1__19458_SHARP_) {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__19458_SHARP_) : f.call(null, p1__19458_SHARP_));
      }, cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, new cljs.core.LazySeq(null, function() {
        return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s);
      }, null, null)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions(var_args) {
  var G__19462 = arguments.length;
  switch(G__19462) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5751__auto__ = cljs.core.seq(coll);
    if (temp__5751__auto__) {
      var s = temp__5751__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return new cljs.core.List(null, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), null, 1, null);
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  if (cljs.core.reduced_QMARK_(init)) {
    return new cljs.core.List(null, cljs.core.deref(init), null, 1, null);
  } else {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__5753__auto__ = cljs.core.seq(coll);
      if (temp__5753__auto__) {
        var s = temp__5753__auto__;
        return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__19463 = init;
          var G__19464 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19463, G__19464) : f.call(null, G__19463, G__19464);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  }
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt(var_args) {
  var G__19480 = arguments.length;
  switch(G__19480) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___22315 = arguments.length;
      var i__4865__auto___22316 = 0;
      while (true) {
        if (i__4865__auto___22316 < len__4864__auto___22315) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___22316]);
          var G__22317 = i__4865__auto___22316 + 1;
          i__4865__auto___22316 = G__22317;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(3), 0, null);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4886__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__22318 = null;
    var G__22318__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__22318__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__22318__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__22318__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__22318__4 = function() {
      var G__22319__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__22319 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22320__i = 0, G__22320__a = new Array(arguments.length - 3);
          while (G__22320__i < G__22320__a.length) {
            G__22320__a[G__22320__i] = arguments[G__22320__i + 3];
            ++G__22320__i;
          }
          args = new cljs.core.IndexedSeq(G__22320__a, 0, null);
        }
        return G__22319__delegate.call(this, x, y, z, args);
      };
      G__22319.cljs$lang$maxFixedArity = 3;
      G__22319.cljs$lang$applyTo = function(arglist__22321) {
        var x = cljs.core.first(arglist__22321);
        arglist__22321 = cljs.core.next(arglist__22321);
        var y = cljs.core.first(arglist__22321);
        arglist__22321 = cljs.core.next(arglist__22321);
        var z = cljs.core.first(arglist__22321);
        var args = cljs.core.rest(arglist__22321);
        return G__22319__delegate(x, y, z, args);
      };
      G__22319.cljs$core$IFn$_invoke$arity$variadic = G__22319__delegate;
      return G__22319;
    }();
    G__22318 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__22318__0.call(this);
        case 1:
          return G__22318__1.call(this, x);
        case 2:
          return G__22318__2.call(this, x, y);
        case 3:
          return G__22318__3.call(this, x, y, z);
        default:
          var G__22324 = null;
          if (arguments.length > 3) {
            var G__22325__i = 0, G__22325__a = new Array(arguments.length - 3);
            while (G__22325__i < G__22325__a.length) {
              G__22325__a[G__22325__i] = arguments[G__22325__i + 3];
              ++G__22325__i;
            }
            G__22324 = new cljs.core.IndexedSeq(G__22325__a, 0, null);
          }
          return G__22318__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22324);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__22318.cljs$lang$maxFixedArity = 3;
    G__22318.cljs$lang$applyTo = G__22318__4.cljs$lang$applyTo;
    G__22318.cljs$core$IFn$_invoke$arity$0 = G__22318__0;
    G__22318.cljs$core$IFn$_invoke$arity$1 = G__22318__1;
    G__22318.cljs$core$IFn$_invoke$arity$2 = G__22318__2;
    G__22318.cljs$core$IFn$_invoke$arity$3 = G__22318__3;
    G__22318.cljs$core$IFn$_invoke$arity$variadic = G__22318__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__22318;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__22326 = null;
    var G__22326__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__22326__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__22326__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__22326__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__22326__4 = function() {
      var G__22329__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__22329 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22330__i = 0, G__22330__a = new Array(arguments.length - 3);
          while (G__22330__i < G__22330__a.length) {
            G__22330__a[G__22330__i] = arguments[G__22330__i + 3];
            ++G__22330__i;
          }
          args = new cljs.core.IndexedSeq(G__22330__a, 0, null);
        }
        return G__22329__delegate.call(this, x, y, z, args);
      };
      G__22329.cljs$lang$maxFixedArity = 3;
      G__22329.cljs$lang$applyTo = function(arglist__22331) {
        var x = cljs.core.first(arglist__22331);
        arglist__22331 = cljs.core.next(arglist__22331);
        var y = cljs.core.first(arglist__22331);
        arglist__22331 = cljs.core.next(arglist__22331);
        var z = cljs.core.first(arglist__22331);
        var args = cljs.core.rest(arglist__22331);
        return G__22329__delegate(x, y, z, args);
      };
      G__22329.cljs$core$IFn$_invoke$arity$variadic = G__22329__delegate;
      return G__22329;
    }();
    G__22326 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__22326__0.call(this);
        case 1:
          return G__22326__1.call(this, x);
        case 2:
          return G__22326__2.call(this, x, y);
        case 3:
          return G__22326__3.call(this, x, y, z);
        default:
          var G__22332 = null;
          if (arguments.length > 3) {
            var G__22333__i = 0, G__22333__a = new Array(arguments.length - 3);
            while (G__22333__i < G__22333__a.length) {
              G__22333__a[G__22333__i] = arguments[G__22333__i + 3];
              ++G__22333__i;
            }
            G__22332 = new cljs.core.IndexedSeq(G__22333__a, 0, null);
          }
          return G__22326__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22332);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__22326.cljs$lang$maxFixedArity = 3;
    G__22326.cljs$lang$applyTo = G__22326__4.cljs$lang$applyTo;
    G__22326.cljs$core$IFn$_invoke$arity$0 = G__22326__0;
    G__22326.cljs$core$IFn$_invoke$arity$1 = G__22326__1;
    G__22326.cljs$core$IFn$_invoke$arity$2 = G__22326__2;
    G__22326.cljs$core$IFn$_invoke$arity$3 = G__22326__3;
    G__22326.cljs$core$IFn$_invoke$arity$variadic = G__22326__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__22326;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__22334 = null;
    var G__22334__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__22334__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__22334__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__22334__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__22334__4 = function() {
      var G__22338__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__22338 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22339__i = 0, G__22339__a = new Array(arguments.length - 3);
          while (G__22339__i < G__22339__a.length) {
            G__22339__a[G__22339__i] = arguments[G__22339__i + 3];
            ++G__22339__i;
          }
          args = new cljs.core.IndexedSeq(G__22339__a, 0, null);
        }
        return G__22338__delegate.call(this, x, y, z, args);
      };
      G__22338.cljs$lang$maxFixedArity = 3;
      G__22338.cljs$lang$applyTo = function(arglist__22340) {
        var x = cljs.core.first(arglist__22340);
        arglist__22340 = cljs.core.next(arglist__22340);
        var y = cljs.core.first(arglist__22340);
        arglist__22340 = cljs.core.next(arglist__22340);
        var z = cljs.core.first(arglist__22340);
        var args = cljs.core.rest(arglist__22340);
        return G__22338__delegate(x, y, z, args);
      };
      G__22338.cljs$core$IFn$_invoke$arity$variadic = G__22338__delegate;
      return G__22338;
    }();
    G__22334 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__22334__0.call(this);
        case 1:
          return G__22334__1.call(this, x);
        case 2:
          return G__22334__2.call(this, x, y);
        case 3:
          return G__22334__3.call(this, x, y, z);
        default:
          var G__22341 = null;
          if (arguments.length > 3) {
            var G__22342__i = 0, G__22342__a = new Array(arguments.length - 3);
            while (G__22342__i < G__22342__a.length) {
              G__22342__a[G__22342__i] = arguments[G__22342__i + 3];
              ++G__22342__i;
            }
            G__22341 = new cljs.core.IndexedSeq(G__22342__a, 0, null);
          }
          return G__22334__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22341);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__22334.cljs$lang$maxFixedArity = 3;
    G__22334.cljs$lang$applyTo = G__22334__4.cljs$lang$applyTo;
    G__22334.cljs$core$IFn$_invoke$arity$0 = G__22334__0;
    G__22334.cljs$core$IFn$_invoke$arity$1 = G__22334__1;
    G__22334.cljs$core$IFn$_invoke$arity$2 = G__22334__2;
    G__22334.cljs$core$IFn$_invoke$arity$3 = G__22334__3;
    G__22334.cljs$core$IFn$_invoke$arity$variadic = G__22334__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__22334;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function() {
    var G__22343 = null;
    var G__22343__0 = function() {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__19465_SHARP_, p2__19466_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__19465_SHARP_, p2__19466_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__19466_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__19466_SHARP_.call(null));
      }, cljs.core.PersistentVector.EMPTY, fs__$1);
    };
    var G__22343__1 = function(x) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__19467_SHARP_, p2__19468_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__19467_SHARP_, p2__19468_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__19468_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__19468_SHARP_.call(null, x));
      }, cljs.core.PersistentVector.EMPTY, fs__$1);
    };
    var G__22343__2 = function(x, y) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__19469_SHARP_, p2__19470_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__19469_SHARP_, p2__19470_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__19470_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__19470_SHARP_.call(null, x, y));
      }, cljs.core.PersistentVector.EMPTY, fs__$1);
    };
    var G__22343__3 = function(x, y, z) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__19471_SHARP_, p2__19472_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__19471_SHARP_, p2__19472_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__19472_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__19472_SHARP_.call(null, x, y, z));
      }, cljs.core.PersistentVector.EMPTY, fs__$1);
    };
    var G__22343__4 = function() {
      var G__22344__delegate = function(x, y, z, args) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__19473_SHARP_, p2__19474_SHARP_) {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__19473_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__19474_SHARP_, x, y, z, args));
        }, cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__22344 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22346__i = 0, G__22346__a = new Array(arguments.length - 3);
          while (G__22346__i < G__22346__a.length) {
            G__22346__a[G__22346__i] = arguments[G__22346__i + 3];
            ++G__22346__i;
          }
          args = new cljs.core.IndexedSeq(G__22346__a, 0, null);
        }
        return G__22344__delegate.call(this, x, y, z, args);
      };
      G__22344.cljs$lang$maxFixedArity = 3;
      G__22344.cljs$lang$applyTo = function(arglist__22347) {
        var x = cljs.core.first(arglist__22347);
        arglist__22347 = cljs.core.next(arglist__22347);
        var y = cljs.core.first(arglist__22347);
        arglist__22347 = cljs.core.next(arglist__22347);
        var z = cljs.core.first(arglist__22347);
        var args = cljs.core.rest(arglist__22347);
        return G__22344__delegate(x, y, z, args);
      };
      G__22344.cljs$core$IFn$_invoke$arity$variadic = G__22344__delegate;
      return G__22344;
    }();
    G__22343 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__22343__0.call(this);
        case 1:
          return G__22343__1.call(this, x);
        case 2:
          return G__22343__2.call(this, x, y);
        case 3:
          return G__22343__3.call(this, x, y, z);
        default:
          var G__22348 = null;
          if (arguments.length > 3) {
            var G__22349__i = 0, G__22349__a = new Array(arguments.length - 3);
            while (G__22349__i < G__22349__a.length) {
              G__22349__a[G__22349__i] = arguments[G__22349__i + 3];
              ++G__22349__i;
            }
            G__22348 = new cljs.core.IndexedSeq(G__22349__a, 0, null);
          }
          return G__22343__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22348);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__22343.cljs$lang$maxFixedArity = 3;
    G__22343.cljs$lang$applyTo = G__22343__4.cljs$lang$applyTo;
    G__22343.cljs$core$IFn$_invoke$arity$0 = G__22343__0;
    G__22343.cljs$core$IFn$_invoke$arity$1 = G__22343__1;
    G__22343.cljs$core$IFn$_invoke$arity$2 = G__22343__2;
    G__22343.cljs$core$IFn$_invoke$arity$3 = G__22343__3;
    G__22343.cljs$core$IFn$_invoke$arity$variadic = G__22343__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__22343;
  }();
};
cljs.core.juxt.cljs$lang$applyTo = function(seq19476) {
  var G__19477 = cljs.core.first(seq19476);
  var seq19476__$1 = cljs.core.next(seq19476);
  var G__19478 = cljs.core.first(seq19476__$1);
  var seq19476__$2 = cljs.core.next(seq19476__$1);
  var G__19479 = cljs.core.first(seq19476__$2);
  var seq19476__$3 = cljs.core.next(seq19476__$2);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19477, G__19478, G__19479, seq19476__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun(var_args) {
  var G__19482 = arguments.length;
  switch(G__19482) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    var temp__5753__auto__ = cljs.core.seq(coll);
    if (temp__5753__auto__) {
      var s = temp__5753__auto__;
      var G__22352 = cljs.core.next(s);
      coll = G__22352;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__22353 = n - 1;
      var G__22354 = cljs.core.next(coll);
      n = G__22353;
      coll = G__22354;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall(var_args) {
  var G__19484 = arguments.length;
  switch(G__19484) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (!(matches == null) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(matches[0], s)) {
      if (matches.length === 1) {
        return matches[0];
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (matches.length === 1) {
        return matches[0];
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq_STAR_ = function cljs$core$re_seq_STAR_(re, s) {
  var temp__5757__auto__ = re.exec(s);
  if (temp__5757__auto__ == null) {
    return null;
  } else {
    var matches = temp__5757__auto__;
    var match_str = matches[0];
    var match_vals = matches.length === 1 ? match_str : cljs.core.vec(matches);
    return cljs.core.cons(match_vals, new cljs.core.LazySeq(null, function() {
      var post_idx = matches.index + function() {
        var x__4336__auto__ = 1;
        var y__4337__auto__ = match_str.length;
        return x__4336__auto__ > y__4337__auto__ ? x__4336__auto__ : y__4337__auto__;
      }();
      if (post_idx <= s.length) {
        var G__19485 = re;
        var G__19486 = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, post_idx);
        return cljs.core.re_seq_STAR_.cljs$core$IFn$_invoke$arity$2 ? cljs.core.re_seq_STAR_.cljs$core$IFn$_invoke$arity$2(G__19485, G__19486) : cljs.core.re_seq_STAR_.call(null, G__19485, G__19486);
      } else {
        return null;
      }
    }, null, null));
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  if (typeof s === "string") {
    return cljs.core.re_seq_STAR_(re, s);
  } else {
    throw new TypeError("re-seq must match against a string.");
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__19487 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19487, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19487, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, prefix == null ? 0 : prefix.length);
    return new RegExp(pattern, function() {
      var or__4253__auto__ = flags;
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR__orig_val__19490 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_level_STAR__temp_val__19491 = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__19491;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if (cljs$cst$keyword$print_DASH_length.cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4253__auto__ = cljs$cst$keyword$more_DASH_marker.cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4253__auto__)) {
              return or__4253__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__19492_22360 = cljs.core.first(coll);
          var G__19493_22361 = writer;
          var G__19494_22362 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__19492_22360, G__19493_22361, G__19494_22362) : print_one.call(null, G__19492_22360, G__19493_22361, G__19494_22362);
        } else {
        }
        var coll_22363__$1 = cljs.core.next(coll);
        var n_22364 = cljs$cst$keyword$print_DASH_length.cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_22363__$1 && (n_22364 == null || !(n_22364 === 0))) {
            cljs.core._write(writer, sep);
            var G__19495_22366 = cljs.core.first(coll_22363__$1);
            var G__19496_22367 = writer;
            var G__19497_22368 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__19495_22366, G__19496_22367, G__19497_22368) : print_one.call(null, G__19495_22366, G__19496_22367, G__19497_22368);
            var G__22370 = cljs.core.next(coll_22363__$1);
            var G__22371 = n_22364 - 1;
            coll_22363__$1 = G__22370;
            n_22364 = G__22371;
            continue;
          } else {
            if (cljs.core.seq(coll_22363__$1) && n_22364 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4253__auto__ = cljs$cst$keyword$more_DASH_marker.cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4253__auto__)) {
                  return or__4253__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__19490;
  }
};
cljs.core.write_all = function cljs$core$write_all(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___22375 = arguments.length;
  var i__4865__auto___22376 = 0;
  while (true) {
    if (i__4865__auto___22376 < len__4864__auto___22375) {
      args__4870__auto__.push(arguments[i__4865__auto___22376]);
      var G__22377 = i__4865__auto___22376 + 1;
      i__4865__auto___22376 = G__22377;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 1 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(1), 0, null) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4871__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__19500 = cljs.core.seq(ss);
  var chunk__19501 = null;
  var count__19502 = 0;
  var i__19503 = 0;
  while (true) {
    if (i__19503 < count__19502) {
      var s = chunk__19501.cljs$core$IIndexed$_nth$arity$2(null, i__19503);
      cljs.core._write(writer, s);
      var G__22379 = seq__19500;
      var G__22380 = chunk__19501;
      var G__22381 = count__19502;
      var G__22382 = i__19503 + 1;
      seq__19500 = G__22379;
      chunk__19501 = G__22380;
      count__19502 = G__22381;
      i__19503 = G__22382;
      continue;
    } else {
      var temp__5753__auto__ = cljs.core.seq(seq__19500);
      if (temp__5753__auto__) {
        var seq__19500__$1 = temp__5753__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__19500__$1)) {
          var c__4679__auto__ = cljs.core.chunk_first(seq__19500__$1);
          var G__22383 = cljs.core.chunk_rest(seq__19500__$1);
          var G__22384 = c__4679__auto__;
          var G__22385 = cljs.core.count(c__4679__auto__);
          var G__22386 = 0;
          seq__19500 = G__22383;
          chunk__19501 = G__22384;
          count__19502 = G__22385;
          i__19503 = G__22386;
          continue;
        } else {
          var s = cljs.core.first(seq__19500__$1);
          cljs.core._write(writer, s);
          var G__22387 = cljs.core.next(seq__19500__$1);
          var G__22388 = null;
          var G__22389 = 0;
          var G__22390 = 0;
          seq__19500 = G__22387;
          chunk__19501 = G__22388;
          count__19502 = G__22389;
          i__19503 = G__22390;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq19498) {
  var G__19499 = cljs.core.first(seq19498);
  var seq19498__$1 = cljs.core.next(seq19498);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19499, seq19498__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  if (cljs.core._STAR_print_fn_STAR_ == null) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  } else {
  }
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj19505 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj19505;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return ['"', cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), '"'].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__4251__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, cljs$cst$keyword$meta));
  if (and__4251__auto__) {
    var and__4251__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IMeta$ ? true : false : false;
    if (and__4251__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__4251__auto____$1;
    }
  } else {
    return and__4251__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      var G__19507_22393 = cljs.core.meta(obj);
      var G__19508_22394 = writer;
      var G__19509_22395 = opts;
      cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__19507_22393, G__19508_22394, G__19509_22395) : cljs.core.pr_writer.call(null, G__19507_22393, G__19508_22394, G__19509_22395);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IPrintWithWriter$ ? true : !obj.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, obj) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, obj)) {
        return cljs.core._pr_writer(obj, writer, opts);
      } else {
        if (obj === true || obj === false) {
          return cljs.core._write(writer, cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
        } else {
          if (typeof obj === "number") {
            return cljs.core._write(writer, isNaN(obj) ? "##NaN" : obj === Number.POSITIVE_INFINITY ? "##Inf" : obj === Number.NEGATIVE_INFINITY ? "##-Inf" : cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
          } else {
            if (cljs.core.object_QMARK_(obj)) {
              cljs.core._write(writer, "#js ");
              var G__19511 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                return new cljs.core.MapEntry(function() {
                  var G__19515 = k;
                  if (!(cljs.core.re_matches(/[A-Za-z_\*\+\?!\-'][\w\*\+\?!\-']*/, k) == null)) {
                    return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(G__19515);
                  } else {
                    return G__19515;
                  }
                }(), obj[k], null);
              }, cljs.core.js_keys(obj));
              var G__19512 = cljs.core.pr_writer;
              var G__19513 = writer;
              var G__19514 = opts;
              return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__19511, G__19512, G__19513, G__19514) : cljs.core.print_map.call(null, G__19511, G__19512, G__19513, G__19514);
            } else {
              if (cljs.core.array_QMARK_(obj)) {
                return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
              } else {
                if (typeof obj === "string") {
                  if (cljs.core.truth_(cljs$cst$keyword$readably.cljs$core$IFn$_invoke$arity$1(opts))) {
                    return cljs.core._write(writer, cljs.core.quote_string(obj));
                  } else {
                    return cljs.core._write(writer, obj);
                  }
                } else {
                  if (typeof obj === "function") {
                    var name = obj.name;
                    var name__$1 = cljs.core.truth_(function() {
                      var or__4253__auto__ = name == null;
                      if (or__4253__auto__) {
                        return or__4253__auto__;
                      } else {
                        return goog.string.isEmpty(name);
                      }
                    }()) ? "Function" : name;
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, cljs.core.truth_(cljs.core._STAR_print_fn_bodies_STAR_) ? [' "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), '"'].join("") : "", "]"], 0));
                  } else {
                    if (obj instanceof Date) {
                      var normalize = function(n, len) {
                        var ns = cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                        while (true) {
                          if (ns.length < len) {
                            var G__22396 = ["0", ns].join("");
                            ns = G__22396;
                            continue;
                          } else {
                            return ns;
                          }
                          break;
                        }
                      };
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#inst "', normalize(obj.getUTCFullYear(), 4), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                    } else {
                      if (cljs.core.regexp_QMARK_(obj)) {
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#"', obj.source, '"'], 0));
                      } else {
                        if (cljs.core.js_symbol_QMARK_(obj)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", obj.toString(), "]"], 0));
                        } else {
                          if (cljs.core.truth_(function() {
                            var G__19516 = obj;
                            var G__19516__$1 = G__19516 == null ? null : G__19516.constructor;
                            if (G__19516__$1 == null) {
                              return null;
                            } else {
                              return G__19516__$1.cljs$lang$ctorStr;
                            }
                          }())) {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                          } else {
                            var name = function() {
                              var G__19517 = obj;
                              var G__19517__$1 = G__19517 == null ? null : G__19517.constructor;
                              if (G__19517__$1 == null) {
                                return null;
                              } else {
                                return G__19517__$1.name;
                              }
                            }();
                            var name__$1 = cljs.core.truth_(function() {
                              var or__4253__auto__ = name == null;
                              if (or__4253__auto__) {
                                return or__4253__auto__;
                              } else {
                                return goog.string.isEmpty(name);
                              }
                            }()) ? "Object" : name;
                            if (obj.constructor == null) {
                              return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, "]"], 0));
                            } else {
                              return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, " ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "]"], 0));
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__5751__auto__ = cljs$cst$keyword$alt_DASH_impl.cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__5751__auto__)) {
    var alt_impl = temp__5751__auto__;
    var G__19518 = obj;
    var G__19519 = writer;
    var G__19520 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, cljs$cst$keyword$fallback_DASH_impl, cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__19518, G__19519, G__19520) : alt_impl.call(null, G__19518, G__19519, G__19520);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__19521 = cljs.core.seq(cljs.core.next(objs));
  var chunk__19522 = null;
  var count__19523 = 0;
  var i__19524 = 0;
  while (true) {
    if (i__19524 < count__19523) {
      var obj = chunk__19522.cljs$core$IIndexed$_nth$arity$2(null, i__19524);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__22398 = seq__19521;
      var G__22399 = chunk__19522;
      var G__22400 = count__19523;
      var G__22401 = i__19524 + 1;
      seq__19521 = G__22398;
      chunk__19522 = G__22399;
      count__19523 = G__22400;
      i__19524 = G__22401;
      continue;
    } else {
      var temp__5753__auto__ = cljs.core.seq(seq__19521);
      if (temp__5753__auto__) {
        var seq__19521__$1 = temp__5753__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__19521__$1)) {
          var c__4679__auto__ = cljs.core.chunk_first(seq__19521__$1);
          var G__22402 = cljs.core.chunk_rest(seq__19521__$1);
          var G__22403 = c__4679__auto__;
          var G__22404 = cljs.core.count(c__4679__auto__);
          var G__22405 = 0;
          seq__19521 = G__22402;
          chunk__19522 = G__22403;
          count__19523 = G__22404;
          i__19524 = G__22405;
          continue;
        } else {
          var obj = cljs.core.first(seq__19521__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__22407 = cljs.core.next(seq__19521__$1);
          var G__22408 = null;
          var G__22409 = 0;
          var G__22410 = 0;
          seq__19521 = G__22407;
          chunk__19522 = G__22408;
          count__19523 = G__22409;
          i__19524 = G__22410;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer();
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts(objs, opts));
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(var_args) {
  var G__19526 = arguments.length;
  switch(G__19526) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, cljs$cst$keyword$flush_DASH_on_DASH_newline))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___22413 = arguments.length;
  var i__4865__auto___22414 = 0;
  while (true) {
    if (i__4865__auto___22414 < len__4864__auto___22413) {
      args__4870__auto__.push(arguments[i__4865__auto___22414]);
      var G__22416 = i__4865__auto___22414 + 1;
      i__4865__auto___22414 = G__22416;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq19527) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19527));
};
cljs.core.prn_str = function cljs$core$prn_str(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___22421 = arguments.length;
  var i__4865__auto___22422 = 0;
  while (true) {
    if (i__4865__auto___22422 < len__4864__auto___22421) {
      args__4870__auto__.push(arguments[i__4865__auto___22422]);
      var G__22423 = i__4865__auto___22422 + 1;
      i__4865__auto___22422 = G__22423;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq19528) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19528));
};
cljs.core.pr = function cljs$core$pr(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___22424 = arguments.length;
  var i__4865__auto___22425 = 0;
  while (true) {
    if (i__4865__auto___22425 < len__4864__auto___22424) {
      args__4870__auto__.push(arguments[i__4865__auto___22425]);
      var G__22426 = i__4865__auto___22425 + 1;
      i__4865__auto___22425 = G__22426;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq19529) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19529));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), cljs$cst$keyword$readably, false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__22427__i = 0, G__22427__a = new Array(arguments.length - 0);
      while (G__22427__i < G__22427__a.length) {
        G__22427__a[G__22427__i] = arguments[G__22427__i + 0];
        ++G__22427__i;
      }
      objs = new cljs.core.IndexedSeq(G__22427__a, 0, null);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__22428) {
    var objs = cljs.core.seq(arglist__22428);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___22429 = arguments.length;
  var i__4865__auto___22430 = 0;
  while (true) {
    if (i__4865__auto___22430 < len__4864__auto___22429) {
      args__4870__auto__.push(arguments[i__4865__auto___22430]);
      var G__22431 = i__4865__auto___22430 + 1;
      i__4865__auto___22430 = G__22431;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), cljs$cst$keyword$readably, false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq19530) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19530));
};
cljs.core.println = function cljs$core$println(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___22432 = arguments.length;
  var i__4865__auto___22433 = 0;
  while (true) {
    if (i__4865__auto___22433 < len__4864__auto___22432) {
      args__4870__auto__.push(arguments[i__4865__auto___22433]);
      var G__22434 = i__4865__auto___22433 + 1;
      i__4865__auto___22433 = G__22434;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), cljs$cst$keyword$readably, false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq19531) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19531));
};
cljs.core.println_str = function cljs$core$println_str(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___22441 = arguments.length;
  var i__4865__auto___22442 = 0;
  while (true) {
    if (i__4865__auto___22442 < len__4864__auto___22441) {
      args__4870__auto__.push(arguments[i__4865__auto___22442]);
      var G__22443 = i__4865__auto___22442 + 1;
      i__4865__auto___22442 = G__22443;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), cljs$cst$keyword$readably, false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq19532) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19532));
};
cljs.core.prn = function cljs$core$prn(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___22444 = arguments.length;
  var i__4865__auto___22445 = 0;
  while (true) {
    if (i__4865__auto___22445 < len__4864__auto___22444) {
      args__4870__auto__.push(arguments[i__4865__auto___22445]);
      var G__22446 = i__4865__auto___22445 + 1;
      i__4865__auto___22445 = G__22446;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq19533) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19533));
};
cljs.core.strip_ns = function cljs$core$strip_ns(named) {
  if (named instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(named));
  } else {
    return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(named));
  }
};
cljs.core.lift_ns = function cljs$core$lift_ns(m) {
  if (cljs.core.truth_(cljs.core._STAR_print_namespace_maps_STAR_)) {
    var ns = null;
    var G__19540 = cljs.core.seq(m);
    var vec__19541 = G__19540;
    var seq__19542 = cljs.core.seq(vec__19541);
    var first__19543 = cljs.core.first(seq__19542);
    var seq__19542__$1 = cljs.core.next(seq__19542);
    var vec__19544 = first__19543;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19544, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19544, 1, null);
    var entry = vec__19544;
    var entries = seq__19542__$1;
    var lm = cljs.core.empty(m);
    var ns__$1 = ns;
    var G__19540__$1 = G__19540;
    var lm__$1 = lm;
    while (true) {
      var ns__$2 = ns__$1;
      var vec__19553 = G__19540__$1;
      var seq__19554 = cljs.core.seq(vec__19553);
      var first__19555 = cljs.core.first(seq__19554);
      var seq__19554__$1 = cljs.core.next(seq__19554);
      var vec__19556 = first__19555;
      var k__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19556, 0, null);
      var v__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19556, 1, null);
      var entry__$1 = vec__19556;
      var entries__$1 = seq__19554__$1;
      var lm__$2 = lm__$1;
      if (cljs.core.truth_(entry__$1)) {
        if (k__$1 instanceof cljs.core.Keyword || k__$1 instanceof cljs.core.Symbol) {
          if (cljs.core.truth_(ns__$2)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns__$2, cljs.core.namespace(k__$1))) {
              var G__22449 = ns__$2;
              var G__22450 = entries__$1;
              var G__22451 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2, cljs.core.strip_ns(k__$1), v__$1);
              ns__$1 = G__22449;
              G__19540__$1 = G__22450;
              lm__$1 = G__22451;
              continue;
            } else {
              return null;
            }
          } else {
            var temp__5753__auto__ = cljs.core.namespace(k__$1);
            if (cljs.core.truth_(temp__5753__auto__)) {
              var new_ns = temp__5753__auto__;
              var G__22452 = new_ns;
              var G__22453 = entries__$1;
              var G__22454 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2, cljs.core.strip_ns(k__$1), v__$1);
              ns__$1 = G__22452;
              G__19540__$1 = G__22453;
              lm__$1 = G__22454;
              continue;
            } else {
              return null;
            }
          }
        } else {
          return null;
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns__$2, lm__$2], null);
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.print_prefix_map = function cljs$core$print_prefix_map(prefix, m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__19559_22455 = cljs.core.key(e);
    var G__19560_22456 = w;
    var G__19561_22457 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__19559_22455, G__19560_22456, G__19561_22457) : print_one.call(null, G__19559_22455, G__19560_22456, G__19561_22457);
    cljs.core._write(w, " ");
    var G__19562 = cljs.core.val(e);
    var G__19563 = w;
    var G__19564 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__19562, G__19563, G__19564) : print_one.call(null, G__19562, G__19563, G__19564);
  }, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), "{"].join(""), ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  var vec__19565 = cljs.core.map_QMARK_(m) ? cljs.core.lift_ns(m) : null;
  var ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19565, 0, null);
  var lift_map = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19565, 1, null);
  if (cljs.core.truth_(ns)) {
    return cljs.core.print_prefix_map(["#:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns)].join(""), lift_map, print_one, writer, opts);
  } else {
    return cljs.core.print_prefix_map(null, m, print_one, writer, opts);
  }
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object[cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$val, a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.IntegerRange.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.IntegerRange.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object[cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$val, a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.MapEntry.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.BlackNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.RedNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___22466 = arguments.length;
  var i__4865__auto___22467 = 0;
  while (true) {
    if (i__4865__auto___22467 < len__4864__auto___22466) {
      args__4870__auto__.push(arguments[i__4865__auto___22467]);
      var G__22468 = i__4865__auto___22467 + 1;
      i__4865__auto___22467 = G__22468;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 2 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(2), 0, null) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4871__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq19568) {
  var G__19569 = cljs.core.first(seq19568);
  var seq19568__$1 = cljs.core.next(seq19568);
  var G__19570 = cljs.core.first(seq19568__$1);
  var seq19568__$2 = cljs.core.next(seq19568__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19569, G__19570, seq19568__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym(var_args) {
  var G__19572 = arguments.length;
  switch(G__19572) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 2147516416;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(x) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(x, writer, opts) {
  var self__ = this;
  var x__$1 = this;
  cljs.core._write(writer, "#object[cljs.core.Delay ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$status, self__.f == null ? cljs$cst$keyword$ready : cljs$cst$keyword$pending, cljs$cst$keyword$val, self__.value], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$f, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$value, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref(x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(x) {
  return cljs.core._realized_QMARK_(x);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__19573_SHARP_, p2__19574_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__19573_SHARP_, p2__19574_SHARP_) : rf.call(null, p1__19573_SHARP_, p2__19574_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function() {
    var G__22470 = null;
    var G__22470__0 = function() {
      return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
    };
    var G__22470__1 = function(result) {
      return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
    };
    var G__22470__2 = function(result, input) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
    };
    G__22470 = function(result, input) {
      switch(arguments.length) {
        case 0:
          return G__22470__0.call(this);
        case 1:
          return G__22470__1.call(this, result);
        case 2:
          return G__22470__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__22470.cljs$core$IFn$_invoke$arity$0 = G__22470__0;
    G__22470.cljs$core$IFn$_invoke$arity$1 = G__22470__1;
    G__22470.cljs$core$IFn$_invoke$arity$2 = G__22470__2;
    return G__22470;
  }();
};
cljs.core.halt_when = function cljs$core$halt_when(var_args) {
  var G__19576 = arguments.length;
  switch(G__19576) {
    case 1:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(pred, null);
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2 = function(pred, retf) {
  return function(rf) {
    return function() {
      var G__22472 = null;
      var G__22472__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__22472__1 = function(result) {
        if (cljs.core.map_QMARK_(result) && cljs.core.contains_QMARK_(result, cljs$cst$keyword$cljs_DOT_core_SLASH_halt)) {
          return cljs$cst$keyword$cljs_DOT_core_SLASH_halt.cljs$core$IFn$_invoke$arity$1(result);
        } else {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        }
      };
      var G__22472__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return cljs.core.reduced(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$cljs_DOT_core_SLASH_halt, cljs.core.truth_(retf) ? function() {
            var G__19577 = rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
            var G__19578 = input;
            return retf.cljs$core$IFn$_invoke$arity$2 ? retf.cljs$core$IFn$_invoke$arity$2(G__19577, G__19578) : retf.call(null, G__19577, G__19578);
          }() : input], null));
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__22472 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__22472__0.call(this);
          case 1:
            return G__22472__1.call(this, result);
          case 2:
            return G__22472__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__22472.cljs$core$IFn$_invoke$arity$0 = G__22472__0;
      G__22472.cljs$core$IFn$_invoke$arity$1 = G__22472__1;
      G__22472.cljs$core$IFn$_invoke$arity$2 = G__22472__2;
      return G__22472;
    }();
  };
};
cljs.core.halt_when.cljs$lang$maxFixedArity = 2;
cljs.core.dedupe = function cljs$core$dedupe(var_args) {
  var G__19580 = arguments.length;
  switch(G__19580) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(cljs$cst$keyword$cljs_DOT_core_SLASH_none);
    return function() {
      var G__22474 = null;
      var G__22474__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__22474__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__22474__2 = function(result, input) {
        var prior = cljs.core.deref(pa);
        cljs.core.vreset_BANG_(pa, input);
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__22474 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__22474__0.call(this);
          case 1:
            return G__22474__1.call(this, result);
          case 2:
            return G__22474__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__22474.cljs$core$IFn$_invoke$arity$0 = G__22474__0;
      G__22474.cljs$core$IFn$_invoke$arity$1 = G__22474__1;
      G__22474.cljs$core$IFn$_invoke$arity$2 = G__22474__2;
      return G__22474;
    }();
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample(var_args) {
  var G__19582 = arguments.length;
  switch(G__19582) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
};
cljs.core.Eduction.prototype.indexOf = function() {
  var G__22476 = null;
  var G__22476__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, 0);
  };
  var G__22476__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__22476 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22476__1.call(this, x);
      case 2:
        return G__22476__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22476.cljs$core$IFn$_invoke$arity$1 = G__22476__1;
  G__22476.cljs$core$IFn$_invoke$arity$2 = G__22476__2;
  return G__22476;
}();
cljs.core.Eduction.prototype.lastIndexOf = function() {
  var G__22477 = null;
  var G__22477__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, cljs.core.count(coll__$1));
  };
  var G__22477__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__22477 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22477__1.call(this, x);
      case 2:
        return G__22477__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22477.cljs$core$IFn$_invoke$arity$1 = G__22477__1;
  G__22477.cljs$core$IFn$_invoke$arity$2 = G__22477__2;
  return G__22477;
}();
cljs.core.Eduction.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.TransformerIterator.create(self__.xform, cljs.core.iter(self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$xform, cljs$cst$symbol$coll], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4803__auto__ = this;
  return cljs.core.es6_iterator(this__4803__auto__);
};
cljs.core.eduction = function cljs$core$eduction(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___22479 = arguments.length;
  var i__4865__auto___22480 = 0;
  while (true) {
    if (i__4865__auto___22480 < len__4864__auto___22479) {
      args__4870__auto__.push(arguments[i__4865__auto___22480]);
      var G__22481 = i__4865__auto___22480 + 1;
      i__4865__auto___22480 = G__22481;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq19583) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19583));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__19585_SHARP_, p2__19584_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__19584_SHARP_) : proc.call(null, p2__19584_SHARP_);
  }, null, coll);
  return null;
};
cljs.core.IEncodeJS = function() {
};
var cljs$core$IEncodeJS$_clj__GT_js$dyn_22484 = function(x) {
  var x__4550__auto__ = x == null ? null : x;
  var m__4551__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4551__auto__.call(null, x);
  } else {
    var m__4549__auto__ = cljs.core._clj__GT_js["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4549__auto__.call(null, x);
    } else {
      throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
    }
  }
};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    return cljs$core$IEncodeJS$_clj__GT_js$dyn_22484(x);
  }
};
var cljs$core$IEncodeJS$_key__GT_js$dyn_22485 = function(x) {
  var x__4550__auto__ = x == null ? null : x;
  var m__4551__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4551__auto__.call(null, x);
  } else {
    var m__4549__auto__ = cljs.core._key__GT_js["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4549__auto__.call(null, x);
    } else {
      throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    return cljs$core$IEncodeJS$_key__GT_js$dyn_22485(x);
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(var_args) {
  var G__19587 = arguments.length;
  switch(G__19587) {
    case 1:
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1 = function(k) {
  return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k, cljs.core.clj__GT_js);
};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2 = function(k, primitive_fn) {
  if (!(k == null) ? false || cljs.core.PROTOCOL_SENTINEL === k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || (typeof k === "number" || (k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol))) {
      return primitive_fn.cljs$core$IFn$_invoke$arity$1 ? primitive_fn.cljs$core$IFn$_invoke$arity$1(k) : primitive_fn.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([k], 0));
    }
  }
};
cljs.core.key__GT_js.cljs$lang$maxFixedArity = 2;
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___22490 = arguments.length;
  var i__4865__auto___22491 = 0;
  while (true) {
    if (i__4865__auto___22491 < len__4864__auto___22490) {
      args__4870__auto__.push(arguments[i__4865__auto___22491]);
      var G__22492 = i__4865__auto___22491 + 1;
      i__4865__auto___22491 = G__22492;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 1 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(1), 0, null) : null;
  return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4871__auto__);
};
cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic = function(x, p__19591) {
  var map__19592 = p__19591;
  var map__19592__$1 = cljs.core.__destructure_map(map__19592);
  var options = map__19592__$1;
  var keyword_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__19592__$1, cljs$cst$keyword$keyword_DASH_fn, cljs.core.name);
  var keyfn = function cljs$core$keyfn(k) {
    return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k, thisfn);
  };
  var thisfn = function cljs$core$thisfn(x__$1) {
    if (x__$1 == null) {
      return null;
    } else {
      if (!(x__$1 == null) ? false || cljs.core.PROTOCOL_SENTINEL === x__$1.cljs$core$IEncodeJS$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x__$1)) {
        return cljs.core._clj__GT_js(x__$1);
      } else {
        if (x__$1 instanceof cljs.core.Keyword) {
          return keyword_fn.cljs$core$IFn$_invoke$arity$1 ? keyword_fn.cljs$core$IFn$_invoke$arity$1(x__$1) : keyword_fn.call(null, x__$1);
        } else {
          if (x__$1 instanceof cljs.core.Symbol) {
            return cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
          } else {
            if (cljs.core.map_QMARK_(x__$1)) {
              var m = {};
              var seq__19619_22494 = cljs.core.seq(x__$1);
              var chunk__19620_22495 = null;
              var count__19621_22496 = 0;
              var i__19622_22497 = 0;
              while (true) {
                if (i__19622_22497 < count__19621_22496) {
                  var vec__19629_22498 = chunk__19620_22495.cljs$core$IIndexed$_nth$arity$2(null, i__19622_22497);
                  var k_22499 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19629_22498, 0, null);
                  var v_22500 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19629_22498, 1, null);
                  cljs.core.goog$module$goog$object.set(m, keyfn(k_22499), cljs$core$thisfn(v_22500));
                  var G__22501 = seq__19619_22494;
                  var G__22502 = chunk__19620_22495;
                  var G__22503 = count__19621_22496;
                  var G__22504 = i__19622_22497 + 1;
                  seq__19619_22494 = G__22501;
                  chunk__19620_22495 = G__22502;
                  count__19621_22496 = G__22503;
                  i__19622_22497 = G__22504;
                  continue;
                } else {
                  var temp__5753__auto___22505 = cljs.core.seq(seq__19619_22494);
                  if (temp__5753__auto___22505) {
                    var seq__19619_22506__$1 = temp__5753__auto___22505;
                    if (cljs.core.chunked_seq_QMARK_(seq__19619_22506__$1)) {
                      var c__4679__auto___22507 = cljs.core.chunk_first(seq__19619_22506__$1);
                      var G__22508 = cljs.core.chunk_rest(seq__19619_22506__$1);
                      var G__22509 = c__4679__auto___22507;
                      var G__22510 = cljs.core.count(c__4679__auto___22507);
                      var G__22511 = 0;
                      seq__19619_22494 = G__22508;
                      chunk__19620_22495 = G__22509;
                      count__19621_22496 = G__22510;
                      i__19622_22497 = G__22511;
                      continue;
                    } else {
                      var vec__19632_22512 = cljs.core.first(seq__19619_22506__$1);
                      var k_22513 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19632_22512, 0, null);
                      var v_22514 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19632_22512, 1, null);
                      cljs.core.goog$module$goog$object.set(m, keyfn(k_22513), cljs$core$thisfn(v_22514));
                      var G__22515 = cljs.core.next(seq__19619_22506__$1);
                      var G__22516 = null;
                      var G__22517 = 0;
                      var G__22518 = 0;
                      seq__19619_22494 = G__22515;
                      chunk__19620_22495 = G__22516;
                      count__19621_22496 = G__22517;
                      i__19622_22497 = G__22518;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return m;
            } else {
              if (cljs.core.coll_QMARK_(x__$1)) {
                var arr = [];
                var seq__19635_22519 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
                var chunk__19636_22520 = null;
                var count__19637_22521 = 0;
                var i__19638_22522 = 0;
                while (true) {
                  if (i__19638_22522 < count__19637_22521) {
                    var x_22523__$2 = chunk__19636_22520.cljs$core$IIndexed$_nth$arity$2(null, i__19638_22522);
                    arr.push(x_22523__$2);
                    var G__22524 = seq__19635_22519;
                    var G__22525 = chunk__19636_22520;
                    var G__22526 = count__19637_22521;
                    var G__22527 = i__19638_22522 + 1;
                    seq__19635_22519 = G__22524;
                    chunk__19636_22520 = G__22525;
                    count__19637_22521 = G__22526;
                    i__19638_22522 = G__22527;
                    continue;
                  } else {
                    var temp__5753__auto___22528 = cljs.core.seq(seq__19635_22519);
                    if (temp__5753__auto___22528) {
                      var seq__19635_22529__$1 = temp__5753__auto___22528;
                      if (cljs.core.chunked_seq_QMARK_(seq__19635_22529__$1)) {
                        var c__4679__auto___22530 = cljs.core.chunk_first(seq__19635_22529__$1);
                        var G__22531 = cljs.core.chunk_rest(seq__19635_22529__$1);
                        var G__22532 = c__4679__auto___22530;
                        var G__22533 = cljs.core.count(c__4679__auto___22530);
                        var G__22534 = 0;
                        seq__19635_22519 = G__22531;
                        chunk__19636_22520 = G__22532;
                        count__19637_22521 = G__22533;
                        i__19638_22522 = G__22534;
                        continue;
                      } else {
                        var x_22535__$2 = cljs.core.first(seq__19635_22529__$1);
                        arr.push(x_22535__$2);
                        var G__22536 = cljs.core.next(seq__19635_22529__$1);
                        var G__22537 = null;
                        var G__22538 = 0;
                        var G__22539 = 0;
                        seq__19635_22519 = G__22536;
                        chunk__19636_22520 = G__22537;
                        count__19637_22521 = G__22538;
                        i__19638_22522 = G__22539;
                        continue;
                      }
                    } else {
                    }
                  }
                  break;
                }
                return arr;
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    }
  };
  return thisfn(x);
};
cljs.core.clj__GT_js.cljs$lang$maxFixedArity = 1;
cljs.core.clj__GT_js.cljs$lang$applyTo = function(seq19589) {
  var G__19590 = cljs.core.first(seq19589);
  var seq19589__$1 = cljs.core.next(seq19589);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19590, seq19589__$1);
};
cljs.core.IEncodeClojure = function() {
};
var cljs$core$IEncodeClojure$_js__GT_clj$dyn_22540 = function(x, options) {
  var x__4550__auto__ = x == null ? null : x;
  var m__4551__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__4551__auto__.call(null, x, options);
  } else {
    var m__4549__auto__ = cljs.core._js__GT_clj["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__4549__auto__.call(null, x, options);
    } else {
      throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
    }
  }
};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    return cljs$core$IEncodeClojure$_js__GT_clj$dyn_22540(x, options);
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj(var_args) {
  var G__19644 = arguments.length;
  switch(G__19644) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___22542 = arguments.length;
      var i__4865__auto___22543 = 0;
      while (true) {
        if (i__4865__auto___22543 < len__4864__auto___22542) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___22543]);
          var G__22544 = i__4865__auto___22543 + 1;
          i__4865__auto___22543 = G__22544;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(1), 0, null);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4886__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs$cst$keyword$keywordize_DASH_keys, false], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__19645 = opts;
  var map__19645__$1 = cljs.core.__destructure_map(map__19645);
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19645__$1, cljs$cst$keyword$keywordize_DASH_keys);
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function cljs$core$thisfn(x__$1) {
    if (!(x__$1 == null) ? false || cljs.core.PROTOCOL_SENTINEL === x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
      return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
    } else {
      if (cljs.core.seq_QMARK_(x__$1)) {
        return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
      } else {
        if (cljs.core.map_entry_QMARK_(x__$1)) {
          return new cljs.core.MapEntry(cljs$core$thisfn(cljs.core.key(x__$1)), cljs$core$thisfn(cljs.core.val(x__$1)), null);
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs$core$thisfn), x__$1);
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__19639_SHARP_, p2__19640_SHARP_) {
                return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(p1__19639_SHARP_, cljs$core$thisfn(p2__19640_SHARP_));
              }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(r, k) {
                  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(r, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(cljs.core.goog$module$goog$object.get(x__$1, k)));
                }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), cljs.core.js_keys(x__$1)));
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    }
  };
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq19642) {
  var G__19643 = cljs.core.first(seq19642);
  var seq19642__$1 = cljs.core.next(seq19642);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19643, seq19642__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__22548__delegate = function(args) {
      var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(mem), args, cljs.core.lookup_sentinel);
      if (v === cljs.core.lookup_sentinel) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
        cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
        return ret;
      } else {
        return v;
      }
    };
    var G__22548 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__22549__i = 0, G__22549__a = new Array(arguments.length - 0);
        while (G__22549__i < G__22549__a.length) {
          G__22549__a[G__22549__i] = arguments[G__22549__i + 0];
          ++G__22549__i;
        }
        args = new cljs.core.IndexedSeq(G__22549__a, 0, null);
      }
      return G__22548__delegate.call(this, args);
    };
    G__22548.cljs$lang$maxFixedArity = 0;
    G__22548.cljs$lang$applyTo = function(arglist__22550) {
      var args = cljs.core.seq(arglist__22550);
      return G__22548__delegate(args);
    };
    G__22548.cljs$core$IFn$_invoke$arity$variadic = G__22548__delegate;
    return G__22548;
  }();
};
cljs.core.trampoline = function cljs$core$trampoline(var_args) {
  var G__19650 = arguments.length;
  switch(G__19650) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___22552 = arguments.length;
      var i__4865__auto___22553 = 0;
      while (true) {
        if (i__4865__auto___22553 < len__4864__auto___22552) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___22553]);
          var G__22554 = i__4865__auto___22553 + 1;
          i__4865__auto___22553 = G__22554;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(1), 0, null);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4886__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__22555 = ret;
      f = G__22555;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq19648) {
  var G__19649 = cljs.core.first(seq19648);
  var seq19648__$1 = cljs.core.next(seq19648);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19649, seq19648__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand(var_args) {
  var G__19652 = arguments.length;
  switch(G__19652) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  return Math.floor(Math.random() * n);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [cljs$cst$keyword$parents, cljs.core.PersistentArrayMap.EMPTY, cljs$cst$keyword$descendants, cljs.core.PersistentArrayMap.EMPTY, cljs$cst$keyword$ancestors, cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.make_hierarchy());
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___22557 = arguments.length;
  var i__4865__auto___22558 = 0;
  while (true) {
    if (i__4865__auto___22558 < len__4864__auto___22557) {
      args__4870__auto__.push(arguments[i__4865__auto___22558]);
      var G__22559 = i__4865__auto___22558 + 1;
      i__4865__auto___22558 = G__22559;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 1 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(1), 0, null) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4871__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq19653) {
  var G__19654 = cljs.core.first(seq19653);
  var seq19653__$1 = cljs.core.next(seq19653);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19654, seq19653__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_(var_args) {
  var G__19656 = arguments.length;
  switch(G__19656) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.core.get_global_hierarchy()), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__4253__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__4253__auto__) {
    return or__4253__auto__;
  } else {
    var or__4253__auto____$1 = cljs.core.contains_QMARK_(function() {
      var fexpr__19657 = cljs$cst$keyword$ancestors.cljs$core$IFn$_invoke$arity$1(h);
      return fexpr__19657.cljs$core$IFn$_invoke$arity$1 ? fexpr__19657.cljs$core$IFn$_invoke$arity$1(child) : fexpr__19657.call(null, child);
    }(), parent);
    if (or__4253__auto____$1) {
      return or__4253__auto____$1;
    } else {
      var and__4251__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__4251__auto__) {
        var and__4251__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__4251__auto____$1) {
          var and__4251__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__4251__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__22562 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__22563 = i + 1;
                ret = G__22562;
                i = G__22563;
                continue;
              }
              break;
            }
          } else {
            return and__4251__auto____$2;
          }
        } else {
          return and__4251__auto____$1;
        }
      } else {
        return and__4251__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents(var_args) {
  var G__19659 = arguments.length;
  switch(G__19659) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$parents.cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors(var_args) {
  var G__19661 = arguments.length;
  switch(G__19661) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$ancestors.cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants(var_args) {
  var G__19663 = arguments.length;
  switch(G__19663) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$descendants.cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive(var_args) {
  var G__19665 = arguments.length;
  switch(G__19665) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var tp = cljs$cst$keyword$parents.cljs$core$IFn$_invoke$arity$1(h);
  var td = cljs$cst$keyword$descendants.cljs$core$IFn$_invoke$arity$1(h);
  var ta = cljs$cst$keyword$ancestors.cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(m, source, sources, target, targets) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, k) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
    }, m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
  };
  var or__4253__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), "already has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent), "as ancestor"].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error(["Cyclic derivation:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent), "has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), "as ancestor"].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [cljs$cst$keyword$parents, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs$cst$keyword$parents.cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), cljs$cst$keyword$ancestors, tf(cljs$cst$keyword$ancestors.cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), cljs$cst$keyword$descendants, tf(cljs$cst$keyword$descendants.cljs$core$IFn$_invoke$arity$1(h), 
    parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__4253__auto__)) {
    return or__4253__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive(var_args) {
  var G__19670 = arguments.length;
  switch(G__19670) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = cljs$cst$keyword$parents.cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__19666_SHARP_) {
    return cljs.core.cons(cljs.core.first(p1__19666_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__19666_SHARP_), cljs.core.second(p1__19666_SHARP_)));
  }, cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__19667_SHARP_, p2__19668_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__19667_SHARP_, p2__19668_SHARP_);
    }, cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref(method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref(hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var fexpr__19671 = cljs.core.deref(prefer_table);
    return fexpr__19671.cljs$core$IFn$_invoke$arity$1 ? fexpr__19671.cljs$core$IFn$_invoke$arity$1(x) : fexpr__19671.call(null, x);
  }();
  var or__4253__auto__ = cljs.core.truth_(function() {
    var and__4251__auto__ = xprefs;
    if (cljs.core.truth_(and__4251__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__4251__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4253__auto__)) {
    return or__4253__auto__;
  } else {
    var or__4253__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(function() {
            var G__19672 = x;
            var G__19673 = cljs.core.first(ps);
            var G__19674 = prefer_table;
            return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__19672, G__19673, G__19674) : cljs.core.prefers_STAR_.call(null, G__19672, G__19673, G__19674);
          }())) {
          } else {
          }
          var G__22569 = cljs.core.rest(ps);
          ps = G__22569;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4253__auto____$1)) {
      return or__4253__auto____$1;
    } else {
      var or__4253__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(function() {
              var G__19675 = cljs.core.first(ps);
              var G__19676 = y;
              var G__19677 = prefer_table;
              return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__19675, G__19676, G__19677) : cljs.core.prefers_STAR_.call(null, G__19675, G__19676, G__19677);
            }())) {
            } else {
            }
            var G__22570 = cljs.core.rest(ps);
            ps = G__22570;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4253__auto____$2)) {
        return or__4253__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table, hierarchy) {
  var or__4253__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4253__auto__)) {
    return or__4253__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(hierarchy, x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__19678) {
    var vec__19679 = p__19678;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19679, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19679, 1, null);
    var e = vec__19679;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(hierarchy), dispatch_val, k)) {
      var be2 = be == null || cljs.core.dominates(k, cljs.core.first(be), prefer_table, cljs.core.deref(hierarchy)) ? e : be;
      if (cljs.core.dominates(cljs.core.first(be2), k, prefer_table, cljs.core.deref(hierarchy))) {
      } else {
        throw new Error(["Multiple methods in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), "' match dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val), " -\x3e ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(k), " and ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(be2)), ", and neither is preferred"].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref(method_table));
  var best_entry__$1 = function() {
    var temp__5751__auto__ = function() {
      var and__4251__auto__ = best_entry == null;
      if (and__4251__auto__) {
        var fexpr__19682 = cljs.core.deref(method_table);
        return fexpr__19682.cljs$core$IFn$_invoke$arity$1 ? fexpr__19682.cljs$core$IFn$_invoke$arity$1(default_dispatch_val) : fexpr__19682.call(null, default_dispatch_val);
      } else {
        return and__4251__auto__;
      }
    }();
    if (cljs.core.truth_(temp__5751__auto__)) {
      var entry = temp__5751__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default_dispatch_val, entry], null);
    } else {
      return best_entry;
    }
  }();
  if (cljs.core.truth_(best_entry__$1)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cached_hierarchy), cljs.core.deref(hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry__$1));
      return cljs.core.second(best_entry__$1);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8 ? cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val) : cljs.core.find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
};
var cljs$core$IMultiFn$_reset$dyn_22571 = function(mf) {
  var x__4550__auto__ = mf == null ? null : mf;
  var m__4551__auto__ = cljs.core._reset[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4551__auto__.call(null, mf);
  } else {
    var m__4549__auto__ = cljs.core._reset["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4549__auto__.call(null, mf);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
    }
  }
};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    return cljs$core$IMultiFn$_reset$dyn_22571(mf);
  }
};
var cljs$core$IMultiFn$_add_method$dyn_22572 = function(mf, dispatch_val, method) {
  var x__4550__auto__ = mf == null ? null : mf;
  var m__4551__auto__ = cljs.core._add_method[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4551__auto__.call(null, mf, dispatch_val, method);
  } else {
    var m__4549__auto__ = cljs.core._add_method["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4549__auto__.call(null, mf, dispatch_val, method);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    return cljs$core$IMultiFn$_add_method$dyn_22572(mf, dispatch_val, method);
  }
};
var cljs$core$IMultiFn$_remove_method$dyn_22573 = function(mf, dispatch_val) {
  var x__4550__auto__ = mf == null ? null : mf;
  var m__4551__auto__ = cljs.core._remove_method[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4551__auto__.call(null, mf, dispatch_val);
  } else {
    var m__4549__auto__ = cljs.core._remove_method["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4549__auto__.call(null, mf, dispatch_val);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    return cljs$core$IMultiFn$_remove_method$dyn_22573(mf, dispatch_val);
  }
};
var cljs$core$IMultiFn$_prefer_method$dyn_22574 = function(mf, dispatch_val, dispatch_val_y) {
  var x__4550__auto__ = mf == null ? null : mf;
  var m__4551__auto__ = cljs.core._prefer_method[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4551__auto__.call(null, mf, dispatch_val, dispatch_val_y);
  } else {
    var m__4549__auto__ = cljs.core._prefer_method["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4549__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    return cljs$core$IMultiFn$_prefer_method$dyn_22574(mf, dispatch_val, dispatch_val_y);
  }
};
var cljs$core$IMultiFn$_get_method$dyn_22575 = function(mf, dispatch_val) {
  var x__4550__auto__ = mf == null ? null : mf;
  var m__4551__auto__ = cljs.core._get_method[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4551__auto__.call(null, mf, dispatch_val);
  } else {
    var m__4549__auto__ = cljs.core._get_method["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4549__auto__.call(null, mf, dispatch_val);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    return cljs$core$IMultiFn$_get_method$dyn_22575(mf, dispatch_val);
  }
};
var cljs$core$IMultiFn$_methods$dyn_22576 = function(mf) {
  var x__4550__auto__ = mf == null ? null : mf;
  var m__4551__auto__ = cljs.core._methods[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4551__auto__.call(null, mf);
  } else {
    var m__4549__auto__ = cljs.core._methods["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4549__auto__.call(null, mf);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    return cljs$core$IMultiFn$_methods$dyn_22576(mf);
  }
};
var cljs$core$IMultiFn$_prefers$dyn_22577 = function(mf) {
  var x__4550__auto__ = mf == null ? null : mf;
  var m__4551__auto__ = cljs.core._prefers[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4551__auto__.call(null, mf);
  } else {
    var m__4549__auto__ = cljs.core._prefers["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4549__auto__.call(null, mf);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    return cljs$core$IMultiFn$_prefers$dyn_22577(mf);
  }
};
var cljs$core$IMultiFn$_default_dispatch_val$dyn_22578 = function(mf) {
  var x__4550__auto__ = mf == null ? null : mf;
  var m__4551__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4551__auto__.call(null, mf);
  } else {
    var m__4549__auto__ = cljs.core._default_dispatch_val["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4549__auto__.call(null, mf);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    return cljs$core$IMultiFn$_default_dispatch_val$dyn_22578(mf);
  }
};
var cljs$core$IMultiFn$_dispatch_fn$dyn_22579 = function(mf) {
  var x__4550__auto__ = mf == null ? null : mf;
  var m__4551__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4551__auto__.call(null, mf);
  } else {
    var m__4549__auto__ = cljs.core._dispatch_fn["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4549__auto__.call(null, mf);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    return cljs$core$IMultiFn$_dispatch_fn$dyn_22579(mf);
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error(["No method in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), "' for dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function(unused__9633__auto__) {
  var self__ = this;
  var self__ = this;
  var G__19684 = arguments.length - 1;
  switch(G__19684) {
    case 0:
      return self__.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return self__.cljs$core$IFn$_invoke$arity$1(arguments[1]);
      break;
    case 2:
      return self__.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
      break;
    case 3:
      return self__.cljs$core$IFn$_invoke$arity$3(arguments[1], arguments[2], arguments[3]);
      break;
    case 4:
      return self__.cljs$core$IFn$_invoke$arity$4(arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 5:
      return self__.cljs$core$IFn$_invoke$arity$5(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 6:
      return self__.cljs$core$IFn$_invoke$arity$6(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 7:
      return self__.cljs$core$IFn$_invoke$arity$7(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 8:
      return self__.cljs$core$IFn$_invoke$arity$8(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 9:
      return self__.cljs$core$IFn$_invoke$arity$9(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 10:
      return self__.cljs$core$IFn$_invoke$arity$10(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 11:
      return self__.cljs$core$IFn$_invoke$arity$11(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 12:
      return self__.cljs$core$IFn$_invoke$arity$12(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 13:
      return self__.cljs$core$IFn$_invoke$arity$13(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 14:
      return self__.cljs$core$IFn$_invoke$arity$14(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 15:
      return self__.cljs$core$IFn$_invoke$arity$15(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 16:
      return self__.cljs$core$IFn$_invoke$arity$16(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 17:
      return self__.cljs$core$IFn$_invoke$arity$17(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 18:
      return self__.cljs$core$IFn$_invoke$arity$18(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 19:
      return self__.cljs$core$IFn$_invoke$arity$19(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 20:
      return self__.cljs$core$IFn$_invoke$arity$20(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 21:
      return self__.cljs$core$IFn$_invoke$arity$21(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
cljs.core.MultiFn.prototype.apply = function(self__, args19683) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19683)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error(["Preference conflict in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name), "': ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y), " is already preferred to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(old) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
  });
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref(self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref(self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$2) {
    return null;
  });
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.cached_hierarchy), cljs.core.deref(self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__5751__auto__ = function() {
    var fexpr__19685 = cljs.core.deref(self__.method_cache);
    return fexpr__19685.cljs$core$IFn$_invoke$arity$1 ? fexpr__19685.cljs$core$IFn$_invoke$arity$1(dispatch_val) : fexpr__19685.call(null, dispatch_val);
  }();
  if (cljs.core.truth_(temp__5751__auto__)) {
    var target_fn = temp__5751__auto__;
    return target_fn;
  } else {
    return cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy, self__.default_dispatch_val);
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$name, cljs$cst$symbol$dispatch_DASH_fn, cljs$cst$symbol$default_DASH_dispatch_DASH_val, cljs$cst$symbol$hierarchy, cljs$cst$symbol$method_DASH_table, cljs$cst$symbol$prefer_DASH_table, cljs$cst$symbol$method_DASH_cache, cljs$cst$symbol$cached_DASH_hierarchy], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.IUUID = function() {
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.cljs$core$IUUID$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, ['#uuid "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid), '"'].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = cljs.core.hash(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID) {
    return cljs.core.goog$module$goog$array.defaultCompare(self__.uuid, other.uuid);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(other)].join(""));
  }
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$uuid, cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  return new cljs.core.UUID(s.toLowerCase(), null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(16).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", "4", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(rhex), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex())].join(""));
};
cljs.core.uuid_QMARK_ = function cljs$core$uuid_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IUUID$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info(var_args) {
  var G__19688 = arguments.length;
  switch(G__19688) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 24, [cljs$cst$symbol$_AMPERSAND_, "null", cljs$cst$symbol$case_STAR_, "null", cljs$cst$symbol$defrecord_STAR_, "null", cljs$cst$symbol$try, "null", cljs$cst$symbol$ns_STAR_, "null", cljs$cst$symbol$finally, "null", cljs$cst$symbol$loop_STAR_, "null", cljs$cst$symbol$do, "null", cljs$cst$symbol$letfn_STAR_, "null", cljs$cst$symbol$if, "null", cljs$cst$symbol$new, "null", cljs$cst$symbol$ns, 
  "null", cljs$cst$symbol$deftype_STAR_, "null", cljs$cst$symbol$let_STAR_, "null", cljs$cst$symbol$js_STAR_, "null", cljs$cst$symbol$fn_STAR_, "null", cljs$cst$symbol$recur, "null", cljs$cst$symbol$set_BANG_, "null", cljs$cst$symbol$_DOT_, "null", cljs$cst$symbol$var, "null", cljs$cst$symbol$quote, "null", cljs$cst$symbol$catch, "null", cljs$cst$symbol$throw, "null", cljs$cst$symbol$def, "null"], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return cljs$cst$keyword$ok;
  } else {
    return cljs$cst$keyword$no_DASH_test;
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form));
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__19689 = v;
  var G__19689__$1 = G__19689 instanceof cljs.core.Keyword ? G__19689.fqn : null;
  switch(G__19689__$1) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.tag), " "].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$tag, cljs$cst$symbol$form], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["arguments", "abstract", "await", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", 
"throw", "throws", "transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null", "constructor"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__19690_SHARP_, p2__19691_SHARP_) {
      cljs.core.goog$module$goog$object.set(p1__19690_SHARP_, p2__19691_SHARP_, true);
      return p1__19690_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return cljs.core.js_reserved.hasOwnProperty(x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__22609 = cljs.core.next(ks__$1);
          var G__22610 = [function() {
            var G__19695 = ret;
            if (!(ret === "")) {
              return [G__19695, "|"].join("");
            } else {
              return G__19695;
            }
          }(), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__22609;
          ret = G__22610;
          continue;
        } else {
          return [ret, "|\\$"].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer();
  var i_22611 = 0;
  while (true) {
    if (i_22611 < name.length) {
      var c_22612 = name.charAt(i_22611);
      var sub_22613 = cljs.core.goog$module$goog$object.get(cljs.core.CHAR_MAP, c_22612);
      if (!(sub_22613 == null)) {
        sb.append(sub_22613);
      } else {
        sb.append(c_22612);
      }
      var G__22614 = i_22611 + 1;
      i_22611 = G__22614;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [name_SINGLEQUOTE_, "$"].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return name_SINGLEQUOTE___$1;
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__5751__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__5751__auto__)) {
      var match = temp__5751__auto__;
      var vec__19699 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19699, 0, null);
      var G__22618 = [ret, cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(x === "$" ? "/" : cljs.core.goog$module$goog$object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__22619 = r.lastIndex;
      ret = G__22618;
      last_match_end = G__22619;
      continue;
    } else {
      return [ret, cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  var G__19703 = function() {
    var name_SINGLEQUOTE_ = cljs.core.str.cljs$core$IFn$_invoke$arity$1(name);
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str(name_SINGLEQUOTE_);
    }
  }();
  var fexpr__19702 = name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str;
  return fexpr__19702.cljs$core$IFn$_invoke$arity$1 ? fexpr__19702.cljs$core$IFn$_invoke$arity$1(G__19703) : fexpr__19702.call(null, G__19703);
};
cljs.core.tapset = null;
cljs.core.maybe_init_tapset = function cljs$core$maybe_init_tapset() {
  if (cljs.core.tapset == null) {
    return cljs.core.tapset = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashSet.EMPTY);
  } else {
    return null;
  }
};
cljs.core.add_tap = function cljs$core$add_tap(f) {
  cljs.core.maybe_init_tapset();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset, cljs.core.conj, f);
  return null;
};
cljs.core.remove_tap = function cljs$core$remove_tap(f) {
  cljs.core.maybe_init_tapset();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset, cljs.core.disj, f);
  return null;
};
cljs.core.tap_GT_ = function cljs$core$tap_GT_(x) {
  cljs.core.maybe_init_tapset();
  return cljs.core._STAR_exec_tap_fn_STAR_.call(null, function() {
    var seq__19704 = cljs.core.seq(cljs.core.deref(cljs.core.tapset));
    var chunk__19705 = null;
    var count__19706 = 0;
    var i__19707 = 0;
    while (true) {
      if (i__19707 < count__19706) {
        var tap = chunk__19705.cljs$core$IIndexed$_nth$arity$2(null, i__19707);
        try {
          tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
        } catch (e19710) {
          if (e19710 instanceof Error) {
            var ex_22620 = e19710;
          } else {
            throw e19710;
          }
        }
        var G__22621 = seq__19704;
        var G__22622 = chunk__19705;
        var G__22623 = count__19706;
        var G__22624 = i__19707 + 1;
        seq__19704 = G__22621;
        chunk__19705 = G__22622;
        count__19706 = G__22623;
        i__19707 = G__22624;
        continue;
      } else {
        var temp__5753__auto__ = cljs.core.seq(seq__19704);
        if (temp__5753__auto__) {
          var seq__19704__$1 = temp__5753__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__19704__$1)) {
            var c__4679__auto__ = cljs.core.chunk_first(seq__19704__$1);
            var G__22625 = cljs.core.chunk_rest(seq__19704__$1);
            var G__22626 = c__4679__auto__;
            var G__22627 = cljs.core.count(c__4679__auto__);
            var G__22628 = 0;
            seq__19704 = G__22625;
            chunk__19705 = G__22626;
            count__19706 = G__22627;
            i__19707 = G__22628;
            continue;
          } else {
            var tap = cljs.core.first(seq__19704__$1);
            try {
              tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
            } catch (e19711) {
              if (e19711 instanceof Error) {
                var ex_22629 = e19711;
              } else {
                throw e19711;
              }
            }
            var G__22630 = cljs.core.next(seq__19704__$1);
            var G__22631 = null;
            var G__22632 = 0;
            var G__22633 = 0;
            seq__19704 = G__22630;
            chunk__19705 = G__22631;
            count__19706 = G__22632;
            i__19707 = G__22633;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  });
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return cljs.core.goog$module$goog$object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym));
  if (cljs.core.goog$module$goog$object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name), cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$ns, this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name);
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$obj, cljs$cst$symbol$name], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__22634 = cljs.core.goog$module$goog$object.get(ctxt, cljs.core.first(xs));
        var G__22635 = cljs.core.next(xs);
        ctxt = G__22634;
        xs = G__22635;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns));
  var segs = munged_ns.split(".");
  var G__19712 = cljs.core._STAR_target_STAR_;
  switch(G__19712) {
    case "nodejs":
      if (COMPILED) {
        return cljs.core.find_ns_obj_STAR_(function() {
          try {
            var ctxt = eval(cljs.core.first(segs));
            if (cljs.core.truth_(function() {
              var and__4251__auto__ = ctxt;
              if (cljs.core.truth_(and__4251__auto__)) {
                return cljs.core.object_QMARK_(ctxt);
              } else {
                return and__4251__auto__;
              }
            }())) {
              return ctxt;
            } else {
              return null;
            }
          } catch (e19713) {
            if (e19713 instanceof ReferenceError) {
              var e = e19713;
              return null;
            } else {
              throw e19713;
            }
          }
        }(), cljs.core.next(segs));
      } else {
        return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      }
      break;
    case "default":
    case "webworker":
      return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      break;
    default:
      throw new Error(["find-ns-obj not supported for target ", cljs.core._STAR_target_STAR_].join(""));
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function cljs$core$ns_interns_STAR__$_step(ret, k) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function() {
      return cljs.core.goog$module$goog$object.get(ns_obj, k);
    }, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym), cljs.core.str.cljs$core$IFn$_invoke$arity$1(var_sym)), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$ns, ns], null)));
  };
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns(var_args) {
  var G__19715 = arguments.length;
  switch(G__19715) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  } else {
  }
  var ns_str = cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);
  var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([ns_str, "$macros"].join("")) : ns;
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), ns__$1);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
cljs.core.uri_QMARK_ = function cljs$core$uri_QMARK_(x) {
  return x instanceof goog.Uri;
};
cljs.core.maybe_enable_print_BANG_ = function cljs$core$maybe_enable_print_BANG_() {
  if (typeof console !== "undefined") {
    return cljs.core.enable_console_print_BANG_();
  } else {
    if (cljs.core._STAR_target_STAR_ === "nashorn" || cljs.core._STAR_target_STAR_ === "graaljs") {
      var system = Java.type("java.lang.System");
      cljs.core._STAR_print_newline_STAR_ = false;
      cljs.core.set_print_fn_BANG_(function() {
        var xs = arguments;
        var s = cljs.core.goog$module$goog$array.clone(xs).join("");
        return system.out.println(s);
      });
      return cljs.core.set_print_err_fn_BANG_(function() {
        var xs = arguments;
        var s = cljs.core.goog$module$goog$array.clone(xs).join("");
        return system.error.println(s);
      });
    } else {
      return null;
    }
  }
};
cljs.core.maybe_enable_print_BANG_();
cljs.core._STAR_eval_STAR_ = function cljs$core$_STAR_eval_STAR_(_) {
  throw new Error("cljs.core/*eval* not bound");
};
cljs.core.eval = function cljs$core$eval(form) {
  return cljs.core._STAR_eval_STAR_.call(null, form);
};
if (COMPILED) {
  if ("nodejs" === cljs.core._STAR_target_STAR_) {
    goog.global = global;
  } else {
  }
  if ("window" === cljs.core._STAR_global_STAR_) {
    goog.global = window;
  } else {
    if ("self" === cljs.core._STAR_global_STAR_) {
      goog.global = self;
    } else {
      if ("global" === cljs.core._STAR_global_STAR_) {
        goog.global = global;
      } else {
      }
    }
  }
} else {
}
cljs.core.enable_console_print_BANG_();
function shadow$keyword(name) {
  return new cljs.core.Keyword(null, name, name, null);
}
function shadow$keyword_fqn(ns, name) {
  return new cljs.core.Keyword(ns, name, ns + "/" + name, null);
}
var cljs$cst$symbol$keyset = new cljs.core.Symbol(null, "keyset", "keyset", 2135291099, null);
var cljs$cst$keyword$ns = new cljs.core.Keyword(null, "ns", "ns", 441598760);
var cljs$cst$symbol$root = new cljs.core.Symbol(null, "root", "root", 1191874074, null);
var cljs$cst$keyword$arity = new cljs.core.Keyword(null, "arity", "arity", -1808556135);
var cljs$cst$symbol$seq_QMARK_ = new cljs.core.Symbol(null, "seq?", "seq?", -1951934719, null);
var cljs$cst$keyword$from_DASH_ast = new cljs.core.Keyword(null, "from-ast", "from-ast", -246238449);
var cljs$cst$symbol$default_DASH_dispatch_DASH_val = new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null);
var cljs$cst$symbol$not_DASH_native = new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null);
var cljs$cst$keyword$offset = new cljs.core.Keyword(null, "offset", "offset", 296498311);
var cljs$cst$keyword$altn = new cljs.core.Keyword(null, "altn", "altn", 1717854417);
var cljs$cst$symbol$mseq = new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null);
var cljs$cst$symbol$entries = new cljs.core.Symbol(null, "entries", "entries", 1553588366, null);
var cljs$cst$symbol$success = new cljs.core.Symbol(null, "success", "success", -763789863, null);
var cljs$cst$symbol$cljs_DOT_core = new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null);
var cljs$cst$symbol$class_QMARK_ = new cljs.core.Symbol(null, "class?", "class?", 2026366098, null);
var cljs$cst$keyword$terminate = new cljs.core.Keyword(null, "terminate", "terminate", 1256003496);
var cljs$cst$keyword$_GT__EQ_ = new cljs.core.Keyword(null, "\x3e\x3d", "\x3e\x3d", -623615505);
var cljs$cst$symbol$cljs_DOT_core_SLASH_true_QMARK_ = new cljs.core.Symbol("cljs.core", "true?", "cljs.core/true?", -77973136, null);
var cljs$cst$symbol$print_DASH_meta = new cljs.core.Symbol(null, "print-meta", "print-meta", -1620321171, null);
var cljs$cst$symbol$defrecord_STAR_ = new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null);
var cljs$cst$keyword$val = new cljs.core.Keyword(null, "val", "val", 128701612);
var cljs$cst$symbol$_QMARK_schema = new cljs.core.Symbol(null, "?schema", "?schema", -271534072, null);
var cljs$cst$keyword$link = new cljs.core.Keyword(null, "link", "link", -1769163468);
var cljs$cst$symbol$_meta = new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null);
var cljs$cst$keyword$line = new cljs.core.Keyword(null, "line", "line", 212345235);
var cljs$cst$keyword$preset = new cljs.core.Keyword(null, "preset", "preset", 777387345);
var cljs$cst$symbol$cljs_DOT_core_SLASH_integer_QMARK_ = new cljs.core.Symbol("cljs.core", "integer?", "cljs.core/integer?", 1710697810, null);
var cljs$cst$keyword$arglists = new cljs.core.Keyword(null, "arglists", "arglists", 1661989754);
var cljs$cst$keyword$repeat = new cljs.core.Keyword(null, "repeat", "repeat", 832692087);
var cljs$cst$keyword$align = new cljs.core.Keyword(null, "align", "align", 1964212802);
var cljs$cst$symbol$js_STAR_ = new cljs.core.Symbol(null, "js*", "js*", -1134233646, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_non_DASH_function_DASH_childs = new cljs.core.Keyword("malli.core", "non-function-childs", "malli.core/non-function-childs", -1591582832);
var cljs$cst$symbol$__hash = new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null);
var cljs$cst$symbol$to_DASH_ast = new cljs.core.Symbol(null, "to-ast", "to-ast", 1618596229, null);
var cljs$cst$symbol$string_QMARK_ = new cljs.core.Symbol(null, "string?", "string?", -1129175764, null);
var cljs$cst$symbol$ns_STAR_ = new cljs.core.Symbol(null, "ns*", "ns*", 1840949383, null);
var cljs$cst$symbol$ascending_QMARK_ = new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null);
var cljs$cst$keyword$lazy_DASH_refs = new cljs.core.Keyword(null, "lazy-refs", "lazy-refs", 409178818);
var cljs$cst$symbol$double_QMARK_ = new cljs.core.Symbol(null, "double?", "double?", -2146564276, null);
var cljs$cst$symbol$meta21296 = new cljs.core.Symbol(null, "meta21296", "meta21296", -1666447109, null);
var cljs$cst$keyword$pass = new cljs.core.Keyword(null, "pass", "pass", 1574159993);
var cljs$cst$symbol$catch = new cljs.core.Symbol(null, "catch", "catch", -1616370245, null);
var cljs$cst$symbol$p__22588 = new cljs.core.Symbol(null, "p__22588", "p__22588", 1976352922, null);
var cljs$cst$symbol$fqn = new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null);
var cljs$cst$symbol$vec__22285 = new cljs.core.Symbol(null, "vec__22285", "vec__22285", 2069441657, null);
var cljs$cst$symbol$qualified_DASH_ident_QMARK_ = new cljs.core.Symbol(null, "qualified-ident?", "qualified-ident?", -928894763, null);
var cljs$cst$symbol$update_DASH_count = new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null);
var cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22120 = new cljs.core.Symbol("malli.core", "t_malli$core22120", "malli.core/t_malli$core22120", -349941527, null);
var cljs$cst$symbol$off = new cljs.core.Symbol(null, "off", "off", -2047994980, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_allow_DASH_invalid_DASH_refs = new cljs.core.Keyword("malli.core", "allow-invalid-refs", "malli.core/allow-invalid-refs", -1863169617);
var cljs$cst$keyword$enter = new cljs.core.Keyword(null, "enter", "enter", 1792452624);
var cljs$cst$keyword$gen = new cljs.core.Keyword(null, "gen", "gen", 142575302);
var cljs$cst$symbol$cljs_DOT_core_SLASH_simple_DASH_ident_QMARK_ = new cljs.core.Symbol("cljs.core", "simple-ident?", "cljs.core/simple-ident?", 1674885558, null);
var cljs$cst$symbol$internal = new cljs.core.Symbol(null, "internal", "internal", 785661430, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_coll_QMARK_ = new cljs.core.Symbol("cljs.core", "coll?", "cljs.core/coll?", 1208130522, null);
var cljs$cst$keyword$debug_DASH_fn = new cljs.core.Keyword(null, "debug-fn", "debug-fn", 777839250);
var cljs$cst$symbol$hash = new cljs.core.Symbol(null, "hash", "hash", 1626749931, null);
var cljs$cst$keyword$string = new cljs.core.Keyword(null, "string", "string", -1989541586);
var cljs$cst$symbol$meta22136 = new cljs.core.Symbol(null, "meta22136", "meta22136", -1610764535, null);
var cljs$cst$keyword$data = new cljs.core.Keyword(null, "data", "data", -232669377);
var cljs$cst$keyword$malli_DOT_core_SLASH_tuple_DASH_size = new cljs.core.Keyword("malli.core", "tuple-size", "malli.core/tuple-size", -1004468077);
var cljs$cst$keyword$explainer = new cljs.core.Keyword(null, "explainer", "explainer", -2002221924);
var cljs$cst$symbol$cnt = new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_simple_DASH_symbol_QMARK_ = new cljs.core.Symbol("cljs.core", "simple-symbol?", "cljs.core/simple-symbol?", -1951205629, null);
var cljs$cst$keyword$li = new cljs.core.Keyword(null, "li", "li", 723558921);
var cljs$cst$keyword$order = new cljs.core.Keyword(null, "order", "order", -1254677256);
var cljs$cst$symbol$max = new cljs.core.Symbol(null, "max", "max", 1701898075, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_extra_DASH_key = new cljs.core.Keyword("malli.core", "extra-key", "malli.core/extra-key", 574816512);
var cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22486 = new cljs.core.Symbol("malli.core", "t_malli$core22486", "malli.core/t_malli$core22486", -2073859493, null);
var cljs$cst$symbol$meta22018 = new cljs.core.Symbol(null, "meta22018", "meta22018", -2125435003, null);
var cljs$cst$symbol$float_QMARK_ = new cljs.core.Symbol(null, "float?", "float?", 673884616, null);
var cljs$cst$keyword$unparser = new cljs.core.Keyword(null, "unparser", "unparser", 1801459433);
var cljs$cst$keyword$uuid = new cljs.core.Keyword(null, "uuid", "uuid", -2145095719);
var cljs$cst$keyword$end_DASH_line = new cljs.core.Keyword(null, "end-line", "end-line", 1837326455);
var cljs$cst$symbol$uuid_QMARK_ = new cljs.core.Symbol(null, "uuid?", "uuid?", 400077689, null);
var cljs$cst$symbol$list_QMARK_ = new cljs.core.Symbol(null, "list?", "list?", -1494629, null);
var cljs$cst$symbol$vec__22180 = new cljs.core.Symbol(null, "vec__22180", "vec__22180", -341867487, null);
var cljs$cst$symbol$fn_STAR_ = new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_schema = new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863);
var cljs$cst$keyword$malli_DOT_error_SLASH_error = new cljs.core.Keyword("malli.error", "error", "malli.error/error", -522553785);
var cljs$cst$symbol$_QMARK_children = new cljs.core.Symbol(null, "?children", "?children", 2075030425, null);
var cljs$cst$symbol$meta22487 = new cljs.core.Symbol(null, "meta22487", "meta22487", -712544896, null);
var cljs$cst$symbol$meta22244 = new cljs.core.Symbol(null, "meta22244", "meta22244", -188399662, null);
var cljs$cst$symbol$meta21394 = new cljs.core.Symbol(null, "meta21394", "meta21394", -1145781480, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_walked_DASH_refs = new cljs.core.Keyword("malli.core", "walked-refs", "malli.core/walked-refs", -2010140962);
var cljs$cst$symbol$meta22121 = new cljs.core.Symbol(null, "meta22121", "meta22121", -2089732671, null);
var cljs$cst$keyword$input = new cljs.core.Keyword(null, "input", "input", 556931961);
var cljs$cst$keyword$status = new cljs.core.Keyword(null, "status", "status", -1997798413);
var cljs$cst$symbol$p__22482 = new cljs.core.Symbol(null, "p__22482", "p__22482", -1985609988, null);
var cljs$cst$keyword$re_DASH_transformer = new cljs.core.Keyword(null, "re-transformer", "re-transformer", -1516368461);
var cljs$cst$symbol$p__22003 = new cljs.core.Symbol(null, "p__22003", "p__22003", -2104980992, null);
var cljs$cst$keyword$_GT_ = new cljs.core.Keyword(null, "\x3e", "\x3e", -555517146);
var cljs$cst$keyword$descendants = new cljs.core.Keyword(null, "descendants", "descendants", 1824886031);
var cljs$cst$keyword$report = new cljs.core.Keyword(null, "report", "report", 1394055010);
var cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22583 = new cljs.core.Symbol("malli.core", "t_malli$core22583", "malli.core/t_malli$core22583", -431780475, null);
var cljs$cst$keyword$escaped = new cljs.core.Keyword(null, "escaped", "escaped", -1007929769);
var cljs$cst$symbol$nil_DASH_val = new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null);
var cljs$cst$keyword$boolean = new cljs.core.Keyword(null, "boolean", "boolean", -1919418404);
var cljs$cst$keyword$outdent = new cljs.core.Keyword(null, "outdent", "outdent", 467209411);
var cljs$cst$keyword$tag = new cljs.core.Keyword(null, "tag", "tag", -1290361223);
var cljs$cst$symbol$dispatch_DASH_fn = new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null);
var cljs$cst$keyword$output = new cljs.core.Keyword(null, "output", "output", -1105869043);
var cljs$cst$keyword$malli_DOT_core_SLASH_function_DASH_checker = new cljs.core.Keyword("malli.core", "function-checker", "malli.core/function-checker", -792030936);
var cljs$cst$keyword$child_DASH_bounds = new cljs.core.Keyword(null, "child-bounds", "child-bounds", 1368514738);
var cljs$cst$symbol$start = new cljs.core.Symbol(null, "start", "start", 1285322546, null);
var cljs$cst$symbol$new = new cljs.core.Symbol(null, "new", "new", -444906321, null);
var cljs$cst$symbol$all = new cljs.core.Symbol(null, "all", "all", -1762306027, null);
var cljs$cst$symbol$prev_DASH_seed = new cljs.core.Symbol(null, "prev-seed", "prev-seed", 2126381367, null);
var cljs$cst$symbol$meta21145 = new cljs.core.Symbol(null, "meta21145", "meta21145", -1667049649, null);
var cljs$cst$symbol$meta22234 = new cljs.core.Symbol(null, "meta22234", "meta22234", -1632635306, null);
var cljs$cst$keyword$re = new cljs.core.Keyword(null, "re", "re", 228676202);
var cljs$cst$symbol$meta22596 = new cljs.core.Symbol(null, "meta22596", "meta22596", -1975816021, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_ast_DASH_entry_DASH_order = new cljs.core.Keyword("malli.core", "ast-entry-order", "malli.core/ast-entry-order", -659579476);
var cljs$cst$symbol$vec__22590 = new cljs.core.Symbol(null, "vec__22590", "vec__22590", -2028324674, null);
var cljs$cst$symbol$malli_DOT_util_SLASH_t_malli$util23161 = new cljs.core.Symbol("malli.util", "t_malli$util23161", "malli.util/t_malli$util23161", -1537118692, null);
var cljs$cst$keyword$malli_SLASH_error = new cljs.core.Keyword("malli", "error", "malli/error", -1152359159);
var cljs$cst$symbol$first = new cljs.core.Symbol(null, "first", "first", 996428481, null);
var cljs$cst$keyword$_EQ_ = new cljs.core.Keyword(null, "\x3d", "\x3d", 1152933628);
var cljs$cst$symbol$do = new cljs.core.Symbol(null, "do", "do", 1686842252, null);
var cljs$cst$symbol$simple_DASH_keyword_QMARK_ = new cljs.core.Symbol(null, "simple-keyword?", "simple-keyword?", -367134735, null);
var cljs$cst$symbol$tail = new cljs.core.Symbol(null, "tail", "tail", 494507963, null);
var cljs$cst$symbol$output = new cljs.core.Symbol(null, "output", "output", 534662484, null);
var cljs$cst$keyword$arities = new cljs.core.Keyword(null, "arities", "arities", -1781122917);
var cljs$cst$symbol$value_DASH_schema = new cljs.core.Symbol(null, "value-schema", "value-schema", -1754883189, null);
var cljs$cst$symbol$errors_DASH_max_DASH_pos = new cljs.core.Symbol(null, "errors-max-pos", "errors-max-pos", 798451976, null);
var cljs$cst$symbol$map__22608 = new cljs.core.Symbol(null, "map__22608", "map__22608", -2084985753, null);
var cljs$cst$keyword$test = new cljs.core.Keyword(null, "test", "test", 577538877);
var cljs$cst$symbol$meta22584 = new cljs.core.Symbol(null, "meta22584", "meta22584", 1342113203, null);
var cljs$cst$symbol$method_DASH_cache = new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null);
var cljs$cst$symbol$meta21493 = new cljs.core.Symbol(null, "meta21493", "meta21493", -460572330, null);
var cljs$cst$symbol$meta22461 = new cljs.core.Symbol(null, "meta22461", "meta22461", -149644924, null);
var cljs$cst$keyword$end_DASH_column = new cljs.core.Keyword(null, "end-column", "end-column", 1425389514);
var cljs$cst$symbol$nat_DASH_int_QMARK_ = new cljs.core.Symbol(null, "nat-int?", "nat-int?", -1879663400, null);
var cljs$cst$keyword$error_SLASH_path = new cljs.core.Keyword("error", "path", "error/path", -419192760);
var cljs$cst$keyword$shift = new cljs.core.Keyword(null, "shift", "shift", 997140064);
var cljs$cst$keyword$malli_DOT_core_SLASH_find = new cljs.core.Keyword("malli.core", "find", "malli.core/find", 163301512);
var cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22233 = new cljs.core.Symbol("malli.core", "t_malli$core22233", "malli.core/t_malli$core22233", -562168961, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_dispatch_DASH_value = new cljs.core.Keyword("malli.core", "invalid-dispatch-value", "malli.core/invalid-dispatch-value", 516707675);
var cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core21590 = new cljs.core.Symbol("malli.core", "t_malli$core21590", "malli.core/t_malli$core21590", -1847712739, null);
var cljs$cst$symbol$map__21960 = new cljs.core.Symbol(null, "map__21960", "map__21960", -1343692177, null);
var cljs$cst$symbol$int_QMARK_ = new cljs.core.Symbol(null, "int?", "int?", 1799729645, null);
var cljs$cst$symbol$simple_DASH_ident_QMARK_ = new cljs.core.Symbol(null, "simple-ident?", "simple-ident?", 194189851, null);
var cljs$cst$keyword$cat = new cljs.core.Keyword(null, "cat", "cat", -1457810207);
var cljs$cst$symbol$ci = new cljs.core.Symbol(null, "ci", "ci", 2049808339, null);
var cljs$cst$keyword$alt_DASH_impl = new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595);
var cljs$cst$keyword$malli_DOT_dev_DOT_pretty_SLASH_printer = new cljs.core.Keyword("malli.dev.pretty", "printer", "malli.dev.pretty/printer", -1293932392);
var cljs$cst$symbol$cached_DASH_hierarchy = new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null);
var cljs$cst$keyword$registry = new cljs.core.Keyword(null, "registry", "registry", 1021159018);
var cljs$cst$keyword$re_DASH_validator = new cljs.core.Keyword(null, "re-validator", "re-validator", -180375208);
var cljs$cst$symbol$root_DASH_iter = new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null);
var cljs$cst$symbol$meta22336 = new cljs.core.Symbol(null, "meta22336", "meta22336", -67865926, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_seq_QMARK_ = new cljs.core.Symbol("cljs.core", "seq?", "cljs.core/seq?", -1302056292, null);
var cljs$cst$symbol$print_DASH_length = new cljs.core.Symbol(null, "print-length", "print-length", -722569413, null);
var cljs$cst$symbol$ext_DASH_map_DASH_iter = new cljs.core.Symbol(null, "ext-map-iter", "ext-map-iter", -1215982757, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_false_QMARK_ = new cljs.core.Symbol("cljs.core", "false?", "cljs.core/false?", -1660815306, null);
var cljs$cst$keyword$_LT__EQ_ = new cljs.core.Keyword(null, "\x3c\x3d", "\x3c\x3d", -395636158);
var cljs$cst$keyword$path = new cljs.core.Keyword(null, "path", "path", -188191168);
var cljs$cst$symbol$db = new cljs.core.Symbol(null, "db", "db", -1661185010, null);
var cljs$cst$symbol$vec__22011 = new cljs.core.Symbol(null, "vec__22011", "vec__22011", 1356443128, null);
var cljs$cst$symbol$p__22179 = new cljs.core.Symbol(null, "p__22179", "p__22179", 1235172217, null);
var cljs$cst$keyword$rngs = new cljs.core.Keyword(null, "rngs", "rngs", -8039697);
var cljs$cst$keyword$cljs_DOT_core_SLASH_not_DASH_found = new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185);
var cljs$cst$keyword$println = new cljs.core.Keyword(null, "println", "println", 1920840330);
var cljs$cst$keyword$or = new cljs.core.Keyword(null, "or", "or", 235744169);
var cljs$cst$symbol$form = new cljs.core.Symbol(null, "form", "form", 16469056, null);
var cljs$cst$keyword$int = new cljs.core.Keyword(null, "int", "int", -1741416922);
var cljs$cst$symbol$map__21858 = new cljs.core.Symbol(null, "map__21858", "map__21858", -881918379, null);
var cljs$cst$symbol$meta21591 = new cljs.core.Symbol(null, "meta21591", "meta21591", -1653590331, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_duplicate_DASH_arities = new cljs.core.Keyword("malli.core", "duplicate-arities", "malli.core/duplicate-arities", -374423504);
var cljs$cst$symbol$provider = new cljs.core.Symbol(null, "provider", "provider", 1338474627, null);
var cljs$cst$symbol$hierarchy = new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_key_DASH_missing = new cljs.core.Keyword("malli.core", "key-missing", "malli.core/key-missing", -161579801);
var cljs$cst$symbol$try = new cljs.core.Symbol(null, "try", "try", -1273693247, null);
var cljs$cst$keyword$margin = new cljs.core.Keyword(null, "margin", "margin", -995903681);
var cljs$cst$keyword$ok = new cljs.core.Keyword(null, "ok", "ok", 967785236);
var cljs$cst$keyword$wrap = new cljs.core.Keyword(null, "wrap", "wrap", 851669987);
var cljs$cst$keyword$op = new cljs.core.Keyword(null, "op", "op", -1882987955);
var cljs$cst$symbol$finally = new cljs.core.Symbol(null, "finally", "finally", -1065347064, null);
var cljs$cst$symbol$str = new cljs.core.Symbol(null, "str", "str", -1564826950, null);
var cljs$cst$symbol$throw = new cljs.core.Symbol(null, "throw", "throw", 595905694, null);
var cljs$cst$symbol$has_DASH_nil_QMARK_ = new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null);
var cljs$cst$symbol$object = new cljs.core.Symbol(null, "object", "object", -1179821820, null);
var cljs$cst$keyword$parse = new cljs.core.Keyword(null, "parse", "parse", -1162164619);
var cljs$cst$keyword$print = new cljs.core.Keyword(null, "print", "print", 1299562414);
var cljs$cst$symbol$cljs_DOT_core_SLASH_string_QMARK_ = new cljs.core.Symbol("cljs.core", "string?", "cljs.core/string?", -2072921719, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_input = new cljs.core.Keyword("malli.core", "invalid-input", "malli.core/invalid-input", 2010057279);
var cljs$cst$symbol$parse = new cljs.core.Symbol(null, "parse", "parse", 478366908, null);
var cljs$cst$keyword$_PLUS_ = new cljs.core.Keyword(null, "+", "+", 1913524883);
var cljs$cst$symbol$_next = new cljs.core.Symbol(null, "_next", "_next", 101877036, null);
var cljs$cst$keyword$raw = new cljs.core.Keyword(null, "raw", "raw", 1604651272);
var cljs$cst$keyword$namespaces = new cljs.core.Keyword(null, "namespaces", "namespaces", -1444157469);
var cljs$cst$symbol$meta22311 = new cljs.core.Symbol(null, "meta22311", "meta22311", -1105927605, null);
var cljs$cst$keyword$cljs_DOT_analyzer_SLASH_no_DASH_resolve = new cljs.core.Keyword("cljs.analyzer", "no-resolve", "cljs.analyzer/no-resolve", -1872351017);
var cljs$cst$keyword$property_DASH_pred = new cljs.core.Keyword(null, "property-pred", "property-pred", 1813304729);
var cljs$cst$keyword$flush_DASH_on_DASH_newline = new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939);
var cljs$cst$keyword$mutable = new cljs.core.Keyword(null, "mutable", "mutable", 875778266);
var cljs$cst$symbol$forms = new cljs.core.Symbol(null, "forms", "forms", -608443419, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_ref = new cljs.core.Keyword("malli.core", "invalid-ref", "malli.core/invalid-ref", -1109933109);
var cljs$cst$symbol$map__23160 = new cljs.core.Symbol(null, "map__23160", "map__23160", -1188501727, null);
var cljs$cst$symbol$buffer = new cljs.core.Symbol(null, "buffer", "buffer", -2037140571, null);
var cljs$cst$symbol$node = new cljs.core.Symbol(null, "node", "node", -2073234571, null);
var cljs$cst$symbol$meta = new cljs.core.Symbol(null, "meta", "meta", -1154898805, null);
var cljs$cst$symbol$tidx = new cljs.core.Symbol(null, "tidx", "tidx", 1939123455, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_non_DASH_associative_DASH_schema = new cljs.core.Keyword("malli.core", "non-associative-schema", "malli.core/non-associative-schema", -588379948);
var cljs$cst$symbol$nodes = new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_float_QMARK_ = new cljs.core.Symbol("cljs.core", "float?", "cljs.core/float?", -941017745, null);
var cljs$cst$keyword$too_DASH_far = new cljs.core.Keyword(null, "too-far", "too-far", 85800617);
var cljs$cst$symbol$re_DASH_parser = new cljs.core.Symbol(null, "re-parser", "re-parser", 410905963, null);
var cljs$cst$symbol$len = new cljs.core.Symbol(null, "len", "len", -1230778691, null);
var cljs$cst$keyword$nodes = new cljs.core.Keyword(null, "nodes", "nodes", -2099585805);
var cljs$cst$symbol$id = new cljs.core.Symbol(null, "id", "id", 252129435, null);
var cljs$cst$symbol$meta22666 = new cljs.core.Symbol(null, "meta22666", "meta22666", -1094681433, null);
var cljs$cst$symbol$keys = new cljs.core.Symbol(null, "keys", "keys", -1586012071, null);
var cljs$cst$symbol$meta22663 = new cljs.core.Symbol(null, "meta22663", "meta22663", -1921515114, null);
var cljs$cst$keyword$throwing_DASH_fn_DASH_top_DASH_level_DASH_ns_DASH_names = new cljs.core.Keyword(null, "throwing-fn-top-level-ns-names", "throwing-fn-top-level-ns-names", 1959105244);
var cljs$cst$symbol$if = new cljs.core.Symbol(null, "if", "if", 1181717262, null);
var cljs$cst$keyword$values = new cljs.core.Keyword(null, "values", "values", 372645556);
var cljs$cst$keyword$malli_DOT_core_SLASH_walk_DASH_refs = new cljs.core.Keyword("malli.core", "walk-refs", "malli.core/walk-refs", 755904802);
var cljs$cst$keyword$closed = new cljs.core.Keyword(null, "closed", "closed", -919675359);
var cljs$cst$symbol$pos_QMARK_ = new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null);
var cljs$cst$symbol$iters = new cljs.core.Symbol(null, "iters", "iters", 719353031, null);
var cljs$cst$symbol$p__23159 = new cljs.core.Symbol(null, "p__23159", "p__23159", 1061214659, null);
var cljs$cst$symbol$in = new cljs.core.Symbol(null, "in", "in", 109346662, null);
var cljs$cst$symbol$sequential_QMARK_ = new cljs.core.Symbol(null, "sequential?", "sequential?", 1102351463, null);
var cljs$cst$symbol$hash_DASH_map = new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null);
var cljs$cst$symbol$loop_STAR_ = new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null);
var cljs$cst$symbol$props_STAR_ = new cljs.core.Symbol(null, "props*", "props*", -768250162, null);
var cljs$cst$symbol$meta22546 = new cljs.core.Symbol(null, "meta22546", "meta22546", -1313910158, null);
var cljs$cst$keyword$leave = new cljs.core.Keyword(null, "leave", "leave", 1022579443);
var cljs$cst$symbol$riter = new cljs.core.Symbol(null, "riter", "riter", -237834262, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_val = new cljs.core.Keyword("malli.core", "val", "malli.core/val", 39501268);
var cljs$cst$symbol$pred = new cljs.core.Symbol(null, "pred", "pred", -727012372, null);
var cljs$cst$symbol$quote = new cljs.core.Symbol(null, "quote", "quote", 1377916282, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_qualified_DASH_keyword_QMARK_ = new cljs.core.Symbol("cljs.core", "qualified-keyword?", "cljs.core/qualified-keyword?", -308091478, null);
var cljs$cst$keyword$colors = new cljs.core.Keyword(null, "colors", "colors", 1157174732);
var cljs$cst$symbol$childs = new cljs.core.Symbol(null, "childs", "childs", 347329640, null);
var cljs$cst$symbol$editable_QMARK_ = new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_vector_QMARK_ = new cljs.core.Symbol("cljs.core", "vector?", "cljs.core/vector?", -1550392028, null);
var cljs$cst$symbol$inst_QMARK_ = new cljs.core.Symbol(null, "inst?", "inst?", 1614698981, null);
var cljs$cst$symbol$buf = new cljs.core.Symbol(null, "buf", "buf", 1426618187, null);
var cljs$cst$symbol$uri_QMARK_ = new cljs.core.Symbol(null, "uri?", "uri?", 2029475116, null);
var cljs$cst$symbol$indexed_QMARK_ = new cljs.core.Symbol(null, "indexed?", "indexed?", 1234610384, null);
var cljs$cst$symbol$arr = new cljs.core.Symbol(null, "arr", "arr", 2115492975, null);
var cljs$cst$symbol$_QMARK_props = new cljs.core.Symbol(null, "?props", "?props", 561193402, null);
var cljs$cst$symbol$key = new cljs.core.Symbol(null, "key", "key", 124488940, null);
var cljs$cst$keyword$hierarchy = new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341);
var cljs$cst$keyword$_QMARK_ = new cljs.core.Keyword(null, "?", "?", -1703165233);
var cljs$cst$keyword$f = new cljs.core.Keyword(null, "f", "f", -1597136552);
var cljs$cst$symbol$cljs_DOT_core_SLASH_neg_QMARK_ = new cljs.core.Symbol("cljs.core", "neg?", "cljs.core/neg?", 2002812728, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH__EQ__GT_schema = new cljs.core.Keyword("malli.core", "invalid-\x3d\x3eschema", "malli.core/invalid-\x3d\x3eschema", 46765066);
var cljs$cst$symbol$meta22419 = new cljs.core.Symbol(null, "meta22419", "meta22419", 305694783, null);
var cljs$cst$symbol$edit = new cljs.core.Symbol(null, "edit", "edit", -1302639, null);
var cljs$cst$keyword$set = new cljs.core.Keyword(null, "set", "set", 304602554);
var cljs$cst$symbol$simple_DASH_symbol_QMARK_ = new cljs.core.Symbol(null, "simple-symbol?", "simple-symbol?", 1408454822, null);
var cljs$cst$symbol$fm = new cljs.core.Symbol(null, "fm", "fm", -1190690268, null);
var cljs$cst$symbol$_QMARK_registries = new cljs.core.Symbol(null, "?registries", "?registries", 2135368100, null);
var cljs$cst$symbol$fn = new cljs.core.Symbol(null, "fn", "fn", 465265323, null);
var cljs$cst$symbol$properties = new cljs.core.Symbol(null, "properties", "properties", -1968616217, null);
var cljs$cst$symbol$fseq = new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null);
var cljs$cst$symbol$stack = new cljs.core.Symbol(null, "stack", "stack", 847125597, null);
var cljs$cst$symbol$unparse = new cljs.core.Symbol(null, "unparse", "unparse", 135615975, null);
var cljs$cst$symbol$some_QMARK_ = new cljs.core.Symbol(null, "some?", "some?", 234752293, null);
var cljs$cst$symbol$pos = new cljs.core.Symbol(null, "pos", "pos", 775924307, null);
var cljs$cst$symbol$min = new cljs.core.Symbol(null, "min", "min", 2085523049, null);
var cljs$cst$symbol$pos_DASH_int_QMARK_ = new cljs.core.Symbol(null, "pos-int?", "pos-int?", -1205815015, null);
var cljs$cst$keyword$app_DASH_script = new cljs.core.Keyword(null, "app-script", "app-script", 1732990731);
var cljs$cst$keyword$double = new cljs.core.Keyword(null, "double", "double", 884886883);
var cljs$cst$symbol$meta22644 = new cljs.core.Symbol(null, "meta22644", "meta22644", 483498216, null);
var cljs$cst$symbol$prev = new cljs.core.Symbol(null, "prev", "prev", 43462301, null);
var cljs$cst$symbol$cache = new cljs.core.Symbol(null, "cache", "cache", 403508473, null);
var cljs$cst$symbol$vec__21810 = new cljs.core.Symbol(null, "vec__21810", "vec__21810", 348121583, null);
var cljs$cst$symbol$re_DASH_validator = new cljs.core.Symbol(null, "re-validator", "re-validator", 1460156319, null);
var cljs$cst$keyword$symbol = new cljs.core.Keyword(null, "symbol", "symbol", -1038572696);
var cljs$cst$keyword$error = new cljs.core.Keyword(null, "error", "error", -978969032);
var cljs$cst$symbol$fields = new cljs.core.Symbol(null, "fields", "fields", -291534703, null);
var cljs$cst$symbol$meta21670 = new cljs.core.Symbol(null, "meta21670", "meta21670", 1165731744, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_sci_DASH_options = new cljs.core.Keyword("malli.core", "sci-options", "malli.core/sci-options", 905728020);
var cljs$cst$keyword$malli_DOT_core_SLASH_input_DASH_remaining = new cljs.core.Keyword("malli.core", "input-remaining", "malli.core/input-remaining", 372310422);
var cljs$cst$symbol$set_QMARK_ = new cljs.core.Symbol(null, "set?", "set?", 1636014792, null);
var cljs$cst$symbol$meta22647 = new cljs.core.Symbol(null, "meta22647", "meta22647", 1178849333, null);
var cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22061 = new cljs.core.Symbol("malli.core", "t_malli$core22061", "malli.core/t_malli$core22061", -619749733, null);
var cljs$cst$keyword$catn = new cljs.core.Keyword(null, "catn", "catn", -48807277);
var cljs$cst$symbol$input = new cljs.core.Symbol(null, "input", "input", -2097503808, null);
var cljs$cst$symbol$print_DASH_level = new cljs.core.Symbol(null, "print-level", "print-level", -184892206, null);
var cljs$cst$keyword$malli_DOT_dev_DOT_virhe_SLASH_default = new cljs.core.Keyword("malli.dev.virhe", "default", "malli.dev.virhe/default", 1530256530);
var cljs$cst$symbol$base_DASH_count = new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null);
var cljs$cst$keyword$ref = new cljs.core.Keyword(null, "ref", "ref", 1289896967);
var cljs$cst$symbol$vals = new cljs.core.Symbol(null, "vals", "vals", -1886377036, null);
var cljs$cst$symbol$dispatch_DASH_map = new cljs.core.Symbol(null, "dispatch-map", "dispatch-map", 1489026142, null);
var cljs$cst$keyword$position = new cljs.core.Keyword(null, "position", "position", -2011731912);
var cljs$cst$symbol$letfn_STAR_ = new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null);
var cljs$cst$keyword$value = new cljs.core.Keyword(null, "value", "value", 305978217);
var cljs$cst$keyword$function = new cljs.core.Keyword(null, "function", "function", -2127255473);
var cljs$cst$keyword$fallback_DASH_impl = new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995);
var cljs$cst$symbol$keyword_QMARK_ = new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null);
var cljs$cst$symbol$ns = new cljs.core.Symbol(null, "ns", "ns", 2082130287, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_simple_DASH_keyword_QMARK_ = new cljs.core.Symbol("cljs.core", "simple-keyword?", "cljs.core/simple-keyword?", 39474330, null);
var cljs$cst$symbol$vec__23164 = new cljs.core.Symbol(null, "vec__23164", "vec__23164", 527526954, null);
var cljs$cst$keyword$re_DASH_min_DASH_max = new cljs.core.Keyword(null, "re-min-max", "re-min-max", 1020871707);
var cljs$cst$symbol$fpred = new cljs.core.Symbol(null, "fpred", "fpred", 1016397475, null);
var cljs$cst$keyword$unparse = new cljs.core.Keyword(null, "unparse", "unparse", -1504915552);
var cljs$cst$keyword$lazy = new cljs.core.Keyword(null, "lazy", "lazy", -424547181);
var cljs$cst$keyword$title_DASH_dark = new cljs.core.Keyword(null, "title-dark", "title-dark", -1835322435);
var cljs$cst$keyword$keyword_DASH_fn = new cljs.core.Keyword(null, "keyword-fn", "keyword-fn", -64566675);
var cljs$cst$symbol$ifn_QMARK_ = new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null);
var cljs$cst$keyword$error_SLASH_message = new cljs.core.Keyword("error", "message", "error/message", -502809098);
var cljs$cst$symbol$let_STAR_ = new cljs.core.Symbol(null, "let*", "let*", 1920721458, null);
var cljs$cst$symbol$tree_DASH_map = new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null);
var cljs$cst$symbol$default_DASH_registry = new cljs.core.Symbol(null, "default-registry", "default-registry", 732204441, null);
var cljs$cst$symbol$meta21659 = new cljs.core.Symbol(null, "meta21659", "meta21659", -37399482, null);
var cljs$cst$keyword$constant = new cljs.core.Keyword(null, "constant", "constant", -379609303);
var cljs$cst$symbol$ast = new cljs.core.Symbol(null, "ast", "ast", 780197459, null);
var cljs$cst$keyword$width = new cljs.core.Keyword(null, "width", "width", -384071477);
var cljs$cst$keyword$malli_DOT_core_SLASH_in = new cljs.core.Keyword("malli.core", "in", "malli.core/in", -1208578537);
var cljs$cst$keyword$vector = new cljs.core.Keyword(null, "vector", "vector", 1902966158);
var cljs$cst$keyword$malli_DOT_error_SLASH_misspelled_DASH_key = new cljs.core.Keyword("malli.error", "misspelled-key", "malli.error/misspelled-key", 616486174);
var cljs$cst$symbol$rear = new cljs.core.Symbol(null, "rear", "rear", -900164830, null);
var cljs$cst$keyword$inline = new cljs.core.Keyword(null, "inline", "inline", 1399884222);
var cljs$cst$keyword$select_DASH_keys = new cljs.core.Keyword(null, "select-keys", "select-keys", 1945879180);
var cljs$cst$keyword$_LT_ = new cljs.core.Keyword(null, "\x3c", "\x3c", -646864291);
var cljs$cst$keyword$end = new cljs.core.Keyword(null, "end", "end", -268185958);
var cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22281 = new cljs.core.Symbol("malli.core", "t_malli$core22281", "malli.core/t_malli$core22281", 479860597, null);
var cljs$cst$symbol$ast_DASH_entry_DASH_order = new cljs.core.Symbol(null, "ast-entry-order", "ast-entry-order", 825309915, null);
var cljs$cst$keyword$cljs_DOT_core_SLASH_halt = new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715);
var cljs$cst$symbol$property_DASH_pred = new cljs.core.Symbol(null, "property-pred", "property-pred", -841131040, null);
var cljs$cst$keyword$merge_DASH_default = new cljs.core.Keyword(null, "merge-default", "merge-default", 1152742083);
var cljs$cst$symbol$validator = new cljs.core.Symbol(null, "validator", "validator", -325659154, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_inst_QMARK_ = new cljs.core.Symbol("cljs.core", "inst?", "cljs.core/inst?", 1216133710, null);
var cljs$cst$symbol$bitmap = new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null);
var cljs$cst$symbol$meta22732 = new cljs.core.Symbol(null, "meta22732", "meta22732", -693259090, null);
var cljs$cst$symbol$associative_QMARK_ = new cljs.core.Symbol(null, "associative?", "associative?", -141666771, null);
var cljs$cst$symbol$entry_DASH_parser = new cljs.core.Symbol(null, "entry-parser", "entry-parser", -1698599125, null);
var cljs$cst$symbol$meta22616 = new cljs.core.Symbol(null, "meta22616", "meta22616", 1969524175, null);
var cljs$cst$symbol$qualified_DASH_symbol_QMARK_ = new cljs.core.Symbol(null, "qualified-symbol?", "qualified-symbol?", 98763807, null);
var cljs$cst$keyword$group = new cljs.core.Keyword(null, "group", "group", 582596132);
var cljs$cst$keyword$malli_DOT_core_SLASH_walk_DASH_schema_DASH_refs = new cljs.core.Keyword("malli.core", "walk-schema-refs", "malli.core/walk-schema-refs", -1140065954);
var cljs$cst$keyword$malli_DOT_core_SLASH_sci_DASH_not_DASH_available = new cljs.core.Keyword("malli.core", "sci-not-available", "malli.core/sci-not-available", -1400847277);
var cljs$cst$symbol$_DASH_ref = new cljs.core.Symbol(null, "-ref", "-ref", -1337394753, null);
var cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22175 = new cljs.core.Symbol("malli.core", "t_malli$core22175", "malli.core/t_malli$core22175", 1656428861, null);
var cljs$cst$symbol$recur = new cljs.core.Symbol(null, "recur", "recur", 1202958259, null);
var cljs$cst$symbol$symbol_QMARK_ = new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_seqable_QMARK_ = new cljs.core.Symbol("cljs.core", "seqable?", "cljs.core/seqable?", -745394886, null);
var cljs$cst$symbol$i = new cljs.core.Symbol(null, "i", "i", 253690212, null);
var cljs$cst$symbol$_DASH__GT_checker = new cljs.core.Symbol(null, "-\x3echecker", "-\x3echecker", 964293264, null);
var cljs$cst$symbol$f = new cljs.core.Symbol(null, "f", "f", 43394975, null);
var cljs$cst$symbol$js = new cljs.core.Symbol(null, "js", "js", -886355190, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_into_DASH_schema = new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759);
var cljs$cst$keyword$type = new cljs.core.Keyword(null, "type", "type", 1174270348);
var cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_input_DASH_schema = new cljs.core.Keyword("malli.core", "invalid-input-schema", "malli.core/invalid-input-schema", -833477915);
var cljs$cst$symbol$_ = new cljs.core.Symbol(null, "_", "_", -1201019570, null);
var cljs$cst$symbol$errors = new cljs.core.Symbol(null, "errors", "errors", 731740809, null);
var cljs$cst$symbol$s = new cljs.core.Symbol(null, "s", "s", -948495851, null);
var cljs$cst$symbol$meta21750 = new cljs.core.Symbol(null, "meta21750", "meta21750", -1736024407, null);
var cljs$cst$symbol$re_DASH_transformer = new cljs.core.Symbol(null, "re-transformer", "re-transformer", 124163066, null);
var cljs$cst$symbol$x = new cljs.core.Symbol(null, "x", "x", -555367584, null);
var cljs$cst$keyword$resolve = new cljs.core.Keyword(null, "resolve", "resolve", -1584445482);
var cljs$cst$symbol$v = new cljs.core.Symbol(null, "v", "v", 1661996586, null);
var cljs$cst$symbol$m = new cljs.core.Symbol(null, "m", "m", -1021758608, null);
var cljs$cst$symbol$next_DASH_entry = new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_list_QMARK_ = new cljs.core.Symbol("cljs.core", "list?", "cljs.core/list?", -684796618, null);
var cljs$cst$symbol$k = new cljs.core.Symbol(null, "k", "k", -505765866, null);
var cljs$cst$keyword$unknown = new cljs.core.Keyword(null, "unknown", "unknown", -935977881);
var cljs$cst$symbol$sym = new cljs.core.Symbol(null, "sym", "sym", 195671222, null);
var cljs$cst$keyword$more_DASH_marker = new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935);
var cljs$cst$symbol$meta21998 = new cljs.core.Symbol(null, "meta21998", "meta21998", -1744057863, null);
var cljs$cst$symbol$meta22604 = new cljs.core.Symbol(null, "meta22604", "meta22604", 1870020822, null);
var cljs$cst$keyword$span = new cljs.core.Keyword(null, "span", "span", 1394872991);
var cljs$cst$symbol$integer_QMARK_ = new cljs.core.Symbol(null, "integer?", "integer?", 1303791671, null);
var cljs$cst$symbol$n = new cljs.core.Symbol(null, "n", "n", -2092305744, null);
var cljs$cst$symbol$qualified_DASH_keyword_QMARK_ = new cljs.core.Symbol(null, "qualified-keyword?", "qualified-keyword?", 375456001, null);
var cljs$cst$keyword$optional = new cljs.core.Keyword(null, "optional", "optional", 2053951509);
var cljs$cst$symbol$re = new cljs.core.Symbol(null, "re", "re", 1869207729, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_keyword_QMARK_ = new cljs.core.Symbol("cljs.core", "keyword?", "cljs.core/keyword?", 713156450, null);
var cljs$cst$keyword$parser = new cljs.core.Keyword(null, "parser", "parser", -1543495310);
var cljs$cst$keyword$malli_DOT_error_SLASH_misspelled_DASH_value = new cljs.core.Keyword("malli.error", "misspelled-value", "malli.error/misspelled-value", -1135752848);
var cljs$cst$symbol$val = new cljs.core.Symbol(null, "val", "val", 1769233139, null);
var cljs$cst$keyword$break = new cljs.core.Keyword(null, "break", "break", 126570225);
var cljs$cst$symbol$meta22952 = new cljs.core.Symbol(null, "meta22952", "meta22952", 567970770, null);
var cljs$cst$symbol$meta19770 = new cljs.core.Symbol(null, "meta19770", "meta19770", 1731981054, null);
var cljs$cst$symbol$base = new cljs.core.Symbol(null, "base", "base", 1825810849, null);
var cljs$cst$symbol$count = new cljs.core.Symbol(null, "count", "count", -514511684, null);
var cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core21737 = new cljs.core.Symbol("malli.core", "t_malli$core21737", "malli.core/t_malli$core21737", 374158207, null);
var cljs$cst$keyword$check = new cljs.core.Keyword(null, "check", "check", 1226308904);
var cljs$cst$keyword$code = new cljs.core.Keyword(null, "code", "code", 1586293142);
var cljs$cst$keyword$symbols = new cljs.core.Keyword(null, "symbols", "symbols", 1211743);
var cljs$cst$symbol$var = new cljs.core.Symbol(null, "var", "var", 870848730, null);
var cljs$cst$symbol$meta21869 = new cljs.core.Symbol(null, "meta21869", "meta21869", 423001173, null);
var cljs$cst$symbol$vector_QMARK_ = new cljs.core.Symbol(null, "vector?", "vector?", -61367869, null);
var cljs$cst$symbol$registries = new cljs.core.Symbol(null, "registries", "registries", -1366064418, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_zero_QMARK_ = new cljs.core.Symbol("cljs.core", "zero?", "cljs.core/zero?", -341242858, null);
var cljs$cst$keyword$clj = new cljs.core.Keyword(null, "clj", "clj", -660495428);
var cljs$cst$keyword$doc = new cljs.core.Keyword(null, "doc", "doc", 1913296891);
var cljs$cst$symbol$map__22004 = new cljs.core.Symbol(null, "map__22004", "map__22004", -354945167, null);
var cljs$cst$symbol$step = new cljs.core.Symbol(null, "step", "step", -1365547645, null);
var cljs$cst$keyword$keys = new cljs.core.Keyword(null, "keys", "keys", 1068423698);
var cljs$cst$keyword$node = new cljs.core.Keyword(null, "node", "node", 581201198);
var cljs$cst$keyword$ready = new cljs.core.Keyword(null, "ready", "ready", 1086465795);
var cljs$cst$symbol$neg_QMARK_ = new cljs.core.Symbol(null, "neg?", "neg?", -1902175577, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_symbol_QMARK_ = new cljs.core.Symbol("cljs.core", "symbol?", "cljs.core/symbol?", 1422196122, null);
var cljs$cst$symbol$next = new cljs.core.Symbol(null, "next", "next", 1522830042, null);
var cljs$cst$keyword$re_DASH_parser = new cljs.core.Keyword(null, "re-parser", "re-parser", -1229625564);
var cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_schema = new cljs.core.Keyword("malli.core", "invalid-schema", "malli.core/invalid-schema", 1923990979);
var cljs$cst$symbol$meta21850 = new cljs.core.Symbol(null, "meta21850", "meta21850", -8585299, null);
var cljs$cst$symbol$meta21971 = new cljs.core.Symbol(null, "meta21971", "meta21971", -827086732, null);
var cljs$cst$symbol$meta21738 = new cljs.core.Symbol(null, "meta21738", "meta21738", 1326941922, null);
var cljs$cst$keyword$meta = new cljs.core.Keyword(null, "meta", "meta", 1499536964);
var cljs$cst$symbol$unknown = new cljs.core.Symbol(null, "unknown", "unknown", 704553646, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_nat_DASH_int_QMARK_ = new cljs.core.Symbol("cljs.core", "nat-int?", "cljs.core/nat-int?", -164364171, null);
var cljs$cst$keyword$infos = new cljs.core.Keyword(null, "infos", "infos", -927309652);
var cljs$cst$symbol$cljs_DOT_core_SLASH_boolean_QMARK_ = new cljs.core.Symbol("cljs.core", "boolean?", "cljs.core/boolean?", 1400713761, null);
var cljs$cst$keyword$added = new cljs.core.Keyword(null, "added", "added", 2057651688);
var cljs$cst$symbol$coll = new cljs.core.Symbol(null, "coll", "coll", -1006698606, null);
var cljs$cst$symbol$map__22483 = new cljs.core.Symbol(null, "map__22483", "map__22483", -135721274, null);
var cljs$cst$keyword$namespace = new cljs.core.Keyword(null, "namespace", "namespace", -377510372);
var cljs$cst$keyword$map = new cljs.core.Keyword(null, "map", "map", 1371690461);
var cljs$cst$keyword$cnd = new cljs.core.Keyword(null, "cnd", "cnd", -521882032);
var cljs$cst$symbol$meta19758 = new cljs.core.Symbol(null, "meta19758", "meta19758", -1223676063, null);
var cljs$cst$symbol$iter = new cljs.core.Symbol(null, "iter", "iter", -1346195486, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_ident_QMARK_ = new cljs.core.Symbol("cljs.core", "ident?", "cljs.core/ident?", 1567441535, null);
var cljs$cst$symbol$p__21959 = new cljs.core.Symbol(null, "p__21959", "p__21959", 553660084, null);
var cljs$cst$keyword$props = new cljs.core.Keyword(null, "props", "props", 453281727);
var cljs$cst$symbol$js_SLASH_SpreadsheetApp = new cljs.core.Symbol("js", "SpreadsheetApp", "js/SpreadsheetApp", 3208159, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_type = new cljs.core.Keyword("malli.core", "invalid-type", "malli.core/invalid-type", -1367388450);
var cljs$cst$keyword$body = new cljs.core.Keyword(null, "body", "body", -2049205669);
var cljs$cst$symbol$completed = new cljs.core.Symbol(null, "completed", "completed", 1154475024, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_transformer = new cljs.core.Keyword("malli.core", "invalid-transformer", "malli.core/invalid-transformer", 962129811);
var cljs$cst$symbol$options = new cljs.core.Symbol(null, "options", "options", 1740170016, null);
var cljs$cst$keyword$right = new cljs.core.Keyword(null, "right", "right", -452581833);
var cljs$cst$symbol$comp = new cljs.core.Symbol(null, "comp", "comp", -1462482139, null);
var cljs$cst$keyword$default_DASH_locale = new cljs.core.Keyword(null, "default-locale", "default-locale", -677515761);
var cljs$cst$symbol$type = new cljs.core.Symbol(null, "type", "type", -1480165421, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_number_QMARK_ = new cljs.core.Symbol("cljs.core", "number?", "cljs.core/number?", -811857295, null);
var cljs$cst$symbol$meta19753 = new cljs.core.Symbol(null, "meta19753", "meta19753", 529974133, null);
var cljs$cst$keyword$cnt = new cljs.core.Keyword(null, "cnt", "cnt", 283978798);
var cljs$cst$keyword$mode = new cljs.core.Keyword(null, "mode", "mode", 654403691);
var cljs$cst$symbol$meta21606 = new cljs.core.Symbol(null, "meta21606", "meta21606", 1938151772, null);
var cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core21950 = new cljs.core.Symbol("malli.core", "t_malli$core21950", "malli.core/t_malli$core21950", 128311195, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_pos_DASH_int_QMARK_ = new cljs.core.Symbol("cljs.core", "pos-int?", "cljs.core/pos-int?", -2115888030, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_set_QMARK_ = new cljs.core.Symbol("cljs.core", "set?", "cljs.core/set?", -1176684971, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_limits = new cljs.core.Keyword("malli.core", "limits", "malli.core/limits", -1343466863);
var cljs$cst$symbol$cljs_DOT_core_SLASH_char_QMARK_ = new cljs.core.Symbol("cljs.core", "char?", "cljs.core/char?", 416405281, null);
var cljs$cst$keyword$max = new cljs.core.Keyword(null, "max", "max", 61366548);
var cljs$cst$keyword$type_DASH_properties = new cljs.core.Keyword(null, "type-properties", "type-properties", -1728352126);
var cljs$cst$symbol$function_DASH_checker = new cljs.core.Symbol(null, "function-checker", "function-checker", 131742871, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_child_DASH_error = new cljs.core.Keyword("malli.core", "child-error", "malli.core/child-error", -473817473);
var cljs$cst$keyword$child = new cljs.core.Keyword(null, "child", "child", 623967545);
var cljs$cst$symbol$cljs_DOT_core_SLASH_qualified_DASH_symbol_QMARK_ = new cljs.core.Symbol("cljs.core", "qualified-symbol?", "cljs.core/qualified-symbol?", 1570873476, null);
var cljs$cst$symbol$map__22589 = new cljs.core.Symbol(null, "map__22589", "map__22589", 987770460, null);
var cljs$cst$keyword$encode = new cljs.core.Keyword(null, "encode", "encode", -1753429702);
var cljs$cst$symbol$re_DASH_min_DASH_max = new cljs.core.Symbol(null, "re-min-max", "re-min-max", -1633564062, null);
var cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core21849 = new cljs.core.Symbol("malli.core", "t_malli$core21849", "malli.core/t_malli$core21849", 1637212232, null);
var cljs$cst$symbol$meta21951 = new cljs.core.Symbol(null, "meta21951", "meta21951", 607001281, null);
var cljs$cst$symbol$nil_QMARK_ = new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null);
var cljs$cst$symbol$_rest = new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null);
var cljs$cst$symbol$parser = new cljs.core.Symbol(null, "parser", "parser", 97036217, null);
var cljs$cst$symbol$empty_QMARK_ = new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null);
var cljs$cst$symbol$meta19762 = new cljs.core.Symbol(null, "meta19762", "meta19762", -72741151, null);
var cljs$cst$symbol$meta21713 = new cljs.core.Symbol(null, "meta21713", "meta21713", 713667970, null);
var cljs$cst$keyword$merge_DASH_required = new cljs.core.Keyword(null, "merge-required", "merge-required", 75277811);
var cljs$cst$symbol$meta21831 = new cljs.core.Symbol(null, "meta21831", "meta21831", -1196533932, null);
var cljs$cst$keyword$print_DASH_meta = new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598);
var cljs$cst$symbol$regs = new cljs.core.Symbol(null, "regs", "regs", -1837635361, null);
var cljs$cst$symbol$p__21857 = new cljs.core.Symbol(null, "p__21857", "p__21857", -1028218784, null);
var cljs$cst$keyword$re_DASH_unparser = new cljs.core.Keyword(null, "re-unparser", "re-unparser", 1432943079);
var cljs$cst$symbol$any_QMARK_ = new cljs.core.Symbol(null, "any?", "any?", -318999933, null);
var cljs$cst$keyword$scope = new cljs.core.Keyword(null, "scope", "scope", -439358418);
var cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_arity = new cljs.core.Keyword("malli.core", "invalid-arity", "malli.core/invalid-arity", 577014581);
var cljs$cst$keyword$nest = new cljs.core.Keyword(null, "nest", "nest", -314993663);
var cljs$cst$symbol$_DOT_ = new cljs.core.Symbol(null, ".", ".", 1975675962, null);
var cljs$cst$symbol$meta18760 = new cljs.core.Symbol(null, "meta18760", "meta18760", -911799787, null);
var cljs$cst$symbol$set_BANG_ = new cljs.core.Symbol(null, "set!", "set!", 250714521, null);
var cljs$cst$keyword$to_DASH_ast = new cljs.core.Keyword(null, "to-ast", "to-ast", -21935298);
var cljs$cst$symbol$tag = new cljs.core.Symbol(null, "tag", "tag", 350170304, null);
var cljs$cst$symbol$meta19730 = new cljs.core.Symbol(null, "meta19730", "meta19730", -890161906, null);
var cljs$cst$keyword$alt = new cljs.core.Keyword(null, "alt", "alt", -3214426);
var cljs$cst$keyword$title = new cljs.core.Keyword(null, "title", "title", 636505583);
var cljs$cst$symbol$meta21826 = new cljs.core.Symbol(null, "meta21826", "meta21826", -405603711, null);
var cljs$cst$keyword$dispatch = new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009);
var cljs$cst$symbol$meta21704 = new cljs.core.Symbol(null, "meta21704", "meta21704", -1176827702, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_potentially_DASH_recursive_DASH_seqex = new cljs.core.Keyword("malli.core", "potentially-recursive-seqex", "malli.core/potentially-recursive-seqex", -1574993850);
var cljs$cst$symbol$inst = new cljs.core.Symbol(null, "inst", "inst", -2008473268, null);
var cljs$cst$symbol$symbols = new cljs.core.Symbol(null, "symbols", "symbols", 1641743270, null);
var cljs$cst$keyword$re_DASH_explainer = new cljs.core.Keyword(null, "re-explainer", "re-explainer", -1266871200);
var cljs$cst$symbol$children = new cljs.core.Symbol(null, "children", "children", 699969545, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_map_QMARK_ = new cljs.core.Symbol("cljs.core", "map?", "cljs.core/map?", -1390345523, null);
var cljs$cst$symbol$_AMPERSAND_ = new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null);
var cljs$cst$symbol$cached = new cljs.core.Symbol(null, "cached", "cached", -1216707864, null);
var cljs$cst$symbol$seen = new cljs.core.Symbol(null, "seen", "seen", 1121531738, null);
var cljs$cst$symbol$long = new cljs.core.Symbol(null, "long", "long", 1469079434, null);
var cljs$cst$keyword$qualified_DASH_keyword = new cljs.core.Keyword(null, "qualified-keyword", "qualified-keyword", 736041675);
var cljs$cst$symbol$malli_DOT_core = new cljs.core.Symbol(null, "malli.core", "malli.core", -2051169970, null);
var cljs$cst$keyword$locale = new cljs.core.Keyword(null, "locale", "locale", -2115712697);
var cljs$cst$symbol$vec = new cljs.core.Symbol(null, "vec", "vec", 982683596, null);
var cljs$cst$keyword$varargs = new cljs.core.Keyword(null, "varargs", "varargs", 1030150858);
var cljs$cst$keyword$name = new cljs.core.Keyword(null, "name", "name", 1843675177);
var cljs$cst$symbol$cljs_DOT_core_SLASH_int_QMARK_ = new cljs.core.Symbol("cljs.core", "int?", "cljs.core/int?", 50730120, null);
var cljs$cst$symbol$seed = new cljs.core.Symbol(null, "seed", "seed", 1709144854, null);
var cljs$cst$symbol$meta19742 = new cljs.core.Symbol(null, "meta19742", "meta19742", 792301529, null);
var cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core21703 = new cljs.core.Symbol("malli.core", "t_malli$core21703", "malli.core/t_malli$core21703", 489739502, null);
var cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core21825 = new cljs.core.Symbol("malli.core", "t_malli$core21825", "malli.core/t_malli$core21825", 416047603, null);
var cljs$cst$symbol$meta21815 = new cljs.core.Symbol(null, "meta21815", "meta21815", -1608006412, null);
var cljs$cst$symbol$re_DASH_unparser = new cljs.core.Symbol(null, "re-unparser", "re-unparser", -1221492690, null);
var cljs$cst$keyword$schema = new cljs.core.Keyword(null, "schema", "schema", -1582001791);
var cljs$cst$symbol$sci_DOT_core_SLASH_eval_DASH_string_STAR_ = new cljs.core.Symbol("sci.core", "eval-string*", "sci.core/eval-string*", 2134763594, null);
var cljs$cst$symbol$schema = new cljs.core.Symbol(null, "schema", "schema", 58529736, null);
var cljs$cst$keyword$and = new cljs.core.Keyword(null, "and", "and", -971899817);
var cljs$cst$keyword$_value = new cljs.core.Keyword(null, "_value", "_value", 1295875052);
var cljs$cst$symbol$sci_DOT_core_SLASH_fork = new cljs.core.Symbol("sci.core", "fork", "sci.core/fork", -1806691042, null);
var cljs$cst$keyword$cljs_DOT_core_SLASH_none = new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439);
var cljs$cst$symbol$p__22607 = new cljs.core.Symbol(null, "p__22607", "p__22607", -3401314, null);
var cljs$cst$symbol$ident_QMARK_ = new cljs.core.Symbol(null, "ident?", "ident?", -2061359468, null);
var cljs$cst$keyword$pred = new cljs.core.Keyword(null, "pred", "pred", 1927423397);
var cljs$cst$keyword$empty = new cljs.core.Keyword(null, "empty", "empty", 767870958);
var cljs$cst$symbol$coll_QMARK_ = new cljs.core.Symbol(null, "coll?", "coll?", -1874821441, null);
var cljs$cst$symbol$parent = new cljs.core.Symbol(null, "parent", "parent", 761652748, null);
var cljs$cst$symbol$vec__21961 = new cljs.core.Symbol(null, "vec__21961", "vec__21961", 137779026, null);
var cljs$cst$symbol$chunk_DASH_next = new cljs.core.Symbol(null, "chunk-next", "chunk-next", -547810434, null);
var cljs$cst$keyword$multi = new cljs.core.Keyword(null, "multi", "multi", -190293005);
var cljs$cst$keyword$any = new cljs.core.Keyword(null, "any", "any", 1705907423);
var cljs$cst$symbol$name = new cljs.core.Symbol(null, "name", "name", -810760592, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_pos_QMARK_ = new cljs.core.Symbol("cljs.core", "pos?", "cljs.core/pos?", -652182749, null);
var cljs$cst$keyword$properties = new cljs.core.Keyword(null, "properties", "properties", 685819552);
var cljs$cst$symbol$meta21802 = new cljs.core.Symbol(null, "meta21802", "meta21802", 268220563, null);
var cljs$cst$symbol$child = new cljs.core.Symbol(null, "child", "child", -2030468224, null);
var cljs$cst$symbol$map__22010 = new cljs.core.Symbol(null, "map__22010", "map__22010", -879631483, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_uuid_QMARK_ = new cljs.core.Symbol("cljs.core", "uuid?", "cljs.core/uuid?", -15131116, null);
var cljs$cst$keyword$current_DASH_node = new cljs.core.Keyword(null, "current-node", "current-node", -814308842);
var cljs$cst$keyword$default = new cljs.core.Keyword(null, "default", "default", -1987822328);
var cljs$cst$keyword$malli_DOT_error_SLASH_unknown = new cljs.core.Keyword("malli.error", "unknown", "malli.error/unknown", 594142330);
var cljs$cst$keyword$malli_DOT_core_SLASH_default = new cljs.core.Keyword("malli.core", "default", "malli.core/default", -1706204176);
var cljs$cst$symbol$meta19723 = new cljs.core.Symbol(null, "meta19723", "meta19723", -647499587, null);
var cljs$cst$symbol$sb = new cljs.core.Symbol(null, "sb", "sb", -1249746442, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_some_QMARK_ = new cljs.core.Symbol("cljs.core", "some?", "cljs.core/some?", -440439360, null);
var cljs$cst$symbol$right = new cljs.core.Symbol(null, "right", "right", 1187949694, null);
var cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core21801 = new cljs.core.Symbol("malli.core", "t_malli$core21801", "malli.core/t_malli$core21801", 1204498609, null);
var cljs$cst$keyword$_EQ__GT_ = new cljs.core.Keyword(null, "\x3d\x3e", "\x3d\x3e", 1841166128);
var cljs$cst$keyword$dup = new cljs.core.Keyword(null, "dup", "dup", 556298533);
var cljs$cst$symbol$registry_STAR_ = new cljs.core.Symbol(null, "registry*", "registry*", -268031273, null);
var cljs$cst$symbol$sourceIter = new cljs.core.Symbol(null, "sourceIter", "sourceIter", 1068220306, null);
var cljs$cst$symbol$dispatch = new cljs.core.Symbol(null, "dispatch", "dispatch", -1335098760, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_double_QMARK_ = new cljs.core.Symbol("cljs.core", "double?", "cljs.core/double?", 1757455529, null);
var cljs$cst$symbol$front = new cljs.core.Symbol(null, "front", "front", 117022539, null);
var cljs$cst$keyword$children = new cljs.core.Keyword(null, "children", "children", -940561982);
var cljs$cst$keyword$fn = new cljs.core.Keyword(null, "fn", "fn", -1175266204);
var cljs$cst$keyword$args = new cljs.core.Keyword(null, "args", "args", 1315556576);
var cljs$cst$symbol$seqable_QMARK_ = new cljs.core.Symbol(null, "seqable?", "seqable?", 72462495, null);
var cljs$cst$keyword$sequential = new cljs.core.Keyword(null, "sequential", "sequential", -1082983960);
var cljs$cst$symbol$sci_DOT_core_SLASH_init = new cljs.core.Symbol("sci.core", "init", "sci.core/init", -622666095, null);
var cljs$cst$symbol$map_QMARK_ = new cljs.core.Symbol(null, "map?", "map?", -1780568534, null);
var cljs$cst$keyword$print_DASH_length = new cljs.core.Keyword(null, "print-length", "print-length", 1931866356);
var cljs$cst$keyword$nil = new cljs.core.Keyword(null, "nil", "nil", 99600501);
var cljs$cst$symbol$number_QMARK_ = new cljs.core.Symbol(null, "number?", "number?", -1747282210, null);
var cljs$cst$keyword$_STAR_ = new cljs.core.Keyword(null, "*", "*", -1294732318);
var cljs$cst$symbol$rest = new cljs.core.Symbol(null, "rest", "rest", 398835108, null);
var cljs$cst$keyword$naked_DASH_keys = new cljs.core.Keyword(null, "naked-keys", "naked-keys", -90769828);
var cljs$cst$keyword$not_EQ_ = new cljs.core.Keyword(null, "not\x3d", "not\x3d", -173995323);
var cljs$cst$symbol$vec__22437 = new cljs.core.Symbol(null, "vec__22437", "vec__22437", 1181164837, null);
var cljs$cst$symbol$prefer_DASH_table = new cljs.core.Symbol(null, "prefer-table", "prefer-table", 462168584, null);
var cljs$cst$symbol$raw = new cljs.core.Symbol(null, "raw", "raw", -1049784497, null);
var cljs$cst$symbol$size = new cljs.core.Symbol(null, "size", "size", -1555742762, null);
var cljs$cst$symbol$fn_QMARK_ = new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null);
var cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22662 = new cljs.core.Symbol("malli.core", "t_malli$core22662", "malli.core/t_malli$core22662", -1340757702, null);
var cljs$cst$keyword$map_DASH_of = new cljs.core.Keyword(null, "map-of", "map-of", 1189682355);
var cljs$cst$symbol$cljs_DOT_core_SLASH_empty_QMARK_ = new cljs.core.Symbol("cljs.core", "empty?", "cljs.core/empty?", 1866613644, null);
var cljs$cst$symbol$map__22642 = new cljs.core.Symbol(null, "map__22642", "map__22642", 226145778, null);
var cljs$cst$symbol$map__22641 = new cljs.core.Symbol(null, "map__22641", "map__22641", 1431846790, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_fn_QMARK_ = new cljs.core.Symbol("cljs.core", "fn?", "cljs.core/fn?", 71876239, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_output = new cljs.core.Keyword("malli.core", "invalid-output", "malli.core/invalid-output", -147363519);
var cljs$cst$symbol$zero_QMARK_ = new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null);
var cljs$cst$keyword$en = new cljs.core.Keyword(null, "en", "en", 88457073);
var cljs$cst$symbol$fin = new cljs.core.Symbol(null, "fin", "fin", -1942189562, null);
var cljs$cst$keyword$enum = new cljs.core.Keyword(null, "enum", "enum", 1679018432);
var cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_ast = new cljs.core.Keyword("malli.core", "invalid-ast", "malli.core/invalid-ast", -1822979859);
var cljs$cst$keyword$maybe = new cljs.core.Keyword(null, "maybe", "maybe", -314397560);
var cljs$cst$symbol$neg_DASH_int_QMARK_ = new cljs.core.Symbol(null, "neg-int?", "neg-int?", -1610409390, null);
var cljs$cst$symbol$next_DASH_iter = new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null);
var cljs$cst$keyword$union = new cljs.core.Keyword(null, "union", "union", 2142937499);
var cljs$cst$symbol$SpreadsheetApp = new cljs.core.Symbol(null, "SpreadsheetApp", "SpreadsheetApp", 3178496, null);
var cljs$cst$symbol$closed = new cljs.core.Symbol(null, "closed", "closed", 720856168, null);
var cljs$cst$symbol$strobj = new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null);
var cljs$cst$symbol$_hash = new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null);
var cljs$cst$symbol$values = new cljs.core.Symbol(null, "values", "values", 2013177083, null);
var cljs$cst$symbol$transient_DASH_map = new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null);
var cljs$cst$symbol$def = new cljs.core.Symbol(null, "def", "def", 597100991, null);
var cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22310 = new cljs.core.Symbol("malli.core", "t_malli$core22310", "malli.core/t_malli$core22310", 713926559, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_any_QMARK_ = new cljs.core.Symbol("cljs.core", "any?", "cljs.core/any?", -2068111842, null);
var cljs$cst$symbol$watches = new cljs.core.Symbol(null, "watches", "watches", 1367433992, null);
var cljs$cst$symbol$opts = new cljs.core.Symbol(null, "opts", "opts", 1795607228, null);
var cljs$cst$keyword$print_DASH_fn = new cljs.core.Keyword(null, "print-fn", "print-fn", -1720960489);
var cljs$cst$keyword$keywordize_DASH_keys = new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252);
var cljs$cst$symbol$xf = new cljs.core.Symbol(null, "xf", "xf", 2042434515, null);
var cljs$cst$symbol$from_DASH_ast = new cljs.core.Symbol(null, "from-ast", "from-ast", 1394293078, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_explain = new cljs.core.Keyword("malli.core", "explain", "malli.core/explain", 36932858);
var cljs$cst$symbol$re_DASH_explainer = new cljs.core.Symbol(null, "re-explainer", "re-explainer", 373660327, null);
var cljs$cst$symbol$record = new cljs.core.Symbol(null, "record", "record", 861424668, null);
var cljs$cst$keyword$min = new cljs.core.Keyword(null, "min", "min", 444991522);
var cljs$cst$keyword$column = new cljs.core.Keyword(null, "column", "column", 2078222095);
var cljs$cst$keyword$message = new cljs.core.Keyword(null, "message", "message", -406056002);
var cljs$cst$keyword$key = new cljs.core.Keyword(null, "key", "key", -1516042587);
var cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22643 = new cljs.core.Symbol("malli.core", "t_malli$core22643", "malli.core/t_malli$core22643", -1477936291, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_duplicate_DASH_keys = new cljs.core.Keyword("malli.core", "duplicate-keys", "malli.core/duplicate-keys", 1684166326);
var cljs$cst$symbol$allow_DASH_invalid_DASH_refs = new cljs.core.Symbol(null, "allow-invalid-refs", "allow-invalid-refs", -815552802, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_disable_DASH_sci = new cljs.core.Keyword("malli.core", "disable-sci", "malli.core/disable-sci", -907669760);
var cljs$cst$symbol$left = new cljs.core.Symbol(null, "left", "left", 1241415590, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_uri_QMARK_ = new cljs.core.Symbol("cljs.core", "uri?", "cljs.core/uri?", 1085729367, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_invalid = new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
var cljs$cst$symbol$true_QMARK_ = new cljs.core.Symbol(null, "true?", "true?", -1600332395, null);
var cljs$cst$symbol$xform = new cljs.core.Symbol(null, "xform", "xform", -85179481, null);
var cljs$cst$symbol$shift = new cljs.core.Symbol(null, "shift", "shift", -1657295705, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_missing_DASH_property = new cljs.core.Keyword("malli.core", "missing-property", "malli.core/missing-property", -818756333);
var cljs$cst$symbol$cljs_DOT_core_SLASH_associative_QMARK_ = new cljs.core.Symbol("cljs.core", "associative?", "cljs.core/associative?", -540020088, null);
var cljs$cst$keyword$no_DASH_test = new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
var cljs$cst$symbol$meta23171 = new cljs.core.Symbol(null, "meta23171", "meta23171", 396814222, null);
var cljs$cst$symbol$boolean = new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_end_DASH_of_DASH_input = new cljs.core.Keyword("malli.core", "end-of-input", "malli.core/end-of-input", -491237771);
var cljs$cst$symbol$cljs_DOT_core_SLASH_nil_QMARK_ = new cljs.core.Symbol("cljs.core", "nil?", "cljs.core/nil?", 945071861, null);
var cljs$cst$symbol$value = new cljs.core.Symbol(null, "value", "value", 1946509744, null);
var cljs$cst$symbol$state = new cljs.core.Symbol(null, "state", "state", -348086572, null);
var cljs$cst$symbol$ExceptionInfo = new cljs.core.Symbol(null, "ExceptionInfo", "ExceptionInfo", 294935087, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_missing_DASH_key = new cljs.core.Keyword("malli.core", "missing-key", "malli.core/missing-key", 1439107666);
var cljs$cst$symbol$cljs_DOT_core_SLASH_sequential_QMARK_ = new cljs.core.Symbol("cljs.core", "sequential?", "cljs.core/sequential?", 1777854658, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_qualified_DASH_ident_QMARK_ = new cljs.core.Symbol("cljs.core", "qualified-ident?", "cljs.core/qualified-ident?", -1863492566, null);
var cljs$cst$keyword$form = new cljs.core.Keyword(null, "form", "form", -1624062471);
var cljs$cst$keyword$childs = new cljs.core.Keyword(null, "childs", "childs", -1293201887);
var cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22418 = new cljs.core.Symbol("malli.core", "t_malli$core22418", "malli.core/t_malli$core22418", 413288101, null);
var cljs$cst$symbol$collision_DASH_hash = new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null);
var cljs$cst$symbol$p__22640 = new cljs.core.Symbol(null, "p__22640", "p__22640", 164898700, null);
var cljs$cst$keyword$ast = new cljs.core.Keyword(null, "ast", "ast", -860334068);
var cljs$cst$keyword$malli_DOT_core_SLASH_index_DASH_out_DASH_of_DASH_bounds = new cljs.core.Keyword("malli.core", "index-out-of-bounds", "malli.core/index-out-of-bounds", -371273844);
var cljs$cst$symbol$map__21585 = new cljs.core.Symbol(null, "map__21585", "map__21585", -145452830, null);
var cljs$cst$keyword$parents = new cljs.core.Keyword(null, "parents", "parents", -2027538891);
var cljs$cst$symbol$type_DASH_properties = new cljs.core.Symbol(null, "type-properties", "type-properties", -87820599, null);
var cljs$cst$keyword$validator = new cljs.core.Keyword(null, "validator", "validator", -1966190681);
var cljs$cst$symbol$boolean_QMARK_ = new cljs.core.Symbol(null, "boolean?", "boolean?", 1790940868, null);
var cljs$cst$keyword$cret = new cljs.core.Keyword(null, "cret", "cret", 2090504467);
var cljs$cst$symbol$meta23162 = new cljs.core.Symbol(null, "meta23162", "meta23162", 1365527414, null);
var cljs$cst$symbol$chunk = new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null);
var cljs$cst$keyword$termination_DASH_safe = new cljs.core.Keyword(null, "termination-safe", "termination-safe", -1845225130);
var cljs$cst$symbol$more = new cljs.core.Symbol(null, "more", "more", -418290273, null);
var cljs$cst$symbol$cljs_DOT_core_SLASH_neg_DASH_int_QMARK_ = new cljs.core.Symbol("cljs.core", "neg-int?", "cljs.core/neg-int?", -933447883, null);
var cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core21658 = new cljs.core.Symbol("malli.core", "t_malli$core21658", "malli.core/t_malli$core21658", 1376360804, null);
var cljs$cst$symbol$validate_DASH_limits = new cljs.core.Symbol(null, "validate-limits", "validate-limits", -2141569735, null);
var cljs$cst$keyword$pending = new cljs.core.Keyword(null, "pending", "pending", -220036727);
var cljs$cst$symbol$result = new cljs.core.Symbol(null, "result", "result", -1239343558, null);
var cljs$cst$keyword$in = new cljs.core.Keyword(null, "in", "in", -1531184865);
var cljs$cst$symbol$p__22415 = new cljs.core.Symbol(null, "p__22415", "p__22415", -259468513, null);
var cljs$cst$keyword$readably = new cljs.core.Keyword(null, "readably", "readably", 1129599760);
var cljs$cst$symbol$_DASH__GT_parser = new cljs.core.Symbol(null, "-\x3eparser", "-\x3eparser", 1105019639, null);
var cljs$cst$symbol$p__22659 = new cljs.core.Symbol(null, "p__22659", "p__22659", 311994851, null);
var cljs$cst$keyword$malli_DOT_error_SLASH_likely_DASH_misspelling_DASH_of = new cljs.core.Keyword("malli.error", "likely-misspelling-of", "malli.error/likely-misspelling-of", 1504085033);
var cljs$cst$symbol$meta22062 = new cljs.core.Symbol(null, "meta22062", "meta22062", 660174627, null);
var cljs$cst$keyword$print_DASH_level = new cljs.core.Keyword(null, "print-level", "print-level", -1825423733);
var cljs$cst$keyword$file = new cljs.core.Keyword(null, "file", "file", -1269645878);
var cljs$cst$symbol$multi = new cljs.core.Symbol(null, "multi", "multi", 1450238522, null);
var cljs$cst$symbol$fempty = new cljs.core.Symbol(null, "fempty", "fempty", 1035749368, null);
var cljs$cst$symbol$ref = new cljs.core.Symbol(null, "ref", "ref", -1364538802, null);
var cljs$cst$symbol$acc = new cljs.core.Symbol(null, "acc", "acc", -1815869457, null);
var cljs$cst$symbol$lazy = new cljs.core.Symbol(null, "lazy", "lazy", 1215984346, null);
var cljs$cst$symbol$meta22067 = new cljs.core.Symbol(null, "meta22067", "meta22067", -1270496073, null);
var cljs$cst$keyword$cause = new cljs.core.Keyword(null, "cause", "cause", 231901252);
var cljs$cst$symbol$meta22186 = new cljs.core.Symbol(null, "meta22186", "meta22186", -1880693300, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_lazy_DASH_entries = new cljs.core.Keyword("malli.core", "lazy-entries", "malli.core/lazy-entries", 762112361);
var cljs$cst$symbol$cljs_DOT_core_SLASH_indexed_QMARK_ = new cljs.core.Symbol("cljs.core", "indexed?", "cljs.core/indexed?", -1311257161, null);
var cljs$cst$keyword$id = new cljs.core.Keyword(null, "id", "id", -1388402092);
var cljs$cst$keyword$malli_DOT_core_SLASH_multiple_DASH_varargs = new cljs.core.Keyword("malli.core", "multiple-varargs", "malli.core/multiple-varargs", 1982057671);
var cljs$cst$symbol$map__22440 = new cljs.core.Symbol(null, "map__22440", "map__22440", -1004014270, null);
var cljs$cst$keyword$begin = new cljs.core.Keyword(null, "begin", "begin", -319034319);
var cljs$cst$symbol$cljs_DOT_core_SLASH_ifn_QMARK_ = new cljs.core.Symbol("cljs.core", "ifn?", "cljs.core/ifn?", 1573873861, null);
var cljs$cst$symbol$false_QMARK_ = new cljs.core.Symbol(null, "false?", "false?", -1522377573, null);
var cljs$cst$symbol$obj = new cljs.core.Symbol(null, "obj", "obj", -1672671807, null);
var cljs$cst$symbol$map__22417 = new cljs.core.Symbol(null, "map__22417", "map__22417", -50188691, null);
var cljs$cst$symbol$deftype_STAR_ = new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null);
var cljs$cst$symbol$props = new cljs.core.Symbol(null, "props", "props", 2093813254, null);
var cljs$cst$keyword$not = new cljs.core.Keyword(null, "not", "not", -595976884);
var cljs$cst$symbol$_seq = new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null);
var cljs$cst$symbol$meta22291 = new cljs.core.Symbol(null, "meta22291", "meta22291", -946050346, null);
var cljs$cst$keyword$text = new cljs.core.Keyword(null, "text", "text", -1790561697);
var cljs$cst$keyword$tail_DASH_node = new cljs.core.Keyword(null, "tail-node", "tail-node", -1373693221);
var cljs$cst$keyword$merge = new cljs.core.Keyword(null, "merge", "merge", -1804319409);
var cljs$cst$symbol$uuid = new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null);
var cljs$cst$keyword$orn = new cljs.core.Keyword(null, "orn", "orn", 738436484);
var cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22603 = new cljs.core.Symbol("malli.core", "t_malli$core22603", "malli.core/t_malli$core22603", -97293283, null);
var cljs$cst$symbol$char_QMARK_ = new cljs.core.Symbol(null, "char?", "char?", -1072221244, null);
var cljs$cst$symbol$end = new cljs.core.Symbol(null, "end", "end", 1372345569, null);
var cljs$cst$symbol$meta22176 = new cljs.core.Symbol(null, "meta22176", "meta22176", -1436376148, null);
var cljs$cst$symbol$afn = new cljs.core.Symbol(null, "afn", "afn", 216963467, null);
var cljs$cst$keyword$tuple = new cljs.core.Keyword(null, "tuple", "tuple", -472667284);
var cljs$cst$keyword$malli_DOT_core_SLASH_walk_DASH_entry_DASH_vals = new cljs.core.Keyword("malli.core", "walk-entry-vals", "malli.core/walk-entry-vals", -64238340);
var cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core21997 = new cljs.core.Symbol("malli.core", "t_malli$core21997", "malli.core/t_malli$core21997", 1270392894, null);
var cljs$cst$keyword$decode = new cljs.core.Keyword(null, "decode", "decode", -1306165281);
var cljs$cst$symbol$p__22436 = new cljs.core.Symbol(null, "p__22436", "p__22436", -1836897741, null);
var cljs$cst$symbol$p__22435 = new cljs.core.Symbol(null, "p__22435", "p__22435", -1698763322, null);
var cljs$cst$keyword$qualified_DASH_symbol = new cljs.core.Keyword(null, "qualified-symbol", "qualified-symbol", -665513695);
var cljs$cst$symbol$opts_SINGLEQUOTE_ = new cljs.core.Symbol(null, "opts'", "opts'", -1154334730, null);
var cljs$cst$symbol$_DASH__GT_child = new cljs.core.Symbol(null, "-\x3echild", "-\x3echild", -1245989531, null);
var cljs$cst$symbol$case_STAR_ = new cljs.core.Symbol(null, "case*", "case*", -1938255072, null);
var cljs$cst$keyword$error_SLASH_fn = new cljs.core.Keyword("error", "fn", "error/fn", -1263293860);
var cljs$cst$keyword$keep_DASH_likely_DASH_misspelled_DASH_of = new cljs.core.Keyword(null, "keep-likely-misspelled-of", "keep-likely-misspelled-of", 288878171);
var cljs$cst$symbol$finder = new cljs.core.Symbol(null, "finder", "finder", 1492719066, null);
var cljs$cst$keyword$malli_DOT_core_SLASH_missing_DASH_function = new cljs.core.Keyword("malli.core", "missing-function", "malli.core/missing-function", 1913462487);
var cljs$cst$keyword$keyword = new cljs.core.Keyword(null, "keyword", "keyword", 811389747);
var cljs$cst$symbol$meta22282 = new cljs.core.Symbol(null, "meta22282", "meta22282", -841191253, null);
var cljs$cst$symbol$current = new cljs.core.Symbol(null, "current", "current", 552492924, null);
var cljs$cst$symbol$cache_STAR_ = new cljs.core.Symbol(null, "cache*", "cache*", -548597526, null);
var cljs$cst$symbol$key_DASH_schema = new cljs.core.Symbol(null, "key-schema", "key-schema", 543870801, null);
var cljs$cst$keyword$errors = new cljs.core.Keyword(null, "errors", "errors", -908790718);
var cljs$cst$keyword$ancestors = new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424);
var cljs$cst$symbol$tree = new cljs.core.Symbol(null, "tree", "tree", 1444219499, null);
var cljs$cst$symbol$map__22661 = new cljs.core.Symbol(null, "map__22661", "map__22661", -1278347323, null);
var cljs$cst$symbol$map__22660 = new cljs.core.Symbol(null, "map__22660", "map__22660", 2031889066, null);
var cljs$cst$symbol$method_DASH_table = new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null);
goog.provide("autojournal.env_switching");
autojournal.env_switching.env_switch = function autojournal$env_switching$env_switch(p__19716) {
  var map__19717 = p__19716;
  var map__19717__$1 = cljs.core.__destructure_map(map__19717);
  var node = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19717__$1, cljs$cst$keyword$node);
  var app_script = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19717__$1, cljs$cst$keyword$app_DASH_script);
  if (cljs.core.truth_(typeof SpreadsheetApp !== "undefined" ? new cljs.core.Var(function() {
    return SpreadsheetApp;
  }, cljs.core.with_meta(cljs$cst$symbol$js_SLASH_SpreadsheetApp, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$cljs_DOT_analyzer_SLASH_no_DASH_resolve, true], null)), new cljs.core.PersistentArrayMap(null, 8, [cljs$cst$keyword$ns, cljs$cst$symbol$js, cljs$cst$keyword$doc, null, cljs$cst$keyword$file, null, cljs$cst$keyword$line, null, cljs$cst$keyword$column, null, cljs$cst$keyword$name, cljs$cst$symbol$SpreadsheetApp, cljs$cst$keyword$test, cljs.core.truth_(SpreadsheetApp) ? SpreadsheetApp.cljs$lang$test : 
  null, cljs$cst$keyword$arglists, cljs.core.List.EMPTY], null)) : null)) {
    return app_script.cljs$core$IFn$_invoke$arity$0 ? app_script.cljs$core$IFn$_invoke$arity$0() : app_script.call(null);
  } else {
    return node.cljs$core$IFn$_invoke$arity$0 ? node.cljs$core$IFn$_invoke$arity$0() : node.call(null);
  }
};
goog.provide("autojournal.sheets");
autojournal.sheets.append_BANG_ = function autojournal$sheets$append_BANG_(id, row) {
  return autojournal.env_switching.env_switch(new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$node, function() {
    return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([id, row], 0));
  }, cljs$cst$keyword$app_DASH_script, function() {
    return SpreadsheetApp.openById(id).appendRow(cljs.core.clj__GT_js(row));
  }], null));
};
goog.provide("clojure.string");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace_all = function clojure$string$replace_all(s, re, replacement) {
  var r = new RegExp(re.source, function() {
    var G__19718 = "g";
    var G__19718__$1 = cljs.core.truth_(re.ignoreCase) ? [G__19718, "i"].join("") : G__19718;
    var G__19718__$2 = cljs.core.truth_(re.multiline) ? [G__19718__$1, "m"].join("") : G__19718__$1;
    if (cljs.core.truth_(re.unicode)) {
      return [G__19718__$2, "u"].join("");
    } else {
      return G__19718__$2;
    }
  }());
  return s.replace(r, replacement);
};
clojure.string.replace_with = function clojure$string$replace_with(f) {
  return function() {
    var G__19816__delegate = function(args) {
      var matches = cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(2, args);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(matches), 1)) {
        var G__19719 = cljs.core.first(matches);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19719) : f.call(null, G__19719);
      } else {
        var G__19720 = cljs.core.vec(matches);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19720) : f.call(null, G__19720);
      }
    };
    var G__19816 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__19820__i = 0, G__19820__a = new Array(arguments.length - 0);
        while (G__19820__i < G__19820__a.length) {
          G__19820__a[G__19820__i] = arguments[G__19820__i + 0];
          ++G__19820__i;
        }
        args = new cljs.core.IndexedSeq(G__19820__a, 0, null);
      }
      return G__19816__delegate.call(this, args);
    };
    G__19816.cljs$lang$maxFixedArity = 0;
    G__19816.cljs$lang$applyTo = function(arglist__19821) {
      var args = cljs.core.seq(arglist__19821);
      return G__19816__delegate(args);
    };
    G__19816.cljs$core$IFn$_invoke$arity$variadic = G__19816__delegate;
    return G__19816;
  }();
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      if (typeof replacement === "string") {
        return clojure.string.replace_all(s, match, replacement);
      } else {
        return clojure.string.replace_all(s, match, clojure.string.replace_with(replacement));
      }
    } else {
      throw ["Invalid match arg: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join(var_args) {
  var G__19726 = arguments.length;
  switch(G__19726) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer();
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__19827 = sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(coll__$1)));
      var G__19828 = cljs.core.next(coll__$1);
      sb = G__19827;
      coll__$1 = G__19828;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer();
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(coll__$1)));
      var coll__$2 = cljs.core.next(coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__19829 = sb;
      var G__19830 = coll__$2;
      sb = G__19829;
      coll__$1 = G__19830;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  return goog.string.capitalize(s);
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek(v__$1)) {
      var G__19866 = cljs.core.pop(v__$1);
      v__$1 = G__19866;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit && 1 < cljs.core.count(v)) {
    return clojure.string.pop_last_while_empty(v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count(s)) {
    return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.cons("", cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.seq(s)))), "");
  } else {
    var pred__19735 = cljs.core._EQ__EQ_;
    var expr__19736 = limit;
    if (cljs.core.truth_(pred__19735.cljs$core$IFn$_invoke$arity$2 ? pred__19735.cljs$core$IFn$_invoke$arity$2(1, expr__19736) : pred__19735.call(null, 1, expr__19736))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__19735.cljs$core$IFn$_invoke$arity$2 ? pred__19735.cljs$core$IFn$_invoke$arity$2(2, expr__19736) : pred__19735.call(null, 2, expr__19736))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.cons("", cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.seq(s))), 0, c))), cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split(var_args) {
  var G__19748 = arguments.length;
  switch(G__19748) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.cljs$core$IFn$_invoke$arity$3(s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed(limit, "/(?:)/" === cljs.core.str.cljs$core$IFn$_invoke$arity$1(re) ? clojure.string.split_with_empty_regex(s, limit) : limit < 1 ? cljs.core.vec(cljs.core.str.cljs$core$IFn$_invoke$arity$1(s).split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts, s__$1);
      } else {
        var m = cljs.core.re_find(re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__19886 = s__$1.substring(index + cljs.core.count(m));
          var G__19887 = limit__$1 - 1;
          var G__19888 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts, s__$1.substring(0, index));
          s__$1 = G__19886;
          limit__$1 = G__19887;
          parts = G__19888;
          continue;
        } else {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.cljs$core$IFn$_invoke$arity$2(s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__19893 = index - 1;
        index = G__19893;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(s));
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer();
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cmap, ch);
      if (!(replacement == null)) {
        buffer.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement));
      } else {
        buffer.append(ch);
      }
      var G__19895 = index + 1;
      index = G__19895;
      continue;
    }
    break;
  }
};
clojure.string.index_of = function clojure$string$index_of(var_args) {
  var G__19783 = arguments.length;
  switch(G__19783) {
    case 2:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.indexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.indexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$lang$maxFixedArity = 3;
clojure.string.last_index_of = function clojure$string$last_index_of(var_args) {
  var G__19788 = arguments.length;
  switch(G__19788) {
    case 2:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.lastIndexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.lastIndexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$lang$maxFixedArity = 3;
clojure.string.starts_with_QMARK_ = function clojure$string$starts_with_QMARK_(s, substr) {
  return goog.string.startsWith(s, substr);
};
clojure.string.ends_with_QMARK_ = function clojure$string$ends_with_QMARK_(s, substr) {
  return goog.string.endsWith(s, substr);
};
clojure.string.includes_QMARK_ = function clojure$string$includes_QMARK_(s, substr) {
  return goog.string.contains(s, substr);
};
goog.provide("autojournal.drive");
autojournal.drive._get_file_blob = function autojournal$drive$_get_file_blob(filename) {
  return DriveApp.getFilesByName(filename).next().getBlob();
};
autojournal.drive._two_d_array_to_maps = function autojournal$drive$_two_d_array_to_maps(two_d_array) {
  var header = cljs.core.first(two_d_array);
  var rows = cljs.core.rest(two_d_array);
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, function() {
    var iter__4652__auto__ = function autojournal$drive$_two_d_array_to_maps_$_iter__5787(s__5788) {
      return new cljs.core.LazySeq(null, function() {
        var s__5788__$1 = s__5788;
        while (true) {
          var temp__5753__auto__ = cljs.core.seq(s__5788__$1);
          if (temp__5753__auto__) {
            var s__5788__$2 = temp__5753__auto__;
            if (cljs.core.chunked_seq_QMARK_(s__5788__$2)) {
              var c__4650__auto__ = cljs.core.chunk_first(s__5788__$2);
              var size__4651__auto__ = cljs.core.count(c__4650__auto__);
              var b__5791 = cljs.core.chunk_buffer(size__4651__auto__);
              if (function() {
                var i__5790 = 0;
                while (true) {
                  if (i__5790 < size__4651__auto__) {
                    var row = cljs.core._nth(c__4650__auto__, i__5790);
                    cljs.core.chunk_append(b__5791, cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__4652__auto__ = function(i__5790, row, c__4650__auto__, size__4651__auto__, b__5791, s__5788__$2, temp__5753__auto__, header, rows) {
                        return function autojournal$drive$_two_d_array_to_maps_$_iter__5787_$_iter__5803(s__5804) {
                          return new cljs.core.LazySeq(null, function(i__5790, row, c__4650__auto__, size__4651__auto__, b__5791, s__5788__$2, temp__5753__auto__, header, rows) {
                            return function() {
                              var s__5804__$1 = s__5804;
                              while (true) {
                                var temp__5753__auto____$1 = cljs.core.seq(s__5804__$1);
                                if (temp__5753__auto____$1) {
                                  var s__5804__$2 = temp__5753__auto____$1;
                                  if (cljs.core.chunked_seq_QMARK_(s__5804__$2)) {
                                    var c__4650__auto____$1 = cljs.core.chunk_first(s__5804__$2);
                                    var size__4651__auto____$1 = cljs.core.count(c__4650__auto____$1);
                                    var b__5806 = cljs.core.chunk_buffer(size__4651__auto____$1);
                                    if (function() {
                                      var i__5805 = 0;
                                      while (true) {
                                        if (i__5805 < size__4651__auto____$1) {
                                          var vec__5813 = cljs.core._nth(c__4650__auto____$1, i__5805);
                                          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5813, 0, null);
                                          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5813, 1, null);
                                          cljs.core.chunk_append(b__5806, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), v], null));
                                          var G__6259 = i__5805 + 1;
                                          i__5805 = G__6259;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__5806), autojournal$drive$_two_d_array_to_maps_$_iter__5787_$_iter__5803(cljs.core.chunk_rest(s__5804__$2)));
                                    } else {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__5806), null);
                                    }
                                  } else {
                                    var vec__5827 = cljs.core.first(s__5804__$2);
                                    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5827, 0, null);
                                    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5827, 1, null);
                                    return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), v], null), autojournal$drive$_two_d_array_to_maps_$_iter__5787_$_iter__5803(cljs.core.rest(s__5804__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(i__5790, row, c__4650__auto__, size__4651__auto__, b__5791, s__5788__$2, temp__5753__auto__, header, rows), null, null);
                        };
                      }(i__5790, row, c__4650__auto__, size__4651__auto__, b__5791, s__5788__$2, temp__5753__auto__, header, rows);
                      return iter__4652__auto__(cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(header, row)));
                    }()));
                    var G__6288 = i__5790 + 1;
                    i__5790 = G__6288;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons(cljs.core.chunk(b__5791), autojournal$drive$_two_d_array_to_maps_$_iter__5787(cljs.core.chunk_rest(s__5788__$2)));
              } else {
                return cljs.core.chunk_cons(cljs.core.chunk(b__5791), null);
              }
            } else {
              var row = cljs.core.first(s__5788__$2);
              return cljs.core.cons(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                var iter__4652__auto__ = function(row, s__5788__$2, temp__5753__auto__, header, rows) {
                  return function autojournal$drive$_two_d_array_to_maps_$_iter__5787_$_iter__5862(s__5863) {
                    return new cljs.core.LazySeq(null, function() {
                      var s__5863__$1 = s__5863;
                      while (true) {
                        var temp__5753__auto____$1 = cljs.core.seq(s__5863__$1);
                        if (temp__5753__auto____$1) {
                          var s__5863__$2 = temp__5753__auto____$1;
                          if (cljs.core.chunked_seq_QMARK_(s__5863__$2)) {
                            var c__4650__auto__ = cljs.core.chunk_first(s__5863__$2);
                            var size__4651__auto__ = cljs.core.count(c__4650__auto__);
                            var b__5865 = cljs.core.chunk_buffer(size__4651__auto__);
                            if (function() {
                              var i__5864 = 0;
                              while (true) {
                                if (i__5864 < size__4651__auto__) {
                                  var vec__5901 = cljs.core._nth(c__4650__auto__, i__5864);
                                  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5901, 0, null);
                                  var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5901, 1, null);
                                  cljs.core.chunk_append(b__5865, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), v], null));
                                  var G__6325 = i__5864 + 1;
                                  i__5864 = G__6325;
                                  continue;
                                } else {
                                  return true;
                                }
                                break;
                              }
                            }()) {
                              return cljs.core.chunk_cons(cljs.core.chunk(b__5865), autojournal$drive$_two_d_array_to_maps_$_iter__5787_$_iter__5862(cljs.core.chunk_rest(s__5863__$2)));
                            } else {
                              return cljs.core.chunk_cons(cljs.core.chunk(b__5865), null);
                            }
                          } else {
                            var vec__5929 = cljs.core.first(s__5863__$2);
                            var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5929, 0, null);
                            var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5929, 1, null);
                            return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), v], null), autojournal$drive$_two_d_array_to_maps_$_iter__5787_$_iter__5862(cljs.core.rest(s__5863__$2)));
                          }
                        } else {
                          return null;
                        }
                        break;
                      }
                    }, null, null);
                  };
                }(row, s__5788__$2, temp__5753__auto__, header, rows);
                return iter__4652__auto__(cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(header, row)));
              }()), autojournal$drive$_two_d_array_to_maps_$_iter__5787(cljs.core.rest(s__5788__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4652__auto__(rows);
  }());
};
autojournal.drive._two_d_array_to_maps(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, ["time", "lat", "lon", "elevation", "accuracy", "bearing", "speed", "satellites", "provider", "hdop", "vdop", "pdop", "geoidheight", "ageofdgpsdata", "dgpsid", "activity", "battery", "annotation"], null), new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, ["2022-05-15T07:00:28.000Z", 
"47.66866721", "-122.31444872", "44.99261474609375", "9.648001", "", "0.0", "0", "gps", "", "", "", "", "", "", "", "71", ""], null), new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, ["2022-05-15T07:01:03.000Z", "47.66866769", "-122.31444892", "45.0035400390625", "9.648001", "", "0.0", "0", "gps", "", "", "", "", "", "", "", "72", ""], null), new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, ["2022-05-15T07:01:37.000Z", "47.66866761", 
"-122.31444817", "44.888916015625", "7.504", "", "0.0", "0", "gps", "", "", "", "", "", "", "", "72", ""], null), new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, ["2022-05-15T07:02:10.000Z", "47.66866714", "-122.3144491", "44.9139404296875", "6.432", "", "0.0", "0", "gps", "", "", "", "", "", "", "", "73", ""], null)], null));
autojournal.drive._parse_csv = function autojournal$drive$_parse_csv(blob) {
  var two_d_array = cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(Utilities.parseCsv(blob.getDataAsString()));
  return autojournal.drive._two_d_array_to_maps(two_d_array);
};
autojournal.drive._get_zipped_files = function autojournal$drive$_get_zipped_files(zip_blob) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(autojournal.drive._get_file_contents, Utilities.unzip(zip_blob)));
};
autojournal.drive._get_file_contents = function autojournal$drive$_get_file_contents(blob) {
  cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([blob.getName()], 0));
  if (clojure.string.ends_with_QMARK_(blob.getName(), ".zip")) {
    return autojournal.drive._get_zipped_files(blob);
  } else {
    if (clojure.string.ends_with_QMARK_(blob.getName(), ".csv")) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [autojournal.drive._parse_csv(blob)], null);
    } else {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [blob.getDataAsString()], null);
    }
  }
};
autojournal.drive.get_files = function autojournal$drive$get_files(filename) {
  return autojournal.env_switching.env_switch(new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$node, function() {
    return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([filename], 0));
  }, cljs$cst$keyword$app_DASH_script, function() {
    return autojournal.drive._get_file_contents(autojournal.drive._get_file_blob(filename));
  }], null));
};
goog.provide("malli.impl.util");
malli.impl.util._PLUS_max_size_PLUS_ = Number.MAX_VALUE;
malli.impl.util._tagged = function malli$impl$util$_tagged(k, v) {
  return new cljs.core.MapEntry(k, v, null);
};
malli.impl.util._tagged_QMARK_ = function malli$impl$util$_tagged_QMARK_(v) {
  return v instanceof cljs.core.MapEntry;
};
malli.impl.util._invalid_QMARK_ = function malli$impl$util$_invalid_QMARK_(x) {
  return cljs.core.keyword_identical_QMARK_(x, cljs$cst$keyword$malli_DOT_core_SLASH_invalid);
};
malli.impl.util._map_valid = function malli$impl$util$_map_valid(f, v) {
  if (malli.impl.util._invalid_QMARK_(v)) {
    return v;
  } else {
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(v) : f.call(null, v);
  }
};
malli.impl.util._map_invalid = function malli$impl$util$_map_invalid(f, v) {
  if (malli.impl.util._invalid_QMARK_(v)) {
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(v) : f.call(null, v);
  } else {
    return v;
  }
};
malli.impl.util._error = function malli$impl$util$_error(var_args) {
  var G__19728 = arguments.length;
  switch(G__19728) {
    case 4:
      return malli.impl.util._error.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return malli.impl.util._error.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.impl.util._error.cljs$core$IFn$_invoke$arity$4 = function(path, in$, schema, value) {
  return new cljs.core.PersistentArrayMap(null, 4, [cljs$cst$keyword$path, path, cljs$cst$keyword$in, in$, cljs$cst$keyword$schema, schema, cljs$cst$keyword$value, value], null);
};
malli.impl.util._error.cljs$core$IFn$_invoke$arity$5 = function(path, in$, schema, value, type) {
  return new cljs.core.PersistentArrayMap(null, 5, [cljs$cst$keyword$path, path, cljs$cst$keyword$in, in$, cljs$cst$keyword$schema, schema, cljs$cst$keyword$value, value, cljs$cst$keyword$type, type], null);
};
malli.impl.util._error.cljs$lang$maxFixedArity = 5;
malli.impl.util._vmap = function malli$impl$util$_vmap(var_args) {
  var G__19733 = arguments.length;
  switch(G__19733) {
    case 1:
      return malli.impl.util._vmap.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.impl.util._vmap.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.impl.util._vmap.cljs$core$IFn$_invoke$arity$1 = function(os) {
  return malli.impl.util._vmap.cljs$core$IFn$_invoke$arity$2(cljs.core.identity, os);
};
malli.impl.util._vmap.cljs$core$IFn$_invoke$arity$2 = function(f, os) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), os);
};
malli.impl.util._vmap.cljs$lang$maxFixedArity = 2;
malli.impl.util._every_pred = function malli$impl$util$_every_pred(preds) {
  return function(m) {
    return cljs.core.boolean$(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__19745_SHARP_, p2__19744_SHARP_) {
      var or__4253__auto__ = p2__19744_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__19744_SHARP_.cljs$core$IFn$_invoke$arity$1(m) : p2__19744_SHARP_.call(null, m);
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        return cljs.core.reduced(false);
      }
    }, true, preds));
  };
};
malli.impl.util._some_pred = function malli$impl$util$_some_pred(preds) {
  return function(x) {
    return cljs.core.boolean$(cljs.core.some(function(p1__19747_SHARP_) {
      return p1__19747_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19747_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__19747_SHARP_.call(null, x);
    }, preds));
  };
};
goog.provide("malli.impl.regex");
malli.impl.regex.Driver = function() {
};
var malli$impl$regex$Driver$succeed_BANG_$dyn_20432 = function(self) {
  var x__4550__auto__ = self == null ? null : self;
  var m__4551__auto__ = malli.impl.regex.succeed_BANG_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(self) : m__4551__auto__.call(null, self);
  } else {
    var m__4549__auto__ = malli.impl.regex.succeed_BANG_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(self) : m__4549__auto__.call(null, self);
    } else {
      throw cljs.core.missing_protocol("Driver.succeed!", self);
    }
  }
};
malli.impl.regex.succeed_BANG_ = function malli$impl$regex$succeed_BANG_(self) {
  if (!(self == null) && !(self.malli$impl$regex$Driver$succeed_BANG_$arity$1 == null)) {
    return self.malli$impl$regex$Driver$succeed_BANG_$arity$1(self);
  } else {
    return malli$impl$regex$Driver$succeed_BANG_$dyn_20432(self);
  }
};
var malli$impl$regex$Driver$succeeded_QMARK_$dyn_20434 = function(self) {
  var x__4550__auto__ = self == null ? null : self;
  var m__4551__auto__ = malli.impl.regex.succeeded_QMARK_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(self) : m__4551__auto__.call(null, self);
  } else {
    var m__4549__auto__ = malli.impl.regex.succeeded_QMARK_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(self) : m__4549__auto__.call(null, self);
    } else {
      throw cljs.core.missing_protocol("Driver.succeeded?", self);
    }
  }
};
malli.impl.regex.succeeded_QMARK_ = function malli$impl$regex$succeeded_QMARK_(self) {
  if (!(self == null) && !(self.malli$impl$regex$Driver$succeeded_QMARK_$arity$1 == null)) {
    return self.malli$impl$regex$Driver$succeeded_QMARK_$arity$1(self);
  } else {
    return malli$impl$regex$Driver$succeeded_QMARK_$dyn_20434(self);
  }
};
var malli$impl$regex$Driver$pop_thunk_BANG_$dyn_20437 = function(self) {
  var x__4550__auto__ = self == null ? null : self;
  var m__4551__auto__ = malli.impl.regex.pop_thunk_BANG_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(self) : m__4551__auto__.call(null, self);
  } else {
    var m__4549__auto__ = malli.impl.regex.pop_thunk_BANG_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(self) : m__4549__auto__.call(null, self);
    } else {
      throw cljs.core.missing_protocol("Driver.pop-thunk!", self);
    }
  }
};
malli.impl.regex.pop_thunk_BANG_ = function malli$impl$regex$pop_thunk_BANG_(self) {
  if (!(self == null) && !(self.malli$impl$regex$Driver$pop_thunk_BANG_$arity$1 == null)) {
    return self.malli$impl$regex$Driver$pop_thunk_BANG_$arity$1(self);
  } else {
    return malli$impl$regex$Driver$pop_thunk_BANG_$dyn_20437(self);
  }
};
malli.impl.regex.IValidationDriver = function() {
};
var malli$impl$regex$IValidationDriver$noncaching_park_validator_BANG_$dyn_20441 = function(driver, validator, regs, pos, coll, k) {
  var x__4550__auto__ = driver == null ? null : driver;
  var m__4551__auto__ = malli.impl.regex.noncaching_park_validator_BANG_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$6(driver, validator, regs, pos, coll, k) : m__4551__auto__.call(null, driver, validator, regs, pos, coll, k);
  } else {
    var m__4549__auto__ = malli.impl.regex.noncaching_park_validator_BANG_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$6(driver, validator, regs, pos, coll, k) : m__4549__auto__.call(null, driver, validator, regs, pos, coll, k);
    } else {
      throw cljs.core.missing_protocol("IValidationDriver.noncaching-park-validator!", driver);
    }
  }
};
malli.impl.regex.noncaching_park_validator_BANG_ = function malli$impl$regex$noncaching_park_validator_BANG_(driver, validator, regs, pos, coll, k) {
  if (!(driver == null) && !(driver.malli$impl$regex$IValidationDriver$noncaching_park_validator_BANG_$arity$6 == null)) {
    return driver.malli$impl$regex$IValidationDriver$noncaching_park_validator_BANG_$arity$6(driver, validator, regs, pos, coll, k);
  } else {
    return malli$impl$regex$IValidationDriver$noncaching_park_validator_BANG_$dyn_20441(driver, validator, regs, pos, coll, k);
  }
};
var malli$impl$regex$IValidationDriver$park_validator_BANG_$dyn_20446 = function(driver, validator, regs, pos, coll, k) {
  var x__4550__auto__ = driver == null ? null : driver;
  var m__4551__auto__ = malli.impl.regex.park_validator_BANG_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$6(driver, validator, regs, pos, coll, k) : m__4551__auto__.call(null, driver, validator, regs, pos, coll, k);
  } else {
    var m__4549__auto__ = malli.impl.regex.park_validator_BANG_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$6(driver, validator, regs, pos, coll, k) : m__4549__auto__.call(null, driver, validator, regs, pos, coll, k);
    } else {
      throw cljs.core.missing_protocol("IValidationDriver.park-validator!", driver);
    }
  }
};
malli.impl.regex.park_validator_BANG_ = function malli$impl$regex$park_validator_BANG_(driver, validator, regs, pos, coll, k) {
  if (!(driver == null) && !(driver.malli$impl$regex$IValidationDriver$park_validator_BANG_$arity$6 == null)) {
    return driver.malli$impl$regex$IValidationDriver$park_validator_BANG_$arity$6(driver, validator, regs, pos, coll, k);
  } else {
    return malli$impl$regex$IValidationDriver$park_validator_BANG_$dyn_20446(driver, validator, regs, pos, coll, k);
  }
};
malli.impl.regex.IExplanationDriver = function() {
};
var malli$impl$regex$IExplanationDriver$noncaching_park_explainer_BANG_$dyn_20449 = function(driver, explainer, regs, pos, coll, k) {
  var x__4550__auto__ = driver == null ? null : driver;
  var m__4551__auto__ = malli.impl.regex.noncaching_park_explainer_BANG_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$6(driver, explainer, regs, pos, coll, k) : m__4551__auto__.call(null, driver, explainer, regs, pos, coll, k);
  } else {
    var m__4549__auto__ = malli.impl.regex.noncaching_park_explainer_BANG_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$6(driver, explainer, regs, pos, coll, k) : m__4549__auto__.call(null, driver, explainer, regs, pos, coll, k);
    } else {
      throw cljs.core.missing_protocol("IExplanationDriver.noncaching-park-explainer!", driver);
    }
  }
};
malli.impl.regex.noncaching_park_explainer_BANG_ = function malli$impl$regex$noncaching_park_explainer_BANG_(driver, explainer, regs, pos, coll, k) {
  if (!(driver == null) && !(driver.malli$impl$regex$IExplanationDriver$noncaching_park_explainer_BANG_$arity$6 == null)) {
    return driver.malli$impl$regex$IExplanationDriver$noncaching_park_explainer_BANG_$arity$6(driver, explainer, regs, pos, coll, k);
  } else {
    return malli$impl$regex$IExplanationDriver$noncaching_park_explainer_BANG_$dyn_20449(driver, explainer, regs, pos, coll, k);
  }
};
var malli$impl$regex$IExplanationDriver$park_explainer_BANG_$dyn_20452 = function(driver, explainer, regs, pos, coll, k) {
  var x__4550__auto__ = driver == null ? null : driver;
  var m__4551__auto__ = malli.impl.regex.park_explainer_BANG_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$6(driver, explainer, regs, pos, coll, k) : m__4551__auto__.call(null, driver, explainer, regs, pos, coll, k);
  } else {
    var m__4549__auto__ = malli.impl.regex.park_explainer_BANG_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$6(driver, explainer, regs, pos, coll, k) : m__4549__auto__.call(null, driver, explainer, regs, pos, coll, k);
    } else {
      throw cljs.core.missing_protocol("IExplanationDriver.park-explainer!", driver);
    }
  }
};
malli.impl.regex.park_explainer_BANG_ = function malli$impl$regex$park_explainer_BANG_(driver, explainer, regs, pos, coll, k) {
  if (!(driver == null) && !(driver.malli$impl$regex$IExplanationDriver$park_explainer_BANG_$arity$6 == null)) {
    return driver.malli$impl$regex$IExplanationDriver$park_explainer_BANG_$arity$6(driver, explainer, regs, pos, coll, k);
  } else {
    return malli$impl$regex$IExplanationDriver$park_explainer_BANG_$dyn_20452(driver, explainer, regs, pos, coll, k);
  }
};
var malli$impl$regex$IExplanationDriver$value_path$dyn_20454 = function(self, pos) {
  var x__4550__auto__ = self == null ? null : self;
  var m__4551__auto__ = malli.impl.regex.value_path[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(self, pos) : m__4551__auto__.call(null, self, pos);
  } else {
    var m__4549__auto__ = malli.impl.regex.value_path["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(self, pos) : m__4549__auto__.call(null, self, pos);
    } else {
      throw cljs.core.missing_protocol("IExplanationDriver.value-path", self);
    }
  }
};
malli.impl.regex.value_path = function malli$impl$regex$value_path(self, pos) {
  if (!(self == null) && !(self.malli$impl$regex$IExplanationDriver$value_path$arity$2 == null)) {
    return self.malli$impl$regex$IExplanationDriver$value_path$arity$2(self, pos);
  } else {
    return malli$impl$regex$IExplanationDriver$value_path$dyn_20454(self, pos);
  }
};
var malli$impl$regex$IExplanationDriver$fail_BANG_$dyn_20461 = function(self, pos, errors_STAR_) {
  var x__4550__auto__ = self == null ? null : self;
  var m__4551__auto__ = malli.impl.regex.fail_BANG_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(self, pos, errors_STAR_) : m__4551__auto__.call(null, self, pos, errors_STAR_);
  } else {
    var m__4549__auto__ = malli.impl.regex.fail_BANG_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(self, pos, errors_STAR_) : m__4549__auto__.call(null, self, pos, errors_STAR_);
    } else {
      throw cljs.core.missing_protocol("IExplanationDriver.fail!", self);
    }
  }
};
malli.impl.regex.fail_BANG_ = function malli$impl$regex$fail_BANG_(self, pos, errors_STAR_) {
  if (!(self == null) && !(self.malli$impl$regex$IExplanationDriver$fail_BANG_$arity$3 == null)) {
    return self.malli$impl$regex$IExplanationDriver$fail_BANG_$arity$3(self, pos, errors_STAR_);
  } else {
    return malli$impl$regex$IExplanationDriver$fail_BANG_$dyn_20461(self, pos, errors_STAR_);
  }
};
var malli$impl$regex$IExplanationDriver$latest_errors$dyn_20462 = function(self) {
  var x__4550__auto__ = self == null ? null : self;
  var m__4551__auto__ = malli.impl.regex.latest_errors[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(self) : m__4551__auto__.call(null, self);
  } else {
    var m__4549__auto__ = malli.impl.regex.latest_errors["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(self) : m__4549__auto__.call(null, self);
    } else {
      throw cljs.core.missing_protocol("IExplanationDriver.latest-errors", self);
    }
  }
};
malli.impl.regex.latest_errors = function malli$impl$regex$latest_errors(self) {
  if (!(self == null) && !(self.malli$impl$regex$IExplanationDriver$latest_errors$arity$1 == null)) {
    return self.malli$impl$regex$IExplanationDriver$latest_errors$arity$1(self);
  } else {
    return malli$impl$regex$IExplanationDriver$latest_errors$dyn_20462(self);
  }
};
malli.impl.regex.IParseDriver = function() {
};
var malli$impl$regex$IParseDriver$noncaching_park_transformer_BANG_$dyn_20465 = function(driver, transformer, regs, coll_STAR_, pos, coll, k) {
  var x__4550__auto__ = driver == null ? null : driver;
  var m__4551__auto__ = malli.impl.regex.noncaching_park_transformer_BANG_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$7(driver, transformer, regs, coll_STAR_, pos, coll, k) : m__4551__auto__.call(null, driver, transformer, regs, coll_STAR_, pos, coll, k);
  } else {
    var m__4549__auto__ = malli.impl.regex.noncaching_park_transformer_BANG_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$7(driver, transformer, regs, coll_STAR_, pos, coll, k) : m__4549__auto__.call(null, driver, transformer, regs, coll_STAR_, pos, coll, k);
    } else {
      throw cljs.core.missing_protocol("IParseDriver.noncaching-park-transformer!", driver);
    }
  }
};
malli.impl.regex.noncaching_park_transformer_BANG_ = function malli$impl$regex$noncaching_park_transformer_BANG_(driver, transformer, regs, coll_STAR_, pos, coll, k) {
  if (!(driver == null) && !(driver.malli$impl$regex$IParseDriver$noncaching_park_transformer_BANG_$arity$7 == null)) {
    return driver.malli$impl$regex$IParseDriver$noncaching_park_transformer_BANG_$arity$7(driver, transformer, regs, coll_STAR_, pos, coll, k);
  } else {
    return malli$impl$regex$IParseDriver$noncaching_park_transformer_BANG_$dyn_20465(driver, transformer, regs, coll_STAR_, pos, coll, k);
  }
};
var malli$impl$regex$IParseDriver$park_transformer_BANG_$dyn_20466 = function(driver, transformer, regs, coll_STAR_, pos, coll, k) {
  var x__4550__auto__ = driver == null ? null : driver;
  var m__4551__auto__ = malli.impl.regex.park_transformer_BANG_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$7(driver, transformer, regs, coll_STAR_, pos, coll, k) : m__4551__auto__.call(null, driver, transformer, regs, coll_STAR_, pos, coll, k);
  } else {
    var m__4549__auto__ = malli.impl.regex.park_transformer_BANG_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$7(driver, transformer, regs, coll_STAR_, pos, coll, k) : m__4549__auto__.call(null, driver, transformer, regs, coll_STAR_, pos, coll, k);
    } else {
      throw cljs.core.missing_protocol("IParseDriver.park-transformer!", driver);
    }
  }
};
malli.impl.regex.park_transformer_BANG_ = function malli$impl$regex$park_transformer_BANG_(driver, transformer, regs, coll_STAR_, pos, coll, k) {
  if (!(driver == null) && !(driver.malli$impl$regex$IParseDriver$park_transformer_BANG_$arity$7 == null)) {
    return driver.malli$impl$regex$IParseDriver$park_transformer_BANG_$arity$7(driver, transformer, regs, coll_STAR_, pos, coll, k);
  } else {
    return malli$impl$regex$IParseDriver$park_transformer_BANG_$dyn_20466(driver, transformer, regs, coll_STAR_, pos, coll, k);
  }
};
var malli$impl$regex$IParseDriver$succeed_with_BANG_$dyn_20467 = function(self, v) {
  var x__4550__auto__ = self == null ? null : self;
  var m__4551__auto__ = malli.impl.regex.succeed_with_BANG_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(self, v) : m__4551__auto__.call(null, self, v);
  } else {
    var m__4549__auto__ = malli.impl.regex.succeed_with_BANG_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(self, v) : m__4549__auto__.call(null, self, v);
    } else {
      throw cljs.core.missing_protocol("IParseDriver.succeed-with!", self);
    }
  }
};
malli.impl.regex.succeed_with_BANG_ = function malli$impl$regex$succeed_with_BANG_(self, v) {
  if (!(self == null) && !(self.malli$impl$regex$IParseDriver$succeed_with_BANG_$arity$2 == null)) {
    return self.malli$impl$regex$IParseDriver$succeed_with_BANG_$arity$2(self, v);
  } else {
    return malli$impl$regex$IParseDriver$succeed_with_BANG_$dyn_20467(self, v);
  }
};
var malli$impl$regex$IParseDriver$success_result$dyn_20468 = function(self) {
  var x__4550__auto__ = self == null ? null : self;
  var m__4551__auto__ = malli.impl.regex.success_result[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(self) : m__4551__auto__.call(null, self);
  } else {
    var m__4549__auto__ = malli.impl.regex.success_result["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(self) : m__4549__auto__.call(null, self);
    } else {
      throw cljs.core.missing_protocol("IParseDriver.success-result", self);
    }
  }
};
malli.impl.regex.success_result = function malli$impl$regex$success_result(self) {
  if (!(self == null) && !(self.malli$impl$regex$IParseDriver$success_result$arity$1 == null)) {
    return self.malli$impl$regex$IParseDriver$success_result$arity$1(self);
  } else {
    return malli$impl$regex$IParseDriver$success_result$dyn_20468(self);
  }
};
malli.impl.regex.item_validator = function malli$impl$regex$item_validator(valid_QMARK_) {
  return function(_, ___$1, pos, coll, k) {
    if (cljs.core.truth_(function() {
      var and__4251__auto__ = cljs.core.seq(coll);
      if (and__4251__auto__) {
        var G__19856 = cljs.core.first(coll);
        return valid_QMARK_.cljs$core$IFn$_invoke$arity$1 ? valid_QMARK_.cljs$core$IFn$_invoke$arity$1(G__19856) : valid_QMARK_.call(null, G__19856);
      } else {
        return and__4251__auto__;
      }
    }())) {
      var G__19857 = pos + 1;
      var G__19858 = cljs.core.rest(coll);
      return k.cljs$core$IFn$_invoke$arity$2 ? k.cljs$core$IFn$_invoke$arity$2(G__19857, G__19858) : k.call(null, G__19857, G__19858);
    } else {
      return null;
    }
  };
};
malli.impl.regex.item_explainer = function malli$impl$regex$item_explainer(path, schema, schema_explainer) {
  return function(driver, _, pos, coll, k) {
    var in$ = malli.impl.regex.value_path(driver, pos);
    if (cljs.core.seq(coll)) {
      var errors = function() {
        var G__19863 = cljs.core.first(coll);
        var G__19864 = in$;
        var G__19865 = cljs.core.PersistentVector.EMPTY;
        return schema_explainer.cljs$core$IFn$_invoke$arity$3 ? schema_explainer.cljs$core$IFn$_invoke$arity$3(G__19863, G__19864, G__19865) : schema_explainer.call(null, G__19863, G__19864, G__19865);
      }();
      if (cljs.core.seq(errors)) {
        return malli.impl.regex.fail_BANG_(driver, pos, errors);
      } else {
        var G__19868 = pos + 1;
        var G__19869 = cljs.core.rest(coll);
        return k.cljs$core$IFn$_invoke$arity$2 ? k.cljs$core$IFn$_invoke$arity$2(G__19868, G__19869) : k.call(null, G__19868, G__19869);
      }
    } else {
      return malli.impl.regex.fail_BANG_(driver, pos, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [malli.impl.util._error.cljs$core$IFn$_invoke$arity$5(path, in$, schema, null, cljs$cst$keyword$malli_DOT_core_SLASH_end_DASH_of_DASH_input)], null));
    }
  };
};
malli.impl.regex.item_parser = function malli$impl$regex$item_parser(parse) {
  return function(_, ___$1, pos, coll, k) {
    if (cljs.core.seq(coll)) {
      var v = function() {
        var G__19874 = cljs.core.first(coll);
        return parse.cljs$core$IFn$_invoke$arity$1 ? parse.cljs$core$IFn$_invoke$arity$1(G__19874) : parse.call(null, G__19874);
      }();
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, cljs$cst$keyword$malli_DOT_core_SLASH_invalid)) {
        return null;
      } else {
        var G__19879 = v;
        var G__19880 = pos + 1;
        var G__19881 = cljs.core.rest(coll);
        return k.cljs$core$IFn$_invoke$arity$3 ? k.cljs$core$IFn$_invoke$arity$3(G__19879, G__19880, G__19881) : k.call(null, G__19879, G__19880, G__19881);
      }
    } else {
      return null;
    }
  };
};
malli.impl.regex.item_unparser = function malli$impl$regex$item_unparser(unparse) {
  return function(v) {
    return malli.impl.util._map_valid(cljs.core.vector, unparse.cljs$core$IFn$_invoke$arity$1 ? unparse.cljs$core$IFn$_invoke$arity$1(v) : unparse.call(null, v));
  };
};
malli.impl.regex.item_encoder = function malli$impl$regex$item_encoder(valid_QMARK_, encode) {
  return function(_, ___$1, coll_STAR_, pos, coll, k) {
    if (cljs.core.seq(coll)) {
      var v = cljs.core.first(coll);
      if (cljs.core.truth_(valid_QMARK_.cljs$core$IFn$_invoke$arity$1 ? valid_QMARK_.cljs$core$IFn$_invoke$arity$1(v) : valid_QMARK_.call(null, v))) {
        var G__19891 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll_STAR_, encode.cljs$core$IFn$_invoke$arity$1 ? encode.cljs$core$IFn$_invoke$arity$1(v) : encode.call(null, v));
        var G__19892 = pos + 1;
        var G__19894 = cljs.core.rest(coll);
        return k.cljs$core$IFn$_invoke$arity$3 ? k.cljs$core$IFn$_invoke$arity$3(G__19891, G__19892, G__19894) : k.call(null, G__19891, G__19892, G__19894);
      } else {
        return null;
      }
    } else {
      return null;
    }
  };
};
malli.impl.regex.item_decoder = function malli$impl$regex$item_decoder(decode, valid_QMARK_) {
  return function(_, ___$1, coll_STAR_, pos, coll, k) {
    if (cljs.core.seq(coll)) {
      var v = function() {
        var G__19897 = cljs.core.first(coll);
        return decode.cljs$core$IFn$_invoke$arity$1 ? decode.cljs$core$IFn$_invoke$arity$1(G__19897) : decode.call(null, G__19897);
      }();
      if (cljs.core.truth_(valid_QMARK_.cljs$core$IFn$_invoke$arity$1 ? valid_QMARK_.cljs$core$IFn$_invoke$arity$1(v) : valid_QMARK_.call(null, v))) {
        var G__19898 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll_STAR_, v);
        var G__19899 = pos + 1;
        var G__19900 = cljs.core.rest(coll);
        return k.cljs$core$IFn$_invoke$arity$3 ? k.cljs$core$IFn$_invoke$arity$3(G__19898, G__19899, G__19900) : k.call(null, G__19898, G__19899, G__19900);
      } else {
        return null;
      }
    } else {
      return null;
    }
  };
};
malli.impl.regex.item_transformer = function malli$impl$regex$item_transformer(method, validator, t) {
  var G__19902 = method;
  var G__19902__$1 = G__19902 instanceof cljs.core.Keyword ? G__19902.fqn : null;
  switch(G__19902__$1) {
    case "encode":
      return malli.impl.regex.item_encoder(validator, t);
      break;
    case "decode":
      return malli.impl.regex.item_decoder(t, validator);
      break;
    default:
      throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__19902__$1)].join(""));
  }
};
malli.impl.regex.end_validator = function malli$impl$regex$end_validator() {
  return function(_, ___$1, pos, coll, k) {
    if (cljs.core.empty_QMARK_(coll)) {
      return k.cljs$core$IFn$_invoke$arity$2 ? k.cljs$core$IFn$_invoke$arity$2(pos, coll) : k.call(null, pos, coll);
    } else {
      return null;
    }
  };
};
malli.impl.regex.end_explainer = function malli$impl$regex$end_explainer(schema, path) {
  return function(driver, _, pos, coll, k) {
    if (cljs.core.empty_QMARK_(coll)) {
      return k.cljs$core$IFn$_invoke$arity$2 ? k.cljs$core$IFn$_invoke$arity$2(pos, coll) : k.call(null, pos, coll);
    } else {
      return malli.impl.regex.fail_BANG_(driver, pos, new cljs.core.List(null, malli.impl.util._error.cljs$core$IFn$_invoke$arity$5(path, malli.impl.regex.value_path(driver, pos), schema, cljs.core.first(coll), cljs$cst$keyword$malli_DOT_core_SLASH_input_DASH_remaining), null, 1, null));
    }
  };
};
malli.impl.regex.end_parser = function malli$impl$regex$end_parser() {
  return function(_, ___$1, pos, coll, k) {
    if (cljs.core.empty_QMARK_(coll)) {
      return k.cljs$core$IFn$_invoke$arity$3 ? k.cljs$core$IFn$_invoke$arity$3(null, pos, coll) : k.call(null, null, pos, coll);
    } else {
      return null;
    }
  };
};
malli.impl.regex.end_transformer = function malli$impl$regex$end_transformer() {
  return function(_, ___$1, coll_STAR_, pos, coll, k) {
    if (cljs.core.empty_QMARK_(coll)) {
      return k.cljs$core$IFn$_invoke$arity$3 ? k.cljs$core$IFn$_invoke$arity$3(coll_STAR_, pos, coll) : k.call(null, coll_STAR_, pos, coll);
    } else {
      return null;
    }
  };
};
malli.impl.regex.pure_parser = function malli$impl$regex$pure_parser(v) {
  return function(_, ___$1, pos, coll, k) {
    return k.cljs$core$IFn$_invoke$arity$3 ? k.cljs$core$IFn$_invoke$arity$3(v, pos, coll) : k.call(null, v, pos, coll);
  };
};
malli.impl.regex.pure_unparser = function malli$impl$regex$pure_unparser(_) {
  return cljs.core.PersistentVector.EMPTY;
};
malli.impl.regex.fmap_parser = function malli$impl$regex$fmap_parser(f, p) {
  return function(driver, regs, pos, coll, k) {
    var G__19909 = driver;
    var G__19910 = regs;
    var G__19911 = pos;
    var G__19912 = coll;
    var G__19913 = function(v, pos__$1, coll__$1) {
      var G__19914 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(v) : f.call(null, v);
      var G__19915 = pos__$1;
      var G__19916 = coll__$1;
      return k.cljs$core$IFn$_invoke$arity$3 ? k.cljs$core$IFn$_invoke$arity$3(G__19914, G__19915, G__19916) : k.call(null, G__19914, G__19915, G__19916);
    };
    return p.cljs$core$IFn$_invoke$arity$5 ? p.cljs$core$IFn$_invoke$arity$5(G__19909, G__19910, G__19911, G__19912, G__19913) : p.call(null, G__19909, G__19910, G__19911, G__19912, G__19913);
  };
};
malli.impl.regex.entry__GT_regex = function malli$impl$regex$entry__GT_regex(_QMARK_kr) {
  if (cljs.core.vector_QMARK_(_QMARK_kr)) {
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(_QMARK_kr, 1);
  } else {
    return _QMARK_kr;
  }
};
malli.impl.regex.cat_validator = function malli$impl$regex$cat_validator(var_args) {
  var G__19920 = arguments.length;
  switch(G__19920) {
    case 0:
      return malli.impl.regex.cat_validator.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20477 = arguments.length;
      var i__4865__auto___20478 = 0;
      while (true) {
        if (i__4865__auto___20478 < len__4864__auto___20477) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20478]);
          var G__20481 = i__4865__auto___20478 + 1;
          i__4865__auto___20478 = G__20481;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(1), 0, null);
      return malli.impl.regex.cat_validator.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4886__auto__);
  }
};
malli.impl.regex.cat_validator.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(_, ___$1, pos, coll, k) {
    return k.cljs$core$IFn$_invoke$arity$2 ? k.cljs$core$IFn$_invoke$arity$2(pos, coll) : k.call(null, pos, coll);
  };
};
malli.impl.regex.cat_validator.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_kr, _QMARK_krs) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(acc, _QMARK_kr__$1) {
    var r_STAR_ = malli.impl.regex.entry__GT_regex(_QMARK_kr__$1);
    return function(driver, regs, pos, coll, k) {
      var G__19921 = driver;
      var G__19922 = regs;
      var G__19923 = pos;
      var G__19924 = coll;
      var G__19925 = function(pos__$1, coll__$1) {
        return r_STAR_.cljs$core$IFn$_invoke$arity$5 ? r_STAR_.cljs$core$IFn$_invoke$arity$5(driver, regs, pos__$1, coll__$1, k) : r_STAR_.call(null, driver, regs, pos__$1, coll__$1, k);
      };
      return acc.cljs$core$IFn$_invoke$arity$5 ? acc.cljs$core$IFn$_invoke$arity$5(G__19921, G__19922, G__19923, G__19924, G__19925) : acc.call(null, G__19921, G__19922, G__19923, G__19924, G__19925);
    };
  }, malli.impl.regex.entry__GT_regex(_QMARK_kr), _QMARK_krs);
};
malli.impl.regex.cat_validator.cljs$lang$applyTo = function(seq19918) {
  var G__19919 = cljs.core.first(seq19918);
  var seq19918__$1 = cljs.core.next(seq19918);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19919, seq19918__$1);
};
malli.impl.regex.cat_validator.cljs$lang$maxFixedArity = 1;
malli.impl.regex.cat_explainer = function malli$impl$regex$cat_explainer(var_args) {
  var G__19929 = arguments.length;
  switch(G__19929) {
    case 0:
      return malli.impl.regex.cat_explainer.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20488 = arguments.length;
      var i__4865__auto___20489 = 0;
      while (true) {
        if (i__4865__auto___20489 < len__4864__auto___20488) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20489]);
          var G__20490 = i__4865__auto___20489 + 1;
          i__4865__auto___20489 = G__20490;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(1), 0, null);
      return malli.impl.regex.cat_explainer.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4886__auto__);
  }
};
malli.impl.regex.cat_explainer.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(_, ___$1, pos, coll, k) {
    return k.cljs$core$IFn$_invoke$arity$2 ? k.cljs$core$IFn$_invoke$arity$2(pos, coll) : k.call(null, pos, coll);
  };
};
malli.impl.regex.cat_explainer.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_kr, _QMARK_krs) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(acc, _QMARK_kr__$1) {
    var r_STAR_ = malli.impl.regex.entry__GT_regex(_QMARK_kr__$1);
    return function(driver, regs, pos, coll, k) {
      var G__19935 = driver;
      var G__19936 = regs;
      var G__19937 = pos;
      var G__19938 = coll;
      var G__19939 = function(pos__$1, coll__$1) {
        return r_STAR_.cljs$core$IFn$_invoke$arity$5 ? r_STAR_.cljs$core$IFn$_invoke$arity$5(driver, regs, pos__$1, coll__$1, k) : r_STAR_.call(null, driver, regs, pos__$1, coll__$1, k);
      };
      return acc.cljs$core$IFn$_invoke$arity$5 ? acc.cljs$core$IFn$_invoke$arity$5(G__19935, G__19936, G__19937, G__19938, G__19939) : acc.call(null, G__19935, G__19936, G__19937, G__19938, G__19939);
    };
  }, malli.impl.regex.entry__GT_regex(_QMARK_kr), _QMARK_krs);
};
malli.impl.regex.cat_explainer.cljs$lang$applyTo = function(seq19927) {
  var G__19928 = cljs.core.first(seq19927);
  var seq19927__$1 = cljs.core.next(seq19927);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19928, seq19927__$1);
};
malli.impl.regex.cat_explainer.cljs$lang$maxFixedArity = 1;
malli.impl.regex.cat_parser = function malli$impl$regex$cat_parser(var_args) {
  var G__19943 = arguments.length;
  switch(G__19943) {
    case 0:
      return malli.impl.regex.cat_parser.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20497 = arguments.length;
      var i__4865__auto___20498 = 0;
      while (true) {
        if (i__4865__auto___20498 < len__4864__auto___20497) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20498]);
          var G__20499 = i__4865__auto___20498 + 1;
          i__4865__auto___20498 = G__20499;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(1), 0, null);
      return malli.impl.regex.cat_parser.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4886__auto__);
  }
};
malli.impl.regex.cat_parser.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(_, ___$1, pos, coll, k) {
    var G__19944 = cljs.core.PersistentVector.EMPTY;
    var G__19945 = pos;
    var G__19946 = coll;
    return k.cljs$core$IFn$_invoke$arity$3 ? k.cljs$core$IFn$_invoke$arity$3(G__19944, G__19945, G__19946) : k.call(null, G__19944, G__19945, G__19946);
  };
};
malli.impl.regex.cat_parser.cljs$core$IFn$_invoke$arity$variadic = function(r, rs) {
  var sp = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(acc, r__$1) {
    return function(driver, regs, coll_STAR_, pos, coll, k) {
      var G__19949 = driver;
      var G__19950 = regs;
      var G__19951 = pos;
      var G__19952 = coll;
      var G__19953 = function(v, pos__$1, coll__$1) {
        var G__19954 = driver;
        var G__19955 = regs;
        var G__19956 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll_STAR_, v);
        var G__19957 = pos__$1;
        var G__19958 = coll__$1;
        var G__19959 = k;
        return acc.cljs$core$IFn$_invoke$arity$6 ? acc.cljs$core$IFn$_invoke$arity$6(G__19954, G__19955, G__19956, G__19957, G__19958, G__19959) : acc.call(null, G__19954, G__19955, G__19956, G__19957, G__19958, G__19959);
      };
      return r__$1.cljs$core$IFn$_invoke$arity$5 ? r__$1.cljs$core$IFn$_invoke$arity$5(G__19949, G__19950, G__19951, G__19952, G__19953) : r__$1.call(null, G__19949, G__19950, G__19951, G__19952, G__19953);
    };
  }, function(_, ___$1, coll_STAR_, pos, coll, k) {
    return k.cljs$core$IFn$_invoke$arity$3 ? k.cljs$core$IFn$_invoke$arity$3(coll_STAR_, pos, coll) : k.call(null, coll_STAR_, pos, coll);
  }, cljs.core.reverse(cljs.core.cons(r, rs)));
  return function(driver, regs, pos, coll, k) {
    var G__19960 = driver;
    var G__19961 = regs;
    var G__19962 = cljs.core.PersistentVector.EMPTY;
    var G__19963 = pos;
    var G__19964 = coll;
    var G__19965 = k;
    return sp.cljs$core$IFn$_invoke$arity$6 ? sp.cljs$core$IFn$_invoke$arity$6(G__19960, G__19961, G__19962, G__19963, G__19964, G__19965) : sp.call(null, G__19960, G__19961, G__19962, G__19963, G__19964, G__19965);
  };
};
malli.impl.regex.cat_parser.cljs$lang$applyTo = function(seq19941) {
  var G__19942 = cljs.core.first(seq19941);
  var seq19941__$1 = cljs.core.next(seq19941);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19942, seq19941__$1);
};
malli.impl.regex.cat_parser.cljs$lang$maxFixedArity = 1;
malli.impl.regex.catn_parser = function malli$impl$regex$catn_parser(var_args) {
  var G__19970 = arguments.length;
  switch(G__19970) {
    case 0:
      return malli.impl.regex.catn_parser.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20508 = arguments.length;
      var i__4865__auto___20509 = 0;
      while (true) {
        if (i__4865__auto___20509 < len__4864__auto___20508) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20509]);
          var G__20510 = i__4865__auto___20509 + 1;
          i__4865__auto___20509 = G__20510;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(1), 0, null);
      return malli.impl.regex.catn_parser.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4886__auto__);
  }
};
malli.impl.regex.catn_parser.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(_, ___$1, pos, coll, k) {
    var G__19973 = cljs.core.PersistentArrayMap.EMPTY;
    var G__19974 = pos;
    var G__19975 = coll;
    return k.cljs$core$IFn$_invoke$arity$3 ? k.cljs$core$IFn$_invoke$arity$3(G__19973, G__19974, G__19975) : k.call(null, G__19973, G__19974, G__19975);
  };
};
malli.impl.regex.catn_parser.cljs$core$IFn$_invoke$arity$variadic = function(kr, krs) {
  var sp = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(acc, p__19976) {
    var vec__19977 = p__19976;
    var tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19977, 0, null);
    var r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19977, 1, null);
    return function(driver, regs, m, pos, coll, k) {
      var G__19980 = driver;
      var G__19981 = regs;
      var G__19982 = pos;
      var G__19983 = coll;
      var G__19984 = function(v, pos__$1, coll__$1) {
        var G__19985 = driver;
        var G__19986 = regs;
        var G__19987 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, tag, v);
        var G__19988 = pos__$1;
        var G__19989 = coll__$1;
        var G__19990 = k;
        return acc.cljs$core$IFn$_invoke$arity$6 ? acc.cljs$core$IFn$_invoke$arity$6(G__19985, G__19986, G__19987, G__19988, G__19989, G__19990) : acc.call(null, G__19985, G__19986, G__19987, G__19988, G__19989, G__19990);
      };
      return r.cljs$core$IFn$_invoke$arity$5 ? r.cljs$core$IFn$_invoke$arity$5(G__19980, G__19981, G__19982, G__19983, G__19984) : r.call(null, G__19980, G__19981, G__19982, G__19983, G__19984);
    };
  }, function(_, ___$1, m, pos, coll, k) {
    return k.cljs$core$IFn$_invoke$arity$3 ? k.cljs$core$IFn$_invoke$arity$3(m, pos, coll) : k.call(null, m, pos, coll);
  }, cljs.core.reverse(cljs.core.cons(kr, krs)));
  return function(driver, regs, pos, coll, k) {
    var G__19991 = driver;
    var G__19992 = regs;
    var G__19993 = cljs.core.PersistentArrayMap.EMPTY;
    var G__19994 = pos;
    var G__19995 = coll;
    var G__19996 = k;
    return sp.cljs$core$IFn$_invoke$arity$6 ? sp.cljs$core$IFn$_invoke$arity$6(G__19991, G__19992, G__19993, G__19994, G__19995, G__19996) : sp.call(null, G__19991, G__19992, G__19993, G__19994, G__19995, G__19996);
  };
};
malli.impl.regex.catn_parser.cljs$lang$applyTo = function(seq19967) {
  var G__19968 = cljs.core.first(seq19967);
  var seq19967__$1 = cljs.core.next(seq19967);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19968, seq19967__$1);
};
malli.impl.regex.catn_parser.cljs$lang$maxFixedArity = 1;
malli.impl.regex.cat_unparser = function malli$impl$regex$cat_unparser(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___20513 = arguments.length;
  var i__4865__auto___20514 = 0;
  while (true) {
    if (i__4865__auto___20514 < len__4864__auto___20513) {
      args__4870__auto__.push(arguments[i__4865__auto___20514]);
      var G__20515 = i__4865__auto___20514 + 1;
      i__4865__auto___20514 = G__20515;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.cat_unparser.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
malli.impl.regex.cat_unparser.cljs$core$IFn$_invoke$arity$variadic = function(unparsers) {
  var unparsers__$1 = cljs.core.vec(unparsers);
  return function(tup) {
    if (cljs.core.vector_QMARK_(tup) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(tup), cljs.core.count(unparsers__$1))) {
      return cljs.core.reduce_kv(function(coll, i, unparser) {
        return malli.impl.util._map_valid(function(p1__19997_SHARP_) {
          return cljs.core.into.cljs$core$IFn$_invoke$arity$2(coll, p1__19997_SHARP_);
        }, function() {
          var G__20000 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(tup, i);
          return unparser.cljs$core$IFn$_invoke$arity$1 ? unparser.cljs$core$IFn$_invoke$arity$1(G__20000) : unparser.call(null, G__20000);
        }());
      }, cljs.core.PersistentVector.EMPTY, unparsers__$1);
    } else {
      return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
    }
  };
};
malli.impl.regex.cat_unparser.cljs$lang$maxFixedArity = 0;
malli.impl.regex.cat_unparser.cljs$lang$applyTo = function(seq19998) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19998));
};
malli.impl.regex.catn_unparser = function malli$impl$regex$catn_unparser(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___20518 = arguments.length;
  var i__4865__auto___20519 = 0;
  while (true) {
    if (i__4865__auto___20519 < len__4864__auto___20518) {
      args__4870__auto__.push(arguments[i__4865__auto___20519]);
      var G__20520 = i__4865__auto___20519 + 1;
      i__4865__auto___20519 = G__20520;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.catn_unparser.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
malli.impl.regex.catn_unparser.cljs$core$IFn$_invoke$arity$variadic = function(unparsers) {
  var unparsers__$1 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, unparsers);
  return function(m) {
    if (cljs.core.map_QMARK_(m) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(m), cljs.core.count(unparsers__$1))) {
      return cljs.core.reduce_kv(function(coll, tag, unparser) {
        var temp__5755__auto__ = cljs.core.find(m, tag);
        if (temp__5755__auto__ == null) {
          return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
        } else {
          var kv = temp__5755__auto__;
          return malli.impl.util._map_valid(function(p1__20002_SHARP_) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(coll, p1__20002_SHARP_);
          }, function() {
            var G__20010 = cljs.core.val(kv);
            return unparser.cljs$core$IFn$_invoke$arity$1 ? unparser.cljs$core$IFn$_invoke$arity$1(G__20010) : unparser.call(null, G__20010);
          }());
        }
      }, cljs.core.PersistentVector.EMPTY, unparsers__$1);
    } else {
      return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
    }
  };
};
malli.impl.regex.catn_unparser.cljs$lang$maxFixedArity = 0;
malli.impl.regex.catn_unparser.cljs$lang$applyTo = function(seq20003) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20003));
};
malli.impl.regex.cat_transformer = function malli$impl$regex$cat_transformer(var_args) {
  var G__20014 = arguments.length;
  switch(G__20014) {
    case 0:
      return malli.impl.regex.cat_transformer.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20524 = arguments.length;
      var i__4865__auto___20525 = 0;
      while (true) {
        if (i__4865__auto___20525 < len__4864__auto___20524) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20525]);
          var G__20526 = i__4865__auto___20525 + 1;
          i__4865__auto___20525 = G__20526;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(1), 0, null);
      return malli.impl.regex.cat_transformer.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4886__auto__);
  }
};
malli.impl.regex.cat_transformer.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(_, ___$1, coll_STAR_, pos, coll, k) {
    return k.cljs$core$IFn$_invoke$arity$3 ? k.cljs$core$IFn$_invoke$arity$3(coll_STAR_, pos, coll) : k.call(null, coll_STAR_, pos, coll);
  };
};
malli.impl.regex.cat_transformer.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_kr, _QMARK_krs) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(acc, _QMARK_kr__$1) {
    var r = malli.impl.regex.entry__GT_regex(_QMARK_kr__$1);
    return function(driver, regs, coll_STAR_, pos, coll, k) {
      var G__20018 = driver;
      var G__20019 = regs;
      var G__20020 = coll_STAR_;
      var G__20021 = pos;
      var G__20022 = coll;
      var G__20023 = function(coll_STAR___$1, pos__$1, coll__$1) {
        return r.cljs$core$IFn$_invoke$arity$6 ? r.cljs$core$IFn$_invoke$arity$6(driver, regs, coll_STAR___$1, pos__$1, coll__$1, k) : r.call(null, driver, regs, coll_STAR___$1, pos__$1, coll__$1, k);
      };
      return acc.cljs$core$IFn$_invoke$arity$6 ? acc.cljs$core$IFn$_invoke$arity$6(G__20018, G__20019, G__20020, G__20021, G__20022, G__20023) : acc.call(null, G__20018, G__20019, G__20020, G__20021, G__20022, G__20023);
    };
  }, malli.impl.regex.entry__GT_regex(_QMARK_kr), _QMARK_krs);
};
malli.impl.regex.cat_transformer.cljs$lang$applyTo = function(seq20012) {
  var G__20013 = cljs.core.first(seq20012);
  var seq20012__$1 = cljs.core.next(seq20012);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__20013, seq20012__$1);
};
malli.impl.regex.cat_transformer.cljs$lang$maxFixedArity = 1;
malli.impl.regex.alt_validator = function malli$impl$regex$alt_validator(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___20530 = arguments.length;
  var i__4865__auto___20531 = 0;
  while (true) {
    if (i__4865__auto___20531 < len__4864__auto___20530) {
      args__4870__auto__.push(arguments[i__4865__auto___20531]);
      var G__20532 = i__4865__auto___20531 + 1;
      i__4865__auto___20531 = G__20532;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.alt_validator.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
malli.impl.regex.alt_validator.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_krs) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(acc, _QMARK_kr) {
    var r = malli.impl.regex.entry__GT_regex(acc);
    var r_STAR_ = malli.impl.regex.entry__GT_regex(_QMARK_kr);
    return function(driver, regs, pos, coll, k) {
      malli.impl.regex.park_validator_BANG_(driver, r_STAR_, regs, pos, coll, k);
      return malli.impl.regex.park_validator_BANG_(driver, r, regs, pos, coll, k);
    };
  }, _QMARK_krs);
};
malli.impl.regex.alt_validator.cljs$lang$maxFixedArity = 0;
malli.impl.regex.alt_validator.cljs$lang$applyTo = function(seq20029) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20029));
};
malli.impl.regex.alt_explainer = function malli$impl$regex$alt_explainer(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___20535 = arguments.length;
  var i__4865__auto___20537 = 0;
  while (true) {
    if (i__4865__auto___20537 < len__4864__auto___20535) {
      args__4870__auto__.push(arguments[i__4865__auto___20537]);
      var G__20538 = i__4865__auto___20537 + 1;
      i__4865__auto___20537 = G__20538;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.alt_explainer.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
malli.impl.regex.alt_explainer.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_krs) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(acc, _QMARK_kr) {
    var r = malli.impl.regex.entry__GT_regex(acc);
    var r_STAR_ = malli.impl.regex.entry__GT_regex(_QMARK_kr);
    return function(driver, regs, pos, coll, k) {
      malli.impl.regex.park_explainer_BANG_(driver, r_STAR_, regs, pos, coll, k);
      return malli.impl.regex.park_explainer_BANG_(driver, r, regs, pos, coll, k);
    };
  }, _QMARK_krs);
};
malli.impl.regex.alt_explainer.cljs$lang$maxFixedArity = 0;
malli.impl.regex.alt_explainer.cljs$lang$applyTo = function(seq20037) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20037));
};
malli.impl.regex.alt_parser = function malli$impl$regex$alt_parser(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___20543 = arguments.length;
  var i__4865__auto___20544 = 0;
  while (true) {
    if (i__4865__auto___20544 < len__4864__auto___20543) {
      args__4870__auto__.push(arguments[i__4865__auto___20544]);
      var G__20545 = i__4865__auto___20544 + 1;
      i__4865__auto___20544 = G__20545;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.alt_parser.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
malli.impl.regex.alt_parser.cljs$core$IFn$_invoke$arity$variadic = function(rs) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(r, r_STAR_) {
    return function(driver, regs, pos, coll, k) {
      malli.impl.regex.park_validator_BANG_(driver, r_STAR_, regs, pos, coll, k);
      return malli.impl.regex.park_validator_BANG_(driver, r, regs, pos, coll, k);
    };
  }, rs);
};
malli.impl.regex.alt_parser.cljs$lang$maxFixedArity = 0;
malli.impl.regex.alt_parser.cljs$lang$applyTo = function(seq20044) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20044));
};
malli.impl.regex.altn_parser = function malli$impl$regex$altn_parser(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___20550 = arguments.length;
  var i__4865__auto___20551 = 0;
  while (true) {
    if (i__4865__auto___20551 < len__4864__auto___20550) {
      args__4870__auto__.push(arguments[i__4865__auto___20551]);
      var G__20553 = i__4865__auto___20551 + 1;
      i__4865__auto___20551 = G__20553;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 1 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(1), 0, null) : null;
  return malli.impl.regex.altn_parser.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4871__auto__);
};
malli.impl.regex.altn_parser.cljs$core$IFn$_invoke$arity$variadic = function(kr, krs) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(r, p__20054) {
    var vec__20055 = p__20054;
    var tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20055, 0, null);
    var r_STAR_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20055, 1, null);
    var r_STAR___$1 = malli.impl.regex.fmap_parser(function(v) {
      return malli.impl.util._tagged(tag, v);
    }, r_STAR_);
    return function(driver, regs, pos, coll, k) {
      malli.impl.regex.park_validator_BANG_(driver, r_STAR___$1, regs, pos, coll, k);
      return malli.impl.regex.park_validator_BANG_(driver, r, regs, pos, coll, k);
    };
  }, function() {
    var vec__20060 = kr;
    var tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20060, 0, null);
    var r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20060, 1, null);
    return malli.impl.regex.fmap_parser(function(v) {
      return malli.impl.util._tagged(tag, v);
    }, r);
  }(), krs);
};
malli.impl.regex.altn_parser.cljs$lang$maxFixedArity = 1;
malli.impl.regex.altn_parser.cljs$lang$applyTo = function(seq20047) {
  var G__20048 = cljs.core.first(seq20047);
  var seq20047__$1 = cljs.core.next(seq20047);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__20048, seq20047__$1);
};
malli.impl.regex.alt_unparser = function malli$impl$regex$alt_unparser(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___20557 = arguments.length;
  var i__4865__auto___20558 = 0;
  while (true) {
    if (i__4865__auto___20558 < len__4864__auto___20557) {
      args__4870__auto__.push(arguments[i__4865__auto___20558]);
      var G__20559 = i__4865__auto___20558 + 1;
      i__4865__auto___20558 = G__20559;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.alt_unparser.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
malli.impl.regex.alt_unparser.cljs$core$IFn$_invoke$arity$variadic = function(unparsers) {
  return function(x) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(_, unparse) {
      return malli.impl.util._map_valid(cljs.core.reduced, unparse.cljs$core$IFn$_invoke$arity$1 ? unparse.cljs$core$IFn$_invoke$arity$1(x) : unparse.call(null, x));
    }, cljs$cst$keyword$malli_DOT_core_SLASH_invalid, unparsers);
  };
};
malli.impl.regex.alt_unparser.cljs$lang$maxFixedArity = 0;
malli.impl.regex.alt_unparser.cljs$lang$applyTo = function(seq20064) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20064));
};
malli.impl.regex.altn_unparser = function malli$impl$regex$altn_unparser(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___20560 = arguments.length;
  var i__4865__auto___20561 = 0;
  while (true) {
    if (i__4865__auto___20561 < len__4864__auto___20560) {
      args__4870__auto__.push(arguments[i__4865__auto___20561]);
      var G__20562 = i__4865__auto___20561 + 1;
      i__4865__auto___20561 = G__20562;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.altn_unparser.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
malli.impl.regex.altn_unparser.cljs$core$IFn$_invoke$arity$variadic = function(unparsers) {
  var unparsers__$1 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, unparsers);
  return function(x) {
    if (malli.impl.util._tagged_QMARK_(x)) {
      var temp__5755__auto__ = cljs.core.find(unparsers__$1, cljs.core.key(x));
      if (temp__5755__auto__ == null) {
        return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
      } else {
        var kv = temp__5755__auto__;
        var G__20076 = cljs.core.val(x);
        var fexpr__20075 = cljs.core.val(kv);
        return fexpr__20075.cljs$core$IFn$_invoke$arity$1 ? fexpr__20075.cljs$core$IFn$_invoke$arity$1(G__20076) : fexpr__20075.call(null, G__20076);
      }
    } else {
      return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
    }
  };
};
malli.impl.regex.altn_unparser.cljs$lang$maxFixedArity = 0;
malli.impl.regex.altn_unparser.cljs$lang$applyTo = function(seq20072) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20072));
};
malli.impl.regex.alt_transformer = function malli$impl$regex$alt_transformer(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___20564 = arguments.length;
  var i__4865__auto___20565 = 0;
  while (true) {
    if (i__4865__auto___20565 < len__4864__auto___20564) {
      args__4870__auto__.push(arguments[i__4865__auto___20565]);
      var G__20566 = i__4865__auto___20565 + 1;
      i__4865__auto___20565 = G__20566;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.alt_transformer.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
malli.impl.regex.alt_transformer.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_krs) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(acc, _QMARK_kr) {
    var r = malli.impl.regex.entry__GT_regex(acc);
    var r_STAR_ = malli.impl.regex.entry__GT_regex(_QMARK_kr);
    return function(driver, regs, coll_STAR_, pos, coll, k) {
      malli.impl.regex.park_transformer_BANG_(driver, r_STAR_, regs, coll_STAR_, pos, coll, k);
      return malli.impl.regex.park_transformer_BANG_(driver, r, regs, coll_STAR_, pos, coll, k);
    };
  }, _QMARK_krs);
};
malli.impl.regex.alt_transformer.cljs$lang$maxFixedArity = 0;
malli.impl.regex.alt_transformer.cljs$lang$applyTo = function(seq20077) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20077));
};
malli.impl.regex._QMARK__validator = function malli$impl$regex$_QMARK__validator(p) {
  return malli.impl.regex.alt_validator.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p, malli.impl.regex.cat_validator.cljs$core$IFn$_invoke$arity$0()], 0));
};
malli.impl.regex._QMARK__explainer = function malli$impl$regex$_QMARK__explainer(p) {
  return malli.impl.regex.alt_explainer.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p, malli.impl.regex.cat_explainer.cljs$core$IFn$_invoke$arity$0()], 0));
};
malli.impl.regex._QMARK__parser = function malli$impl$regex$_QMARK__parser(p) {
  return malli.impl.regex.alt_parser.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p, malli.impl.regex.pure_parser(null)], 0));
};
malli.impl.regex._QMARK__unparser = function malli$impl$regex$_QMARK__unparser(p) {
  return malli.impl.regex.alt_unparser.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p, malli.impl.regex.pure_unparser], 0));
};
malli.impl.regex._QMARK__transformer = function malli$impl$regex$_QMARK__transformer(p) {
  return malli.impl.regex.alt_transformer.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p, malli.impl.regex.cat_transformer.cljs$core$IFn$_invoke$arity$0()], 0));
};
malli.impl.regex._STAR__validator = function malli$impl$regex$_STAR__validator(p) {
  var _STAR_p_epsilon = malli.impl.regex.cat_validator.cljs$core$IFn$_invoke$arity$0();
  return function malli$impl$regex$_STAR__validator_$__STAR_p(driver, regs, pos, coll, k) {
    malli.impl.regex.park_validator_BANG_(driver, _STAR_p_epsilon, regs, pos, coll, k);
    var G__20104 = driver;
    var G__20105 = regs;
    var G__20106 = pos;
    var G__20107 = coll;
    var G__20108 = function(pos__$1, coll__$1) {
      return malli.impl.regex.park_validator_BANG_(driver, malli$impl$regex$_STAR__validator_$__STAR_p, regs, pos__$1, coll__$1, k);
    };
    return p.cljs$core$IFn$_invoke$arity$5 ? p.cljs$core$IFn$_invoke$arity$5(G__20104, G__20105, G__20106, G__20107, G__20108) : p.call(null, G__20104, G__20105, G__20106, G__20107, G__20108);
  };
};
malli.impl.regex._STAR__explainer = function malli$impl$regex$_STAR__explainer(p) {
  var _STAR_p_epsilon = malli.impl.regex.cat_explainer.cljs$core$IFn$_invoke$arity$0();
  return function malli$impl$regex$_STAR__explainer_$__STAR_p(driver, regs, pos, coll, k) {
    malli.impl.regex.park_explainer_BANG_(driver, _STAR_p_epsilon, regs, pos, coll, k);
    var G__20117 = driver;
    var G__20119 = regs;
    var G__20120 = pos;
    var G__20121 = coll;
    var G__20122 = function(pos__$1, coll__$1) {
      return malli.impl.regex.park_explainer_BANG_(driver, malli$impl$regex$_STAR__explainer_$__STAR_p, regs, pos__$1, coll__$1, k);
    };
    return p.cljs$core$IFn$_invoke$arity$5 ? p.cljs$core$IFn$_invoke$arity$5(G__20117, G__20119, G__20120, G__20121, G__20122) : p.call(null, G__20117, G__20119, G__20120, G__20121, G__20122);
  };
};
malli.impl.regex._STAR__parser = function malli$impl$regex$_STAR__parser(p) {
  var _STAR_p_epsilon = function(_, ___$1, coll_STAR_, pos, coll, k) {
    return k.cljs$core$IFn$_invoke$arity$3 ? k.cljs$core$IFn$_invoke$arity$3(coll_STAR_, pos, coll) : k.call(null, coll_STAR_, pos, coll);
  };
  return function() {
    var malli$impl$regex$_STAR__parser_$__STAR_p = null;
    var malli$impl$regex$_STAR__parser_$__STAR_p__5 = function(driver, regs, pos, coll, k) {
      return malli$impl$regex$_STAR__parser_$__STAR_p.cljs$core$IFn$_invoke$arity$6(driver, regs, cljs.core.PersistentVector.EMPTY, pos, coll, k);
    };
    var malli$impl$regex$_STAR__parser_$__STAR_p__6 = function(driver, regs, coll_STAR_, pos, coll, k) {
      malli.impl.regex.park_transformer_BANG_(driver, _STAR_p_epsilon, regs, coll_STAR_, pos, coll, k);
      var G__20130 = driver;
      var G__20131 = regs;
      var G__20132 = pos;
      var G__20133 = coll;
      var G__20134 = function(v, pos__$1, coll__$1) {
        return malli.impl.regex.park_transformer_BANG_(driver, malli$impl$regex$_STAR__parser_$__STAR_p, regs, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll_STAR_, v), pos__$1, coll__$1, k);
      };
      return p.cljs$core$IFn$_invoke$arity$5 ? p.cljs$core$IFn$_invoke$arity$5(G__20130, G__20131, G__20132, G__20133, G__20134) : p.call(null, G__20130, G__20131, G__20132, G__20133, G__20134);
    };
    malli$impl$regex$_STAR__parser_$__STAR_p = function(driver, regs, coll_STAR_, pos, coll, k) {
      switch(arguments.length) {
        case 5:
          return malli$impl$regex$_STAR__parser_$__STAR_p__5.call(this, driver, regs, coll_STAR_, pos, coll);
        case 6:
          return malli$impl$regex$_STAR__parser_$__STAR_p__6.call(this, driver, regs, coll_STAR_, pos, coll, k);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    malli$impl$regex$_STAR__parser_$__STAR_p.cljs$core$IFn$_invoke$arity$5 = malli$impl$regex$_STAR__parser_$__STAR_p__5;
    malli$impl$regex$_STAR__parser_$__STAR_p.cljs$core$IFn$_invoke$arity$6 = malli$impl$regex$_STAR__parser_$__STAR_p__6;
    return malli$impl$regex$_STAR__parser_$__STAR_p;
  }();
};
malli.impl.regex._STAR__unparser = function malli$impl$regex$_STAR__unparser(up) {
  return function(v) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(acc, v__$1) {
      var result = up.cljs$core$IFn$_invoke$arity$1 ? up.cljs$core$IFn$_invoke$arity$1(v__$1) : up.call(null, v__$1);
      if (malli.impl.util._invalid_QMARK_(result)) {
        return cljs.core.reduced(result);
      } else {
        return cljs.core.into.cljs$core$IFn$_invoke$arity$2(acc, result);
      }
    }, cljs.core.PersistentVector.EMPTY, v);
  };
};
malli.impl.regex._STAR__transformer = function malli$impl$regex$_STAR__transformer(p) {
  var _STAR_p_epsilon = malli.impl.regex.cat_transformer.cljs$core$IFn$_invoke$arity$0();
  return function malli$impl$regex$_STAR__transformer_$__STAR_p(driver, regs, coll_STAR_, pos, coll, k) {
    malli.impl.regex.park_transformer_BANG_(driver, _STAR_p_epsilon, regs, coll_STAR_, pos, coll, k);
    var G__20139 = driver;
    var G__20140 = regs;
    var G__20141 = coll_STAR_;
    var G__20142 = pos;
    var G__20143 = coll;
    var G__20144 = function(coll_STAR___$1, pos__$1, coll__$1) {
      return malli.impl.regex.park_transformer_BANG_(driver, malli$impl$regex$_STAR__transformer_$__STAR_p, regs, coll_STAR___$1, pos__$1, coll__$1, k);
    };
    return p.cljs$core$IFn$_invoke$arity$6 ? p.cljs$core$IFn$_invoke$arity$6(G__20139, G__20140, G__20141, G__20142, G__20143, G__20144) : p.call(null, G__20139, G__20140, G__20141, G__20142, G__20143, G__20144);
  };
};
malli.impl.regex._PLUS__validator = function malli$impl$regex$_PLUS__validator(p) {
  return malli.impl.regex.cat_validator.cljs$core$IFn$_invoke$arity$variadic(p, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([malli.impl.regex._STAR__validator(p)], 0));
};
malli.impl.regex._PLUS__explainer = function malli$impl$regex$_PLUS__explainer(p) {
  return malli.impl.regex.cat_explainer.cljs$core$IFn$_invoke$arity$variadic(p, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([malli.impl.regex._STAR__explainer(p)], 0));
};
malli.impl.regex._PLUS__parser = function malli$impl$regex$_PLUS__parser(p) {
  return malli.impl.regex.fmap_parser(function(p__20148) {
    var vec__20149 = p__20148;
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20149, 0, null);
    var vs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20149, 1, null);
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [v], null), vs);
  }, malli.impl.regex.cat_parser.cljs$core$IFn$_invoke$arity$variadic(p, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([malli.impl.regex._STAR__parser(p)], 0)));
};
malli.impl.regex._PLUS__unparser = function malli$impl$regex$_PLUS__unparser(up) {
  var up_STAR_ = malli.impl.regex._STAR__unparser(up);
  return function(x) {
    if (cljs.core.vector_QMARK_(x) && 1 <= cljs.core.count(x)) {
      return up_STAR_(x);
    } else {
      return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
    }
  };
};
malli.impl.regex._PLUS__transformer = function malli$impl$regex$_PLUS__transformer(p) {
  return malli.impl.regex.cat_transformer.cljs$core$IFn$_invoke$arity$variadic(p, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([malli.impl.regex._STAR__transformer(p)], 0));
};
malli.impl.regex.repeat_validator = function malli$impl$regex$repeat_validator(min, max, p) {
  var rep_epsilon = malli.impl.regex.cat_validator.cljs$core$IFn$_invoke$arity$0();
  var compulsories = function malli$impl$regex$repeat_validator_$_compulsories(driver, regs, pos, coll, k) {
    if (cljs.core.peek(regs) < min) {
      var G__20171 = driver;
      var G__20172 = regs;
      var G__20173 = pos;
      var G__20174 = coll;
      var G__20175 = function(pos__$1, coll__$1) {
        return malli.impl.regex.noncaching_park_validator_BANG_(driver, function(driver__$1, stack, pos__$2, coll__$2, k__$1) {
          return malli$impl$regex$repeat_validator_$_compulsories(driver__$1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.pop(stack), cljs.core.peek(stack) + 1), pos__$2, coll__$2, k__$1);
        }, regs, pos__$1, coll__$1, k);
      };
      return p.cljs$core$IFn$_invoke$arity$5 ? p.cljs$core$IFn$_invoke$arity$5(G__20171, G__20172, G__20173, G__20174, G__20175) : p.call(null, G__20171, G__20172, G__20173, G__20174, G__20175);
    } else {
      return optionals(driver, regs, pos, coll, k);
    }
  };
  var optionals = function malli$impl$regex$repeat_validator_$_optionals(driver, regs, pos, coll, k) {
    if (cljs.core.peek(regs) < max) {
      malli.impl.regex.park_validator_BANG_(driver, rep_epsilon, regs, pos, coll, k);
      var G__20177 = driver;
      var G__20178 = regs;
      var G__20179 = pos;
      var G__20180 = coll;
      var G__20181 = function(pos__$1, coll__$1) {
        return malli.impl.regex.noncaching_park_validator_BANG_(driver, function(driver__$1, regs__$1, pos__$2, coll__$2, k__$1) {
          return malli$impl$regex$repeat_validator_$_optionals(driver__$1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.pop(regs__$1), cljs.core.peek(regs__$1) + 1), pos__$2, coll__$2, k__$1);
        }, regs, pos__$1, coll__$1, k);
      };
      return p.cljs$core$IFn$_invoke$arity$5 ? p.cljs$core$IFn$_invoke$arity$5(G__20177, G__20178, G__20179, G__20180, G__20181) : p.call(null, G__20177, G__20178, G__20179, G__20180, G__20181);
    } else {
      return k.cljs$core$IFn$_invoke$arity$2 ? k.cljs$core$IFn$_invoke$arity$2(pos, coll) : k.call(null, pos, coll);
    }
  };
  return function(driver, regs, pos, coll, k) {
    return compulsories(driver, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(regs, 0), pos, coll, k);
  };
};
malli.impl.regex.repeat_explainer = function malli$impl$regex$repeat_explainer(min, max, p) {
  var rep_epsilon = malli.impl.regex.cat_explainer.cljs$core$IFn$_invoke$arity$0();
  var compulsories = function malli$impl$regex$repeat_explainer_$_compulsories(driver, regs, pos, coll, k) {
    if (cljs.core.peek(regs) < min) {
      var G__20231 = driver;
      var G__20232 = regs;
      var G__20233 = pos;
      var G__20234 = coll;
      var G__20235 = function(pos__$1, coll__$1) {
        return malli.impl.regex.noncaching_park_explainer_BANG_(driver, function(driver__$1, regs__$1, pos__$2, coll__$2, k__$1) {
          return malli$impl$regex$repeat_explainer_$_compulsories(driver__$1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.pop(regs__$1), cljs.core.peek(regs__$1) + 1), pos__$2, coll__$2, k__$1);
        }, regs, pos__$1, coll__$1, k);
      };
      return p.cljs$core$IFn$_invoke$arity$5 ? p.cljs$core$IFn$_invoke$arity$5(G__20231, G__20232, G__20233, G__20234, G__20235) : p.call(null, G__20231, G__20232, G__20233, G__20234, G__20235);
    } else {
      return optionals(driver, regs, pos, coll, k);
    }
  };
  var optionals = function malli$impl$regex$repeat_explainer_$_optionals(driver, regs, pos, coll, k) {
    if (cljs.core.peek(regs) < max) {
      malli.impl.regex.park_explainer_BANG_(driver, rep_epsilon, regs, pos, coll, k);
      var G__20251 = driver;
      var G__20252 = regs;
      var G__20253 = pos;
      var G__20254 = coll;
      var G__20255 = function(pos__$1, coll__$1) {
        return malli.impl.regex.noncaching_park_explainer_BANG_(driver, function(driver__$1, regs__$1, pos__$2, coll__$2, k__$1) {
          return malli$impl$regex$repeat_explainer_$_optionals(driver__$1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.pop(regs__$1), cljs.core.peek(regs__$1) + 1), pos__$2, coll__$2, k__$1);
        }, regs, pos__$1, coll__$1, k);
      };
      return p.cljs$core$IFn$_invoke$arity$5 ? p.cljs$core$IFn$_invoke$arity$5(G__20251, G__20252, G__20253, G__20254, G__20255) : p.call(null, G__20251, G__20252, G__20253, G__20254, G__20255);
    } else {
      return k.cljs$core$IFn$_invoke$arity$2 ? k.cljs$core$IFn$_invoke$arity$2(pos, coll) : k.call(null, pos, coll);
    }
  };
  return function(driver, regs, pos, coll, k) {
    return compulsories(driver, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(regs, 0), pos, coll, k);
  };
};
malli.impl.regex.repeat_parser = function malli$impl$regex$repeat_parser(min, max, p) {
  var rep_epsilon = function(_, ___$1, coll_STAR_, pos, coll, k) {
    return k.cljs$core$IFn$_invoke$arity$3 ? k.cljs$core$IFn$_invoke$arity$3(coll_STAR_, pos, coll) : k.call(null, coll_STAR_, pos, coll);
  };
  var compulsories = function malli$impl$regex$repeat_parser_$_compulsories(driver, regs, coll_STAR_, pos, coll, k) {
    if (cljs.core.peek(regs) < min) {
      var G__20282 = driver;
      var G__20283 = regs;
      var G__20284 = pos;
      var G__20285 = coll;
      var G__20286 = function(v, pos__$1, coll__$1) {
        return malli.impl.regex.noncaching_park_transformer_BANG_(driver, function(driver__$1, regs__$1, coll_STAR___$1, pos__$2, coll__$2, k__$1) {
          return malli$impl$regex$repeat_parser_$_compulsories(driver__$1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.pop(regs__$1), cljs.core.peek(regs__$1) + 1), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll_STAR___$1, v), pos__$2, coll__$2, k__$1);
        }, regs, coll_STAR_, pos__$1, coll__$1, k);
      };
      return p.cljs$core$IFn$_invoke$arity$5 ? p.cljs$core$IFn$_invoke$arity$5(G__20282, G__20283, G__20284, G__20285, G__20286) : p.call(null, G__20282, G__20283, G__20284, G__20285, G__20286);
    } else {
      return optionals(driver, regs, coll_STAR_, pos, coll, k);
    }
  };
  var optionals = function malli$impl$regex$repeat_parser_$_optionals(driver, regs, coll_STAR_, pos, coll, k) {
    if (cljs.core.peek(regs) < max) {
      malli.impl.regex.park_transformer_BANG_(driver, rep_epsilon, regs, coll_STAR_, pos, coll, k);
      var G__20289 = driver;
      var G__20290 = regs;
      var G__20291 = pos;
      var G__20292 = coll;
      var G__20293 = function(v, pos__$1, coll__$1) {
        return malli.impl.regex.noncaching_park_transformer_BANG_(driver, function(driver__$1, regs__$1, coll_STAR___$1, pos__$2, coll__$2, k__$1) {
          return malli$impl$regex$repeat_parser_$_optionals(driver__$1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.pop(regs__$1), cljs.core.peek(regs__$1) + 1), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll_STAR___$1, v), pos__$2, coll__$2, k__$1);
        }, regs, coll_STAR_, pos__$1, coll__$1, k);
      };
      return p.cljs$core$IFn$_invoke$arity$5 ? p.cljs$core$IFn$_invoke$arity$5(G__20289, G__20290, G__20291, G__20292, G__20293) : p.call(null, G__20289, G__20290, G__20291, G__20292, G__20293);
    } else {
      return k.cljs$core$IFn$_invoke$arity$3 ? k.cljs$core$IFn$_invoke$arity$3(coll_STAR_, pos, coll) : k.call(null, coll_STAR_, pos, coll);
    }
  };
  return function(driver, regs, pos, coll, k) {
    return compulsories(driver, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(regs, 0), cljs.core.PersistentVector.EMPTY, pos, coll, k);
  };
};
malli.impl.regex.repeat_unparser = function malli$impl$regex$repeat_unparser(min, max, up) {
  var up_STAR_ = malli.impl.regex._STAR__unparser(up);
  return function(v) {
    if (cljs.core.vector_QMARK_(v) && (min <= cljs.core.count(v) && cljs.core.count(v) <= max)) {
      return up_STAR_(v);
    } else {
      return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
    }
  };
};
malli.impl.regex.repeat_transformer = function malli$impl$regex$repeat_transformer(min, max, p) {
  var rep_epsilon = malli.impl.regex.cat_transformer.cljs$core$IFn$_invoke$arity$0();
  var compulsories = function malli$impl$regex$repeat_transformer_$_compulsories(driver, regs, coll_STAR_, pos, coll, k) {
    if (cljs.core.peek(regs) < min) {
      var G__20343 = driver;
      var G__20344 = regs;
      var G__20345 = coll_STAR_;
      var G__20346 = pos;
      var G__20347 = coll;
      var G__20348 = function(coll_STAR___$1, pos__$1, coll__$1) {
        return malli.impl.regex.noncaching_park_transformer_BANG_(driver, function(driver__$1, regs__$1, coll_STAR___$2, pos__$2, coll__$2, k__$1) {
          return malli$impl$regex$repeat_transformer_$_compulsories(driver__$1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.pop(regs__$1), cljs.core.peek(regs__$1) + 1), coll_STAR___$2, pos__$2, coll__$2, k__$1);
        }, regs, coll_STAR___$1, pos__$1, coll__$1, k);
      };
      return p.cljs$core$IFn$_invoke$arity$6 ? p.cljs$core$IFn$_invoke$arity$6(G__20343, G__20344, G__20345, G__20346, G__20347, G__20348) : p.call(null, G__20343, G__20344, G__20345, G__20346, G__20347, G__20348);
    } else {
      return optionals(driver, regs, coll_STAR_, pos, coll, k);
    }
  };
  var optionals = function malli$impl$regex$repeat_transformer_$_optionals(driver, regs, coll_STAR_, pos, coll, k) {
    if (cljs.core.peek(regs) < max) {
      malli.impl.regex.park_transformer_BANG_(driver, rep_epsilon, regs, coll_STAR_, pos, coll, k);
      var G__20351 = driver;
      var G__20352 = regs;
      var G__20353 = coll_STAR_;
      var G__20354 = pos;
      var G__20355 = coll;
      var G__20356 = function(coll_STAR___$1, pos__$1, coll__$1) {
        return malli.impl.regex.noncaching_park_transformer_BANG_(driver, function(driver__$1, regs__$1, coll_STAR___$2, pos__$2, coll__$2, k__$1) {
          return malli$impl$regex$repeat_transformer_$_optionals(driver__$1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.pop(regs__$1), cljs.core.peek(regs__$1) + 1), coll_STAR___$2, pos__$2, coll__$2, k__$1);
        }, regs, coll_STAR___$1, pos__$1, coll__$1, k);
      };
      return p.cljs$core$IFn$_invoke$arity$6 ? p.cljs$core$IFn$_invoke$arity$6(G__20351, G__20352, G__20353, G__20354, G__20355, G__20356) : p.call(null, G__20351, G__20352, G__20353, G__20354, G__20355, G__20356);
    } else {
      return k.cljs$core$IFn$_invoke$arity$3 ? k.cljs$core$IFn$_invoke$arity$3(coll_STAR_, pos, coll) : k.call(null, coll_STAR_, pos, coll);
    }
  };
  return function(driver, regs, coll_STAR_, pos, coll, k) {
    return compulsories(driver, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(regs, 0), coll_STAR_, pos, coll, k);
  };
};
malli.impl.regex.make_stack = function malli$impl$regex$make_stack() {
  return [];
};
malli.impl.regex.empty_stack_QMARK_ = function malli$impl$regex$empty_stack_QMARK_(stack) {
  return stack.length === 0;
};
malli.impl.regex.ICache = function() {
};
var malli$impl$regex$ICache$ensure_cached_BANG_$dyn_20570 = function(cache, f, pos, regs) {
  var x__4550__auto__ = cache == null ? null : cache;
  var m__4551__auto__ = malli.impl.regex.ensure_cached_BANG_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$4(cache, f, pos, regs) : m__4551__auto__.call(null, cache, f, pos, regs);
  } else {
    var m__4549__auto__ = malli.impl.regex.ensure_cached_BANG_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$4(cache, f, pos, regs) : m__4549__auto__.call(null, cache, f, pos, regs);
    } else {
      throw cljs.core.missing_protocol("ICache.ensure-cached!", cache);
    }
  }
};
malli.impl.regex.ensure_cached_BANG_ = function malli$impl$regex$ensure_cached_BANG_(cache, f, pos, regs) {
  if (!(cache == null) && !(cache.malli$impl$regex$ICache$ensure_cached_BANG_$arity$4 == null)) {
    return cache.malli$impl$regex$ICache$ensure_cached_BANG_$arity$4(cache, f, pos, regs);
  } else {
    return malli$impl$regex$ICache$ensure_cached_BANG_$dyn_20570(cache, f, pos, regs);
  }
};
malli.impl.regex.CacheEntry = function(hash, f, pos, regs) {
  this.hash = hash;
  this.f = f;
  this.pos = pos;
  this.regs = regs;
};
malli.impl.regex.CacheEntry.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$long], null)), cljs$cst$symbol$f, cljs.core.with_meta(cljs$cst$symbol$pos, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$long], null)), cljs$cst$symbol$regs], null);
};
malli.impl.regex.CacheEntry.cljs$lang$type = true;
malli.impl.regex.CacheEntry.cljs$lang$ctorStr = "malli.impl.regex/CacheEntry";
malli.impl.regex.CacheEntry.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "malli.impl.regex/CacheEntry");
};
malli.impl.regex.__GT_CacheEntry = function malli$impl$regex$__GT_CacheEntry(hash, f, pos, regs) {
  return new malli.impl.regex.CacheEntry(hash, f, pos, regs);
};
malli.impl.regex.Cache = function(values, size) {
  this.values = values;
  this.size = size;
};
malli.impl.regex.Cache.prototype.malli$impl$regex$ICache$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.Cache.prototype.malli$impl$regex$ICache$ensure_cached_BANG_$arity$4 = function(_, f, pos, regs) {
  var self__ = this;
  var ___$1 = this;
  if (self__.size + 1 > self__.values.length >> 1) {
    var capacity_STAR__20578 = self__.values.length << 1;
    var values_STAR__20579 = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(capacity_STAR__20578);
    var max_index_20580 = capacity_STAR__20578 - 1;
    var a__4738__auto___20581 = self__.values;
    var l__4739__auto___20582 = a__4738__auto___20581.length;
    var i_20583 = 0;
    var __20584__$2 = null;
    while (true) {
      if (i_20583 < l__4739__auto___20582) {
        var G__20585 = i_20583 + 1;
        var G__20586 = function() {
          var temp__5757__auto__ = self__.values[i_20583];
          if (temp__5757__auto__ == null) {
            return null;
          } else {
            var v = temp__5757__auto__;
            var i_STAR_ = v.hash & max_index_20580;
            var collisions = 0;
            while (true) {
              if (cljs.core.truth_(values_STAR__20579[i_STAR_])) {
                var collisions__$1 = collisions + 1;
                var G__20587 = i_STAR_ + collisions__$1 & max_index_20580;
                var G__20588 = collisions__$1;
                i_STAR_ = G__20587;
                collisions = G__20588;
                continue;
              } else {
                return values_STAR__20579[i_STAR_] = v;
              }
              break;
            }
          }
        }();
        i_20583 = G__20585;
        __20584__$2 = G__20586;
        continue;
      } else {
      }
      break;
    }
    self__.values = values_STAR__20579;
  } else {
  }
  var capacity = self__.values.length;
  var max_index = capacity - 1;
  var h = cljs.core.hash_combine(cljs.core.hash_combine(cljs.core.hash(f), cljs.core.hash(pos)), cljs.core.hash(regs));
  var i = h & max_index;
  var collisions = 0;
  while (true) {
    var temp__5755__auto__ = self__.values[i];
    if (temp__5755__auto__ == null) {
      self__.values[i] = new malli.impl.regex.CacheEntry(h, f, pos, regs);
      self__.size = self__.size + 1;
      return false;
    } else {
      var entry = temp__5755__auto__;
      var or__4253__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(entry.hash, h) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(entry.f, f) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(entry.pos, pos) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(entry.regs, regs)));
      if (or__4253__auto__) {
        return or__4253__auto__;
      } else {
        var collisions__$1 = collisions + 1;
        var G__20592 = i + collisions__$1 & max_index;
        var G__20593 = collisions__$1;
        i = G__20592;
        collisions = G__20593;
        continue;
      }
    }
    break;
  }
};
malli.impl.regex.Cache.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$values, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$size, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
malli.impl.regex.Cache.cljs$lang$type = true;
malli.impl.regex.Cache.cljs$lang$ctorStr = "malli.impl.regex/Cache";
malli.impl.regex.Cache.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "malli.impl.regex/Cache");
};
malli.impl.regex.__GT_Cache = function malli$impl$regex$__GT_Cache(values, size) {
  return new malli.impl.regex.Cache(values, size);
};
malli.impl.regex.make_cache = function malli$impl$regex$make_cache() {
  return new malli.impl.regex.Cache(cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(2), 0);
};
malli.impl.regex.CheckDriver = function(success, stack, cache) {
  this.success = success;
  this.stack = stack;
  this.cache = cache;
};
malli.impl.regex.CheckDriver.prototype.malli$impl$regex$Driver$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.CheckDriver.prototype.malli$impl$regex$Driver$succeed_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.success = cljs.core.boolean$(true);
};
malli.impl.regex.CheckDriver.prototype.malli$impl$regex$Driver$succeeded_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.success;
};
malli.impl.regex.CheckDriver.prototype.malli$impl$regex$Driver$pop_thunk_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (malli.impl.regex.empty_stack_QMARK_(self__.stack)) {
    return null;
  } else {
    return self__.stack.pop();
  }
};
malli.impl.regex.CheckDriver.prototype.malli$impl$regex$IValidationDriver$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.CheckDriver.prototype.malli$impl$regex$IValidationDriver$noncaching_park_validator_BANG_$arity$6 = function(self, validator, regs, pos, coll, k) {
  var self__ = this;
  var self__$1 = this;
  return self__.stack.push(function() {
    return validator.cljs$core$IFn$_invoke$arity$5 ? validator.cljs$core$IFn$_invoke$arity$5(self__$1, regs, pos, coll, k) : validator.call(null, self__$1, regs, pos, coll, k);
  });
};
malli.impl.regex.CheckDriver.prototype.malli$impl$regex$IValidationDriver$park_validator_BANG_$arity$6 = function(self, validator, regs, pos, coll, k) {
  var self__ = this;
  var self__$1 = this;
  if (cljs.core.truth_(malli.impl.regex.ensure_cached_BANG_(self__.cache, validator, pos, regs))) {
    return null;
  } else {
    return self__$1.malli$impl$regex$IValidationDriver$noncaching_park_validator_BANG_$arity$6(null, validator, regs, pos, coll, k);
  }
};
malli.impl.regex.CheckDriver.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$success, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs$cst$symbol$stack, cljs$cst$symbol$cache], null);
};
malli.impl.regex.CheckDriver.cljs$lang$type = true;
malli.impl.regex.CheckDriver.cljs$lang$ctorStr = "malli.impl.regex/CheckDriver";
malli.impl.regex.CheckDriver.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "malli.impl.regex/CheckDriver");
};
malli.impl.regex.__GT_CheckDriver = function malli$impl$regex$__GT_CheckDriver(success, stack, cache) {
  return new malli.impl.regex.CheckDriver(success, stack, cache);
};
malli.impl.regex.ParseDriver = function(success, stack, cache, result) {
  this.success = success;
  this.stack = stack;
  this.cache = cache;
  this.result = result;
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$Driver$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$Driver$succeed_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.success = cljs.core.boolean$(true);
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$Driver$succeeded_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.success;
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$Driver$pop_thunk_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (malli.impl.regex.empty_stack_QMARK_(self__.stack)) {
    return null;
  } else {
    return self__.stack.pop();
  }
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IValidationDriver$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IValidationDriver$noncaching_park_validator_BANG_$arity$6 = function(self, validator, regs, pos, coll, k) {
  var self__ = this;
  var self__$1 = this;
  return self__.stack.push(function() {
    return validator.cljs$core$IFn$_invoke$arity$5 ? validator.cljs$core$IFn$_invoke$arity$5(self__$1, regs, pos, coll, k) : validator.call(null, self__$1, regs, pos, coll, k);
  });
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IValidationDriver$park_validator_BANG_$arity$6 = function(self, validator, regs, pos, coll, k) {
  var self__ = this;
  var self__$1 = this;
  if (cljs.core.truth_(malli.impl.regex.ensure_cached_BANG_(self__.cache, validator, pos, regs))) {
    return null;
  } else {
    return self__$1.malli$impl$regex$IValidationDriver$noncaching_park_validator_BANG_$arity$6(null, validator, regs, pos, coll, k);
  }
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IParseDriver$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IParseDriver$noncaching_park_transformer_BANG_$arity$7 = function(driver, transformer, regs, coll_STAR_, pos, coll, k) {
  var self__ = this;
  var driver__$1 = this;
  return self__.stack.push(function() {
    return transformer.cljs$core$IFn$_invoke$arity$6 ? transformer.cljs$core$IFn$_invoke$arity$6(driver__$1, regs, coll_STAR_, pos, coll, k) : transformer.call(null, driver__$1, regs, coll_STAR_, pos, coll, k);
  });
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IParseDriver$park_transformer_BANG_$arity$7 = function(driver, transformer, regs, coll_STAR_, pos, coll, k) {
  var self__ = this;
  var driver__$1 = this;
  if (cljs.core.truth_(malli.impl.regex.ensure_cached_BANG_(self__.cache, transformer, pos, regs))) {
    return null;
  } else {
    return driver__$1.malli$impl$regex$IParseDriver$noncaching_park_transformer_BANG_$arity$7(null, transformer, regs, coll_STAR_, pos, coll, k);
  }
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IParseDriver$succeed_with_BANG_$arity$2 = function(self, v) {
  var self__ = this;
  var self__$1 = this;
  self__$1.malli$impl$regex$Driver$succeed_BANG_$arity$1(null);
  return self__.result = v;
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IParseDriver$success_result$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.result;
};
malli.impl.regex.ParseDriver.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$success, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs$cst$symbol$stack, cljs$cst$symbol$cache, cljs.core.with_meta(cljs$cst$symbol$result, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
malli.impl.regex.ParseDriver.cljs$lang$type = true;
malli.impl.regex.ParseDriver.cljs$lang$ctorStr = "malli.impl.regex/ParseDriver";
malli.impl.regex.ParseDriver.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "malli.impl.regex/ParseDriver");
};
malli.impl.regex.__GT_ParseDriver = function malli$impl$regex$__GT_ParseDriver(success, stack, cache, result) {
  return new malli.impl.regex.ParseDriver(success, stack, cache, result);
};
malli.impl.regex.validator = function malli$impl$regex$validator(p) {
  var p__$1 = malli.impl.regex.cat_validator.cljs$core$IFn$_invoke$arity$variadic(p, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([malli.impl.regex.end_validator()], 0));
  return function(coll) {
    var and__4251__auto__ = cljs.core.sequential_QMARK_(coll);
    if (and__4251__auto__) {
      var driver = new malli.impl.regex.CheckDriver(false, malli.impl.regex.make_stack(), malli.impl.regex.make_cache());
      var G__20395_20613 = driver;
      var G__20396_20614 = cljs.core.List.EMPTY;
      var G__20397_20615 = 0;
      var G__20398_20616 = coll;
      var G__20399_20617 = function(_, ___$1) {
        return driver.malli$impl$regex$Driver$succeed_BANG_$arity$1(null);
      };
      p__$1.cljs$core$IFn$_invoke$arity$5 ? p__$1.cljs$core$IFn$_invoke$arity$5(G__20395_20613, G__20396_20614, G__20397_20615, G__20398_20616, G__20399_20617) : p__$1.call(null, G__20395_20613, G__20396_20614, G__20397_20615, G__20398_20616, G__20399_20617);
      var or__4253__auto__ = driver.malli$impl$regex$Driver$succeeded_QMARK_$arity$1(null);
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        while (true) {
          var temp__5755__auto__ = driver.malli$impl$regex$Driver$pop_thunk_BANG_$arity$1(null);
          if (temp__5755__auto__ == null) {
            return false;
          } else {
            var thunk = temp__5755__auto__;
            thunk.cljs$core$IFn$_invoke$arity$0 ? thunk.cljs$core$IFn$_invoke$arity$0() : thunk.call(null);
            var or__4253__auto____$1 = driver.malli$impl$regex$Driver$succeeded_QMARK_$arity$1(null);
            if (cljs.core.truth_(or__4253__auto____$1)) {
              return or__4253__auto____$1;
            } else {
              continue;
            }
          }
          break;
        }
      }
    } else {
      return and__4251__auto__;
    }
  };
};
malli.impl.regex.ExplanationDriver = function(success, stack, cache, in$, errors_max_pos, errors) {
  this.success = success;
  this.stack = stack;
  this.cache = cache;
  this.in$ = in$;
  this.errors_max_pos = errors_max_pos;
  this.errors = errors;
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$Driver$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$Driver$succeed_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.success = cljs.core.boolean$(true);
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$Driver$succeeded_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.success;
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$Driver$pop_thunk_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (malli.impl.regex.empty_stack_QMARK_(self__.stack)) {
    return null;
  } else {
    return self__.stack.pop();
  }
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$IExplanationDriver$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$IExplanationDriver$noncaching_park_explainer_BANG_$arity$6 = function(self, validator, regs, pos, coll, k) {
  var self__ = this;
  var self__$1 = this;
  return self__.stack.push(function() {
    return validator.cljs$core$IFn$_invoke$arity$5 ? validator.cljs$core$IFn$_invoke$arity$5(self__$1, regs, pos, coll, k) : validator.call(null, self__$1, regs, pos, coll, k);
  });
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$IExplanationDriver$park_explainer_BANG_$arity$6 = function(self, validator, regs, pos, coll, k) {
  var self__ = this;
  var self__$1 = this;
  if (cljs.core.truth_(malli.impl.regex.ensure_cached_BANG_(self__.cache, validator, pos, regs))) {
    return null;
  } else {
    return self__$1.malli$impl$regex$IExplanationDriver$noncaching_park_explainer_BANG_$arity$6(null, validator, regs, pos, coll, k);
  }
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$IExplanationDriver$value_path$arity$2 = function(_, pos) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.in$, pos);
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$IExplanationDriver$fail_BANG_$arity$3 = function(_, pos, errors_STAR_) {
  var self__ = this;
  var ___$1 = this;
  if (pos > self__.errors_max_pos) {
    self__.errors_max_pos = pos;
    return self__.errors = errors_STAR_;
  } else {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(pos, self__.errors_max_pos)) {
      return self__.errors = cljs.core.into.cljs$core$IFn$_invoke$arity$2(self__.errors, errors_STAR_);
    } else {
      return null;
    }
  }
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$IExplanationDriver$latest_errors$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.errors;
};
malli.impl.regex.ExplanationDriver.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$success, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs$cst$symbol$stack, cljs$cst$symbol$cache, cljs$cst$symbol$in, cljs.core.with_meta(cljs$cst$symbol$errors_DASH_max_DASH_pos, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$errors, new cljs.core.PersistentArrayMap(null, 
  1, [cljs$cst$keyword$mutable, true], null))], null);
};
malli.impl.regex.ExplanationDriver.cljs$lang$type = true;
malli.impl.regex.ExplanationDriver.cljs$lang$ctorStr = "malli.impl.regex/ExplanationDriver";
malli.impl.regex.ExplanationDriver.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "malli.impl.regex/ExplanationDriver");
};
malli.impl.regex.__GT_ExplanationDriver = function malli$impl$regex$__GT_ExplanationDriver(success, stack, cache, in$, errors_max_pos, errors) {
  return new malli.impl.regex.ExplanationDriver(success, stack, cache, in$, errors_max_pos, errors);
};
malli.impl.regex.explainer = function malli$impl$regex$explainer(schema, path, p) {
  var p__$1 = malli.impl.regex.cat_explainer.cljs$core$IFn$_invoke$arity$variadic(p, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([malli.impl.regex.end_explainer(schema, path)], 0));
  return function(coll, in$, errors) {
    if (cljs.core.sequential_QMARK_(coll)) {
      var pos = 0;
      var driver = new malli.impl.regex.ExplanationDriver(false, malli.impl.regex.make_stack(), malli.impl.regex.make_cache(), in$, pos, cljs.core.PersistentVector.EMPTY);
      var G__20401_20619 = driver;
      var G__20402_20620 = cljs.core.List.EMPTY;
      var G__20403_20621 = pos;
      var G__20404_20622 = coll;
      var G__20405_20623 = function(_, ___$1) {
        return driver.malli$impl$regex$Driver$succeed_BANG_$arity$1(null);
      };
      p__$1.cljs$core$IFn$_invoke$arity$5 ? p__$1.cljs$core$IFn$_invoke$arity$5(G__20401_20619, G__20402_20620, G__20403_20621, G__20404_20622, G__20405_20623) : p__$1.call(null, G__20401_20619, G__20402_20620, G__20403_20621, G__20404_20622, G__20405_20623);
      if (cljs.core.truth_(driver.malli$impl$regex$Driver$succeeded_QMARK_$arity$1(null))) {
        return errors;
      } else {
        while (true) {
          var temp__5755__auto__ = driver.malli$impl$regex$Driver$pop_thunk_BANG_$arity$1(null);
          if (temp__5755__auto__ == null) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(errors, driver.malli$impl$regex$IExplanationDriver$latest_errors$arity$1(null));
          } else {
            var thunk = temp__5755__auto__;
            thunk.cljs$core$IFn$_invoke$arity$0 ? thunk.cljs$core$IFn$_invoke$arity$0() : thunk.call(null);
            if (cljs.core.truth_(driver.malli$impl$regex$Driver$succeeded_QMARK_$arity$1(null))) {
              return errors;
            } else {
              continue;
            }
          }
          break;
        }
      }
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(errors, malli.impl.util._error.cljs$core$IFn$_invoke$arity$5(path, in$, schema, coll, cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_type));
    }
  };
};
malli.impl.regex.parser = function malli$impl$regex$parser(p) {
  var p__$1 = malli.impl.regex.cat_parser.cljs$core$IFn$_invoke$arity$variadic(p, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([malli.impl.regex.end_parser()], 0));
  return function(coll) {
    if (cljs.core.sequential_QMARK_(coll)) {
      var driver = new malli.impl.regex.ParseDriver(false, malli.impl.regex.make_stack(), malli.impl.regex.make_cache(), null);
      p__$1(driver, cljs.core.List.EMPTY, 0, coll, function(v, _, ___$1) {
        return driver.malli$impl$regex$IParseDriver$succeed_with_BANG_$arity$2(null, v);
      });
      if (cljs.core.truth_(driver.malli$impl$regex$Driver$succeeded_QMARK_$arity$1(null))) {
        return cljs.core.first(driver.malli$impl$regex$IParseDriver$success_result$arity$1(null));
      } else {
        while (true) {
          var temp__5755__auto__ = driver.malli$impl$regex$Driver$pop_thunk_BANG_$arity$1(null);
          if (temp__5755__auto__ == null) {
            return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
          } else {
            var thunk = temp__5755__auto__;
            thunk.cljs$core$IFn$_invoke$arity$0 ? thunk.cljs$core$IFn$_invoke$arity$0() : thunk.call(null);
            if (cljs.core.truth_(driver.malli$impl$regex$Driver$succeeded_QMARK_$arity$1(null))) {
              return cljs.core.first(driver.malli$impl$regex$IParseDriver$success_result$arity$1(null));
            } else {
              continue;
            }
          }
          break;
        }
      }
    } else {
      return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
    }
  };
};
malli.impl.regex.transformer = function malli$impl$regex$transformer(p) {
  var p__$1 = malli.impl.regex.cat_transformer.cljs$core$IFn$_invoke$arity$variadic(p, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([malli.impl.regex.end_transformer()], 0));
  return function(coll) {
    if (cljs.core.sequential_QMARK_(coll)) {
      var driver = new malli.impl.regex.ParseDriver(false, malli.impl.regex.make_stack(), malli.impl.regex.make_cache(), null);
      var G__20419_20628 = driver;
      var G__20420_20629 = cljs.core.List.EMPTY;
      var G__20421_20630 = cljs.core.PersistentVector.EMPTY;
      var G__20422_20631 = 0;
      var G__20423_20632 = coll;
      var G__20424_20633 = function(coll_STAR_, _, ___$1) {
        return driver.malli$impl$regex$IParseDriver$succeed_with_BANG_$arity$2(null, coll_STAR_);
      };
      p__$1.cljs$core$IFn$_invoke$arity$6 ? p__$1.cljs$core$IFn$_invoke$arity$6(G__20419_20628, G__20420_20629, G__20421_20630, G__20422_20631, G__20423_20632, G__20424_20633) : p__$1.call(null, G__20419_20628, G__20420_20629, G__20421_20630, G__20422_20631, G__20423_20632, G__20424_20633);
      if (cljs.core.truth_(driver.malli$impl$regex$Driver$succeeded_QMARK_$arity$1(null))) {
        return driver.malli$impl$regex$IParseDriver$success_result$arity$1(null);
      } else {
        while (true) {
          var temp__5755__auto__ = driver.malli$impl$regex$Driver$pop_thunk_BANG_$arity$1(null);
          if (temp__5755__auto__ == null) {
            return coll;
          } else {
            var thunk = temp__5755__auto__;
            thunk.cljs$core$IFn$_invoke$arity$0 ? thunk.cljs$core$IFn$_invoke$arity$0() : thunk.call(null);
            if (cljs.core.truth_(driver.malli$impl$regex$Driver$succeeded_QMARK_$arity$1(null))) {
              return driver.malli$impl$regex$IParseDriver$success_result$arity$1(null);
            } else {
              continue;
            }
          }
          break;
        }
      }
    } else {
      return coll;
    }
  };
};
goog.provide("malli.registry");
malli.registry.mode = goog.define("malli.registry.mode", "default");
malli.registry.type = goog.define("malli.registry.type", "default");
malli.registry.Registry = function() {
};
var malli$registry$Registry$_schema$dyn_19785 = function(this$, type) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.registry._schema[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$, type) : m__4551__auto__.call(null, this$, type);
  } else {
    var m__4549__auto__ = malli.registry._schema["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$, type) : m__4549__auto__.call(null, this$, type);
    } else {
      throw cljs.core.missing_protocol("Registry.-schema", this$);
    }
  }
};
malli.registry._schema = function malli$registry$_schema(this$, type) {
  if (!(this$ == null) && !(this$.malli$registry$Registry$_schema$arity$2 == null)) {
    return this$.malli$registry$Registry$_schema$arity$2(this$, type);
  } else {
    return malli$registry$Registry$_schema$dyn_19785(this$, type);
  }
};
var malli$registry$Registry$_schemas$dyn_19786 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.registry._schemas[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.registry._schemas["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("Registry.-schemas", this$);
    }
  }
};
malli.registry._schemas = function malli$registry$_schemas(this$) {
  if (!(this$ == null) && !(this$.malli$registry$Registry$_schemas$arity$1 == null)) {
    return this$.malli$registry$Registry$_schemas$arity$1(this$);
  } else {
    return malli$registry$Registry$_schemas$dyn_19786(this$);
  }
};
malli.registry.registry_QMARK_ = function malli$registry$registry_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$registry$Registry$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.registry.fast_registry = function malli$registry$fast_registry(m) {
  var fm = m;
  if (typeof malli !== "undefined" && typeof malli.registry !== "undefined" && typeof malli.registry.t_malli$registry19722 !== "undefined") {
  } else {
    malli.registry.t_malli$registry19722 = function(m, fm, meta19723) {
      this.m = m;
      this.fm = fm;
      this.meta19723 = meta19723;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.registry.t_malli$registry19722.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19724, meta19723__$1) {
      var self__ = this;
      var _19724__$1 = this;
      return new malli.registry.t_malli$registry19722(self__.m, self__.fm, meta19723__$1);
    };
    malli.registry.t_malli$registry19722.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19724) {
      var self__ = this;
      var _19724__$1 = this;
      return self__.meta19723;
    };
    malli.registry.t_malli$registry19722.prototype.malli$registry$Registry$ = cljs.core.PROTOCOL_SENTINEL;
    malli.registry.t_malli$registry19722.prototype.malli$registry$Registry$_schema$arity$2 = function(_, type) {
      var self__ = this;
      var ___$1 = this;
      return self__.fm.get(type);
    };
    malli.registry.t_malli$registry19722.prototype.malli$registry$Registry$_schemas$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.m;
    };
    malli.registry.t_malli$registry19722.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$m, cljs$cst$symbol$fm, cljs$cst$symbol$meta19723], null);
    };
    malli.registry.t_malli$registry19722.cljs$lang$type = true;
    malli.registry.t_malli$registry19722.cljs$lang$ctorStr = "malli.registry/t_malli$registry19722";
    malli.registry.t_malli$registry19722.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.registry/t_malli$registry19722");
    };
    malli.registry.__GT_t_malli$registry19722 = function malli$registry$fast_registry_$___GT_t_malli$registry19722(m__$1, fm__$1, meta19723) {
      return new malli.registry.t_malli$registry19722(m__$1, fm__$1, meta19723);
    };
  }
  return new malli.registry.t_malli$registry19722(m, fm, cljs.core.PersistentArrayMap.EMPTY);
};
malli.registry.simple_registry = function malli$registry$simple_registry(m) {
  if (typeof malli !== "undefined" && typeof malli.registry !== "undefined" && typeof malli.registry.t_malli$registry19729 !== "undefined") {
  } else {
    malli.registry.t_malli$registry19729 = function(m, meta19730) {
      this.m = m;
      this.meta19730 = meta19730;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.registry.t_malli$registry19729.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19731, meta19730__$1) {
      var self__ = this;
      var _19731__$1 = this;
      return new malli.registry.t_malli$registry19729(self__.m, meta19730__$1);
    };
    malli.registry.t_malli$registry19729.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19731) {
      var self__ = this;
      var _19731__$1 = this;
      return self__.meta19730;
    };
    malli.registry.t_malli$registry19729.prototype.malli$registry$Registry$ = cljs.core.PROTOCOL_SENTINEL;
    malli.registry.t_malli$registry19729.prototype.malli$registry$Registry$_schema$arity$2 = function(_, type) {
      var self__ = this;
      var ___$1 = this;
      return self__.m.cljs$core$IFn$_invoke$arity$1 ? self__.m.cljs$core$IFn$_invoke$arity$1(type) : self__.m.call(null, type);
    };
    malli.registry.t_malli$registry19729.prototype.malli$registry$Registry$_schemas$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.m;
    };
    malli.registry.t_malli$registry19729.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$m, cljs$cst$symbol$meta19730], null);
    };
    malli.registry.t_malli$registry19729.cljs$lang$type = true;
    malli.registry.t_malli$registry19729.cljs$lang$ctorStr = "malli.registry/t_malli$registry19729";
    malli.registry.t_malli$registry19729.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.registry/t_malli$registry19729");
    };
    malli.registry.__GT_t_malli$registry19729 = function malli$registry$simple_registry_$___GT_t_malli$registry19729(m__$1, meta19730) {
      return new malli.registry.t_malli$registry19729(m__$1, meta19730);
    };
  }
  return new malli.registry.t_malli$registry19729(m, cljs.core.PersistentArrayMap.EMPTY);
};
malli.registry.registry = function malli$registry$registry(_QMARK_registry) {
  if (_QMARK_registry == null) {
    return null;
  } else {
    if (malli.registry.registry_QMARK_(_QMARK_registry)) {
      return _QMARK_registry;
    } else {
      if (cljs.core.map_QMARK_(_QMARK_registry)) {
        return malli.registry.simple_registry(_QMARK_registry);
      } else {
        if (!(_QMARK_registry == null) ? false || cljs.core.PROTOCOL_SENTINEL === _QMARK_registry.malli$registry$Registry$ ? true : !_QMARK_registry.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(malli.registry.Registry, _QMARK_registry) : false : cljs.core.native_satisfies_QMARK_(malli.registry.Registry, _QMARK_registry)) {
          return _QMARK_registry;
        } else {
          return null;
        }
      }
    }
  }
};
malli.registry.registry_STAR_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(malli.registry.simple_registry(cljs.core.PersistentArrayMap.EMPTY));
malli.registry.set_default_registry_BANG_ = function malli$registry$set_default_registry_BANG_(_QMARK_registry) {
  if (!(malli.registry.mode === "strict")) {
    return cljs.core.reset_BANG_(malli.registry.registry_STAR_, malli.registry.registry(_QMARK_registry));
  } else {
    throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("can't set default registry, invalid mode", new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$mode, malli.registry.mode, cljs$cst$keyword$type, malli.registry.type], null));
  }
};
malli.registry.custom_default_registry = function malli$registry$custom_default_registry() {
  if (typeof malli !== "undefined" && typeof malli.registry !== "undefined" && typeof malli.registry.t_malli$registry19741 !== "undefined") {
  } else {
    malli.registry.t_malli$registry19741 = function(meta19742) {
      this.meta19742 = meta19742;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.registry.t_malli$registry19741.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19743, meta19742__$1) {
      var self__ = this;
      var _19743__$1 = this;
      return new malli.registry.t_malli$registry19741(meta19742__$1);
    };
    malli.registry.t_malli$registry19741.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19743) {
      var self__ = this;
      var _19743__$1 = this;
      return self__.meta19742;
    };
    malli.registry.t_malli$registry19741.prototype.malli$registry$Registry$ = cljs.core.PROTOCOL_SENTINEL;
    malli.registry.t_malli$registry19741.prototype.malli$registry$Registry$_schema$arity$2 = function(_, type) {
      var self__ = this;
      var ___$1 = this;
      return malli.registry._schema(cljs.core.deref(malli.registry.registry_STAR_), type);
    };
    malli.registry.t_malli$registry19741.prototype.malli$registry$Registry$_schemas$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return malli.registry._schemas(cljs.core.deref(malli.registry.registry_STAR_));
    };
    malli.registry.t_malli$registry19741.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta19742], null);
    };
    malli.registry.t_malli$registry19741.cljs$lang$type = true;
    malli.registry.t_malli$registry19741.cljs$lang$ctorStr = "malli.registry/t_malli$registry19741";
    malli.registry.t_malli$registry19741.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.registry/t_malli$registry19741");
    };
    malli.registry.__GT_t_malli$registry19741 = function malli$registry$custom_default_registry_$___GT_t_malli$registry19741(meta19742) {
      return new malli.registry.t_malli$registry19741(meta19742);
    };
  }
  return new malli.registry.t_malli$registry19741(cljs.core.PersistentArrayMap.EMPTY);
};
malli.registry.composite_registry = function malli$registry$composite_registry(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___19795 = arguments.length;
  var i__4865__auto___19796 = 0;
  while (true) {
    if (i__4865__auto___19796 < len__4864__auto___19795) {
      args__4870__auto__.push(arguments[i__4865__auto___19796]);
      var G__19797 = i__4865__auto___19796 + 1;
      i__4865__auto___19796 = G__19797;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return malli.registry.composite_registry.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
malli.registry.composite_registry.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_registries) {
  var registries = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(malli.registry.registry, _QMARK_registries);
  if (typeof malli !== "undefined" && typeof malli.registry !== "undefined" && typeof malli.registry.t_malli$registry19752 !== "undefined") {
  } else {
    malli.registry.t_malli$registry19752 = function(_QMARK_registries, registries, meta19753) {
      this._QMARK_registries = _QMARK_registries;
      this.registries = registries;
      this.meta19753 = meta19753;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.registry.t_malli$registry19752.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19754, meta19753__$1) {
      var self__ = this;
      var _19754__$1 = this;
      return new malli.registry.t_malli$registry19752(self__._QMARK_registries, self__.registries, meta19753__$1);
    };
    malli.registry.t_malli$registry19752.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19754) {
      var self__ = this;
      var _19754__$1 = this;
      return self__.meta19753;
    };
    malli.registry.t_malli$registry19752.prototype.malli$registry$Registry$ = cljs.core.PROTOCOL_SENTINEL;
    malli.registry.t_malli$registry19752.prototype.malli$registry$Registry$_schema$arity$2 = function(_, type) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.some(function(p1__19749_SHARP_) {
        return malli.registry._schema(p1__19749_SHARP_, type);
      }, self__.registries);
    };
    malli.registry.t_malli$registry19752.prototype.malli$registry$Registry$_schemas$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core.merge, cljs.core.map.cljs$core$IFn$_invoke$arity$2(malli.registry._schemas, cljs.core.reverse(self__.registries)));
    };
    malli.registry.t_malli$registry19752.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$_QMARK_registries, cljs$cst$symbol$registries, cljs$cst$symbol$meta19753], null);
    };
    malli.registry.t_malli$registry19752.cljs$lang$type = true;
    malli.registry.t_malli$registry19752.cljs$lang$ctorStr = "malli.registry/t_malli$registry19752";
    malli.registry.t_malli$registry19752.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.registry/t_malli$registry19752");
    };
    malli.registry.__GT_t_malli$registry19752 = function malli$registry$__GT_t_malli$registry19752(_QMARK_registries__$1, registries__$1, meta19753) {
      return new malli.registry.t_malli$registry19752(_QMARK_registries__$1, registries__$1, meta19753);
    };
  }
  return new malli.registry.t_malli$registry19752(_QMARK_registries, registries, cljs.core.PersistentArrayMap.EMPTY);
};
malli.registry.composite_registry.cljs$lang$maxFixedArity = 0;
malli.registry.composite_registry.cljs$lang$applyTo = function(seq19750) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19750));
};
malli.registry.mutable_registry = function malli$registry$mutable_registry(db) {
  if (typeof malli !== "undefined" && typeof malli.registry !== "undefined" && typeof malli.registry.t_malli$registry19757 !== "undefined") {
  } else {
    malli.registry.t_malli$registry19757 = function(db, meta19758) {
      this.db = db;
      this.meta19758 = meta19758;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.registry.t_malli$registry19757.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19759, meta19758__$1) {
      var self__ = this;
      var _19759__$1 = this;
      return new malli.registry.t_malli$registry19757(self__.db, meta19758__$1);
    };
    malli.registry.t_malli$registry19757.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19759) {
      var self__ = this;
      var _19759__$1 = this;
      return self__.meta19758;
    };
    malli.registry.t_malli$registry19757.prototype.malli$registry$Registry$ = cljs.core.PROTOCOL_SENTINEL;
    malli.registry.t_malli$registry19757.prototype.malli$registry$Registry$_schema$arity$2 = function(_, type) {
      var self__ = this;
      var ___$1 = this;
      return malli.registry._schema(malli.registry.registry(cljs.core.deref(self__.db)), type);
    };
    malli.registry.t_malli$registry19757.prototype.malli$registry$Registry$_schemas$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return malli.registry._schemas(malli.registry.registry(cljs.core.deref(self__.db)));
    };
    malli.registry.t_malli$registry19757.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$db, cljs$cst$symbol$meta19758], null);
    };
    malli.registry.t_malli$registry19757.cljs$lang$type = true;
    malli.registry.t_malli$registry19757.cljs$lang$ctorStr = "malli.registry/t_malli$registry19757";
    malli.registry.t_malli$registry19757.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.registry/t_malli$registry19757");
    };
    malli.registry.__GT_t_malli$registry19757 = function malli$registry$mutable_registry_$___GT_t_malli$registry19757(db__$1, meta19758) {
      return new malli.registry.t_malli$registry19757(db__$1, meta19758);
    };
  }
  return new malli.registry.t_malli$registry19757(db, cljs.core.PersistentArrayMap.EMPTY);
};
malli.registry._STAR_registry_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
malli.registry.dynamic_registry = function malli$registry$dynamic_registry() {
  if (typeof malli !== "undefined" && typeof malli.registry !== "undefined" && typeof malli.registry.t_malli$registry19761 !== "undefined") {
  } else {
    malli.registry.t_malli$registry19761 = function(meta19762) {
      this.meta19762 = meta19762;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.registry.t_malli$registry19761.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19763, meta19762__$1) {
      var self__ = this;
      var _19763__$1 = this;
      return new malli.registry.t_malli$registry19761(meta19762__$1);
    };
    malli.registry.t_malli$registry19761.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19763) {
      var self__ = this;
      var _19763__$1 = this;
      return self__.meta19762;
    };
    malli.registry.t_malli$registry19761.prototype.malli$registry$Registry$ = cljs.core.PROTOCOL_SENTINEL;
    malli.registry.t_malli$registry19761.prototype.malli$registry$Registry$_schema$arity$2 = function(_, type) {
      var self__ = this;
      var ___$1 = this;
      return malli.registry._schema(malli.registry.registry(malli.registry._STAR_registry_STAR_), type);
    };
    malli.registry.t_malli$registry19761.prototype.malli$registry$Registry$_schemas$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return malli.registry._schemas(malli.registry.registry(malli.registry._STAR_registry_STAR_));
    };
    malli.registry.t_malli$registry19761.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta19762], null);
    };
    malli.registry.t_malli$registry19761.cljs$lang$type = true;
    malli.registry.t_malli$registry19761.cljs$lang$ctorStr = "malli.registry/t_malli$registry19761";
    malli.registry.t_malli$registry19761.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.registry/t_malli$registry19761");
    };
    malli.registry.__GT_t_malli$registry19761 = function malli$registry$dynamic_registry_$___GT_t_malli$registry19761(meta19762) {
      return new malli.registry.t_malli$registry19761(meta19762);
    };
  }
  return new malli.registry.t_malli$registry19761(cljs.core.PersistentArrayMap.EMPTY);
};
malli.registry.lazy_registry = function malli$registry$lazy_registry(default_registry, provider) {
  var cache_STAR_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  var registry_STAR_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(default_registry);
  return cljs.core.reset_BANG_(registry_STAR_, malli.registry.composite_registry.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([default_registry, function() {
    if (typeof malli !== "undefined" && typeof malli.registry !== "undefined" && typeof malli.registry.t_malli$registry19769 !== "undefined") {
    } else {
      malli.registry.t_malli$registry19769 = function(default_registry, provider, cache_STAR_, registry_STAR_, meta19770) {
        this.default_registry = default_registry;
        this.provider = provider;
        this.cache_STAR_ = cache_STAR_;
        this.registry_STAR_ = registry_STAR_;
        this.meta19770 = meta19770;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      malli.registry.t_malli$registry19769.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19771, meta19770__$1) {
        var self__ = this;
        var _19771__$1 = this;
        return new malli.registry.t_malli$registry19769(self__.default_registry, self__.provider, self__.cache_STAR_, self__.registry_STAR_, meta19770__$1);
      };
      malli.registry.t_malli$registry19769.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19771) {
        var self__ = this;
        var _19771__$1 = this;
        return self__.meta19770;
      };
      malli.registry.t_malli$registry19769.prototype.malli$registry$Registry$ = cljs.core.PROTOCOL_SENTINEL;
      malli.registry.t_malli$registry19769.prototype.malli$registry$Registry$_schema$arity$2 = function(_, name) {
        var self__ = this;
        var ___$1 = this;
        var or__4253__auto__ = function() {
          var fexpr__19774 = cljs.core.deref(self__.cache_STAR_);
          return fexpr__19774.cljs$core$IFn$_invoke$arity$1 ? fexpr__19774.cljs$core$IFn$_invoke$arity$1(name) : fexpr__19774.call(null, name);
        }();
        if (cljs.core.truth_(or__4253__auto__)) {
          return or__4253__auto__;
        } else {
          var temp__5753__auto__ = function() {
            var G__19776 = name;
            var G__19777 = cljs.core.deref(self__.registry_STAR_);
            return self__.provider.cljs$core$IFn$_invoke$arity$2 ? self__.provider.cljs$core$IFn$_invoke$arity$2(G__19776, G__19777) : self__.provider.call(null, G__19776, G__19777);
          }();
          if (cljs.core.truth_(temp__5753__auto__)) {
            var schema = temp__5753__auto__;
            cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.cache_STAR_, cljs.core.assoc, name, schema);
            return schema;
          } else {
            return null;
          }
        }
      };
      malli.registry.t_malli$registry19769.prototype.malli$registry$Registry$_schemas$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref(self__.cache_STAR_);
      };
      malli.registry.t_malli$registry19769.getBasis = function() {
        return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$default_DASH_registry, cljs$cst$symbol$provider, cljs$cst$symbol$cache_STAR_, cljs$cst$symbol$registry_STAR_, cljs$cst$symbol$meta19770], null);
      };
      malli.registry.t_malli$registry19769.cljs$lang$type = true;
      malli.registry.t_malli$registry19769.cljs$lang$ctorStr = "malli.registry/t_malli$registry19769";
      malli.registry.t_malli$registry19769.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
        return cljs.core._write(writer__4492__auto__, "malli.registry/t_malli$registry19769");
      };
      malli.registry.__GT_t_malli$registry19769 = function malli$registry$lazy_registry_$___GT_t_malli$registry19769(default_registry__$1, provider__$1, cache_STAR___$1, registry_STAR___$1, meta19770) {
        return new malli.registry.t_malli$registry19769(default_registry__$1, provider__$1, cache_STAR___$1, registry_STAR___$1, meta19770);
      };
    }
    return new malli.registry.t_malli$registry19769(default_registry, provider, cache_STAR_, registry_STAR_, cljs.core.PersistentArrayMap.EMPTY);
  }()], 0)));
};
malli.registry.schema = function malli$registry$schema(registry, type) {
  return malli.registry._schema(registry, type);
};
malli.registry.schemas = function malli$registry$schemas(registry) {
  return malli.registry._schemas(registry);
};
goog.provide("borkdude.dynaload");
borkdude.dynaload.LazyVar = function(f, cached) {
  this.f = f;
  this.cached = cached;
  this.cljs$lang$protocol_mask$partition0$ = 32769;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!(self__.cached == null)) {
    return self__.cached;
  } else {
    var x = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    if (x == null) {
    } else {
      self__.cached = x;
    }
    return x;
  }
};
borkdude.dynaload.LazyVar.prototype.call = function(unused__9633__auto__) {
  var self__ = this;
  var self__ = this;
  var G__19755 = arguments.length - 1;
  switch(G__19755) {
    case 0:
      return self__.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return self__.cljs$core$IFn$_invoke$arity$1(arguments[1]);
      break;
    case 2:
      return self__.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
      break;
    case 3:
      return self__.cljs$core$IFn$_invoke$arity$3(arguments[1], arguments[2], arguments[3]);
      break;
    case 4:
      return self__.cljs$core$IFn$_invoke$arity$4(arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 5:
      return self__.cljs$core$IFn$_invoke$arity$5(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 6:
      return self__.cljs$core$IFn$_invoke$arity$6(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 7:
      return self__.cljs$core$IFn$_invoke$arity$7(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 8:
      return self__.cljs$core$IFn$_invoke$arity$8(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 9:
      return self__.cljs$core$IFn$_invoke$arity$9(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 10:
      return self__.cljs$core$IFn$_invoke$arity$10(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 11:
      return self__.cljs$core$IFn$_invoke$arity$11(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 12:
      return self__.cljs$core$IFn$_invoke$arity$12(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 13:
      return self__.cljs$core$IFn$_invoke$arity$13(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 14:
      return self__.cljs$core$IFn$_invoke$arity$14(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 15:
      return self__.cljs$core$IFn$_invoke$arity$15(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 16:
      return self__.cljs$core$IFn$_invoke$arity$16(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 17:
      return self__.cljs$core$IFn$_invoke$arity$17(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 18:
      return self__.cljs$core$IFn$_invoke$arity$18(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 19:
      return self__.cljs$core$IFn$_invoke$arity$19(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 20:
      return self__.cljs$core$IFn$_invoke$arity$20(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 21:
      return self__.cljs$core$IFn$_invoke$arity$21(arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
borkdude.dynaload.LazyVar.prototype.apply = function(self__, args19751) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19751)));
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var this$ = this;
  var fexpr__19764 = cljs.core.deref(this$);
  return fexpr__19764.cljs$core$IFn$_invoke$arity$0 ? fexpr__19764.cljs$core$IFn$_invoke$arity$0() : fexpr__19764.call(null);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var this$ = this;
  var fexpr__19765 = cljs.core.deref(this$);
  return fexpr__19765.cljs$core$IFn$_invoke$arity$1 ? fexpr__19765.cljs$core$IFn$_invoke$arity$1(a) : fexpr__19765.call(null, a);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var this$ = this;
  var fexpr__19766 = cljs.core.deref(this$);
  return fexpr__19766.cljs$core$IFn$_invoke$arity$2 ? fexpr__19766.cljs$core$IFn$_invoke$arity$2(a, b) : fexpr__19766.call(null, a, b);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var this$ = this;
  var fexpr__19767 = cljs.core.deref(this$);
  return fexpr__19767.cljs$core$IFn$_invoke$arity$3 ? fexpr__19767.cljs$core$IFn$_invoke$arity$3(a, b, c) : fexpr__19767.call(null, a, b, c);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var this$ = this;
  var fexpr__19768 = cljs.core.deref(this$);
  return fexpr__19768.cljs$core$IFn$_invoke$arity$4 ? fexpr__19768.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : fexpr__19768.call(null, a, b, c, d);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var this$ = this;
  var fexpr__19772 = cljs.core.deref(this$);
  return fexpr__19772.cljs$core$IFn$_invoke$arity$5 ? fexpr__19772.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : fexpr__19772.call(null, a, b, c, d, e);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f__$1) {
  var self__ = this;
  var this$ = this;
  var fexpr__19773 = cljs.core.deref(this$);
  return fexpr__19773.cljs$core$IFn$_invoke$arity$6 ? fexpr__19773.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1) : fexpr__19773.call(null, a, b, c, d, e, f__$1);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f__$1, g) {
  var self__ = this;
  var this$ = this;
  var fexpr__19775 = cljs.core.deref(this$);
  return fexpr__19775.cljs$core$IFn$_invoke$arity$7 ? fexpr__19775.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g) : fexpr__19775.call(null, a, b, c, d, e, f__$1, g);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f__$1, g, h) {
  var self__ = this;
  var this$ = this;
  var fexpr__19778 = cljs.core.deref(this$);
  return fexpr__19778.cljs$core$IFn$_invoke$arity$8 ? fexpr__19778.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h) : fexpr__19778.call(null, a, b, c, d, e, f__$1, g, h);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f__$1, g, h, i) {
  var self__ = this;
  var this$ = this;
  var fexpr__19779 = cljs.core.deref(this$);
  return fexpr__19779.cljs$core$IFn$_invoke$arity$9 ? fexpr__19779.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i) : fexpr__19779.call(null, a, b, c, d, e, f__$1, g, h, i);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f__$1, g, h, i, j) {
  var self__ = this;
  var this$ = this;
  var fexpr__19780 = cljs.core.deref(this$);
  return fexpr__19780.cljs$core$IFn$_invoke$arity$10 ? fexpr__19780.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j) : fexpr__19780.call(null, a, b, c, d, e, f__$1, g, h, i, j);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f__$1, g, h, i, j, k) {
  var self__ = this;
  var this$ = this;
  var fexpr__19781 = cljs.core.deref(this$);
  return fexpr__19781.cljs$core$IFn$_invoke$arity$11 ? fexpr__19781.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k) : fexpr__19781.call(null, a, b, c, d, e, f__$1, g, h, i, j, k);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l) {
  var self__ = this;
  var this$ = this;
  var fexpr__19784 = cljs.core.deref(this$);
  return fexpr__19784.cljs$core$IFn$_invoke$arity$12 ? fexpr__19784.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l) : fexpr__19784.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m) {
  var self__ = this;
  var this$ = this;
  var fexpr__19789 = cljs.core.deref(this$);
  return fexpr__19789.cljs$core$IFn$_invoke$arity$13 ? fexpr__19789.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m) : fexpr__19789.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var this$ = this;
  var fexpr__19790 = cljs.core.deref(this$);
  return fexpr__19790.cljs$core$IFn$_invoke$arity$14 ? fexpr__19790.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n) : fexpr__19790.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var this$ = this;
  var fexpr__19791 = cljs.core.deref(this$);
  return fexpr__19791.cljs$core$IFn$_invoke$arity$15 ? fexpr__19791.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o) : fexpr__19791.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var this$ = this;
  var fexpr__19792 = cljs.core.deref(this$);
  return fexpr__19792.cljs$core$IFn$_invoke$arity$16 ? fexpr__19792.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p) : fexpr__19792.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var this$ = this;
  var fexpr__19793 = cljs.core.deref(this$);
  return fexpr__19793.cljs$core$IFn$_invoke$arity$17 ? fexpr__19793.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q) : fexpr__19793.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var this$ = this;
  var fexpr__19794 = cljs.core.deref(this$);
  return fexpr__19794.cljs$core$IFn$_invoke$arity$18 ? fexpr__19794.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r) : fexpr__19794.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var this$ = this;
  var fexpr__19798 = cljs.core.deref(this$);
  return fexpr__19798.cljs$core$IFn$_invoke$arity$19 ? fexpr__19798.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s) : fexpr__19798.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var this$ = this;
  var fexpr__19799 = cljs.core.deref(this$);
  return fexpr__19799.cljs$core$IFn$_invoke$arity$20 ? fexpr__19799.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : fexpr__19799.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var this$ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.deref(this$), a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
borkdude.dynaload.LazyVar.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$f, cljs.core.with_meta(cljs$cst$symbol$cached, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
borkdude.dynaload.LazyVar.cljs$lang$type = true;
borkdude.dynaload.LazyVar.cljs$lang$ctorStr = "borkdude.dynaload/LazyVar";
borkdude.dynaload.LazyVar.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "borkdude.dynaload/LazyVar");
};
borkdude.dynaload.__GT_LazyVar = function borkdude$dynaload$__GT_LazyVar(f, cached) {
  return new borkdude.dynaload.LazyVar(f, cached);
};
goog.provide("malli.sci");
malli.sci.evaluator = function malli$sci$evaluator(options, fail_BANG_) {
  var eval_string_STAR_ = new borkdude.dynaload.LazyVar(function() {
    if (typeof sci !== "undefined" && typeof sci.core !== "undefined" && typeof sci.core.eval_string_STAR_ !== "undefined") {
      return sci.core.eval_string_STAR_;
    } else {
      var temp__5751__auto__ = cljs.core.find(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$default, null], null), cljs$cst$keyword$default);
      if (cljs.core.truth_(temp__5751__auto__)) {
        var e__9553__auto__ = temp__5751__auto__;
        return cljs.core.val(e__9553__auto__);
      } else {
        throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs$cst$symbol$sci_DOT_core_SLASH_eval_DASH_string_STAR_), " does not exist, ", cljs.core.namespace(cljs$cst$symbol$sci_DOT_core_SLASH_eval_DASH_string_STAR_), " never required"].join(""));
      }
    }
  }, null);
  var init = new borkdude.dynaload.LazyVar(function() {
    if (typeof sci !== "undefined" && typeof sci.core !== "undefined" && typeof sci.core.init !== "undefined") {
      return sci.core.init;
    } else {
      var temp__5751__auto__ = cljs.core.find(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$default, null], null), cljs$cst$keyword$default);
      if (cljs.core.truth_(temp__5751__auto__)) {
        var e__9553__auto__ = temp__5751__auto__;
        return cljs.core.val(e__9553__auto__);
      } else {
        throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs$cst$symbol$sci_DOT_core_SLASH_init), " does not exist, ", cljs.core.namespace(cljs$cst$symbol$sci_DOT_core_SLASH_init), " never required"].join(""));
      }
    }
  }, null);
  var fork = new borkdude.dynaload.LazyVar(function() {
    if (typeof sci !== "undefined" && typeof sci.core !== "undefined" && typeof sci.core.fork !== "undefined") {
      return sci.core.fork;
    } else {
      var temp__5751__auto__ = cljs.core.find(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$default, null], null), cljs$cst$keyword$default);
      if (cljs.core.truth_(temp__5751__auto__)) {
        var e__9553__auto__ = temp__5751__auto__;
        return cljs.core.val(e__9553__auto__);
      } else {
        throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs$cst$symbol$sci_DOT_core_SLASH_fork), " does not exist, ", cljs.core.namespace(cljs$cst$symbol$sci_DOT_core_SLASH_fork), " never required"].join(""));
      }
    }
  }, null);
  return function() {
    if (cljs.core.truth_(function() {
      var and__4251__auto__ = cljs.core.deref(eval_string_STAR_);
      if (cljs.core.truth_(and__4251__auto__)) {
        var and__4251__auto____$1 = cljs.core.deref(init);
        if (cljs.core.truth_(and__4251__auto____$1)) {
          return cljs.core.deref(fork);
        } else {
          return and__4251__auto____$1;
        }
      } else {
        return and__4251__auto__;
      }
    }())) {
      var ctx = init.cljs$core$IFn$_invoke$arity$1 ? init.cljs$core$IFn$_invoke$arity$1(options) : init.call(null, options);
      eval_string_STAR_.cljs$core$IFn$_invoke$arity$2 ? eval_string_STAR_.cljs$core$IFn$_invoke$arity$2(ctx, "(alias 'm 'malli.core)") : eval_string_STAR_.call(null, ctx, "(alias 'm 'malli.core)");
      return function malli$sci$evaluator_$_eval(s) {
        var G__19847 = fork.cljs$core$IFn$_invoke$arity$1 ? fork.cljs$core$IFn$_invoke$arity$1(ctx) : fork.call(null, ctx);
        var G__19848 = cljs.core.str.cljs$core$IFn$_invoke$arity$1(s);
        return eval_string_STAR_.cljs$core$IFn$_invoke$arity$2 ? eval_string_STAR_.cljs$core$IFn$_invoke$arity$2(G__19847, G__19848) : eval_string_STAR_.call(null, G__19847, G__19848);
      };
    } else {
      return fail_BANG_;
    }
  };
};
goog.provide("malli.core");
malli.core.IntoSchema = function() {
};
var malli$core$IntoSchema$_type$dyn_22954 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._type[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._type["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("IntoSchema.-type", this$);
    }
  }
};
malli.core._type = function malli$core$_type(this$) {
  if (!(this$ == null) && !(this$.malli$core$IntoSchema$_type$arity$1 == null)) {
    return this$.malli$core$IntoSchema$_type$arity$1(this$);
  } else {
    return malli$core$IntoSchema$_type$dyn_22954(this$);
  }
};
var malli$core$IntoSchema$_type_properties$dyn_22955 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._type_properties[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._type_properties["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("IntoSchema.-type-properties", this$);
    }
  }
};
malli.core._type_properties = function malli$core$_type_properties(this$) {
  if (!(this$ == null) && !(this$.malli$core$IntoSchema$_type_properties$arity$1 == null)) {
    return this$.malli$core$IntoSchema$_type_properties$arity$1(this$);
  } else {
    return malli$core$IntoSchema$_type_properties$dyn_22955(this$);
  }
};
var malli$core$IntoSchema$_properties_schema$dyn_22956 = function(this$, options) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._properties_schema[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$, options) : m__4551__auto__.call(null, this$, options);
  } else {
    var m__4549__auto__ = malli.core._properties_schema["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$, options) : m__4549__auto__.call(null, this$, options);
    } else {
      throw cljs.core.missing_protocol("IntoSchema.-properties-schema", this$);
    }
  }
};
malli.core._properties_schema = function malli$core$_properties_schema(this$, options) {
  if (!(this$ == null) && !(this$.malli$core$IntoSchema$_properties_schema$arity$2 == null)) {
    return this$.malli$core$IntoSchema$_properties_schema$arity$2(this$, options);
  } else {
    return malli$core$IntoSchema$_properties_schema$dyn_22956(this$, options);
  }
};
var malli$core$IntoSchema$_children_schema$dyn_22957 = function(this$, options) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._children_schema[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$, options) : m__4551__auto__.call(null, this$, options);
  } else {
    var m__4549__auto__ = malli.core._children_schema["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$, options) : m__4549__auto__.call(null, this$, options);
    } else {
      throw cljs.core.missing_protocol("IntoSchema.-children-schema", this$);
    }
  }
};
malli.core._children_schema = function malli$core$_children_schema(this$, options) {
  if (!(this$ == null) && !(this$.malli$core$IntoSchema$_children_schema$arity$2 == null)) {
    return this$.malli$core$IntoSchema$_children_schema$arity$2(this$, options);
  } else {
    return malli$core$IntoSchema$_children_schema$dyn_22957(this$, options);
  }
};
var malli$core$IntoSchema$_into_schema$dyn_22958 = function(this$, properties, children, options) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._into_schema[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$4(this$, properties, children, options) : m__4551__auto__.call(null, this$, properties, children, options);
  } else {
    var m__4549__auto__ = malli.core._into_schema["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$4(this$, properties, children, options) : m__4549__auto__.call(null, this$, properties, children, options);
    } else {
      throw cljs.core.missing_protocol("IntoSchema.-into-schema", this$);
    }
  }
};
malli.core._into_schema = function malli$core$_into_schema(this$, properties, children, options) {
  if (!(this$ == null) && !(this$.malli$core$IntoSchema$_into_schema$arity$4 == null)) {
    return this$.malli$core$IntoSchema$_into_schema$arity$4(this$, properties, children, options);
  } else {
    return malli$core$IntoSchema$_into_schema$dyn_22958(this$, properties, children, options);
  }
};
malli.core.Schema = function() {
};
var malli$core$Schema$_validator$dyn_22959 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._validator[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._validator["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("Schema.-validator", this$);
    }
  }
};
malli.core._validator = function malli$core$_validator(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_validator$arity$1 == null)) {
    return this$.malli$core$Schema$_validator$arity$1(this$);
  } else {
    return malli$core$Schema$_validator$dyn_22959(this$);
  }
};
var malli$core$Schema$_explainer$dyn_22960 = function(this$, path) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._explainer[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$, path) : m__4551__auto__.call(null, this$, path);
  } else {
    var m__4549__auto__ = malli.core._explainer["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$, path) : m__4549__auto__.call(null, this$, path);
    } else {
      throw cljs.core.missing_protocol("Schema.-explainer", this$);
    }
  }
};
malli.core._explainer = function malli$core$_explainer(this$, path) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_explainer$arity$2 == null)) {
    return this$.malli$core$Schema$_explainer$arity$2(this$, path);
  } else {
    return malli$core$Schema$_explainer$dyn_22960(this$, path);
  }
};
var malli$core$Schema$_parser$dyn_22963 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._parser[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._parser["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("Schema.-parser", this$);
    }
  }
};
malli.core._parser = function malli$core$_parser(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_parser$arity$1 == null)) {
    return this$.malli$core$Schema$_parser$arity$1(this$);
  } else {
    return malli$core$Schema$_parser$dyn_22963(this$);
  }
};
var malli$core$Schema$_unparser$dyn_22964 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._unparser[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._unparser["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("Schema.-unparser", this$);
    }
  }
};
malli.core._unparser = function malli$core$_unparser(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_unparser$arity$1 == null)) {
    return this$.malli$core$Schema$_unparser$arity$1(this$);
  } else {
    return malli$core$Schema$_unparser$dyn_22964(this$);
  }
};
var malli$core$Schema$_transformer$dyn_22965 = function(this$, transformer, method, options) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._transformer[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$4(this$, transformer, method, options) : m__4551__auto__.call(null, this$, transformer, method, options);
  } else {
    var m__4549__auto__ = malli.core._transformer["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$4(this$, transformer, method, options) : m__4549__auto__.call(null, this$, transformer, method, options);
    } else {
      throw cljs.core.missing_protocol("Schema.-transformer", this$);
    }
  }
};
malli.core._transformer = function malli$core$_transformer(this$, transformer, method, options) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_transformer$arity$4 == null)) {
    return this$.malli$core$Schema$_transformer$arity$4(this$, transformer, method, options);
  } else {
    return malli$core$Schema$_transformer$dyn_22965(this$, transformer, method, options);
  }
};
var malli$core$Schema$_walk$dyn_22967 = function(this$, walker, path, options) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._walk[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$4(this$, walker, path, options) : m__4551__auto__.call(null, this$, walker, path, options);
  } else {
    var m__4549__auto__ = malli.core._walk["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$4(this$, walker, path, options) : m__4549__auto__.call(null, this$, walker, path, options);
    } else {
      throw cljs.core.missing_protocol("Schema.-walk", this$);
    }
  }
};
malli.core._walk = function malli$core$_walk(this$, walker, path, options) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_walk$arity$4 == null)) {
    return this$.malli$core$Schema$_walk$arity$4(this$, walker, path, options);
  } else {
    return malli$core$Schema$_walk$dyn_22967(this$, walker, path, options);
  }
};
var malli$core$Schema$_properties$dyn_22968 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._properties[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._properties["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("Schema.-properties", this$);
    }
  }
};
malli.core._properties = function malli$core$_properties(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_properties$arity$1 == null)) {
    return this$.malli$core$Schema$_properties$arity$1(this$);
  } else {
    return malli$core$Schema$_properties$dyn_22968(this$);
  }
};
var malli$core$Schema$_options$dyn_22969 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._options[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._options["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("Schema.-options", this$);
    }
  }
};
malli.core._options = function malli$core$_options(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_options$arity$1 == null)) {
    return this$.malli$core$Schema$_options$arity$1(this$);
  } else {
    return malli$core$Schema$_options$dyn_22969(this$);
  }
};
var malli$core$Schema$_children$dyn_22970 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._children[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._children["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("Schema.-children", this$);
    }
  }
};
malli.core._children = function malli$core$_children(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_children$arity$1 == null)) {
    return this$.malli$core$Schema$_children$arity$1(this$);
  } else {
    return malli$core$Schema$_children$dyn_22970(this$);
  }
};
var malli$core$Schema$_parent$dyn_22971 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._parent[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._parent["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("Schema.-parent", this$);
    }
  }
};
malli.core._parent = function malli$core$_parent(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_parent$arity$1 == null)) {
    return this$.malli$core$Schema$_parent$arity$1(this$);
  } else {
    return malli$core$Schema$_parent$dyn_22971(this$);
  }
};
var malli$core$Schema$_form$dyn_22980 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._form[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._form["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("Schema.-form", this$);
    }
  }
};
malli.core._form = function malli$core$_form(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_form$arity$1 == null)) {
    return this$.malli$core$Schema$_form$arity$1(this$);
  } else {
    return malli$core$Schema$_form$dyn_22980(this$);
  }
};
malli.core.AST = function() {
};
var malli$core$AST$_to_ast$dyn_22982 = function(this$, options) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._to_ast[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$, options) : m__4551__auto__.call(null, this$, options);
  } else {
    var m__4549__auto__ = malli.core._to_ast["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$, options) : m__4549__auto__.call(null, this$, options);
    } else {
      throw cljs.core.missing_protocol("AST.-to-ast", this$);
    }
  }
};
malli.core._to_ast = function malli$core$_to_ast(this$, options) {
  if (!(this$ == null) && !(this$.malli$core$AST$_to_ast$arity$2 == null)) {
    return this$.malli$core$AST$_to_ast$arity$2(this$, options);
  } else {
    return malli$core$AST$_to_ast$dyn_22982(this$, options);
  }
};
var malli$core$AST$_from_ast$dyn_22984 = function(this$, ast, options) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._from_ast[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(this$, ast, options) : m__4551__auto__.call(null, this$, ast, options);
  } else {
    var m__4549__auto__ = malli.core._from_ast["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(this$, ast, options) : m__4549__auto__.call(null, this$, ast, options);
    } else {
      throw cljs.core.missing_protocol("AST.-from-ast", this$);
    }
  }
};
malli.core._from_ast = function malli$core$_from_ast(this$, ast, options) {
  if (!(this$ == null) && !(this$.malli$core$AST$_from_ast$arity$3 == null)) {
    return this$.malli$core$AST$_from_ast$arity$3(this$, ast, options);
  } else {
    return malli$core$AST$_from_ast$dyn_22984(this$, ast, options);
  }
};
malli.core.EntryParser = function() {
};
var malli$core$EntryParser$_entry_keyset$dyn_22986 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._entry_keyset[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._entry_keyset["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("EntryParser.-entry-keyset", this$);
    }
  }
};
malli.core._entry_keyset = function malli$core$_entry_keyset(this$) {
  if (!(this$ == null) && !(this$.malli$core$EntryParser$_entry_keyset$arity$1 == null)) {
    return this$.malli$core$EntryParser$_entry_keyset$arity$1(this$);
  } else {
    return malli$core$EntryParser$_entry_keyset$dyn_22986(this$);
  }
};
var malli$core$EntryParser$_entry_children$dyn_22987 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._entry_children[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._entry_children["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("EntryParser.-entry-children", this$);
    }
  }
};
malli.core._entry_children = function malli$core$_entry_children(this$) {
  if (!(this$ == null) && !(this$.malli$core$EntryParser$_entry_children$arity$1 == null)) {
    return this$.malli$core$EntryParser$_entry_children$arity$1(this$);
  } else {
    return malli$core$EntryParser$_entry_children$dyn_22987(this$);
  }
};
var malli$core$EntryParser$_entry_entries$dyn_22988 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._entry_entries[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._entry_entries["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("EntryParser.-entry-entries", this$);
    }
  }
};
malli.core._entry_entries = function malli$core$_entry_entries(this$) {
  if (!(this$ == null) && !(this$.malli$core$EntryParser$_entry_entries$arity$1 == null)) {
    return this$.malli$core$EntryParser$_entry_entries$arity$1(this$);
  } else {
    return malli$core$EntryParser$_entry_entries$dyn_22988(this$);
  }
};
var malli$core$EntryParser$_entry_forms$dyn_22993 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._entry_forms[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._entry_forms["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("EntryParser.-entry-forms", this$);
    }
  }
};
malli.core._entry_forms = function malli$core$_entry_forms(this$) {
  if (!(this$ == null) && !(this$.malli$core$EntryParser$_entry_forms$arity$1 == null)) {
    return this$.malli$core$EntryParser$_entry_forms$arity$1(this$);
  } else {
    return malli$core$EntryParser$_entry_forms$dyn_22993(this$);
  }
};
malli.core.EntrySchema = function() {
};
var malli$core$EntrySchema$_entries$dyn_22998 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._entries[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._entries["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("EntrySchema.-entries", this$);
    }
  }
};
malli.core._entries = function malli$core$_entries(this$) {
  if (!(this$ == null) && !(this$.malli$core$EntrySchema$_entries$arity$1 == null)) {
    return this$.malli$core$EntrySchema$_entries$arity$1(this$);
  } else {
    return malli$core$EntrySchema$_entries$dyn_22998(this$);
  }
};
var malli$core$EntrySchema$_entry_parser$dyn_22999 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._entry_parser[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._entry_parser["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("EntrySchema.-entry-parser", this$);
    }
  }
};
malli.core._entry_parser = function malli$core$_entry_parser(this$) {
  if (!(this$ == null) && !(this$.malli$core$EntrySchema$_entry_parser$arity$1 == null)) {
    return this$.malli$core$EntrySchema$_entry_parser$arity$1(this$);
  } else {
    return malli$core$EntrySchema$_entry_parser$dyn_22999(this$);
  }
};
malli.core.Cached = function() {
};
var malli$core$Cached$_cache$dyn_23000 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._cache[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._cache["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("Cached.-cache", this$);
    }
  }
};
malli.core._cache = function malli$core$_cache(this$) {
  if (!(this$ == null) && !(this$.malli$core$Cached$_cache$arity$1 == null)) {
    return this$.malli$core$Cached$_cache$arity$1(this$);
  } else {
    return malli$core$Cached$_cache$dyn_23000(this$);
  }
};
malli.core.LensSchema = function() {
};
var malli$core$LensSchema$_keep$dyn_23002 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._keep[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._keep["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("LensSchema.-keep", this$);
    }
  }
};
malli.core._keep = function malli$core$_keep(this$) {
  if (!(this$ == null) && !(this$.malli$core$LensSchema$_keep$arity$1 == null)) {
    return this$.malli$core$LensSchema$_keep$arity$1(this$);
  } else {
    return malli$core$LensSchema$_keep$dyn_23002(this$);
  }
};
var malli$core$LensSchema$_get$dyn_23004 = function(this$, key, default$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._get[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, default$) : m__4551__auto__.call(null, this$, key, default$);
  } else {
    var m__4549__auto__ = malli.core._get["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, default$) : m__4549__auto__.call(null, this$, key, default$);
    } else {
      throw cljs.core.missing_protocol("LensSchema.-get", this$);
    }
  }
};
malli.core._get = function malli$core$_get(this$, key, default$) {
  if (!(this$ == null) && !(this$.malli$core$LensSchema$_get$arity$3 == null)) {
    return this$.malli$core$LensSchema$_get$arity$3(this$, key, default$);
  } else {
    return malli$core$LensSchema$_get$dyn_23004(this$, key, default$);
  }
};
var malli$core$LensSchema$_set$dyn_23005 = function(this$, key, value) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._set[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, value) : m__4551__auto__.call(null, this$, key, value);
  } else {
    var m__4549__auto__ = malli.core._set["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, value) : m__4549__auto__.call(null, this$, key, value);
    } else {
      throw cljs.core.missing_protocol("LensSchema.-set", this$);
    }
  }
};
malli.core._set = function malli$core$_set(this$, key, value) {
  if (!(this$ == null) && !(this$.malli$core$LensSchema$_set$arity$3 == null)) {
    return this$.malli$core$LensSchema$_set$arity$3(this$, key, value);
  } else {
    return malli$core$LensSchema$_set$dyn_23005(this$, key, value);
  }
};
malli.core.RefSchema = function() {
};
var malli$core$RefSchema$_ref$dyn_23006 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._ref[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._ref["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("RefSchema.-ref", this$);
    }
  }
};
malli.core._ref = function malli$core$_ref(this$) {
  if (!(this$ == null) && !(this$.malli$core$RefSchema$_ref$arity$1 == null)) {
    return this$.malli$core$RefSchema$_ref$arity$1(this$);
  } else {
    return malli$core$RefSchema$_ref$dyn_23006(this$);
  }
};
var malli$core$RefSchema$_deref$dyn_23007 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._deref[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._deref["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("RefSchema.-deref", this$);
    }
  }
};
malli.core._deref = function malli$core$_deref(this$) {
  if (!(this$ == null) && !(this$.malli$core$RefSchema$_deref$arity$1 == null)) {
    return this$.malli$core$RefSchema$_deref$arity$1(this$);
  } else {
    return malli$core$RefSchema$_deref$dyn_23007(this$);
  }
};
malli.core.Walker = function() {
};
var malli$core$Walker$_accept$dyn_23008 = function(this$, schema, path, options) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._accept[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$4(this$, schema, path, options) : m__4551__auto__.call(null, this$, schema, path, options);
  } else {
    var m__4549__auto__ = malli.core._accept["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$4(this$, schema, path, options) : m__4549__auto__.call(null, this$, schema, path, options);
    } else {
      throw cljs.core.missing_protocol("Walker.-accept", this$);
    }
  }
};
malli.core._accept = function malli$core$_accept(this$, schema, path, options) {
  if (!(this$ == null) && !(this$.malli$core$Walker$_accept$arity$4 == null)) {
    return this$.malli$core$Walker$_accept$arity$4(this$, schema, path, options);
  } else {
    return malli$core$Walker$_accept$dyn_23008(this$, schema, path, options);
  }
};
var malli$core$Walker$_inner$dyn_23012 = function(this$, schema, path, options) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._inner[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$4(this$, schema, path, options) : m__4551__auto__.call(null, this$, schema, path, options);
  } else {
    var m__4549__auto__ = malli.core._inner["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$4(this$, schema, path, options) : m__4549__auto__.call(null, this$, schema, path, options);
    } else {
      throw cljs.core.missing_protocol("Walker.-inner", this$);
    }
  }
};
malli.core._inner = function malli$core$_inner(this$, schema, path, options) {
  if (!(this$ == null) && !(this$.malli$core$Walker$_inner$arity$4 == null)) {
    return this$.malli$core$Walker$_inner$arity$4(this$, schema, path, options);
  } else {
    return malli$core$Walker$_inner$dyn_23012(this$, schema, path, options);
  }
};
var malli$core$Walker$_outer$dyn_23013 = function(this$, schema, path, children, options) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._outer[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$5(this$, schema, path, children, options) : m__4551__auto__.call(null, this$, schema, path, children, options);
  } else {
    var m__4549__auto__ = malli.core._outer["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$5(this$, schema, path, children, options) : m__4549__auto__.call(null, this$, schema, path, children, options);
    } else {
      throw cljs.core.missing_protocol("Walker.-outer", this$);
    }
  }
};
malli.core._outer = function malli$core$_outer(this$, schema, path, children, options) {
  if (!(this$ == null) && !(this$.malli$core$Walker$_outer$arity$5 == null)) {
    return this$.malli$core$Walker$_outer$arity$5(this$, schema, path, children, options);
  } else {
    return malli$core$Walker$_outer$dyn_23013(this$, schema, path, children, options);
  }
};
malli.core.Transformer = function() {
};
var malli$core$Transformer$_transformer_chain$dyn_23014 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._transformer_chain[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._transformer_chain["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("Transformer.-transformer-chain", this$);
    }
  }
};
malli.core._transformer_chain = function malli$core$_transformer_chain(this$) {
  if (!(this$ == null) && !(this$.malli$core$Transformer$_transformer_chain$arity$1 == null)) {
    return this$.malli$core$Transformer$_transformer_chain$arity$1(this$);
  } else {
    return malli$core$Transformer$_transformer_chain$dyn_23014(this$);
  }
};
var malli$core$Transformer$_value_transformer$dyn_23015 = function(this$, schema, method, options) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._value_transformer[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$4(this$, schema, method, options) : m__4551__auto__.call(null, this$, schema, method, options);
  } else {
    var m__4549__auto__ = malli.core._value_transformer["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$4(this$, schema, method, options) : m__4549__auto__.call(null, this$, schema, method, options);
    } else {
      throw cljs.core.missing_protocol("Transformer.-value-transformer", this$);
    }
  }
};
malli.core._value_transformer = function malli$core$_value_transformer(this$, schema, method, options) {
  if (!(this$ == null) && !(this$.malli$core$Transformer$_value_transformer$arity$4 == null)) {
    return this$.malli$core$Transformer$_value_transformer$arity$4(this$, schema, method, options);
  } else {
    return malli$core$Transformer$_value_transformer$dyn_23015(this$, schema, method, options);
  }
};
malli.core.RegexSchema = function() {
};
var malli$core$RegexSchema$_regex_op_QMARK_$dyn_23016 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._regex_op_QMARK_[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._regex_op_QMARK_["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("RegexSchema.-regex-op?", this$);
    }
  }
};
malli.core._regex_op_QMARK_ = function malli$core$_regex_op_QMARK_(this$) {
  if (!(this$ == null) && !(this$.malli$core$RegexSchema$_regex_op_QMARK_$arity$1 == null)) {
    return this$.malli$core$RegexSchema$_regex_op_QMARK_$arity$1(this$);
  } else {
    return malli$core$RegexSchema$_regex_op_QMARK_$dyn_23016(this$);
  }
};
var malli$core$RegexSchema$_regex_validator$dyn_23017 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._regex_validator[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._regex_validator["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("RegexSchema.-regex-validator", this$);
    }
  }
};
malli.core._regex_validator = function malli$core$_regex_validator(this$) {
  if (!(this$ == null) && !(this$.malli$core$RegexSchema$_regex_validator$arity$1 == null)) {
    return this$.malli$core$RegexSchema$_regex_validator$arity$1(this$);
  } else {
    return malli$core$RegexSchema$_regex_validator$dyn_23017(this$);
  }
};
var malli$core$RegexSchema$_regex_explainer$dyn_23018 = function(this$, path) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._regex_explainer[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$, path) : m__4551__auto__.call(null, this$, path);
  } else {
    var m__4549__auto__ = malli.core._regex_explainer["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$, path) : m__4549__auto__.call(null, this$, path);
    } else {
      throw cljs.core.missing_protocol("RegexSchema.-regex-explainer", this$);
    }
  }
};
malli.core._regex_explainer = function malli$core$_regex_explainer(this$, path) {
  if (!(this$ == null) && !(this$.malli$core$RegexSchema$_regex_explainer$arity$2 == null)) {
    return this$.malli$core$RegexSchema$_regex_explainer$arity$2(this$, path);
  } else {
    return malli$core$RegexSchema$_regex_explainer$dyn_23018(this$, path);
  }
};
var malli$core$RegexSchema$_regex_unparser$dyn_23019 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._regex_unparser[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._regex_unparser["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("RegexSchema.-regex-unparser", this$);
    }
  }
};
malli.core._regex_unparser = function malli$core$_regex_unparser(this$) {
  if (!(this$ == null) && !(this$.malli$core$RegexSchema$_regex_unparser$arity$1 == null)) {
    return this$.malli$core$RegexSchema$_regex_unparser$arity$1(this$);
  } else {
    return malli$core$RegexSchema$_regex_unparser$dyn_23019(this$);
  }
};
var malli$core$RegexSchema$_regex_parser$dyn_23020 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._regex_parser[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._regex_parser["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("RegexSchema.-regex-parser", this$);
    }
  }
};
malli.core._regex_parser = function malli$core$_regex_parser(this$) {
  if (!(this$ == null) && !(this$.malli$core$RegexSchema$_regex_parser$arity$1 == null)) {
    return this$.malli$core$RegexSchema$_regex_parser$arity$1(this$);
  } else {
    return malli$core$RegexSchema$_regex_parser$dyn_23020(this$);
  }
};
var malli$core$RegexSchema$_regex_transformer$dyn_23021 = function(this$, transformer, method, options) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._regex_transformer[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$4(this$, transformer, method, options) : m__4551__auto__.call(null, this$, transformer, method, options);
  } else {
    var m__4549__auto__ = malli.core._regex_transformer["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$4(this$, transformer, method, options) : m__4549__auto__.call(null, this$, transformer, method, options);
    } else {
      throw cljs.core.missing_protocol("RegexSchema.-regex-transformer", this$);
    }
  }
};
malli.core._regex_transformer = function malli$core$_regex_transformer(this$, transformer, method, options) {
  if (!(this$ == null) && !(this$.malli$core$RegexSchema$_regex_transformer$arity$4 == null)) {
    return this$.malli$core$RegexSchema$_regex_transformer$arity$4(this$, transformer, method, options);
  } else {
    return malli$core$RegexSchema$_regex_transformer$dyn_23021(this$, transformer, method, options);
  }
};
var malli$core$RegexSchema$_regex_min_max$dyn_23022 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = malli.core._regex_min_max[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = malli.core._regex_min_max["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("RegexSchema.-regex-min-max", this$);
    }
  }
};
malli.core._regex_min_max = function malli$core$_regex_min_max(this$) {
  if (!(this$ == null) && !(this$.malli$core$RegexSchema$_regex_min_max$arity$1 == null)) {
    return this$.malli$core$RegexSchema$_regex_min_max$arity$1(this$);
  } else {
    return malli$core$RegexSchema$_regex_min_max$dyn_23022(this$);
  }
};
malli.core._ref_schema_QMARK_ = function malli$core$_ref_schema_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$RefSchema$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.core._entry_parser_QMARK_ = function malli$core$_entry_parser_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$EntryParser$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.core._entry_schema_QMARK_ = function malli$core$_entry_schema_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$EntrySchema$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.core._cached_QMARK_ = function malli$core$_cached_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$Cached$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.core._ast_QMARK_ = function malli$core$_ast_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$AST$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.core._transformer_QMARK_ = function malli$core$_transformer_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$Transformer$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.core.RegexSchema["_"] = true;
malli.core._regex_op_QMARK_["_"] = function(_) {
  return false;
};
malli.core._regex_validator["_"] = function(this$) {
  if (malli.core._ref_schema_QMARK_(this$)) {
    return malli.core._regex_validator(malli.core._deref(this$));
  } else {
    return malli.impl.regex.item_validator(malli.core._validator(this$));
  }
};
malli.core._regex_explainer["_"] = function(this$, path) {
  if (malli.core._ref_schema_QMARK_(this$)) {
    return malli.core._regex_explainer(malli.core._deref(this$), path);
  } else {
    return malli.impl.regex.item_explainer(path, this$, malli.core._explainer(this$, path));
  }
};
malli.core._regex_parser["_"] = function(this$) {
  if (malli.core._ref_schema_QMARK_(this$)) {
    return malli.core._regex_parser(malli.core._deref(this$));
  } else {
    return malli.impl.regex.item_parser(malli.core.parser.cljs$core$IFn$_invoke$arity$1 ? malli.core.parser.cljs$core$IFn$_invoke$arity$1(this$) : malli.core.parser.call(null, this$));
  }
};
malli.core._regex_unparser["_"] = function(this$) {
  if (malli.core._ref_schema_QMARK_(this$)) {
    return malli.core._regex_unparser(malli.core._deref(this$));
  } else {
    return malli.impl.regex.item_unparser(malli.core.unparser.cljs$core$IFn$_invoke$arity$1 ? malli.core.unparser.cljs$core$IFn$_invoke$arity$1(this$) : malli.core.unparser.call(null, this$));
  }
};
malli.core._regex_transformer["_"] = function(this$, transformer, method, options) {
  if (malli.core._ref_schema_QMARK_(this$)) {
    return malli.core._regex_transformer(malli.core._deref(this$), transformer, method, options);
  } else {
    return malli.impl.regex.item_transformer(method, malli.core._validator(this$), function() {
      var or__4253__auto__ = malli.core._transformer(this$, transformer, method, options);
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        return cljs.core.identity;
      }
    }());
  }
};
malli.core._regex_min_max["_"] = function(_) {
  return new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$min, 1, cljs$cst$keyword$max, 1], null);
};
malli.core._deprecated_BANG_ = function malli$core$_deprecated_BANG_(x) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["DEPRECATED:", x], 0));
};
malli.core._fail_BANG_ = function malli$core$_fail_BANG_(var_args) {
  var G__20737 = arguments.length;
  switch(G__20737) {
    case 1:
      return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$1 = function(type) {
  return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(type, null);
};
malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2 = function(type, data) {
  throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([cljs.core.str.cljs$core$IFn$_invoke$arity$1(type), " ", cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([data], 0))].join(""), new cljs.core.PersistentArrayMap(null, 3, [cljs$cst$keyword$type, type, cljs$cst$keyword$message, type, cljs$cst$keyword$data, data], null));
};
malli.core._fail_BANG_.cljs$lang$maxFixedArity = 2;
malli.core._safe_pred = function malli$core$_safe_pred(f) {
  return function(p1__20744_SHARP_) {
    try {
      return cljs.core.boolean$(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__20744_SHARP_) : f.call(null, p1__20744_SHARP_));
    } catch (e20748) {
      if (e20748 instanceof Error) {
        var _ = e20748;
        return false;
      } else {
        throw e20748;
      }
    }
  };
};
malli.core._keyword__GT_string = function malli$core$_keyword__GT_string(x) {
  if (x instanceof cljs.core.Keyword) {
    var temp__5751__auto__ = cljs.core.namespace(x);
    if (cljs.core.truth_(temp__5751__auto__)) {
      var nn = temp__5751__auto__;
      return [nn, "/", cljs.core.name(x)].join("");
    } else {
      return cljs.core.name(x);
    }
  } else {
    return x;
  }
};
malli.core._guard = function malli$core$_guard(pred, tf) {
  if (cljs.core.truth_(tf)) {
    return function(x) {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(x) : pred.call(null, x))) {
        return tf.cljs$core$IFn$_invoke$arity$1 ? tf.cljs$core$IFn$_invoke$arity$1(x) : tf.call(null, x);
      } else {
        return x;
      }
    };
  } else {
    return null;
  }
};
malli.core._unlift_keys = function malli$core$_unlift_keys(m, prefix) {
  return cljs.core.reduce_kv(function(p1__20756_SHARP_, p2__20755_SHARP_, p3__20757_SHARP_) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.name(prefix), cljs.core.namespace(p2__20755_SHARP_))) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__20756_SHARP_, cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(cljs.core.name(p2__20755_SHARP_)), p3__20757_SHARP_);
    } else {
      return p1__20756_SHARP_;
    }
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
malli.core._check_children_QMARK_ = function malli$core$_check_children_QMARK_() {
  return true;
};
malli.core._check_children_BANG_ = function malli$core$_check_children_BANG_(var_args) {
  var G__20770 = arguments.length;
  switch(G__20770) {
    case 4:
      return malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$4 = function(type, properties, children, props) {
  malli.core._deprecated_BANG_("use (m/-check-children! type properties children min max) instead.");
  return malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5(type, properties, children, cljs$cst$keyword$min.cljs$core$IFn$_invoke$arity$1(props), cljs$cst$keyword$max.cljs$core$IFn$_invoke$arity$1(props));
};
malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5 = function(type, properties, children, min, max) {
  if (malli.core._check_children_QMARK_()) {
    var temp__5753__auto__ = function() {
      var and__4251__auto__ = cljs.core.sequential_QMARK_(children) || children == null;
      if (and__4251__auto__) {
        return cljs.core.count(children);
      } else {
        return and__4251__auto__;
      }
    }();
    if (cljs.core.truth_(temp__5753__auto__)) {
      var size = temp__5753__auto__;
      if (cljs.core.truth_(function() {
        var or__4253__auto__ = function() {
          var and__4251__auto__ = min;
          if (cljs.core.truth_(and__4251__auto__)) {
            return size < min;
          } else {
            return and__4251__auto__;
          }
        }();
        if (cljs.core.truth_(or__4253__auto__)) {
          return or__4253__auto__;
        } else {
          var and__4251__auto__ = max;
          if (cljs.core.truth_(and__4251__auto__)) {
            return size > max;
          } else {
            return and__4251__auto__;
          }
        }
      }())) {
        return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_child_DASH_error, new cljs.core.PersistentArrayMap(null, 5, [cljs$cst$keyword$type, type, cljs$cst$keyword$properties, properties, cljs$cst$keyword$children, children, cljs$cst$keyword$min, min, cljs$cst$keyword$max, max], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  } else {
    return null;
  }
};
malli.core._check_children_BANG_.cljs$lang$maxFixedArity = 5;
malli.core._pointer = function malli$core$_pointer(id, schema, options) {
  return malli.core._into_schema(function() {
    var G__20789 = new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$id, id], null);
    return malli.core._schema_schema.cljs$core$IFn$_invoke$arity$1 ? malli.core._schema_schema.cljs$core$IFn$_invoke$arity$1(G__20789) : malli.core._schema_schema.call(null, G__20789);
  }(), null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema], null), options);
};
malli.core._reference_QMARK_ = function malli$core$_reference_QMARK_(_QMARK_schema) {
  return typeof _QMARK_schema === "string" || cljs.core.qualified_keyword_QMARK_(_QMARK_schema);
};
malli.core._lazy = function malli$core$_lazy(ref, options) {
  return malli.core._into_schema(function() {
    var G__20801 = new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$lazy, true], null);
    return malli.core._ref_schema.cljs$core$IFn$_invoke$arity$1 ? malli.core._ref_schema.cljs$core$IFn$_invoke$arity$1(G__20801) : malli.core._ref_schema.call(null, G__20801);
  }(), null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ref], null), options);
};
malli.core._boolean_fn = function malli$core$_boolean_fn(x) {
  if (cljs.core.boolean_QMARK_(x)) {
    return cljs.core.constantly(x);
  } else {
    if (cljs.core.ifn_QMARK_(x)) {
      return x;
    } else {
      return cljs.core.constantly(false);
    }
  }
};
malli.core._comp = function malli$core$_comp(var_args) {
  var G__20824 = arguments.length;
  switch(G__20824) {
    case 0:
      return malli.core._comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.core._comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core._comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core._comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___23030 = arguments.length;
      var i__4865__auto___23031 = 0;
      while (true) {
        if (i__4865__auto___23031 < len__4864__auto___23030) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___23031]);
          var G__23032 = i__4865__auto___23031 + 1;
          i__4865__auto___23031 = G__23032;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(3), 0, null);
      return malli.core._comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4886__auto__);
  }
};
malli.core._comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
malli.core._comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
malli.core._comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function(x) {
    var G__20844 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20844) : f.call(null, G__20844);
  };
};
malli.core._comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function(x) {
    var G__20851 = function() {
      var G__20852 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
      return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20852) : g.call(null, G__20852);
    }();
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20851) : f.call(null, G__20851);
  };
};
malli.core._comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  return malli.core._comp.cljs$core$IFn$_invoke$arity$2(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(malli.core._comp, fs), function(x) {
    var G__20865 = function() {
      var G__20866 = f3.cljs$core$IFn$_invoke$arity$1 ? f3.cljs$core$IFn$_invoke$arity$1(x) : f3.call(null, x);
      return f2.cljs$core$IFn$_invoke$arity$1 ? f2.cljs$core$IFn$_invoke$arity$1(G__20866) : f2.call(null, G__20866);
    }();
    return f1.cljs$core$IFn$_invoke$arity$1 ? f1.cljs$core$IFn$_invoke$arity$1(G__20865) : f1.call(null, G__20865);
  });
};
malli.core._comp.cljs$lang$applyTo = function(seq20819) {
  var G__20820 = cljs.core.first(seq20819);
  var seq20819__$1 = cljs.core.next(seq20819);
  var G__20821 = cljs.core.first(seq20819__$1);
  var seq20819__$2 = cljs.core.next(seq20819__$1);
  var G__20822 = cljs.core.first(seq20819__$2);
  var seq20819__$3 = cljs.core.next(seq20819__$2);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__20820, G__20821, G__20822, seq20819__$3);
};
malli.core._comp.cljs$lang$maxFixedArity = 3;
malli.core._update = function malli$core$_update(x, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(x, k, function() {
    var G__20871 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(x, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20871) : f.call(null, G__20871);
  }());
};
malli.core._equals = function malli$core$_equals(x, y) {
  return x === y || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
malli.core._vmap = function malli$core$_vmap(var_args) {
  var G__20886 = arguments.length;
  switch(G__20886) {
    case 1:
      return malli.core._vmap.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core._vmap.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._vmap.cljs$core$IFn$_invoke$arity$1 = function(os) {
  return malli.impl.util._vmap.cljs$core$IFn$_invoke$arity$2(cljs.core.identity, os);
};
malli.core._vmap.cljs$core$IFn$_invoke$arity$2 = function(f, os) {
  return malli.impl.util._vmap.cljs$core$IFn$_invoke$arity$2(f, os);
};
malli.core._vmap.cljs$lang$maxFixedArity = 2;
malli.core._memoize = function malli$core$_memoize(f) {
  var value = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);
  return function() {
    var or__4253__auto__ = cljs.core.deref(value);
    if (cljs.core.truth_(or__4253__auto__)) {
      return or__4253__auto__;
    } else {
      return cljs.core.reset_BANG_(value, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    }
  };
};
malli.core._function_info = function malli$core$_function_info(schema) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(malli.core.type.cljs$core$IFn$_invoke$arity$1 ? malli.core.type.cljs$core$IFn$_invoke$arity$1(schema) : malli.core.type.call(null, schema), cljs$cst$keyword$_EQ__GT_)) {
    var vec__20920 = malli.core._children(schema);
    var input = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20920, 0, null);
    var output = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20920, 1, null);
    var map__20923 = malli.core._regex_min_max(input);
    var map__20923__$1 = cljs.core.__destructure_map(map__20923);
    var min = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20923__$1, cljs$cst$keyword$min);
    var max = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20923__$1, cljs$cst$keyword$max);
    var G__20927 = new cljs.core.PersistentArrayMap(null, 4, [cljs$cst$keyword$min, min, cljs$cst$keyword$arity, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(min, max) ? min : cljs$cst$keyword$varargs, cljs$cst$keyword$input, input, cljs$cst$keyword$output, output], null);
    if (cljs.core.truth_(max)) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__20927, cljs$cst$keyword$max, max);
    } else {
      return G__20927;
    }
  } else {
    return null;
  }
};
malli.core._group_by_arity_BANG_ = function malli$core$_group_by_arity_BANG_(infos) {
  var aritys = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashSet.EMPTY);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(acc, p__20931) {
    var map__20933 = p__20931;
    var map__20933__$1 = cljs.core.__destructure_map(map__20933);
    var info = map__20933__$1;
    var min = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20933__$1, cljs$cst$keyword$min);
    var arity = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20933__$1, cljs$cst$keyword$arity);
    var vararg = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$varargs, arity);
    var min__$1 = cljs.core.truth_(function() {
      var and__4251__auto__ = vararg;
      if (and__4251__auto__) {
        var fexpr__20939 = cljs.core.deref(aritys);
        return fexpr__20939.cljs$core$IFn$_invoke$arity$1 ? fexpr__20939.cljs$core$IFn$_invoke$arity$1(min) : fexpr__20939.call(null, min);
      } else {
        return and__4251__auto__;
      }
    }()) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.max, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.int_QMARK_, cljs.core.deref(aritys))) + 1 : min;
    if (cljs.core.truth_(function() {
      var and__4251__auto__ = vararg;
      if (and__4251__auto__) {
        var fexpr__20941 = cljs.core.deref(aritys);
        return fexpr__20941.cljs$core$IFn$_invoke$arity$1 ? fexpr__20941.cljs$core$IFn$_invoke$arity$1(arity) : fexpr__20941.call(null, arity);
      } else {
        return and__4251__auto__;
      }
    }())) {
      return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_multiple_DASH_varargs, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$infos, infos], null));
    } else {
      if (cljs.core.truth_(function() {
        var fexpr__20963 = cljs.core.deref(aritys);
        return fexpr__20963.cljs$core$IFn$_invoke$arity$1 ? fexpr__20963.cljs$core$IFn$_invoke$arity$1(min__$1) : fexpr__20963.call(null, min__$1);
      }())) {
        return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_duplicate_DASH_arities, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$infos, infos], null));
      } else {
        cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(aritys, cljs.core.conj, arity);
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(acc, arity, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(info, cljs$cst$keyword$min, min__$1));
      }
    }
  }, cljs.core.PersistentArrayMap.EMPTY, infos);
};
malli.core._re_min_max = function malli$core$_re_min_max(f, p__20985, child) {
  var map__20988 = p__20985;
  var map__20988__$1 = cljs.core.__destructure_map(map__20988);
  var min_SINGLEQUOTE_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20988__$1, cljs$cst$keyword$min);
  var max_SINGLEQUOTE_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20988__$1, cljs$cst$keyword$max);
  var map__20993 = malli.core._regex_min_max(child);
  var map__20993__$1 = cljs.core.__destructure_map(map__20993);
  var min_SINGLEQUOTE__SINGLEQUOTE_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20993__$1, cljs$cst$keyword$min);
  var max_SINGLEQUOTE__SINGLEQUOTE_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20993__$1, cljs$cst$keyword$max);
  var G__20996 = new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$min, function() {
    var G__20997 = function() {
      var or__4253__auto__ = min_SINGLEQUOTE_;
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        return 0;
      }
    }();
    var G__20998 = min_SINGLEQUOTE__SINGLEQUOTE_;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20997, G__20998) : f.call(null, G__20997, G__20998);
  }()], null);
  if (cljs.core.truth_(function() {
    var and__4251__auto__ = max_SINGLEQUOTE_;
    if (cljs.core.truth_(and__4251__auto__)) {
      return max_SINGLEQUOTE__SINGLEQUOTE_;
    } else {
      return and__4251__auto__;
    }
  }())) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__20996, cljs$cst$keyword$max, f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(max_SINGLEQUOTE_, max_SINGLEQUOTE__SINGLEQUOTE_) : f.call(null, max_SINGLEQUOTE_, max_SINGLEQUOTE__SINGLEQUOTE_));
  } else {
    return G__20996;
  }
};
malli.core._re_alt_min_max = function malli$core$_re_alt_min_max(p__21016, child) {
  var map__21020 = p__21016;
  var map__21020__$1 = cljs.core.__destructure_map(map__21020);
  var min_SINGLEQUOTE_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21020__$1, cljs$cst$keyword$min);
  var max_SINGLEQUOTE_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21020__$1, cljs$cst$keyword$max);
  var map__21071 = malli.core._regex_min_max(child);
  var map__21071__$1 = cljs.core.__destructure_map(map__21071);
  var min_SINGLEQUOTE__SINGLEQUOTE_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21071__$1, cljs$cst$keyword$min);
  var max_SINGLEQUOTE__SINGLEQUOTE_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21071__$1, cljs$cst$keyword$max);
  var G__21078 = new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$min, function() {
    var x__4339__auto__ = function() {
      var or__4253__auto__ = min_SINGLEQUOTE_;
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        return malli.impl.util._PLUS_max_size_PLUS_;
      }
    }();
    var y__4340__auto__ = min_SINGLEQUOTE__SINGLEQUOTE_;
    return x__4339__auto__ < y__4340__auto__ ? x__4339__auto__ : y__4340__auto__;
  }()], null);
  if (cljs.core.truth_(function() {
    var and__4251__auto__ = max_SINGLEQUOTE_;
    if (cljs.core.truth_(and__4251__auto__)) {
      return max_SINGLEQUOTE__SINGLEQUOTE_;
    } else {
      return and__4251__auto__;
    }
  }())) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__21078, cljs$cst$keyword$max, function() {
      var x__4336__auto__ = max_SINGLEQUOTE_;
      var y__4337__auto__ = max_SINGLEQUOTE__SINGLEQUOTE_;
      return x__4336__auto__ > y__4337__auto__ ? x__4336__auto__ : y__4337__auto__;
    }());
  } else {
    return G__21078;
  }
};
malli.core._register_var = function malli$core$_register_var(registry, _QMARK_v) {
  var vec__21098 = cljs.core.vector_QMARK_(_QMARK_v) ? _QMARK_v : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_v, cljs.core.deref(_QMARK_v)], null);
  var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21098, 0, null);
  var pred = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21098, 1, null);
  var name = cljs$cst$keyword$name.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(v));
  var schema = function() {
    var G__21104 = new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$type, name, cljs$cst$keyword$pred, pred], null);
    return malli.core._simple_schema.cljs$core$IFn$_invoke$arity$1 ? malli.core._simple_schema.cljs$core$IFn$_invoke$arity$1(G__21104) : malli.core._simple_schema.call(null, G__21104);
  }();
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(registry, name, schema), cljs.core.deref(v), schema);
};
malli.core._registry = function malli$core$_registry(var_args) {
  var G__21111 = arguments.length;
  switch(G__21111) {
    case 0:
      return malli.core._registry.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.core._registry.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._registry.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.core.default_registry;
};
malli.core._registry.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  var or__4253__auto__ = cljs.core.truth_(opts) ? malli.registry.registry(opts.cljs$core$IFn$_invoke$arity$1 ? opts.cljs$core$IFn$_invoke$arity$1(cljs$cst$keyword$registry) : opts.call(null, cljs$cst$keyword$registry)) : null;
  if (cljs.core.truth_(or__4253__auto__)) {
    return or__4253__auto__;
  } else {
    return malli.core.default_registry;
  }
};
malli.core._registry.cljs$lang$maxFixedArity = 1;
malli.core._property_registry = function malli$core$_property_registry(m, options, f) {
  var options__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(options, cljs$cst$keyword$malli_DOT_core_SLASH_allow_DASH_invalid_DASH_refs, true);
  return cljs.core.reduce_kv(function(acc, k, v) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(acc, k, function() {
      var G__21134 = malli.core.schema.cljs$core$IFn$_invoke$arity$2 ? malli.core.schema.cljs$core$IFn$_invoke$arity$2(v, options__$1) : malli.core.schema.call(null, v, options__$1);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21134) : f.call(null, G__21134);
    }());
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
malli.core._delayed_registry = function malli$core$_delayed_registry(m, f) {
  return cljs.core.reduce_kv(function(acc, k, v) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(acc, k, function() {
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core21144 !== "undefined") {
      } else {
        malli.core.t_malli$core21144 = function(m, f, acc, k, v, meta21145) {
          this.m = m;
          this.f = f;
          this.acc = acc;
          this.k = k;
          this.v = v;
          this.meta21145 = meta21145;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core21144.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21146, meta21145__$1) {
          var self__ = this;
          var _21146__$1 = this;
          return new malli.core.t_malli$core21144(self__.m, self__.f, self__.acc, self__.k, self__.v, meta21145__$1);
        };
        malli.core.t_malli$core21144.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21146) {
          var self__ = this;
          var _21146__$1 = this;
          return self__.meta21145;
        };
        malli.core.t_malli$core21144.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21144.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(_, ___$1, ___$2, options) {
          var self__ = this;
          var ___$3 = this;
          return self__.f.cljs$core$IFn$_invoke$arity$2 ? self__.f.cljs$core$IFn$_invoke$arity$2(self__.v, options) : self__.f.call(null, self__.v, options);
        };
        malli.core.t_malli$core21144.getBasis = function() {
          return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$m, cljs$cst$symbol$f, cljs$cst$symbol$acc, cljs$cst$symbol$k, cljs$cst$symbol$v, cljs$cst$symbol$meta21145], null);
        };
        malli.core.t_malli$core21144.cljs$lang$type = true;
        malli.core.t_malli$core21144.cljs$lang$ctorStr = "malli.core/t_malli$core21144";
        malli.core.t_malli$core21144.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
          return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core21144");
        };
        malli.core.__GT_t_malli$core21144 = function malli$core$_delayed_registry_$___GT_t_malli$core21144(m__$1, f__$1, acc__$1, k__$1, v__$1, meta21145) {
          return new malli.core.t_malli$core21144(m__$1, f__$1, acc__$1, k__$1, v__$1, meta21145);
        };
      }
      return new malli.core.t_malli$core21144(m, f, acc, k, v, cljs.core.PersistentArrayMap.EMPTY);
    }());
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
malli.core._lookup = function malli$core$_lookup(_QMARK_schema, options) {
  var registry = malli.core._registry.cljs$core$IFn$_invoke$arity$1(options);
  var or__4253__auto__ = malli.registry._schema(registry, _QMARK_schema);
  if (cljs.core.truth_(or__4253__auto__)) {
    return or__4253__auto__;
  } else {
    var G__21190 = registry;
    var G__21190__$1 = G__21190 == null ? null : malli.registry._schema(G__21190, cljs.core.type(_QMARK_schema));
    if (G__21190__$1 == null) {
      return null;
    } else {
      return malli.core._into_schema(G__21190__$1, null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_schema], null), options);
    }
  }
};
malli.core._lookup_BANG_ = function malli$core$_lookup_BANG_(_QMARK_schema, f, options) {
  var or__4253__auto__ = function() {
    var and__4251__auto__ = f;
    if (cljs.core.truth_(and__4251__auto__)) {
      var and__4251__auto____$1 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(_QMARK_schema) : f.call(null, _QMARK_schema);
      if (cljs.core.truth_(and__4251__auto____$1)) {
        return _QMARK_schema;
      } else {
        return and__4251__auto____$1;
      }
    } else {
      return and__4251__auto__;
    }
  }();
  if (cljs.core.truth_(or__4253__auto__)) {
    return or__4253__auto__;
  } else {
    var or__4253__auto____$1 = malli.core._lookup(_QMARK_schema, options);
    if (cljs.core.truth_(or__4253__auto____$1)) {
      return or__4253__auto____$1;
    } else {
      return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_schema, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$schema, _QMARK_schema], null));
    }
  }
};
malli.core._properties_and_options = function malli$core$_properties_and_options(properties, options, f) {
  var temp__5751__auto__ = cljs$cst$keyword$registry.cljs$core$IFn$_invoke$arity$1(properties);
  if (cljs.core.truth_(temp__5751__auto__)) {
    var r = temp__5751__auto__;
    var options__$1 = malli.core._update(options, cljs$cst$keyword$registry, function(p1__21216_SHARP_) {
      return malli.registry.composite_registry.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([r, function() {
        var or__4253__auto__ = p1__21216_SHARP_;
        if (cljs.core.truth_(or__4253__auto__)) {
          return or__4253__auto__;
        } else {
          return malli.core._registry.cljs$core$IFn$_invoke$arity$1(options);
        }
      }()], 0));
    });
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(properties, cljs$cst$keyword$registry, malli.core._property_registry(r, options__$1, f)), options__$1], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [properties, options], null);
  }
};
malli.core._create_cache = function malli$core$_create_cache(_options) {
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
};
malli.core._cached = function malli$core$_cached(s, k, f) {
  if (malli.core._cached_QMARK_(s)) {
    var c = malli.core._cache(s);
    var or__4253__auto__ = function() {
      var fexpr__21249 = cljs.core.deref(c);
      return fexpr__21249.cljs$core$IFn$_invoke$arity$1 ? fexpr__21249.cljs$core$IFn$_invoke$arity$1(k) : fexpr__21249.call(null, k);
    }();
    if (cljs.core.truth_(or__4253__auto__)) {
      return or__4253__auto__;
    } else {
      var fexpr__21254 = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(c, cljs.core.assoc, k, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(s) : f.call(null, s));
      return fexpr__21254.cljs$core$IFn$_invoke$arity$1 ? fexpr__21254.cljs$core$IFn$_invoke$arity$1(k) : fexpr__21254.call(null, k);
    }
  } else {
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(s) : f.call(null, s);
  }
};
malli.core._create_form = function malli$core$_create_form(type, properties, children, options) {
  var has_children = cljs.core.seq(children);
  var has_properties = cljs.core.seq(properties);
  var properties__$1 = has_properties ? function() {
    var registry = cljs$cst$keyword$registry.cljs$core$IFn$_invoke$arity$1(properties);
    var G__21256 = properties;
    if (cljs.core.truth_(registry)) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__21256, cljs$cst$keyword$registry, malli.core._property_registry(registry, options, malli.core._form));
    } else {
      return G__21256;
    }
  }() : null;
  if (has_properties && has_children) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [type, properties__$1], null), children);
  } else {
    if (has_properties) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [type, properties__$1], null);
    } else {
      if (has_children) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [type], null), children);
      } else {
        return type;
      }
    }
  }
};
malli.core._simple_form = function malli$core$_simple_form(parent, properties, children, f, options) {
  return malli.core._create_form(malli.core._type(parent), properties, malli.core._vmap.cljs$core$IFn$_invoke$arity$2(f, children), options);
};
malli.core._create_entry_form = function malli$core$_create_entry_form(parent, properties, entry_parser, options) {
  return malli.core._create_form(malli.core._type(parent), properties, malli.core._entry_forms(entry_parser), options);
};
malli.core._inner_indexed = function malli$core$_inner_indexed(walker, path, children, options) {
  return malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p__21261) {
    var vec__21262 = p__21261;
    var i = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21262, 0, null);
    var c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21262, 1, null);
    return malli.core._inner(walker, c, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(path, i), options);
  }, cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(cljs.core.vector, children));
};
malli.core._inner_entries = function malli$core$_inner_entries(walker, path, entries, options) {
  return malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p__21266) {
    var vec__21267 = p__21266;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21267, 0, null);
    var s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21267, 1, null);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._properties(s), malli.core._inner(walker, s, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(path, k), options)], null);
  }, entries);
};
malli.core._walk_entries = function malli$core$_walk_entries(schema, walker, path, options) {
  if (cljs.core.truth_(malli.core._accept(walker, schema, path, options))) {
    return malli.core._outer(walker, schema, path, malli.core._inner_entries(walker, path, malli.core._entries(schema), options), options);
  } else {
    return null;
  }
};
malli.core._walk_indexed = function malli$core$_walk_indexed(schema, walker, path, options) {
  if (cljs.core.truth_(malli.core._accept(walker, schema, path, options))) {
    return malli.core._outer(walker, schema, path, malli.core._inner_indexed(walker, path, malli.core._children(schema), options), options);
  } else {
    return null;
  }
};
malli.core._walk_leaf = function malli$core$_walk_leaf(schema, walker, path, options) {
  if (cljs.core.truth_(malli.core._accept(walker, schema, path, options))) {
    return malli.core._outer(walker, schema, path, malli.core._children(schema), options);
  } else {
    return null;
  }
};
malli.core._set_children = function malli$core$_set_children(schema, children) {
  if (malli.core._equals(children, malli.core._children(schema))) {
    return schema;
  } else {
    return malli.core._into_schema(malli.core._parent(schema), malli.core._properties(schema), children, malli.core._options(schema));
  }
};
malli.core._set_properties = function malli$core$_set_properties(schema, properties) {
  if (malli.core._equals(properties, malli.core._properties(schema))) {
    return schema;
  } else {
    return malli.core._into_schema(malli.core._parent(schema), properties, function() {
      var or__4253__auto__ = function() {
        var and__4251__auto__ = malli.core._entry_schema_QMARK_(schema);
        if (and__4251__auto__) {
          return malli.core._entry_parser(schema);
        } else {
          return and__4251__auto__;
        }
      }();
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        return malli.core._children(schema);
      }
    }(), malli.core._options(schema));
  }
};
malli.core._update_options = function malli$core$_update_options(schema, f) {
  return malli.core._into_schema(malli.core._parent(schema), malli.core._properties(schema), malli.core._children(schema), function() {
    var G__21276 = malli.core._options(schema);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21276) : f.call(null, G__21276);
  }());
};
malli.core._set_assoc_children = function malli$core$_set_assoc_children(schema, key, value) {
  return malli.core._set_children(schema, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(malli.core._children(schema), key, value));
};
malli.core._get_entries = function malli$core$_get_entries(schema, key, default$) {
  var or__4253__auto__ = cljs.core.some(cljs.core.vector_QMARK_(key) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_find, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(key, 0)) ? function(e) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(key, 1))) {
      return e;
    } else {
      return null;
    }
  } : function(e) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(e, 0), key)) {
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(e, 2);
    } else {
      return null;
    }
  }, malli.core._children(schema));
  if (cljs.core.truth_(or__4253__auto__)) {
    return or__4253__auto__;
  } else {
    return default$;
  }
};
malli.core._simple_entry_parser = function malli$core$_simple_entry_parser(keyset, children, forms) {
  var entries = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p__21291) {
    var vec__21292 = p__21291;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21292, 0, null);
    var p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21292, 1, null);
    var s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21292, 2, null);
    return malli.impl.util._tagged(k, malli.core._val_schema.cljs$core$IFn$_invoke$arity$2 ? malli.core._val_schema.cljs$core$IFn$_invoke$arity$2(s, p) : malli.core._val_schema.call(null, s, p));
  }, children);
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core21295 !== "undefined") {
  } else {
    malli.core.t_malli$core21295 = function(keyset, children, forms, entries, meta21296) {
      this.keyset = keyset;
      this.children = children;
      this.forms = forms;
      this.entries = entries;
      this.meta21296 = meta21296;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core21295.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21297, meta21296__$1) {
      var self__ = this;
      var _21297__$1 = this;
      return new malli.core.t_malli$core21295(self__.keyset, self__.children, self__.forms, self__.entries, meta21296__$1);
    };
    malli.core.t_malli$core21295.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21297) {
      var self__ = this;
      var _21297__$1 = this;
      return self__.meta21296;
    };
    malli.core.t_malli$core21295.prototype.malli$core$EntryParser$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core21295.prototype.malli$core$EntryParser$_entry_keyset$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.keyset;
    };
    malli.core.t_malli$core21295.prototype.malli$core$EntryParser$_entry_children$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.children;
    };
    malli.core.t_malli$core21295.prototype.malli$core$EntryParser$_entry_entries$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.entries;
    };
    malli.core.t_malli$core21295.prototype.malli$core$EntryParser$_entry_forms$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.forms;
    };
    malli.core.t_malli$core21295.getBasis = function() {
      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$keyset, cljs$cst$symbol$children, cljs$cst$symbol$forms, cljs$cst$symbol$entries, cljs$cst$symbol$meta21296], null);
    };
    malli.core.t_malli$core21295.cljs$lang$type = true;
    malli.core.t_malli$core21295.cljs$lang$ctorStr = "malli.core/t_malli$core21295";
    malli.core.t_malli$core21295.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core21295");
    };
    malli.core.__GT_t_malli$core21295 = function malli$core$_simple_entry_parser_$___GT_t_malli$core21295(keyset__$1, children__$1, forms__$1, entries__$1, meta21296) {
      return new malli.core.t_malli$core21295(keyset__$1, children__$1, forms__$1, entries__$1, meta21296);
    };
  }
  return new malli.core.t_malli$core21295(keyset, children, forms, entries, cljs.core.PersistentArrayMap.EMPTY);
};
malli.core._update_parsed = function malli$core$_update_parsed(entry_parser, _QMARK_key, value, options) {
  var vec__21306 = cljs.core.truth_(function() {
    var and__4251__auto__ = cljs.core.vector_QMARK_(_QMARK_key);
    if (and__4251__auto__) {
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(_QMARK_key, 0);
    } else {
      return and__4251__auto__;
    }
  }()) ? cljs.core.cons(true, _QMARK_key) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false, _QMARK_key], null);
  var override = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21306, 0, null);
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21306, 1, null);
  var p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21306, 2, null);
  var keyset = malli.core._entry_keyset(entry_parser);
  var children = malli.core._entry_children(entry_parser);
  var forms = malli.core._entry_forms(entry_parser);
  var s = cljs.core.truth_(value) ? malli.core.schema.cljs$core$IFn$_invoke$arity$2 ? malli.core.schema.cljs$core$IFn$_invoke$arity$2(value, options) : malli.core.schema.call(null, value, options) : null;
  var i = cljs$cst$keyword$order.cljs$core$IFn$_invoke$arity$1(keyset.cljs$core$IFn$_invoke$arity$1 ? keyset.cljs$core$IFn$_invoke$arity$1(k) : keyset.call(null, k));
  if (s == null) {
    var cut = function malli$core$_update_parsed_$_cut(v) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, 0, i), cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(v, i + 1));
    };
    return malli.core._simple_entry_parser(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(keyset, k), cut(children), cut(forms));
  } else {
    var c = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, p, s], null);
    var p__$1 = cljs.core.truth_(i) ? cljs.core.truth_(override) ? p : cljs.core.nth.cljs$core$IFn$_invoke$arity$2(children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(i) : children.call(null, i), 1) : p;
    var f = cljs.core.seq(p__$1) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, p__$1, malli.core._form(s)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._form(s)], null);
    if (cljs.core.truth_(i)) {
      return malli.core._simple_entry_parser(keyset, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(children, i, c), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(forms, i, f));
    } else {
      var size = cljs.core.count(keyset) + 1;
      return malli.core._simple_entry_parser(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(keyset, k, size), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(children, c), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(forms, f));
    }
  }
};
malli.core._set_entries = function malli$core$_set_entries(schema, _QMARK_key, value) {
  var temp__5751__auto__ = malli.core._entry_parser(schema);
  if (cljs.core.truth_(temp__5751__auto__)) {
    var entry_parser = temp__5751__auto__;
    return malli.core._set_children(schema, malli.core._update_parsed(entry_parser, _QMARK_key, value, malli.core._options(schema)));
  } else {
    var found = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);
    var vec__21313 = cljs.core.vector_QMARK_(_QMARK_key) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.nth.cljs$core$IFn$_invoke$arity$2(_QMARK_key, 0), cljs.core.second(_QMARK_key), true], null) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_key], null);
    var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21313, 0, null);
    var props = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21313, 1, null);
    var override = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21313, 2, null);
    var children = function() {
      var G__21316 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p__21317) {
        var vec__21318 = p__21317;
        var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21318, 0, null);
        var p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21318, 1, null);
        var entry = vec__21318;
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, k)) {
          cljs.core.reset_BANG_(found, true);
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, cljs.core.truth_(override) ? props : p, value], null);
        } else {
          return entry;
        }
      }, malli.core._children(schema));
      var G__21316__$1 = cljs.core.not(cljs.core.deref(found)) ? cljs.core.conj.cljs$core$IFn$_invoke$arity$2(G__21316, cljs.core.truth_(key) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, props, value], null) : malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$1(cljs$cst$keyword$malli_DOT_core_SLASH_key_DASH_missing)) : G__21316;
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(e) {
        return !(cljs.core.last(e) == null);
      }, G__21316__$1);
    }();
    return malli.core._set_children(schema, children);
  }
};
malli.core._parse_entry = function malli$core$_parse_entry(e, naked_keys, lazy_refs, options, i, _children, _forms, _keyset) {
  var _collect = function malli$core$_parse_entry_$__collect(k, c, f, i__$1) {
    var i__$2 = i__$1 | 0;
    _keyset[2 * i__$2] = k;
    _keyset[2 * i__$2 + 1] = new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$order, i__$2], null);
    _children[i__$2] = c;
    _forms[i__$2] = f;
    return i__$2 + 1;
  };
  var _schema = function malli$core$_parse_entry_$__schema(e__$1) {
    var G__21341 = function() {
      var G__21343 = e__$1;
      if (cljs.core.truth_(function() {
        var and__4251__auto__ = malli.core._reference_QMARK_(e__$1);
        if (and__4251__auto__) {
          return lazy_refs;
        } else {
          return and__4251__auto__;
        }
      }())) {
        return malli.core._lazy(G__21343, options);
      } else {
        return G__21343;
      }
    }();
    var G__21342 = options;
    return malli.core.schema.cljs$core$IFn$_invoke$arity$2 ? malli.core.schema.cljs$core$IFn$_invoke$arity$2(G__21341, G__21342) : malli.core.schema.call(null, G__21341, G__21342);
  };
  var _parse_ref_entry = function malli$core$_parse_entry_$__parse_ref_entry(e__$1) {
    var s = _schema(e__$1);
    var c = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e__$1, null, s], null);
    return _collect(e__$1, c, e__$1, i);
  };
  var _parse_ref_vector1 = function malli$core$_parse_entry_$__parse_ref_vector1(e__$1, e0) {
    var s = _schema(e0);
    var c = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e0, null, s], null);
    return _collect(e0, c, e__$1, i);
  };
  var _parse_ref_vector2 = function malli$core$_parse_entry_$__parse_ref_vector2(e__$1, e0, e1) {
    var s = _schema(e0);
    var c = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e0, e1, s], null);
    return _collect(e0, c, e__$1, i);
  };
  var _parse_entry_else2 = function malli$core$_parse_entry_$__parse_entry_else2(e0, e1) {
    var s = _schema(e1);
    var f = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e0, malli.core._form(s)], null);
    var c = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e0, null, s], null);
    return _collect(e0, c, f, i);
  };
  var _parse_entry_else3 = function malli$core$_parse_entry_$__parse_entry_else3(e0, e1, e2) {
    var s = _schema(e2);
    var f_SINGLEQUOTE_ = malli.core._form(s);
    var f = cljs.core.truth_(e1) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e0, e1, f_SINGLEQUOTE_], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e0, f_SINGLEQUOTE_], null);
    var c = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e0, e1, s], null);
    return _collect(e0, c, f, i);
  };
  if (cljs.core.vector_QMARK_(e)) {
    var ea = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(e);
    var n = ea.length;
    var e0 = ea[0];
    if (n === 1) {
      if (cljs.core.truth_(function() {
        var and__4251__auto__ = malli.core._reference_QMARK_(e0);
        if (and__4251__auto__) {
          return naked_keys;
        } else {
          return and__4251__auto__;
        }
      }())) {
        return _parse_ref_vector1(e, e0);
      } else {
        return i;
      }
    } else {
      var e1 = ea[1];
      if (n === 2) {
        if (malli.core._reference_QMARK_(e0) && cljs.core.map_QMARK_(e1)) {
          if (cljs.core.truth_(naked_keys)) {
            return _parse_ref_vector2(e, e0, e1);
          } else {
            return i;
          }
        } else {
          return _parse_entry_else2(e0, e1);
        }
      } else {
        var e2 = ea[2];
        return _parse_entry_else3(e0, e1, e2);
      }
    }
  } else {
    if (cljs.core.truth_(function() {
      var and__4251__auto__ = naked_keys;
      if (cljs.core.truth_(and__4251__auto__)) {
        return malli.core._reference_QMARK_(e);
      } else {
        return and__4251__auto__;
      }
    }())) {
      return _parse_ref_entry(e);
    } else {
      return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_ref, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$ref, e], null));
    }
  }
};
malli.core._eager_entry_parser = function malli$core$_eager_entry_parser(children, props, options) {
  var _vec = function malli$core$_eager_entry_parser_$__vec(arr) {
    return cljs.core.vec(arr);
  };
  var _map = function malli$core$_eager_entry_parser_$__map(arr) {
    var m = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, arr);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(2 * cljs.core.count(m), cljs.core.count(arr))) {
    } else {
      malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$1(cljs$cst$keyword$malli_DOT_core_SLASH_duplicate_DASH_keys);
    }
    return m;
  };
  var _arange = function malli$core$_eager_entry_parser_$__arange(arr, to) {
    return arr.slice(0, to);
  };
  var map__21377 = props;
  var map__21377__$1 = cljs.core.__destructure_map(map__21377);
  var naked_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21377__$1, cljs$cst$keyword$naked_DASH_keys);
  var lazy_refs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21377__$1, cljs$cst$keyword$lazy_DASH_refs);
  var ca = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(children);
  var n = ca.length;
  var _children = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(n);
  var _forms = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(n);
  var _keyset = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(2 * n);
  var i = 0 | 0;
  var ci = 0 | 0;
  while (true) {
    if (ci === n) {
      var f = ci === i ? _vec : function(i, ci, map__21377, map__21377__$1, naked_keys, lazy_refs, ca, n, _children, _forms, _keyset) {
        return function(p1__21357_SHARP_) {
          return _vec(_arange(p1__21357_SHARP_, i));
        };
      }(i, ci, map__21377, map__21377__$1, naked_keys, lazy_refs, ca, n, _children, _forms, _keyset);
      return malli.core._simple_entry_parser(_map(_keyset), f(_children), f(_forms));
    } else {
      var G__23057 = malli.core._parse_entry(ca[i], naked_keys, lazy_refs, options, i, _children, _forms, _keyset) | 0;
      var G__23058 = ci + 1;
      i = G__23057;
      ci = G__23058;
      continue;
    }
    break;
  }
};
malli.core._lazy_entry_parser = function malli$core$_lazy_entry_parser(_QMARK_children, props, options) {
  var parser = new cljs.core.Delay(function() {
    return malli.core._eager_entry_parser(_QMARK_children, props, options);
  }, null);
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core21393 !== "undefined") {
  } else {
    malli.core.t_malli$core21393 = function(_QMARK_children, props, options, parser, meta21394) {
      this._QMARK_children = _QMARK_children;
      this.props = props;
      this.options = options;
      this.parser = parser;
      this.meta21394 = meta21394;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core21393.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21395, meta21394__$1) {
      var self__ = this;
      var _21395__$1 = this;
      return new malli.core.t_malli$core21393(self__._QMARK_children, self__.props, self__.options, self__.parser, meta21394__$1);
    };
    malli.core.t_malli$core21393.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21395) {
      var self__ = this;
      var _21395__$1 = this;
      return self__.meta21394;
    };
    malli.core.t_malli$core21393.prototype.malli$core$EntryParser$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core21393.prototype.malli$core$EntryParser$_entry_keyset$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return malli.core._entry_keyset(cljs.core.deref(self__.parser));
    };
    malli.core.t_malli$core21393.prototype.malli$core$EntryParser$_entry_children$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return malli.core._entry_children(cljs.core.deref(self__.parser));
    };
    malli.core.t_malli$core21393.prototype.malli$core$EntryParser$_entry_entries$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return malli.core._entry_entries(cljs.core.deref(self__.parser));
    };
    malli.core.t_malli$core21393.prototype.malli$core$EntryParser$_entry_forms$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return malli.core._entry_forms(cljs.core.deref(self__.parser));
    };
    malli.core.t_malli$core21393.getBasis = function() {
      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$_QMARK_children, cljs$cst$symbol$props, cljs$cst$symbol$options, cljs$cst$symbol$parser, cljs$cst$symbol$meta21394], null);
    };
    malli.core.t_malli$core21393.cljs$lang$type = true;
    malli.core.t_malli$core21393.cljs$lang$ctorStr = "malli.core/t_malli$core21393";
    malli.core.t_malli$core21393.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core21393");
    };
    malli.core.__GT_t_malli$core21393 = function malli$core$_lazy_entry_parser_$___GT_t_malli$core21393(_QMARK_children__$1, props__$1, options__$1, parser__$1, meta21394) {
      return new malli.core.t_malli$core21393(_QMARK_children__$1, props__$1, options__$1, parser__$1, meta21394);
    };
  }
  return new malli.core.t_malli$core21393(_QMARK_children, props, options, parser, cljs.core.PersistentArrayMap.EMPTY);
};
malli.core._create_entry_parser = function malli$core$_create_entry_parser(_QMARK_children, props, options) {
  if (malli.core._entry_parser_QMARK_(_QMARK_children)) {
    return _QMARK_children;
  } else {
    if (cljs.core.truth_(function() {
      var or__4253__auto__ = cljs$cst$keyword$lazy.cljs$core$IFn$_invoke$arity$1(props);
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        return cljs$cst$keyword$malli_DOT_core_SLASH_lazy_DASH_entries.cljs$core$IFn$_invoke$arity$1(options);
      }
    }())) {
      return malli.core._lazy_entry_parser(_QMARK_children, props, options);
    } else {
      return malli.core._eager_entry_parser(_QMARK_children, props, options);
    }
  }
};
malli.core._intercepting = function malli$core$_intercepting(var_args) {
  var G__21430 = arguments.length;
  switch(G__21430) {
    case 1:
      return malli.core._intercepting.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core._intercepting.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._intercepting.cljs$core$IFn$_invoke$arity$1 = function(interceptor) {
  return malli.core._intercepting.cljs$core$IFn$_invoke$arity$2(interceptor, null);
};
malli.core._intercepting.cljs$core$IFn$_invoke$arity$2 = function(p__21433, f) {
  var map__21434 = p__21433;
  var map__21434__$1 = cljs.core.__destructure_map(map__21434);
  var enter = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21434__$1, cljs$cst$keyword$enter);
  var leave = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21434__$1, cljs$cst$keyword$leave);
  var G__21435 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [leave, f, enter], null);
  var G__21435__$1 = G__21435 == null ? null : cljs.core.keep.cljs$core$IFn$_invoke$arity$2(cljs.core.identity, G__21435);
  var G__21435__$2 = G__21435__$1 == null ? null : cljs.core.seq(G__21435__$1);
  if (G__21435__$2 == null) {
    return null;
  } else {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(malli.core._comp, G__21435__$2);
  }
};
malli.core._intercepting.cljs$lang$maxFixedArity = 2;
malli.core._into_transformer = function malli$core$_into_transformer(x) {
  if (malli.core._transformer_QMARK_(x)) {
    return x;
  } else {
    if (cljs.core.fn_QMARK_(x)) {
      var G__21443 = x.cljs$core$IFn$_invoke$arity$0 ? x.cljs$core$IFn$_invoke$arity$0() : x.call(null);
      return malli.core._into_transformer.cljs$core$IFn$_invoke$arity$1 ? malli.core._into_transformer.cljs$core$IFn$_invoke$arity$1(G__21443) : malli.core._into_transformer.call(null, G__21443);
    } else {
      return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_transformer, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$value, x], null));
    }
  }
};
malli.core._parent_children_transformer = function malli$core$_parent_children_transformer(parent, children, transformer, method, options) {
  var parent_transformer = malli.core._value_transformer(transformer, parent, method, options);
  var child_transformers = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY, cljs.core.keep.cljs$core$IFn$_invoke$arity$1(function(p1__21447_SHARP_) {
    return malli.core._transformer(p1__21447_SHARP_, transformer, method, options);
  }), children);
  var child_transformer = cljs.core.seq(child_transformers) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(malli.core._comp, cljs.core.rseq(child_transformers)) : null;
  return malli.core._intercepting.cljs$core$IFn$_invoke$arity$2(parent_transformer, child_transformer);
};
malli.core._map_transformer = function malli$core$_map_transformer(ts) {
  return function(x) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function malli$core$_map_transformer_$_child_transformer(m, p__21462) {
      var vec__21463 = p__21462;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21463, 0, null);
      var t = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21463, 1, null);
      var temp__5751__auto__ = cljs.core.find(m, k);
      if (cljs.core.truth_(temp__5751__auto__)) {
        var entry = temp__5751__auto__;
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__21466 = cljs.core.val(entry);
          return t.cljs$core$IFn$_invoke$arity$1 ? t.cljs$core$IFn$_invoke$arity$1(G__21466) : t.call(null, G__21466);
        }());
      } else {
        return m;
      }
    }, x, ts);
  };
};
malli.core._tuple_transformer = function malli$core$_tuple_transformer(ts) {
  return function(x) {
    return cljs.core.reduce_kv(malli.core._update, x, ts);
  };
};
malli.core._collection_transformer = function malli$core$_collection_transformer(t, empty) {
  return function(x) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.truth_(x) ? empty : null, cljs.core.map.cljs$core$IFn$_invoke$arity$1(t), x);
  };
};
malli.core._parse_entry_ast = function malli$core$_parse_entry_ast(ast, options) {
  var ast_entry_order = cljs$cst$keyword$malli_DOT_core_SLASH_ast_DASH_entry_DASH_order.cljs$core$IFn$_invoke$arity$1(options);
  var keyset = cljs$cst$keyword$keys.cljs$core$IFn$_invoke$arity$1(ast);
  var __GT_child = function(p__21477) {
    var vec__21478 = p__21477;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21478, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21478, 1, null);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs$cst$keyword$properties.cljs$core$IFn$_invoke$arity$1(v), function() {
      var G__21481 = cljs$cst$keyword$value.cljs$core$IFn$_invoke$arity$1(v);
      var G__21482 = options;
      return malli.core.from_ast.cljs$core$IFn$_invoke$arity$2 ? malli.core.from_ast.cljs$core$IFn$_invoke$arity$2(G__21481, G__21482) : malli.core.from_ast.call(null, G__21481, G__21482);
    }()], null);
  };
  var children = new cljs.core.Delay(function() {
    return malli.core._vmap.cljs$core$IFn$_invoke$arity$2(__GT_child, function() {
      var G__21483 = keyset;
      if (cljs.core.truth_(ast_entry_order)) {
        return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(function(p1__21474_SHARP_) {
          return cljs$cst$keyword$order.cljs$core$IFn$_invoke$arity$1(cljs.core.val(p1__21474_SHARP_));
        }, keyset, G__21483);
      } else {
        return G__21483;
      }
    }());
  }, null);
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core21492 !== "undefined") {
  } else {
    malli.core.t_malli$core21492 = function(ast, options, ast_entry_order, keyset, __GT_child, children, meta21493) {
      this.ast = ast;
      this.options = options;
      this.ast_entry_order = ast_entry_order;
      this.keyset = keyset;
      this.__GT_child = __GT_child;
      this.children = children;
      this.meta21493 = meta21493;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core21492.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21494, meta21493__$1) {
      var self__ = this;
      var _21494__$1 = this;
      return new malli.core.t_malli$core21492(self__.ast, self__.options, self__.ast_entry_order, self__.keyset, self__.__GT_child, self__.children, meta21493__$1);
    };
    malli.core.t_malli$core21492.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21494) {
      var self__ = this;
      var _21494__$1 = this;
      return self__.meta21493;
    };
    malli.core.t_malli$core21492.prototype.malli$core$EntryParser$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core21492.prototype.malli$core$EntryParser$_entry_keyset$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.keyset;
    };
    malli.core.t_malli$core21492.prototype.malli$core$EntryParser$_entry_children$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.deref(self__.children);
    };
    malli.core.t_malli$core21492.prototype.malli$core$EntryParser$_entry_entries$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p__21504) {
        var vec__21505 = p__21504;
        var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21505, 0, null);
        var p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21505, 1, null);
        var s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21505, 2, null);
        return malli.impl.util._tagged(k, malli.core._val_schema.cljs$core$IFn$_invoke$arity$2 ? malli.core._val_schema.cljs$core$IFn$_invoke$arity$2(s, p) : malli.core._val_schema.call(null, s, p));
      }, cljs.core.deref(self__.children));
    };
    malli.core.t_malli$core21492.prototype.malli$core$EntryParser$_entry_forms$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p__21511) {
        var vec__21512 = p__21511;
        var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21512, 0, null);
        var p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21512, 1, null);
        var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21512, 2, null);
        if (cljs.core.truth_(p)) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, p, malli.core._form(v)], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._form(v)], null);
        }
      }, cljs.core.deref(self__.children));
    };
    malli.core.t_malli$core21492.getBasis = function() {
      return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$ast, cljs$cst$symbol$options, cljs$cst$symbol$ast_DASH_entry_DASH_order, cljs$cst$symbol$keyset, cljs$cst$symbol$_DASH__GT_child, cljs$cst$symbol$children, cljs$cst$symbol$meta21493], null);
    };
    malli.core.t_malli$core21492.cljs$lang$type = true;
    malli.core.t_malli$core21492.cljs$lang$ctorStr = "malli.core/t_malli$core21492";
    malli.core.t_malli$core21492.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core21492");
    };
    malli.core.__GT_t_malli$core21492 = function malli$core$_parse_entry_ast_$___GT_t_malli$core21492(ast__$1, options__$1, ast_entry_order__$1, keyset__$1, __GT_child__$1, children__$1, meta21493) {
      return new malli.core.t_malli$core21492(ast__$1, options__$1, ast_entry_order__$1, keyset__$1, __GT_child__$1, children__$1, meta21493);
    };
  }
  return new malli.core.t_malli$core21492(ast, options, ast_entry_order, keyset, __GT_child, children, cljs.core.PersistentArrayMap.EMPTY);
};
malli.core._from_entry_ast = function malli$core$_from_entry_ast(parent, ast, options) {
  return malli.core._into_schema(parent, cljs$cst$keyword$properties.cljs$core$IFn$_invoke$arity$1(ast), malli.core._parse_entry_ast(ast, options), options);
};
malli.core._ast = function malli$core$_ast(acc, properties, options) {
  var registry = function() {
    var temp__5753__auto__ = cljs$cst$keyword$registry.cljs$core$IFn$_invoke$arity$1(properties);
    if (cljs.core.truth_(temp__5753__auto__)) {
      var registry = temp__5753__auto__;
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p__21523) {
        var vec__21524 = p__21523;
        var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21524, 0, null);
        var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21524, 1, null);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core.ast.cljs$core$IFn$_invoke$arity$2 ? malli.core.ast.cljs$core$IFn$_invoke$arity$2(v, options) : malli.core.ast.call(null, v, options)], null);
      }), registry);
    } else {
      return null;
    }
  }();
  var properties__$1 = cljs.core.not_empty(function() {
    var G__21528 = properties;
    if (cljs.core.truth_(registry)) {
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(G__21528, cljs$cst$keyword$registry);
    } else {
      return G__21528;
    }
  }());
  var G__21529 = acc;
  var G__21529__$1 = cljs.core.truth_(properties__$1) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__21529, cljs$cst$keyword$properties, properties__$1) : G__21529;
  if (cljs.core.truth_(registry)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__21529__$1, cljs$cst$keyword$registry, registry);
  } else {
    return G__21529__$1;
  }
};
malli.core._entry_ast = function malli$core$_entry_ast(schema, keyset) {
  return malli.core._ast(new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$type, malli.core.type.cljs$core$IFn$_invoke$arity$1 ? malli.core.type.cljs$core$IFn$_invoke$arity$1(schema) : malli.core.type.call(null, schema), cljs$cst$keyword$keys, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(acc, p__21532) {
    var vec__21533 = p__21532;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21533, 0, null);
    var p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21533, 1, null);
    var s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21533, 2, null);
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(acc, k, function() {
      var G__21536 = new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$order, cljs$cst$keyword$order.cljs$core$IFn$_invoke$arity$1(cljs.core.get.cljs$core$IFn$_invoke$arity$2(keyset, k)), cljs$cst$keyword$value, malli.core.ast.cljs$core$IFn$_invoke$arity$1 ? malli.core.ast.cljs$core$IFn$_invoke$arity$1(s) : malli.core.ast.call(null, s)], null);
      if (cljs.core.truth_(p)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__21536, cljs$cst$keyword$properties, p);
      } else {
        return G__21536;
      }
    }());
  }, cljs.core.PersistentArrayMap.EMPTY, malli.core._children(schema))], null), malli.core._properties(schema), malli.core._options(schema));
};
malli.core._from_child_ast = function malli$core$_from_child_ast(parent, ast, options) {
  return malli.core._into_schema(parent, cljs$cst$keyword$properties.cljs$core$IFn$_invoke$arity$1(ast), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    var G__21540 = cljs$cst$keyword$child.cljs$core$IFn$_invoke$arity$1(ast);
    var G__21541 = options;
    return malli.core.from_ast.cljs$core$IFn$_invoke$arity$2 ? malli.core.from_ast.cljs$core$IFn$_invoke$arity$2(G__21540, G__21541) : malli.core.from_ast.call(null, G__21540, G__21541);
  }()], null), options);
};
malli.core._to_child_ast = function malli$core$_to_child_ast(schema) {
  return malli.core._ast(new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$type, malli.core.type.cljs$core$IFn$_invoke$arity$1 ? malli.core.type.cljs$core$IFn$_invoke$arity$1(schema) : malli.core.type.call(null, schema), cljs$cst$keyword$child, function() {
    var G__21544 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(malli.core._children(schema), 0);
    return malli.core.ast.cljs$core$IFn$_invoke$arity$1 ? malli.core.ast.cljs$core$IFn$_invoke$arity$1(G__21544) : malli.core.ast.call(null, G__21544);
  }()], null), malli.core._properties(schema), malli.core._options(schema));
};
malli.core._from_value_ast = function malli$core$_from_value_ast(parent, ast, options) {
  return malli.core._into_schema(parent, cljs$cst$keyword$properties.cljs$core$IFn$_invoke$arity$1(ast), function() {
    var temp__5753__auto__ = cljs$cst$keyword$value.cljs$core$IFn$_invoke$arity$1(ast);
    if (cljs.core.truth_(temp__5753__auto__)) {
      var value = temp__5753__auto__;
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null);
    } else {
      return null;
    }
  }(), options);
};
malli.core._to_value_ast = function malli$core$_to_value_ast(schema) {
  return malli.core._ast(new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$type, malli.core.type.cljs$core$IFn$_invoke$arity$1 ? malli.core.type.cljs$core$IFn$_invoke$arity$1(schema) : malli.core.type.call(null, schema), cljs$cst$keyword$value, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(malli.core._children(schema), 0)], null), malli.core._properties(schema), malli.core._options(schema));
};
malli.core._from_type_ast = function malli$core$_from_type_ast(parent, ast, options) {
  return malli.core._into_schema(parent, cljs$cst$keyword$properties.cljs$core$IFn$_invoke$arity$1(ast), null, options);
};
malli.core._to_type_ast = function malli$core$_to_type_ast(schema) {
  return malli.core._ast(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, malli.core.type.cljs$core$IFn$_invoke$arity$1 ? malli.core.type.cljs$core$IFn$_invoke$arity$1(schema) : malli.core.type.call(null, schema)], null), malli.core._properties(schema), malli.core._options(schema));
};
malli.core._min_max_pred = function malli$core$_min_max_pred(f) {
  return function(p__21560) {
    var map__21563 = p__21560;
    var map__21563__$1 = cljs.core.__destructure_map(map__21563);
    var min = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21563__$1, cljs$cst$keyword$min);
    var max = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21563__$1, cljs$cst$keyword$max);
    if (cljs.core.not(function() {
      var or__4253__auto__ = min;
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        return max;
      }
    }())) {
      return null;
    } else {
      if (cljs.core.truth_(function() {
        var and__4251__auto__ = function() {
          var and__4251__auto__ = min;
          if (cljs.core.truth_(and__4251__auto__)) {
            return max;
          } else {
            return and__4251__auto__;
          }
        }();
        if (cljs.core.truth_(and__4251__auto__)) {
          return f;
        } else {
          return and__4251__auto__;
        }
      }())) {
        return function(x) {
          var size = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
          return min <= size && size <= max;
        };
      } else {
        if (cljs.core.truth_(function() {
          var and__4251__auto__ = min;
          if (cljs.core.truth_(and__4251__auto__)) {
            return max;
          } else {
            return and__4251__auto__;
          }
        }())) {
          return function(x) {
            return min <= x && x <= max;
          };
        } else {
          if (cljs.core.truth_(function() {
            var and__4251__auto__ = min;
            if (cljs.core.truth_(and__4251__auto__)) {
              return f;
            } else {
              return and__4251__auto__;
            }
          }())) {
            return function(x) {
              return min <= (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
            };
          } else {
            if (cljs.core.truth_(min)) {
              return function(x) {
                return min <= x;
              };
            } else {
              if (cljs.core.truth_(function() {
                var and__4251__auto__ = max;
                if (cljs.core.truth_(and__4251__auto__)) {
                  return f;
                } else {
                  return and__4251__auto__;
                }
              }())) {
                return function(x) {
                  return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)) <= max;
                };
              } else {
                if (cljs.core.truth_(max)) {
                  return function(x) {
                    return x <= max;
                  };
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  };
};
malli.core._validate_limits = function malli$core$_validate_limits(min, max) {
  var or__4253__auto__ = malli.core._min_max_pred(cljs.core.count)(new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$min, min, cljs$cst$keyword$max, max], null));
  if (cljs.core.truth_(or__4253__auto__)) {
    return or__4253__auto__;
  } else {
    return cljs.core.constantly(true);
  }
};
malli.core._qualified_keyword_pred = function malli$core$_qualified_keyword_pred(properties) {
  var temp__5753__auto__ = function() {
    var G__21574 = properties;
    var G__21574__$1 = G__21574 == null ? null : cljs$cst$keyword$namespace.cljs$core$IFn$_invoke$arity$1(G__21574);
    if (G__21574__$1 == null) {
      return null;
    } else {
      return cljs.core.name(G__21574__$1);
    }
  }();
  if (cljs.core.truth_(temp__5753__auto__)) {
    var ns_name = temp__5753__auto__;
    return function(x) {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(x), ns_name);
    };
  } else {
    return null;
  }
};
malli.core._simple_schema = function malli$core$_simple_schema(_QMARK_props) {
  var map__21585 = cljs.core.map_QMARK_(_QMARK_props) ? _QMARK_props : null;
  var map__21585__$1 = cljs.core.__destructure_map(map__21585);
  var type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21585__$1, cljs$cst$keyword$type);
  var type_properties = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21585__$1, cljs$cst$keyword$type_DASH_properties);
  var pred = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21585__$1, cljs$cst$keyword$pred);
  var property_pred = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21585__$1, cljs$cst$keyword$property_DASH_pred);
  var min = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__21585__$1, cljs$cst$keyword$min, 0);
  var max = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__21585__$1, cljs$cst$keyword$max, 0);
  var from_ast = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__21585__$1, cljs$cst$keyword$from_DASH_ast, malli.core._from_value_ast);
  var to_ast = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__21585__$1, cljs$cst$keyword$to_DASH_ast, malli.core._to_type_ast);
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core21590 !== "undefined") {
  } else {
    malli.core.t_malli$core21590 = function(property_pred, map__21585, to_ast, min, type_properties, pred, type, from_ast, _QMARK_props, max, meta21591) {
      this.property_pred = property_pred;
      this.map__21585 = map__21585;
      this.to_ast = to_ast;
      this.min = min;
      this.type_properties = type_properties;
      this.pred = pred;
      this.type = type;
      this.from_ast = from_ast;
      this._QMARK_props = _QMARK_props;
      this.max = max;
      this.meta21591 = meta21591;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core21590.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21592, meta21591__$1) {
      var self__ = this;
      var _21592__$1 = this;
      return new malli.core.t_malli$core21590(self__.property_pred, self__.map__21585, self__.to_ast, self__.min, self__.type_properties, self__.pred, self__.type, self__.from_ast, self__._QMARK_props, self__.max, meta21591__$1);
    };
    malli.core.t_malli$core21590.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21592) {
      var self__ = this;
      var _21592__$1 = this;
      return self__.meta21591;
    };
    malli.core.t_malli$core21590.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core21590.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return self__.from_ast.cljs$core$IFn$_invoke$arity$3 ? self__.from_ast.cljs$core$IFn$_invoke$arity$3(parent__$1, ast, options) : self__.from_ast.call(null, parent__$1, ast, options);
    };
    malli.core.t_malli$core21590.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core21590.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.type;
    };
    malli.core.t_malli$core21590.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.type_properties;
    };
    malli.core.t_malli$core21590.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core21590.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core21590.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      if (cljs.core.fn_QMARK_(self__._QMARK_props)) {
        return malli.core._into_schema(function() {
          var G__21604 = self__._QMARK_props.cljs$core$IFn$_invoke$arity$2 ? self__._QMARK_props.cljs$core$IFn$_invoke$arity$2(properties, children) : self__._QMARK_props.call(null, properties, children);
          return malli.core._simple_schema.cljs$core$IFn$_invoke$arity$1 ? malli.core._simple_schema.cljs$core$IFn$_invoke$arity$1(G__21604) : malli.core._simple_schema.call(null, G__21604);
        }(), properties, children, options);
      } else {
        var form = new cljs.core.Delay(function() {
          return malli.core._simple_form(parent__$1, properties, children, cljs.core.identity, options);
        }, null);
        var cache = malli.core._create_cache(options);
        malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5(self__.type, properties, children, self__.min, self__.max);
        if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core21605 !== "undefined") {
        } else {
          malli.core.t_malli$core21605 = function(form, options, property_pred, map__21585, to_ast, meta21591, properties, children, min, type_properties, parent, pred, type, from_ast, cache, _QMARK_props, max, meta21606) {
            this.form = form;
            this.options = options;
            this.property_pred = property_pred;
            this.map__21585 = map__21585;
            this.to_ast = to_ast;
            this.meta21591 = meta21591;
            this.properties = properties;
            this.children = children;
            this.min = min;
            this.type_properties = type_properties;
            this.parent = parent;
            this.pred = pred;
            this.type = type;
            this.from_ast = from_ast;
            this.cache = cache;
            this._QMARK_props = _QMARK_props;
            this.max = max;
            this.meta21606 = meta21606;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          malli.core.t_malli$core21605.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21607, meta21606__$1) {
            var self__ = this;
            var _21607__$1 = this;
            return new malli.core.t_malli$core21605(self__.form, self__.options, self__.property_pred, self__.map__21585, self__.to_ast, self__.meta21591, self__.properties, self__.children, self__.min, self__.type_properties, self__.parent, self__.pred, self__.type, self__.from_ast, self__.cache, self__._QMARK_props, self__.max, meta21606__$1);
          };
          malli.core.t_malli$core21605.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21607) {
            var self__ = this;
            var _21607__$1 = this;
            return self__.meta21606;
          };
          malli.core.t_malli$core21605.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core21605.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
            var self__ = this;
            var this$__$1 = this;
            return self__.to_ast.cljs$core$IFn$_invoke$arity$1 ? self__.to_ast.cljs$core$IFn$_invoke$arity$1(this$__$1) : self__.to_ast.call(null, this$__$1);
          };
          malli.core.t_malli$core21605.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core21605.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            var temp__5751__auto__ = cljs.core.truth_(self__.property_pred) ? self__.property_pred.cljs$core$IFn$_invoke$arity$1 ? self__.property_pred.cljs$core$IFn$_invoke$arity$1(self__.properties) : self__.property_pred.call(null, self__.properties) : null;
            if (cljs.core.truth_(temp__5751__auto__)) {
              var pvalidator = temp__5751__auto__;
              return function(x) {
                var and__4251__auto__ = self__.pred.cljs$core$IFn$_invoke$arity$1 ? self__.pred.cljs$core$IFn$_invoke$arity$1(x) : self__.pred.call(null, x);
                if (cljs.core.truth_(and__4251__auto__)) {
                  return pvalidator.cljs$core$IFn$_invoke$arity$1 ? pvalidator.cljs$core$IFn$_invoke$arity$1(x) : pvalidator.call(null, x);
                } else {
                  return and__4251__auto__;
                }
              };
            } else {
              return self__.pred;
            }
          };
          malli.core.t_malli$core21605.prototype.malli$core$Schema$_options$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.options;
          };
          malli.core.t_malli$core21605.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._intercepting.cljs$core$IFn$_invoke$arity$1(malli.core._value_transformer(transformer, this$__$1, method, options__$1));
          };
          malli.core.t_malli$core21605.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._walk_leaf(this$__$1, walker, path, options__$1);
          };
          malli.core.t_malli$core21605.prototype.malli$core$Schema$_parser$arity$1 = function(this$) {
            var self__ = this;
            var this$__$1 = this;
            var validator = this$__$1.malli$core$Schema$_validator$arity$1(null);
            return function(x) {
              if (cljs.core.truth_(validator.cljs$core$IFn$_invoke$arity$1 ? validator.cljs$core$IFn$_invoke$arity$1(x) : validator.call(null, x))) {
                return x;
              } else {
                return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
              }
            };
          };
          malli.core.t_malli$core21605.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.properties;
          };
          malli.core.t_malli$core21605.prototype.malli$core$Schema$_children$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.children;
          };
          malli.core.t_malli$core21605.prototype.malli$core$Schema$_form$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.deref(self__.form);
          };
          malli.core.t_malli$core21605.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
            var self__ = this;
            var this$__$1 = this;
            var validator = this$__$1.malli$core$Schema$_validator$arity$1(null);
            return function malli$core$_simple_schema_$_explain(x, in$, acc) {
              if (cljs.core.not(validator.cljs$core$IFn$_invoke$arity$1 ? validator.cljs$core$IFn$_invoke$arity$1(x) : validator.call(null, x))) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, malli.impl.util._error.cljs$core$IFn$_invoke$arity$4(path, in$, this$__$1, x));
              } else {
                return acc;
              }
            };
          };
          malli.core.t_malli$core21605.prototype.malli$core$Schema$_unparser$arity$1 = function(this$) {
            var self__ = this;
            var this$__$1 = this;
            return this$__$1.malli$core$Schema$_parser$arity$1(null);
          };
          malli.core.t_malli$core21605.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.parent;
          };
          malli.core.t_malli$core21605.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core21605.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.cache;
          };
          malli.core.t_malli$core21605.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core21605.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return null;
          };
          malli.core.t_malli$core21605.prototype.malli$core$LensSchema$_get$arity$3 = function(_, ___$1, default$) {
            var self__ = this;
            var ___$2 = this;
            return default$;
          };
          malli.core.t_malli$core21605.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, _) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_non_DASH_associative_DASH_schema, new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$schema, this$__$1, cljs$cst$keyword$key, key], null));
          };
          malli.core.t_malli$core21605.getBasis = function() {
            return new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$form, cljs$cst$symbol$options, cljs$cst$symbol$property_DASH_pred, cljs$cst$symbol$map__21585, cljs$cst$symbol$to_DASH_ast, cljs$cst$symbol$meta21591, cljs$cst$symbol$properties, cljs$cst$symbol$children, cljs$cst$symbol$min, cljs$cst$symbol$type_DASH_properties, cljs.core.with_meta(cljs$cst$symbol$parent, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core21590], 
            null)), cljs$cst$symbol$pred, cljs$cst$symbol$type, cljs$cst$symbol$from_DASH_ast, cljs$cst$symbol$cache, cljs$cst$symbol$_QMARK_props, cljs$cst$symbol$max, cljs$cst$symbol$meta21606], null);
          };
          malli.core.t_malli$core21605.cljs$lang$type = true;
          malli.core.t_malli$core21605.cljs$lang$ctorStr = "malli.core/t_malli$core21605";
          malli.core.t_malli$core21605.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
            return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core21605");
          };
          malli.core.__GT_t_malli$core21605 = function malli$core$_simple_schema_$___GT_t_malli$core21605(form__$1, options__$1, property_pred__$1, map__21585__$1, to_ast__$1, meta21591__$1, properties__$1, children__$1, min__$1, type_properties__$1, parent__$2, pred__$1, type__$1, from_ast__$1, cache__$1, _QMARK_props__$1, max__$1, meta21606) {
            return new malli.core.t_malli$core21605(form__$1, options__$1, property_pred__$1, map__21585__$1, to_ast__$1, meta21591__$1, properties__$1, children__$1, min__$1, type_properties__$1, parent__$2, pred__$1, type__$1, from_ast__$1, cache__$1, _QMARK_props__$1, max__$1, meta21606);
          };
        }
        return new malli.core.t_malli$core21605(form, options, self__.property_pred, self__.map__21585, self__.to_ast, self__.meta21591, properties, children, self__.min, self__.type_properties, parent__$1, self__.pred, self__.type, self__.from_ast, cache, self__._QMARK_props, self__.max, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_schema], null));
      }
    };
    malli.core.t_malli$core21590.getBasis = function() {
      return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$property_DASH_pred, cljs$cst$symbol$map__21585, cljs$cst$symbol$to_DASH_ast, cljs$cst$symbol$min, cljs$cst$symbol$type_DASH_properties, cljs$cst$symbol$pred, cljs$cst$symbol$type, cljs$cst$symbol$from_DASH_ast, cljs$cst$symbol$_QMARK_props, cljs$cst$symbol$max, cljs$cst$symbol$meta21591], null);
    };
    malli.core.t_malli$core21590.cljs$lang$type = true;
    malli.core.t_malli$core21590.cljs$lang$ctorStr = "malli.core/t_malli$core21590";
    malli.core.t_malli$core21590.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core21590");
    };
    malli.core.__GT_t_malli$core21590 = function malli$core$_simple_schema_$___GT_t_malli$core21590(property_pred__$1, map__21585__$2, to_ast__$1, min__$1, type_properties__$1, pred__$1, type__$1, from_ast__$1, _QMARK_props__$1, max__$1, meta21591) {
      return new malli.core.t_malli$core21590(property_pred__$1, map__21585__$2, to_ast__$1, min__$1, type_properties__$1, pred__$1, type__$1, from_ast__$1, _QMARK_props__$1, max__$1, meta21591);
    };
  }
  return new malli.core.t_malli$core21590(property_pred, map__21585__$1, to_ast, min, type_properties, pred, type, from_ast, _QMARK_props, max, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_into_DASH_schema], null));
};
malli.core._nil_schema = function malli$core$_nil_schema() {
  return malli.core._simple_schema(new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$type, cljs$cst$keyword$nil, cljs$cst$keyword$pred, cljs.core.nil_QMARK_], null));
};
malli.core._any_schema = function malli$core$_any_schema() {
  return malli.core._simple_schema(new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$type, cljs$cst$keyword$any, cljs$cst$keyword$pred, cljs.core.any_QMARK_], null));
};
malli.core._string_schema = function malli$core$_string_schema() {
  return malli.core._simple_schema(new cljs.core.PersistentArrayMap(null, 3, [cljs$cst$keyword$type, cljs$cst$keyword$string, cljs$cst$keyword$pred, cljs.core.string_QMARK_, cljs$cst$keyword$property_DASH_pred, malli.core._min_max_pred(cljs.core.count)], null));
};
malli.core._int_schema = function malli$core$_int_schema() {
  return malli.core._simple_schema(new cljs.core.PersistentArrayMap(null, 3, [cljs$cst$keyword$type, cljs$cst$keyword$int, cljs$cst$keyword$pred, cljs.core.int_QMARK_, cljs$cst$keyword$property_DASH_pred, malli.core._min_max_pred(null)], null));
};
malli.core._double_schema = function malli$core$_double_schema() {
  return malli.core._simple_schema(new cljs.core.PersistentArrayMap(null, 3, [cljs$cst$keyword$type, cljs$cst$keyword$double, cljs$cst$keyword$pred, cljs.core.double_QMARK_, cljs$cst$keyword$property_DASH_pred, malli.core._min_max_pred(null)], null));
};
malli.core._boolean_schema = function malli$core$_boolean_schema() {
  return malli.core._simple_schema(new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$type, cljs$cst$keyword$boolean, cljs$cst$keyword$pred, cljs.core.boolean_QMARK_], null));
};
malli.core._keyword_schema = function malli$core$_keyword_schema() {
  return malli.core._simple_schema(new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$type, cljs$cst$keyword$keyword, cljs$cst$keyword$pred, cljs.core.keyword_QMARK_], null));
};
malli.core._symbol_schema = function malli$core$_symbol_schema() {
  return malli.core._simple_schema(new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$type, cljs$cst$keyword$symbol, cljs$cst$keyword$pred, cljs.core.symbol_QMARK_], null));
};
malli.core._qualified_keyword_schema = function malli$core$_qualified_keyword_schema() {
  return malli.core._simple_schema(new cljs.core.PersistentArrayMap(null, 3, [cljs$cst$keyword$type, cljs$cst$keyword$qualified_DASH_keyword, cljs$cst$keyword$pred, cljs.core.qualified_keyword_QMARK_, cljs$cst$keyword$property_DASH_pred, malli.core._qualified_keyword_pred], null));
};
malli.core._qualified_symbol_schema = function malli$core$_qualified_symbol_schema() {
  return malli.core._simple_schema(new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$type, cljs$cst$keyword$qualified_DASH_symbol, cljs$cst$keyword$pred, cljs.core.qualified_symbol_QMARK_], null));
};
malli.core._uuid_schema = function malli$core$_uuid_schema() {
  return malli.core._simple_schema(new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$type, cljs$cst$keyword$uuid, cljs$cst$keyword$pred, cljs.core.uuid_QMARK_], null));
};
malli.core._and_schema = function malli$core$_and_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core21658 !== "undefined") {
  } else {
    malli.core.t_malli$core21658 = function(meta21659) {
      this.meta21659 = meta21659;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core21658.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21660, meta21659__$1) {
      var self__ = this;
      var _21660__$1 = this;
      return new malli.core.t_malli$core21658(meta21659__$1);
    };
    malli.core.t_malli$core21658.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21660) {
      var self__ = this;
      var _21660__$1 = this;
      return self__.meta21659;
    };
    malli.core.t_malli$core21658.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core21658.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs$cst$keyword$and;
    };
    malli.core.t_malli$core21658.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core21658.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core21658.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core21658.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5(cljs$cst$keyword$and, properties, children, 1, null);
      var children__$1 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p1__21655_SHARP_) {
        return malli.core.schema.cljs$core$IFn$_invoke$arity$2 ? malli.core.schema.cljs$core$IFn$_invoke$arity$2(p1__21655_SHARP_, options) : malli.core.schema.call(null, p1__21655_SHARP_, options);
      }, children);
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form(parent__$1, properties, children__$1, malli.core._form, options);
      }, null);
      var cache = malli.core._create_cache(options);
      var __GT_parser = function(f, m) {
        var parsers = function() {
          var G__21668 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(f, children__$1);
          return m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(G__21668) : m.call(null, G__21668);
        }();
        return function(p1__21656_SHARP_) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(x, parser) {
            return malli.impl.util._map_invalid(cljs.core.reduced, parser.cljs$core$IFn$_invoke$arity$1 ? parser.cljs$core$IFn$_invoke$arity$1(x) : parser.call(null, x));
          }, p1__21656_SHARP_, parsers);
        };
      };
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core21669 !== "undefined") {
      } else {
        malli.core.t_malli$core21669 = function(meta21659, parent, properties, children, options, form, cache, __GT_parser, meta21670) {
          this.meta21659 = meta21659;
          this.parent = parent;
          this.properties = properties;
          this.children = children;
          this.options = options;
          this.form = form;
          this.cache = cache;
          this.__GT_parser = __GT_parser;
          this.meta21670 = meta21670;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core21669.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21671, meta21670__$1) {
          var self__ = this;
          var _21671__$1 = this;
          return new malli.core.t_malli$core21669(self__.meta21659, self__.parent, self__.properties, self__.children, self__.options, self__.form, self__.cache, self__.__GT_parser, meta21670__$1);
        };
        malli.core.t_malli$core21669.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21671) {
          var self__ = this;
          var _21671__$1 = this;
          return self__.meta21670;
        };
        malli.core.t_malli$core21669.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21669.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var validators = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(malli.core._validator, self__.children);
          return malli.impl.util._every_pred(validators);
        };
        malli.core.t_malli$core21669.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core21669.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._parent_children_transformer(this$__$1, self__.children, transformer, method, options__$1);
        };
        malli.core.t_malli$core21669.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_indexed(this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core21669.prototype.malli$core$Schema$_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.cljs$core$IFn$_invoke$arity$2 ? self__.__GT_parser.cljs$core$IFn$_invoke$arity$2(malli.core._parser, cljs.core.seq) : self__.__GT_parser.call(null, malli.core._parser, cljs.core.seq);
        };
        malli.core.t_malli$core21669.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core21669.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core21669.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref(self__.form);
        };
        malli.core.t_malli$core21669.prototype.malli$core$Schema$_explainer$arity$2 = function(_, path) {
          var self__ = this;
          var ___$1 = this;
          var explainers = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p__21682) {
            var vec__21683 = p__21682;
            var i = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21683, 0, null);
            var c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21683, 1, null);
            return malli.core._explainer(c, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(path, i));
          }, cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(cljs.core.vector, self__.children));
          return function malli$core$_and_schema_$_explain(x, in$, acc) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(acc_SINGLEQUOTE_, explainer) {
              return explainer.cljs$core$IFn$_invoke$arity$3 ? explainer.cljs$core$IFn$_invoke$arity$3(x, in$, acc_SINGLEQUOTE_) : explainer.call(null, x, in$, acc_SINGLEQUOTE_);
            }, acc, explainers);
          };
        };
        malli.core.t_malli$core21669.prototype.malli$core$Schema$_unparser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.cljs$core$IFn$_invoke$arity$2 ? self__.__GT_parser.cljs$core$IFn$_invoke$arity$2(malli.core._unparser, cljs.core.rseq) : self__.__GT_parser.call(null, malli.core._unparser, cljs.core.rseq);
        };
        malli.core.t_malli$core21669.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core21669.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21669.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core21669.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21669.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core21669.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.children, key, default$);
        };
        malli.core.t_malli$core21669.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_assoc_children(this$__$1, key, value);
        };
        malli.core.t_malli$core21669.getBasis = function() {
          return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta21659, cljs.core.with_meta(cljs$cst$symbol$parent, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core21658], null)), cljs$cst$symbol$properties, cljs$cst$symbol$children, cljs$cst$symbol$options, cljs$cst$symbol$form, cljs$cst$symbol$cache, cljs$cst$symbol$_DASH__GT_parser, cljs$cst$symbol$meta21670], null);
        };
        malli.core.t_malli$core21669.cljs$lang$type = true;
        malli.core.t_malli$core21669.cljs$lang$ctorStr = "malli.core/t_malli$core21669";
        malli.core.t_malli$core21669.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
          return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core21669");
        };
        malli.core.__GT_t_malli$core21669 = function malli$core$_and_schema_$___GT_t_malli$core21669(meta21659__$1, parent__$2, properties__$1, children__$2, options__$1, form__$1, cache__$1, __GT_parser__$1, meta21670) {
          return new malli.core.t_malli$core21669(meta21659__$1, parent__$2, properties__$1, children__$2, options__$1, form__$1, cache__$1, __GT_parser__$1, meta21670);
        };
      }
      return new malli.core.t_malli$core21669(self__.meta21659, parent__$1, properties, children__$1, options, form, cache, __GT_parser, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_schema], null));
    };
    malli.core.t_malli$core21658.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta21659], null);
    };
    malli.core.t_malli$core21658.cljs$lang$type = true;
    malli.core.t_malli$core21658.cljs$lang$ctorStr = "malli.core/t_malli$core21658";
    malli.core.t_malli$core21658.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core21658");
    };
    malli.core.__GT_t_malli$core21658 = function malli$core$_and_schema_$___GT_t_malli$core21658(meta21659) {
      return new malli.core.t_malli$core21658(meta21659);
    };
  }
  return new malli.core.t_malli$core21658(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_into_DASH_schema], null));
};
malli.core._or_schema = function malli$core$_or_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core21703 !== "undefined") {
  } else {
    malli.core.t_malli$core21703 = function(meta21704) {
      this.meta21704 = meta21704;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core21703.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21705, meta21704__$1) {
      var self__ = this;
      var _21705__$1 = this;
      return new malli.core.t_malli$core21703(meta21704__$1);
    };
    malli.core.t_malli$core21703.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21705) {
      var self__ = this;
      var _21705__$1 = this;
      return self__.meta21704;
    };
    malli.core.t_malli$core21703.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core21703.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs$cst$keyword$or;
    };
    malli.core.t_malli$core21703.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core21703.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core21703.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core21703.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5(cljs$cst$keyword$or, properties, children, 1, null);
      var children__$1 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p1__21697_SHARP_) {
        return malli.core.schema.cljs$core$IFn$_invoke$arity$2 ? malli.core.schema.cljs$core$IFn$_invoke$arity$2(p1__21697_SHARP_, options) : malli.core.schema.call(null, p1__21697_SHARP_, options);
      }, children);
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form(parent__$1, properties, children__$1, malli.core._form, options);
      }, null);
      var cache = malli.core._create_cache(options);
      var __GT_parser = function(f) {
        var parsers = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(f, children__$1);
        return function(p1__21698_SHARP_) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(_, parser) {
            return malli.impl.util._map_valid(cljs.core.reduced, parser.cljs$core$IFn$_invoke$arity$1 ? parser.cljs$core$IFn$_invoke$arity$1(p1__21698_SHARP_) : parser.call(null, p1__21698_SHARP_));
          }, cljs$cst$keyword$malli_DOT_core_SLASH_invalid, parsers);
        };
      };
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core21712 !== "undefined") {
      } else {
        malli.core.t_malli$core21712 = function(meta21704, parent, properties, children, options, form, cache, __GT_parser, meta21713) {
          this.meta21704 = meta21704;
          this.parent = parent;
          this.properties = properties;
          this.children = children;
          this.options = options;
          this.form = form;
          this.cache = cache;
          this.__GT_parser = __GT_parser;
          this.meta21713 = meta21713;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core21712.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21714, meta21713__$1) {
          var self__ = this;
          var _21714__$1 = this;
          return new malli.core.t_malli$core21712(self__.meta21704, self__.parent, self__.properties, self__.children, self__.options, self__.form, self__.cache, self__.__GT_parser, meta21713__$1);
        };
        malli.core.t_malli$core21712.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21714) {
          var self__ = this;
          var _21714__$1 = this;
          return self__.meta21713;
        };
        malli.core.t_malli$core21712.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21712.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var validators = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(malli.core._validator, self__.children);
          return malli.impl.util._some_pred(validators);
        };
        malli.core.t_malli$core21712.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core21712.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          var this_transformer = malli.core._value_transformer(transformer, this$__$1, method, options__$1);
          if (cljs.core.seq(self__.children)) {
            var transformers = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p1__21699_SHARP_) {
              var or__4253__auto__ = malli.core._transformer(p1__21699_SHARP_, transformer, method, options__$1);
              if (cljs.core.truth_(or__4253__auto__)) {
                return or__4253__auto__;
              } else {
                return cljs.core.identity;
              }
            }, self__.children);
            var validators = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(malli.core._validator, self__.children);
            return malli.core._intercepting.cljs$core$IFn$_invoke$arity$2(this_transformer, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$decode, method) ? function(x) {
              return cljs.core.reduce_kv(function(x__$1, i, transformer__$1) {
                var x_STAR_ = transformer__$1.cljs$core$IFn$_invoke$arity$1 ? transformer__$1.cljs$core$IFn$_invoke$arity$1(x__$1) : transformer__$1.call(null, x__$1);
                if (cljs.core.truth_(function() {
                  var fexpr__21719 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(validators, i);
                  return fexpr__21719.cljs$core$IFn$_invoke$arity$1 ? fexpr__21719.cljs$core$IFn$_invoke$arity$1(x_STAR_) : fexpr__21719.call(null, x_STAR_);
                }())) {
                  return cljs.core.reduced(x_STAR_);
                } else {
                  return x__$1;
                }
              }, x, transformers);
            } : function(x) {
              return cljs.core.reduce_kv(function(x__$1, i, validator) {
                if (cljs.core.truth_(validator.cljs$core$IFn$_invoke$arity$1 ? validator.cljs$core$IFn$_invoke$arity$1(x__$1) : validator.call(null, x__$1))) {
                  return cljs.core.reduced(function() {
                    var fexpr__21720 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(transformers, i);
                    return fexpr__21720.cljs$core$IFn$_invoke$arity$1 ? fexpr__21720.cljs$core$IFn$_invoke$arity$1(x__$1) : fexpr__21720.call(null, x__$1);
                  }());
                } else {
                  return x__$1;
                }
              }, x, validators);
            });
          } else {
            return malli.core._intercepting.cljs$core$IFn$_invoke$arity$1(this_transformer);
          }
        };
        malli.core.t_malli$core21712.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_indexed(this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core21712.prototype.malli$core$Schema$_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.cljs$core$IFn$_invoke$arity$1 ? self__.__GT_parser.cljs$core$IFn$_invoke$arity$1(malli.core._parser) : self__.__GT_parser.call(null, malli.core._parser);
        };
        malli.core.t_malli$core21712.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core21712.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core21712.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref(self__.form);
        };
        malli.core.t_malli$core21712.prototype.malli$core$Schema$_explainer$arity$2 = function(_, path) {
          var self__ = this;
          var ___$1 = this;
          var explainers = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p__21725) {
            var vec__21726 = p__21725;
            var i = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21726, 0, null);
            var c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21726, 1, null);
            return malli.core._explainer(c, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(path, i));
          }, cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(cljs.core.vector, self__.children));
          return function malli$core$_or_schema_$_explain(x, in$, acc) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(acc_SINGLEQUOTE_, explainer) {
              var acc_SINGLEQUOTE__SINGLEQUOTE_ = explainer.cljs$core$IFn$_invoke$arity$3 ? explainer.cljs$core$IFn$_invoke$arity$3(x, in$, acc_SINGLEQUOTE_) : explainer.call(null, x, in$, acc_SINGLEQUOTE_);
              if (acc_SINGLEQUOTE_ === acc_SINGLEQUOTE__SINGLEQUOTE_) {
                return cljs.core.reduced(acc);
              } else {
                return acc_SINGLEQUOTE__SINGLEQUOTE_;
              }
            }, acc, explainers);
          };
        };
        malli.core.t_malli$core21712.prototype.malli$core$Schema$_unparser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.cljs$core$IFn$_invoke$arity$1 ? self__.__GT_parser.cljs$core$IFn$_invoke$arity$1(malli.core._unparser) : self__.__GT_parser.call(null, malli.core._unparser);
        };
        malli.core.t_malli$core21712.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core21712.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21712.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core21712.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21712.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core21712.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.children, key, default$);
        };
        malli.core.t_malli$core21712.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_assoc_children(this$__$1, key, value);
        };
        malli.core.t_malli$core21712.getBasis = function() {
          return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta21704, cljs.core.with_meta(cljs$cst$symbol$parent, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core21703], null)), cljs$cst$symbol$properties, cljs$cst$symbol$children, cljs$cst$symbol$options, cljs$cst$symbol$form, cljs$cst$symbol$cache, cljs$cst$symbol$_DASH__GT_parser, cljs$cst$symbol$meta21713], null);
        };
        malli.core.t_malli$core21712.cljs$lang$type = true;
        malli.core.t_malli$core21712.cljs$lang$ctorStr = "malli.core/t_malli$core21712";
        malli.core.t_malli$core21712.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
          return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core21712");
        };
        malli.core.__GT_t_malli$core21712 = function malli$core$_or_schema_$___GT_t_malli$core21712(meta21704__$1, parent__$2, properties__$1, children__$2, options__$1, form__$1, cache__$1, __GT_parser__$1, meta21713) {
          return new malli.core.t_malli$core21712(meta21704__$1, parent__$2, properties__$1, children__$2, options__$1, form__$1, cache__$1, __GT_parser__$1, meta21713);
        };
      }
      return new malli.core.t_malli$core21712(self__.meta21704, parent__$1, properties, children__$1, options, form, cache, __GT_parser, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_schema], null));
    };
    malli.core.t_malli$core21703.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta21704], null);
    };
    malli.core.t_malli$core21703.cljs$lang$type = true;
    malli.core.t_malli$core21703.cljs$lang$ctorStr = "malli.core/t_malli$core21703";
    malli.core.t_malli$core21703.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core21703");
    };
    malli.core.__GT_t_malli$core21703 = function malli$core$_or_schema_$___GT_t_malli$core21703(meta21704) {
      return new malli.core.t_malli$core21703(meta21704);
    };
  }
  return new malli.core.t_malli$core21703(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_into_DASH_schema], null));
};
malli.core._orn_schema = function malli$core$_orn_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core21737 !== "undefined") {
  } else {
    malli.core.t_malli$core21737 = function(meta21738) {
      this.meta21738 = meta21738;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core21737.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21739, meta21738__$1) {
      var self__ = this;
      var _21739__$1 = this;
      return new malli.core.t_malli$core21737(meta21738__$1);
    };
    malli.core.t_malli$core21737.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21739) {
      var self__ = this;
      var _21739__$1 = this;
      return self__.meta21738;
    };
    malli.core.t_malli$core21737.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core21737.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_entry_ast(parent__$1, ast, options);
    };
    malli.core.t_malli$core21737.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core21737.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs$cst$keyword$orn;
    };
    malli.core.t_malli$core21737.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core21737.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core21737.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core21737.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5(cljs$cst$keyword$orn, properties, children, 1, null);
      var entry_parser = malli.core._create_entry_parser(children, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$naked_DASH_keys, true], null), options);
      var form = new cljs.core.Delay(function() {
        return malli.core._create_entry_form(parent__$1, properties, entry_parser, options);
      }, null);
      var cache = malli.core._create_cache(options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core21749 !== "undefined") {
      } else {
        malli.core.t_malli$core21749 = function(meta21738, parent, properties, children, options, entry_parser, form, cache, meta21750) {
          this.meta21738 = meta21738;
          this.parent = parent;
          this.properties = properties;
          this.children = children;
          this.options = options;
          this.entry_parser = entry_parser;
          this.form = form;
          this.cache = cache;
          this.meta21750 = meta21750;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core21749.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21751, meta21750__$1) {
          var self__ = this;
          var _21751__$1 = this;
          return new malli.core.t_malli$core21749(self__.meta21738, self__.parent, self__.properties, self__.children, self__.options, self__.entry_parser, self__.form, self__.cache, meta21750__$1);
        };
        malli.core.t_malli$core21749.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21751) {
          var self__ = this;
          var _21751__$1 = this;
          return self__.meta21750;
        };
        malli.core.t_malli$core21749.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21749.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._entry_ast(this$__$1, malli.core._entry_keyset(self__.entry_parser));
        };
        malli.core.t_malli$core21749.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21749.prototype.malli$core$Schema$_validator$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.impl.util._some_pred(malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p__21752) {
            var vec__21753 = p__21752;
            var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21753, 0, null);
            var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21753, 1, null);
            var c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21753, 2, null);
            return malli.core._validator(c);
          }, this$__$1.malli$core$Schema$_children$arity$1(null)));
        };
        malli.core.t_malli$core21749.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core21749.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          var this_transformer = malli.core._value_transformer(transformer, this$__$1, method, options__$1);
          if (cljs.core.seq(this$__$1.malli$core$Schema$_children$arity$1(null))) {
            var transformers = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p__21760) {
              var vec__21761 = p__21760;
              var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21761, 0, null);
              var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21761, 1, null);
              var c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21761, 2, null);
              var or__4253__auto__ = malli.core._transformer(c, transformer, method, options__$1);
              if (cljs.core.truth_(or__4253__auto__)) {
                return or__4253__auto__;
              } else {
                return cljs.core.identity;
              }
            }, this$__$1.malli$core$Schema$_children$arity$1(null));
            var validators = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p__21764) {
              var vec__21767 = p__21764;
              var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21767, 0, null);
              var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21767, 1, null);
              var c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21767, 2, null);
              return malli.core._validator(c);
            }, this$__$1.malli$core$Schema$_children$arity$1(null));
            return malli.core._intercepting.cljs$core$IFn$_invoke$arity$2(this_transformer, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$decode, method) ? function(x) {
              return cljs.core.reduce_kv(function(x__$1, i, transformer__$1) {
                var x_STAR_ = transformer__$1.cljs$core$IFn$_invoke$arity$1 ? transformer__$1.cljs$core$IFn$_invoke$arity$1(x__$1) : transformer__$1.call(null, x__$1);
                if (cljs.core.truth_(function() {
                  var fexpr__21772 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(validators, i);
                  return fexpr__21772.cljs$core$IFn$_invoke$arity$1 ? fexpr__21772.cljs$core$IFn$_invoke$arity$1(x_STAR_) : fexpr__21772.call(null, x_STAR_);
                }())) {
                  return cljs.core.reduced(x_STAR_);
                } else {
                  return x__$1;
                }
              }, x, transformers);
            } : function(x) {
              return cljs.core.reduce_kv(function(x__$1, i, validator) {
                if (cljs.core.truth_(validator.cljs$core$IFn$_invoke$arity$1 ? validator.cljs$core$IFn$_invoke$arity$1(x__$1) : validator.call(null, x__$1))) {
                  return cljs.core.reduced(function() {
                    var fexpr__21773 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(transformers, i);
                    return fexpr__21773.cljs$core$IFn$_invoke$arity$1 ? fexpr__21773.cljs$core$IFn$_invoke$arity$1(x__$1) : fexpr__21773.call(null, x__$1);
                  }());
                } else {
                  return x__$1;
                }
              }, x, validators);
            });
          } else {
            return malli.core._intercepting.cljs$core$IFn$_invoke$arity$1(this_transformer);
          }
        };
        malli.core.t_malli$core21749.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_entries(this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core21749.prototype.malli$core$Schema$_parser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var parsers = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p__21776) {
            var vec__21777 = p__21776;
            var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21777, 0, null);
            var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21777, 1, null);
            var c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21777, 2, null);
            var c__$1 = malli.core._parser(c);
            return function(x) {
              return malli.impl.util._map_valid(function(p1__21735_SHARP_) {
                return cljs.core.reduced(malli.impl.util._tagged(k, p1__21735_SHARP_));
              }, c__$1.cljs$core$IFn$_invoke$arity$1 ? c__$1.cljs$core$IFn$_invoke$arity$1(x) : c__$1.call(null, x));
            };
          }, this$__$1.malli$core$Schema$_children$arity$1(null));
          return function(x) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(_, parser) {
              return parser.cljs$core$IFn$_invoke$arity$1 ? parser.cljs$core$IFn$_invoke$arity$1(x) : parser.call(null, x);
            }, x, parsers);
          };
        };
        malli.core.t_malli$core21749.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core21749.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._entry_children(self__.entry_parser);
        };
        malli.core.t_malli$core21749.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref(self__.form);
        };
        malli.core.t_malli$core21749.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          var explainers = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p__21785) {
            var vec__21786 = p__21785;
            var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21786, 0, null);
            var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21786, 1, null);
            var c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21786, 2, null);
            return malli.core._explainer(c, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(path, k));
          }, this$__$1.malli$core$Schema$_children$arity$1(null));
          return function malli$core$_orn_schema_$_explain(x, in$, acc) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(acc_SINGLEQUOTE_, explainer) {
              var acc_SINGLEQUOTE__SINGLEQUOTE_ = explainer.cljs$core$IFn$_invoke$arity$3 ? explainer.cljs$core$IFn$_invoke$arity$3(x, in$, acc_SINGLEQUOTE_) : explainer.call(null, x, in$, acc_SINGLEQUOTE_);
              if (acc_SINGLEQUOTE_ === acc_SINGLEQUOTE__SINGLEQUOTE_) {
                return cljs.core.reduced(acc);
              } else {
                return acc_SINGLEQUOTE__SINGLEQUOTE_;
              }
            }, acc, explainers);
          };
        };
        malli.core.t_malli$core21749.prototype.malli$core$Schema$_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var unparsers = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p__21789) {
            var vec__21790 = p__21789;
            var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21790, 0, null);
            var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21790, 1, null);
            var c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21790, 2, null);
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._unparser(c)], null);
          }), this$__$1.malli$core$Schema$_children$arity$1(null));
          return function(x) {
            if (malli.impl.util._tagged_QMARK_(x)) {
              var temp__5755__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(unparsers, cljs.core.key(x));
              if (temp__5755__auto__ == null) {
                return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
              } else {
                var unparse = temp__5755__auto__;
                var G__21793 = cljs.core.val(x);
                return unparse.cljs$core$IFn$_invoke$arity$1 ? unparse.cljs$core$IFn$_invoke$arity$1(G__21793) : unparse.call(null, G__21793);
              }
            } else {
              return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
            }
          };
        };
        malli.core.t_malli$core21749.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core21749.prototype.malli$core$EntrySchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21749.prototype.malli$core$EntrySchema$_entries$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._entry_entries(self__.entry_parser);
        };
        malli.core.t_malli$core21749.prototype.malli$core$EntrySchema$_entry_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.entry_parser;
        };
        malli.core.t_malli$core21749.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21749.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core21749.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21749.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return true;
        };
        malli.core.t_malli$core21749.prototype.malli$core$LensSchema$_get$arity$3 = function(this$, key, default$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._get_entries(this$__$1, key, default$);
        };
        malli.core.t_malli$core21749.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_entries(this$__$1, key, value);
        };
        malli.core.t_malli$core21749.getBasis = function() {
          return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta21738, cljs.core.with_meta(cljs$cst$symbol$parent, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core21737], null)), cljs$cst$symbol$properties, cljs$cst$symbol$children, cljs$cst$symbol$options, cljs$cst$symbol$entry_DASH_parser, cljs$cst$symbol$form, cljs$cst$symbol$cache, cljs$cst$symbol$meta21750], null);
        };
        malli.core.t_malli$core21749.cljs$lang$type = true;
        malli.core.t_malli$core21749.cljs$lang$ctorStr = "malli.core/t_malli$core21749";
        malli.core.t_malli$core21749.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
          return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core21749");
        };
        malli.core.__GT_t_malli$core21749 = function malli$core$_orn_schema_$___GT_t_malli$core21749(meta21738__$1, parent__$2, properties__$1, children__$1, options__$1, entry_parser__$1, form__$1, cache__$1, meta21750) {
          return new malli.core.t_malli$core21749(meta21738__$1, parent__$2, properties__$1, children__$1, options__$1, entry_parser__$1, form__$1, cache__$1, meta21750);
        };
      }
      return new malli.core.t_malli$core21749(self__.meta21738, parent__$1, properties, children, options, entry_parser, form, cache, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_schema], null));
    };
    malli.core.t_malli$core21737.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta21738], null);
    };
    malli.core.t_malli$core21737.cljs$lang$type = true;
    malli.core.t_malli$core21737.cljs$lang$ctorStr = "malli.core/t_malli$core21737";
    malli.core.t_malli$core21737.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core21737");
    };
    malli.core.__GT_t_malli$core21737 = function malli$core$_orn_schema_$___GT_t_malli$core21737(meta21738) {
      return new malli.core.t_malli$core21737(meta21738);
    };
  }
  return new malli.core.t_malli$core21737(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_into_DASH_schema], null));
};
malli.core._not_schema = function malli$core$_not_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core21801 !== "undefined") {
  } else {
    malli.core.t_malli$core21801 = function(meta21802) {
      this.meta21802 = meta21802;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core21801.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21803, meta21802__$1) {
      var self__ = this;
      var _21803__$1 = this;
      return new malli.core.t_malli$core21801(meta21802__$1);
    };
    malli.core.t_malli$core21801.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21803) {
      var self__ = this;
      var _21803__$1 = this;
      return self__.meta21802;
    };
    malli.core.t_malli$core21801.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core21801.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_child_ast(parent__$1, ast, options);
    };
    malli.core.t_malli$core21801.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core21801.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs$cst$keyword$not;
    };
    malli.core.t_malli$core21801.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core21801.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core21801.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core21801.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5(cljs$cst$keyword$not, properties, children, 1, 1);
      var vec__21810 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p1__21800_SHARP_) {
        return malli.core.schema.cljs$core$IFn$_invoke$arity$2 ? malli.core.schema.cljs$core$IFn$_invoke$arity$2(p1__21800_SHARP_, options) : malli.core.schema.call(null, p1__21800_SHARP_, options);
      }, children);
      var schema = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21810, 0, null);
      var children__$1 = vec__21810;
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form(parent__$1, properties, children__$1, malli.core._form, options);
      }, null);
      var cache = malli.core._create_cache(options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core21814 !== "undefined") {
      } else {
        malli.core.t_malli$core21814 = function(form, options, properties, schema, children, parent, vec__21810, meta21802, cache, meta21815) {
          this.form = form;
          this.options = options;
          this.properties = properties;
          this.schema = schema;
          this.children = children;
          this.parent = parent;
          this.vec__21810 = vec__21810;
          this.meta21802 = meta21802;
          this.cache = cache;
          this.meta21815 = meta21815;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core21814.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21816, meta21815__$1) {
          var self__ = this;
          var _21816__$1 = this;
          return new malli.core.t_malli$core21814(self__.form, self__.options, self__.properties, self__.schema, self__.children, self__.parent, self__.vec__21810, self__.meta21802, self__.cache, meta21815__$1);
        };
        malli.core.t_malli$core21814.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21816) {
          var self__ = this;
          var _21816__$1 = this;
          return self__.meta21815;
        };
        malli.core.t_malli$core21814.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21814.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._to_child_ast(this$__$1);
        };
        malli.core.t_malli$core21814.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21814.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.complement(malli.core._validator(self__.schema));
        };
        malli.core.t_malli$core21814.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core21814.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._parent_children_transformer(this$__$1, self__.children, transformer, method, options__$1);
        };
        malli.core.t_malli$core21814.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_indexed(this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core21814.prototype.malli$core$Schema$_parser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var validator = this$__$1.malli$core$Schema$_validator$arity$1(null);
          return function(x) {
            if (cljs.core.truth_(validator.cljs$core$IFn$_invoke$arity$1 ? validator.cljs$core$IFn$_invoke$arity$1(x) : validator.call(null, x))) {
              return x;
            } else {
              return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
            }
          };
        };
        malli.core.t_malli$core21814.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core21814.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core21814.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref(self__.form);
        };
        malli.core.t_malli$core21814.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          var validator = this$__$1.malli$core$Schema$_validator$arity$1(null);
          return function malli$core$_not_schema_$_explain(x, in$, acc) {
            if (cljs.core.not(validator.cljs$core$IFn$_invoke$arity$1 ? validator.cljs$core$IFn$_invoke$arity$1(x) : validator.call(null, x))) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, malli.impl.util._error.cljs$core$IFn$_invoke$arity$4(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(path, 0), in$, this$__$1, x));
            } else {
              return acc;
            }
          };
        };
        malli.core.t_malli$core21814.prototype.malli$core$Schema$_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return this$__$1.malli$core$Schema$_parser$arity$1(null);
        };
        malli.core.t_malli$core21814.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core21814.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21814.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core21814.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21814.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core21814.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.children, key, default$);
        };
        malli.core.t_malli$core21814.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_assoc_children(this$__$1, key, value);
        };
        malli.core.t_malli$core21814.getBasis = function() {
          return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$form, cljs$cst$symbol$options, cljs$cst$symbol$properties, cljs$cst$symbol$schema, cljs$cst$symbol$children, cljs.core.with_meta(cljs$cst$symbol$parent, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core21801], null)), cljs$cst$symbol$vec__21810, cljs$cst$symbol$meta21802, cljs$cst$symbol$cache, cljs$cst$symbol$meta21815], 
          null);
        };
        malli.core.t_malli$core21814.cljs$lang$type = true;
        malli.core.t_malli$core21814.cljs$lang$ctorStr = "malli.core/t_malli$core21814";
        malli.core.t_malli$core21814.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
          return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core21814");
        };
        malli.core.__GT_t_malli$core21814 = function malli$core$_not_schema_$___GT_t_malli$core21814(form__$1, options__$1, properties__$1, schema__$1, children__$2, parent__$2, vec__21810__$1, meta21802__$1, cache__$1, meta21815) {
          return new malli.core.t_malli$core21814(form__$1, options__$1, properties__$1, schema__$1, children__$2, parent__$2, vec__21810__$1, meta21802__$1, cache__$1, meta21815);
        };
      }
      return new malli.core.t_malli$core21814(form, options, properties, schema, children__$1, parent__$1, vec__21810, self__.meta21802, cache, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_schema], null));
    };
    malli.core.t_malli$core21801.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta21802], null);
    };
    malli.core.t_malli$core21801.cljs$lang$type = true;
    malli.core.t_malli$core21801.cljs$lang$ctorStr = "malli.core/t_malli$core21801";
    malli.core.t_malli$core21801.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core21801");
    };
    malli.core.__GT_t_malli$core21801 = function malli$core$_not_schema_$___GT_t_malli$core21801(meta21802) {
      return new malli.core.t_malli$core21801(meta21802);
    };
  }
  return new malli.core.t_malli$core21801(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_into_DASH_schema], null));
};
malli.core._val_schema = function malli$core$_val_schema(var_args) {
  var G__21824 = arguments.length;
  switch(G__21824) {
    case 2:
      return malli.core._val_schema.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 0:
      return malli.core._val_schema.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._val_schema.cljs$core$IFn$_invoke$arity$2 = function(schema, properties) {
  return malli.core._into_schema(malli.core._val_schema.cljs$core$IFn$_invoke$arity$0(), properties, new cljs.core.List(null, schema, null, 1, null), malli.core._options(schema));
};
malli.core._val_schema.cljs$core$IFn$_invoke$arity$0 = function() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core21825 !== "undefined") {
  } else {
    malli.core.t_malli$core21825 = function(meta21826) {
      this.meta21826 = meta21826;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core21825.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21827, meta21826__$1) {
      var self__ = this;
      var _21827__$1 = this;
      return new malli.core.t_malli$core21825(meta21826__$1);
    };
    malli.core.t_malli$core21825.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21827) {
      var self__ = this;
      var _21827__$1 = this;
      return self__.meta21826;
    };
    malli.core.t_malli$core21825.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core21825.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_child_ast(parent__$1, ast, options);
    };
    malli.core.t_malli$core21825.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core21825.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs$cst$keyword$malli_DOT_core_SLASH_val;
    };
    malli.core.t_malli$core21825.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core21825.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core21825.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core21825.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      var children__$1 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p1__21822_SHARP_) {
        return malli.core.schema.cljs$core$IFn$_invoke$arity$2 ? malli.core.schema.cljs$core$IFn$_invoke$arity$2(p1__21822_SHARP_, options) : malli.core.schema.call(null, p1__21822_SHARP_, options);
      }, children);
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form(parent__$1, properties, children__$1, malli.core._form, options);
      }, null);
      var schema = cljs.core.first(children__$1);
      var cache = malli.core._create_cache(options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core21830 !== "undefined") {
      } else {
        malli.core.t_malli$core21830 = function(meta21826, parent, properties, children, options, form, schema, cache, meta21831) {
          this.meta21826 = meta21826;
          this.parent = parent;
          this.properties = properties;
          this.children = children;
          this.options = options;
          this.form = form;
          this.schema = schema;
          this.cache = cache;
          this.meta21831 = meta21831;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core21830.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21832, meta21831__$1) {
          var self__ = this;
          var _21832__$1 = this;
          return new malli.core.t_malli$core21830(self__.meta21826, self__.parent, self__.properties, self__.children, self__.options, self__.form, self__.schema, self__.cache, meta21831__$1);
        };
        malli.core.t_malli$core21830.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21832) {
          var self__ = this;
          var _21832__$1 = this;
          return self__.meta21831;
        };
        malli.core.t_malli$core21830.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21830.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._to_child_ast(this$__$1);
        };
        malli.core.t_malli$core21830.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21830.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._validator(self__.schema);
        };
        malli.core.t_malli$core21830.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._options(self__.schema);
        };
        malli.core.t_malli$core21830.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._parent_children_transformer(this$__$1, new cljs.core.List(null, self__.schema, null, 1, null), transformer, method, options__$1);
        };
        malli.core.t_malli$core21830.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          if (cljs.core.truth_(cljs$cst$keyword$malli_DOT_core_SLASH_walk_DASH_entry_DASH_vals.cljs$core$IFn$_invoke$arity$1(options__$1))) {
            if (cljs.core.truth_(malli.core._accept(walker, this$__$1, path, options__$1))) {
              return malli.core._outer(walker, this$__$1, path, new cljs.core.List(null, malli.core._inner(walker, self__.schema, path, options__$1), null, 1, null), options__$1);
            } else {
              return null;
            }
          } else {
            return malli.core._walk(self__.schema, walker, path, options__$1);
          }
        };
        malli.core.t_malli$core21830.prototype.malli$core$Schema$_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._parser(self__.schema);
        };
        malli.core.t_malli$core21830.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core21830.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.schema], null);
        };
        malli.core.t_malli$core21830.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref(self__.form);
        };
        malli.core.t_malli$core21830.prototype.malli$core$Schema$_explainer$arity$2 = function(_, path) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._explainer(self__.schema, path);
        };
        malli.core.t_malli$core21830.prototype.malli$core$Schema$_unparser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._unparser(self__.schema);
        };
        malli.core.t_malli$core21830.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core21830.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21830.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core21830.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21830.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core21830.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(0, key)) {
            return self__.schema;
          } else {
            return default$;
          }
        };
        malli.core.t_malli$core21830.prototype.malli$core$LensSchema$_set$arity$3 = function(_, key, value) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(0, key)) {
            return malli.core._val_schema.cljs$core$IFn$_invoke$arity$2(value, self__.properties);
          } else {
            return null;
          }
        };
        malli.core.t_malli$core21830.prototype.malli$core$RefSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21830.prototype.malli$core$RefSchema$_ref$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core21830.prototype.malli$core$RefSchema$_deref$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.schema;
        };
        malli.core.t_malli$core21830.getBasis = function() {
          return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta21826, cljs.core.with_meta(cljs$cst$symbol$parent, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core21825], null)), cljs$cst$symbol$properties, cljs$cst$symbol$children, cljs$cst$symbol$options, cljs$cst$symbol$form, cljs$cst$symbol$schema, cljs$cst$symbol$cache, cljs$cst$symbol$meta21831], null);
        };
        malli.core.t_malli$core21830.cljs$lang$type = true;
        malli.core.t_malli$core21830.cljs$lang$ctorStr = "malli.core/t_malli$core21830";
        malli.core.t_malli$core21830.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
          return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core21830");
        };
        malli.core.__GT_t_malli$core21830 = function malli$core$__GT_t_malli$core21830(meta21826__$1, parent__$2, properties__$1, children__$2, options__$1, form__$1, schema__$1, cache__$1, meta21831) {
          return new malli.core.t_malli$core21830(meta21826__$1, parent__$2, properties__$1, children__$2, options__$1, form__$1, schema__$1, cache__$1, meta21831);
        };
      }
      return new malli.core.t_malli$core21830(self__.meta21826, parent__$1, properties, children__$1, options, form, schema, cache, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_schema], null));
    };
    malli.core.t_malli$core21825.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta21826], null);
    };
    malli.core.t_malli$core21825.cljs$lang$type = true;
    malli.core.t_malli$core21825.cljs$lang$ctorStr = "malli.core/t_malli$core21825";
    malli.core.t_malli$core21825.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core21825");
    };
    malli.core.__GT_t_malli$core21825 = function malli$core$__GT_t_malli$core21825(meta21826) {
      return new malli.core.t_malli$core21825(meta21826);
    };
  }
  return new malli.core.t_malli$core21825(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_into_DASH_schema], null));
};
malli.core._val_schema.cljs$lang$maxFixedArity = 2;
malli.core._map_schema = function malli$core$_map_schema(var_args) {
  var G__21844 = arguments.length;
  switch(G__21844) {
    case 0:
      return malli.core._map_schema.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.core._map_schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._map_schema.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.core._map_schema.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$naked_DASH_keys, true], null));
};
malli.core._map_schema.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core21849 !== "undefined") {
  } else {
    malli.core.t_malli$core21849 = function(opts, meta21850) {
      this.opts = opts;
      this.meta21850 = meta21850;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core21849.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21851, meta21850__$1) {
      var self__ = this;
      var _21851__$1 = this;
      return new malli.core.t_malli$core21849(self__.opts, meta21850__$1);
    };
    malli.core.t_malli$core21849.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21851) {
      var self__ = this;
      var _21851__$1 = this;
      return self__.meta21850;
    };
    malli.core.t_malli$core21849.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core21849.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_entry_ast(parent__$1, ast, options);
    };
    malli.core.t_malli$core21849.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core21849.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs$cst$keyword$map;
    };
    malli.core.t_malli$core21849.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core21849.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core21849.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core21849.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, p__21857, children, options) {
      var self__ = this;
      var map__21858 = p__21857;
      var map__21858__$1 = cljs.core.__destructure_map(map__21858);
      var properties = map__21858__$1;
      var closed = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21858__$1, cljs$cst$keyword$closed);
      var parent__$1 = this;
      var entry_parser = malli.core._create_entry_parser(children, self__.opts, options);
      var form = new cljs.core.Delay(function() {
        return malli.core._create_entry_form(parent__$1, properties, entry_parser, options);
      }, null);
      var cache = malli.core._create_cache(options);
      var __GT_parser = function(this$, f) {
        var keyset = malli.core._entry_keyset(malli.core._entry_parser(this$));
        var parsers = function() {
          var G__21859 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p__21860) {
            var vec__21862 = p__21860;
            var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21862, 0, null);
            var map__21865 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21862, 1, null);
            var map__21865__$1 = cljs.core.__destructure_map(map__21865);
            var optional = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21865__$1, cljs$cst$keyword$optional);
            var schema = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21862, 2, null);
            var parser = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(schema) : f.call(null, schema);
            return function(m) {
              var temp__5751__auto__ = cljs.core.find(m, key);
              if (cljs.core.truth_(temp__5751__auto__)) {
                var e = temp__5751__auto__;
                var v = cljs.core.val(e);
                var v_STAR_ = parser.cljs$core$IFn$_invoke$arity$1 ? parser.cljs$core$IFn$_invoke$arity$1(v) : parser.call(null, v);
                if (malli.impl.util._invalid_QMARK_(v_STAR_)) {
                  return cljs.core.reduced(v_STAR_);
                } else {
                  if (v_STAR_ === v) {
                    return m;
                  } else {
                    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, key, v_STAR_);
                  }
                }
              } else {
                if (cljs.core.truth_(optional)) {
                  return m;
                } else {
                  return cljs.core.reduced(cljs$cst$keyword$malli_DOT_core_SLASH_invalid);
                }
              }
            };
          }, malli.core._children(this$));
          if (cljs.core.truth_(closed)) {
            return cljs.core.cons(function(m) {
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(m__$1, k) {
                if (cljs.core.contains_QMARK_(keyset, k)) {
                  return m__$1;
                } else {
                  return cljs.core.reduced(cljs.core.reduced(cljs$cst$keyword$malli_DOT_core_SLASH_invalid));
                }
              }, m, cljs.core.keys(m));
            }, G__21859);
          } else {
            return G__21859;
          }
        }();
        return function(x) {
          if (cljs.core.map_QMARK_(x)) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(m, parser) {
              return parser.cljs$core$IFn$_invoke$arity$1 ? parser.cljs$core$IFn$_invoke$arity$1(m) : parser.call(null, m);
            }, x, parsers);
          } else {
            return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
          }
        };
      };
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core21868 !== "undefined") {
      } else {
        malli.core.t_malli$core21868 = function(form, p__21857, options, properties, closed, children, entry_parser, parent, meta21850, map__21858, __GT_parser, cache, opts, meta21869) {
          this.form = form;
          this.p__21857 = p__21857;
          this.options = options;
          this.properties = properties;
          this.closed = closed;
          this.children = children;
          this.entry_parser = entry_parser;
          this.parent = parent;
          this.meta21850 = meta21850;
          this.map__21858 = map__21858;
          this.__GT_parser = __GT_parser;
          this.cache = cache;
          this.opts = opts;
          this.meta21869 = meta21869;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core21868.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21870, meta21869__$1) {
          var self__ = this;
          var _21870__$1 = this;
          return new malli.core.t_malli$core21868(self__.form, self__.p__21857, self__.options, self__.properties, self__.closed, self__.children, self__.entry_parser, self__.parent, self__.meta21850, self__.map__21858, self__.__GT_parser, self__.cache, self__.opts, meta21869__$1);
        };
        malli.core.t_malli$core21868.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21870) {
          var self__ = this;
          var _21870__$1 = this;
          return self__.meta21869;
        };
        malli.core.t_malli$core21868.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21868.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._entry_ast(this$__$1, malli.core._entry_keyset(self__.entry_parser));
        };
        malli.core.t_malli$core21868.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21868.prototype.malli$core$Schema$_validator$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var keyset = malli.core._entry_keyset(this$__$1.malli$core$EntrySchema$_entry_parser$arity$1(null));
          var validators = function() {
            var G__21871 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p__21872) {
              var vec__21873 = p__21872;
              var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21873, 0, null);
              var map__21876 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21873, 1, null);
              var map__21876__$1 = cljs.core.__destructure_map(map__21876);
              var optional = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21876__$1, cljs$cst$keyword$optional);
              var value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21873, 2, null);
              var valid_QMARK_ = malli.core._validator(value);
              var default$ = cljs.core.boolean$(optional);
              return function(m) {
                var temp__5751__auto__ = cljs.core.find(m, key);
                if (cljs.core.truth_(temp__5751__auto__)) {
                  var map_entry = temp__5751__auto__;
                  var G__21881 = cljs.core.val(map_entry);
                  return valid_QMARK_.cljs$core$IFn$_invoke$arity$1 ? valid_QMARK_.cljs$core$IFn$_invoke$arity$1(G__21881) : valid_QMARK_.call(null, G__21881);
                } else {
                  return default$;
                }
              };
            }, this$__$1.malli$core$Schema$_children$arity$1(null));
            if (cljs.core.truth_(self__.closed)) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(G__21871, function(m) {
                return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(acc, k) {
                  if (cljs.core.contains_QMARK_(keyset, k)) {
                    return acc;
                  } else {
                    return cljs.core.reduced(false);
                  }
                }, true, cljs.core.keys(m));
              });
            } else {
              return G__21871;
            }
          }();
          var validate = malli.impl.util._every_pred(validators);
          return function(m) {
            var and__4251__auto__ = cljs.core.map_QMARK_(m);
            if (and__4251__auto__) {
              return validate(m);
            } else {
              return and__4251__auto__;
            }
          };
        };
        malli.core.t_malli$core21868.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core21868.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          var this_transformer = malli.core._value_transformer(transformer, this$__$1, method, options__$1);
          var __GT_children = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(acc, p__21892) {
            var vec__21894 = p__21892;
            var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21894, 0, null);
            var s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21894, 1, null);
            var t = malli.core._transformer(s, transformer, method, options__$1);
            var G__21897 = acc;
            if (cljs.core.truth_(t)) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(G__21897, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, t], null));
            } else {
              return G__21897;
            }
          }, cljs.core.PersistentVector.EMPTY, this$__$1.malli$core$EntrySchema$_entries$arity$1(null));
          var apply__GT_children = cljs.core.seq(__GT_children) ? malli.core._map_transformer(__GT_children) : null;
          var apply__GT_children__$1 = malli.core._guard(cljs.core.map_QMARK_, apply__GT_children);
          return malli.core._intercepting.cljs$core$IFn$_invoke$arity$2(this_transformer, apply__GT_children__$1);
        };
        malli.core.t_malli$core21868.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_entries(this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core21868.prototype.malli$core$Schema$_parser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return self__.__GT_parser.cljs$core$IFn$_invoke$arity$2 ? self__.__GT_parser.cljs$core$IFn$_invoke$arity$2(this$__$1, malli.core._parser) : self__.__GT_parser.call(null, this$__$1, malli.core._parser);
        };
        malli.core.t_malli$core21868.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core21868.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._entry_children(self__.entry_parser);
        };
        malli.core.t_malli$core21868.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref(self__.form);
        };
        malli.core.t_malli$core21868.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          var keyset = malli.core._entry_keyset(this$__$1.malli$core$EntrySchema$_entry_parser$arity$1(null));
          var explainers = function() {
            var G__21902 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p__21906) {
              var vec__21907 = p__21906;
              var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21907, 0, null);
              var map__21910 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21907, 1, null);
              var map__21910__$1 = cljs.core.__destructure_map(map__21910);
              var optional = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21910__$1, cljs$cst$keyword$optional);
              var schema = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21907, 2, null);
              var explainer = malli.core._explainer(schema, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(path, key));
              return function(x, in$, acc) {
                var temp__5751__auto__ = cljs.core.find(x, key);
                if (cljs.core.truth_(temp__5751__auto__)) {
                  var e = temp__5751__auto__;
                  var G__21911 = cljs.core.val(e);
                  var G__21912 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(in$, key);
                  var G__21913 = acc;
                  return explainer.cljs$core$IFn$_invoke$arity$3 ? explainer.cljs$core$IFn$_invoke$arity$3(G__21911, G__21912, G__21913) : explainer.call(null, G__21911, G__21912, G__21913);
                } else {
                  if (cljs.core.not(optional)) {
                    return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, malli.impl.util._error.cljs$core$IFn$_invoke$arity$5(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(path, key), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(in$, key), this$__$1, null, cljs$cst$keyword$malli_DOT_core_SLASH_missing_DASH_key));
                  } else {
                    return acc;
                  }
                }
              };
            }, this$__$1.malli$core$Schema$_children$arity$1(null));
            if (cljs.core.truth_(self__.closed)) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(G__21902, function(x, in$, acc) {
                return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(acc__$1, k) {
                  if (cljs.core.contains_QMARK_(keyset, k)) {
                    return acc__$1;
                  } else {
                    return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc__$1, malli.impl.util._error.cljs$core$IFn$_invoke$arity$5(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(path, k), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(in$, k), this$__$1, null, cljs$cst$keyword$malli_DOT_core_SLASH_extra_DASH_key));
                  }
                }, acc, cljs.core.keys(x));
              });
            } else {
              return G__21902;
            }
          }();
          return function(x, in$, acc) {
            if (!cljs.core.map_QMARK_(x)) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, malli.impl.util._error.cljs$core$IFn$_invoke$arity$5(path, in$, this$__$1, x, cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_type));
            } else {
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(acc__$1, explainer) {
                return explainer.cljs$core$IFn$_invoke$arity$3 ? explainer.cljs$core$IFn$_invoke$arity$3(x, in$, acc__$1) : explainer.call(null, x, in$, acc__$1);
              }, acc, explainers);
            }
          };
        };
        malli.core.t_malli$core21868.prototype.malli$core$Schema$_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return self__.__GT_parser.cljs$core$IFn$_invoke$arity$2 ? self__.__GT_parser.cljs$core$IFn$_invoke$arity$2(this$__$1, malli.core._unparser) : self__.__GT_parser.call(null, this$__$1, malli.core._unparser);
        };
        malli.core.t_malli$core21868.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core21868.prototype.malli$core$EntrySchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21868.prototype.malli$core$EntrySchema$_entries$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._entry_entries(self__.entry_parser);
        };
        malli.core.t_malli$core21868.prototype.malli$core$EntrySchema$_entry_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.entry_parser;
        };
        malli.core.t_malli$core21868.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21868.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core21868.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21868.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return true;
        };
        malli.core.t_malli$core21868.prototype.malli$core$LensSchema$_get$arity$3 = function(this$, key, default$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._get_entries(this$__$1, key, default$);
        };
        malli.core.t_malli$core21868.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_entries(this$__$1, key, value);
        };
        malli.core.t_malli$core21868.getBasis = function() {
          return new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$form, cljs$cst$symbol$p__21857, cljs$cst$symbol$options, cljs$cst$symbol$properties, cljs$cst$symbol$closed, cljs$cst$symbol$children, cljs$cst$symbol$entry_DASH_parser, cljs.core.with_meta(cljs$cst$symbol$parent, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core21849], null)), cljs$cst$symbol$meta21850, cljs$cst$symbol$map__21858, 
          cljs$cst$symbol$_DASH__GT_parser, cljs$cst$symbol$cache, cljs$cst$symbol$opts, cljs$cst$symbol$meta21869], null);
        };
        malli.core.t_malli$core21868.cljs$lang$type = true;
        malli.core.t_malli$core21868.cljs$lang$ctorStr = "malli.core/t_malli$core21868";
        malli.core.t_malli$core21868.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
          return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core21868");
        };
        malli.core.__GT_t_malli$core21868 = function malli$core$__GT_t_malli$core21868(form__$1, p__21857__$1, options__$1, properties__$1, closed__$1, children__$1, entry_parser__$1, parent__$2, meta21850__$1, map__21858__$2, __GT_parser__$1, cache__$1, opts__$1, meta21869) {
          return new malli.core.t_malli$core21868(form__$1, p__21857__$1, options__$1, properties__$1, closed__$1, children__$1, entry_parser__$1, parent__$2, meta21850__$1, map__21858__$2, __GT_parser__$1, cache__$1, opts__$1, meta21869);
        };
      }
      return new malli.core.t_malli$core21868(form, p__21857, options, properties, closed, children, entry_parser, parent__$1, self__.meta21850, map__21858__$1, __GT_parser, cache, self__.opts, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_schema], null));
    };
    malli.core.t_malli$core21849.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$opts, cljs$cst$symbol$meta21850], null);
    };
    malli.core.t_malli$core21849.cljs$lang$type = true;
    malli.core.t_malli$core21849.cljs$lang$ctorStr = "malli.core/t_malli$core21849";
    malli.core.t_malli$core21849.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core21849");
    };
    malli.core.__GT_t_malli$core21849 = function malli$core$__GT_t_malli$core21849(opts__$1, meta21850) {
      return new malli.core.t_malli$core21849(opts__$1, meta21850);
    };
  }
  return new malli.core.t_malli$core21849(opts, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_into_DASH_schema], null));
};
malli.core._map_schema.cljs$lang$maxFixedArity = 1;
malli.core._map_of_schema = function malli$core$_map_of_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core21950 !== "undefined") {
  } else {
    malli.core.t_malli$core21950 = function(meta21951) {
      this.meta21951 = meta21951;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core21950.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21952, meta21951__$1) {
      var self__ = this;
      var _21952__$1 = this;
      return new malli.core.t_malli$core21950(meta21951__$1);
    };
    malli.core.t_malli$core21950.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21952) {
      var self__ = this;
      var _21952__$1 = this;
      return self__.meta21951;
    };
    malli.core.t_malli$core21950.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core21950.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return parent__$1.malli$core$IntoSchema$_into_schema$arity$4(null, cljs$cst$keyword$properties.cljs$core$IFn$_invoke$arity$1(ast), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__21955 = cljs$cst$keyword$key.cljs$core$IFn$_invoke$arity$1(ast);
        var G__21956 = options;
        return malli.core.from_ast.cljs$core$IFn$_invoke$arity$2 ? malli.core.from_ast.cljs$core$IFn$_invoke$arity$2(G__21955, G__21956) : malli.core.from_ast.call(null, G__21955, G__21956);
      }(), function() {
        var G__21957 = cljs$cst$keyword$value.cljs$core$IFn$_invoke$arity$1(ast);
        var G__21958 = options;
        return malli.core.from_ast.cljs$core$IFn$_invoke$arity$2 ? malli.core.from_ast.cljs$core$IFn$_invoke$arity$2(G__21957, G__21958) : malli.core.from_ast.call(null, G__21957, G__21958);
      }()], null), options);
    };
    malli.core.t_malli$core21950.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core21950.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs$cst$keyword$map_DASH_of;
    };
    malli.core.t_malli$core21950.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core21950.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core21950.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core21950.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, p__21959, children, options) {
      var self__ = this;
      var map__21960 = p__21959;
      var map__21960__$1 = cljs.core.__destructure_map(map__21960);
      var properties = map__21960__$1;
      var min = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21960__$1, cljs$cst$keyword$min);
      var max = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21960__$1, cljs$cst$keyword$max);
      var parent__$1 = this;
      malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5(cljs$cst$keyword$map_DASH_of, properties, children, 2, 2);
      var vec__21961 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p1__21938_SHARP_) {
        return malli.core.schema.cljs$core$IFn$_invoke$arity$2 ? malli.core.schema.cljs$core$IFn$_invoke$arity$2(p1__21938_SHARP_, options) : malli.core.schema.call(null, p1__21938_SHARP_, options);
      }, children);
      var key_schema = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21961, 0, null);
      var value_schema = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21961, 1, null);
      var children__$1 = vec__21961;
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form(parent__$1, properties, children__$1, malli.core._form, options);
      }, null);
      var cache = malli.core._create_cache(options);
      var validate_limits = malli.core._validate_limits(min, max);
      var __GT_parser = function(f) {
        var key_parser = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(key_schema) : f.call(null, key_schema);
        var value_parser = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(value_schema) : f.call(null, value_schema);
        return function(x) {
          if (cljs.core.map_QMARK_(x)) {
            return cljs.core.reduce_kv(function(acc, k, v) {
              var k_STAR_ = key_parser.cljs$core$IFn$_invoke$arity$1 ? key_parser.cljs$core$IFn$_invoke$arity$1(k) : key_parser.call(null, k);
              var v_STAR_ = value_parser.cljs$core$IFn$_invoke$arity$1 ? value_parser.cljs$core$IFn$_invoke$arity$1(v) : value_parser.call(null, v);
              if (malli.impl.util._invalid_QMARK_(k_STAR_) || malli.impl.util._invalid_QMARK_(v_STAR_)) {
                return cljs.core.reduced(cljs$cst$keyword$malli_DOT_core_SLASH_invalid);
              } else {
                return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(acc, k_STAR_, v_STAR_);
              }
            }, cljs.core.empty(x), x);
          } else {
            return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
          }
        };
      };
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core21970 !== "undefined") {
      } else {
        malli.core.t_malli$core21970 = function(form, options, meta21951, properties, children, min, value_schema, parent, map__21960, key_schema, vec__21961, p__21959, __GT_parser, cache, validate_limits, max, meta21971) {
          this.form = form;
          this.options = options;
          this.meta21951 = meta21951;
          this.properties = properties;
          this.children = children;
          this.min = min;
          this.value_schema = value_schema;
          this.parent = parent;
          this.map__21960 = map__21960;
          this.key_schema = key_schema;
          this.vec__21961 = vec__21961;
          this.p__21959 = p__21959;
          this.__GT_parser = __GT_parser;
          this.cache = cache;
          this.validate_limits = validate_limits;
          this.max = max;
          this.meta21971 = meta21971;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core21970.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21972, meta21971__$1) {
          var self__ = this;
          var _21972__$1 = this;
          return new malli.core.t_malli$core21970(self__.form, self__.options, self__.meta21951, self__.properties, self__.children, self__.min, self__.value_schema, self__.parent, self__.map__21960, self__.key_schema, self__.vec__21961, self__.p__21959, self__.__GT_parser, self__.cache, self__.validate_limits, self__.max, meta21971__$1);
        };
        malli.core.t_malli$core21970.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21972) {
          var self__ = this;
          var _21972__$1 = this;
          return self__.meta21971;
        };
        malli.core.t_malli$core21970.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21970.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._ast(new cljs.core.PersistentArrayMap(null, 3, [cljs$cst$keyword$type, cljs$cst$keyword$map_DASH_of, cljs$cst$keyword$key, malli.core.ast.cljs$core$IFn$_invoke$arity$1 ? malli.core.ast.cljs$core$IFn$_invoke$arity$1(self__.key_schema) : malli.core.ast.call(null, self__.key_schema), cljs$cst$keyword$value, malli.core.ast.cljs$core$IFn$_invoke$arity$1 ? malli.core.ast.cljs$core$IFn$_invoke$arity$1(self__.value_schema) : malli.core.ast.call(null, self__.value_schema)], null), 
          self__.properties, self__.options);
        };
        malli.core.t_malli$core21970.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21970.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var key_valid_QMARK_ = malli.core._validator(self__.key_schema);
          var value_valid_QMARK_ = malli.core._validator(self__.value_schema);
          return function(m) {
            var and__4251__auto__ = cljs.core.map_QMARK_(m);
            if (and__4251__auto__) {
              var and__4251__auto____$1 = self__.validate_limits.cljs$core$IFn$_invoke$arity$1 ? self__.validate_limits.cljs$core$IFn$_invoke$arity$1(m) : self__.validate_limits.call(null, m);
              if (cljs.core.truth_(and__4251__auto____$1)) {
                return cljs.core.reduce_kv(function(___$2, key, value) {
                  var or__4253__auto__ = function() {
                    var and__4251__auto____$2 = key_valid_QMARK_.cljs$core$IFn$_invoke$arity$1 ? key_valid_QMARK_.cljs$core$IFn$_invoke$arity$1(key) : key_valid_QMARK_.call(null, key);
                    if (cljs.core.truth_(and__4251__auto____$2)) {
                      return value_valid_QMARK_.cljs$core$IFn$_invoke$arity$1 ? value_valid_QMARK_.cljs$core$IFn$_invoke$arity$1(value) : value_valid_QMARK_.call(null, value);
                    } else {
                      return and__4251__auto____$2;
                    }
                  }();
                  if (cljs.core.truth_(or__4253__auto__)) {
                    return or__4253__auto__;
                  } else {
                    return cljs.core.reduced(false);
                  }
                }, true, m);
              } else {
                return and__4251__auto____$1;
              }
            } else {
              return and__4251__auto__;
            }
          };
        };
        malli.core.t_malli$core21970.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core21970.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          var this_transformer = malli.core._value_transformer(transformer, this$__$1, method, options__$1);
          var __GT_key = malli.core._transformer(self__.key_schema, transformer, method, options__$1);
          var __GT_child = malli.core._transformer(self__.value_schema, transformer, method, options__$1);
          var __GT_key_child = cljs.core.truth_(function() {
            var and__4251__auto__ = __GT_key;
            if (cljs.core.truth_(and__4251__auto__)) {
              return __GT_child;
            } else {
              return and__4251__auto__;
            }
          }()) ? function(p1__21940_SHARP_, p2__21941_SHARP_, p3__21942_SHARP_) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__21940_SHARP_, __GT_key.cljs$core$IFn$_invoke$arity$1 ? __GT_key.cljs$core$IFn$_invoke$arity$1(p2__21941_SHARP_) : __GT_key.call(null, p2__21941_SHARP_), __GT_child.cljs$core$IFn$_invoke$arity$1 ? __GT_child.cljs$core$IFn$_invoke$arity$1(p3__21942_SHARP_) : __GT_child.call(null, p3__21942_SHARP_));
          } : cljs.core.truth_(__GT_key) ? function(p1__21943_SHARP_, p2__21944_SHARP_, p3__21945_SHARP_) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__21943_SHARP_, __GT_key.cljs$core$IFn$_invoke$arity$1 ? __GT_key.cljs$core$IFn$_invoke$arity$1(p2__21944_SHARP_) : __GT_key.call(null, p2__21944_SHARP_), p3__21945_SHARP_);
          } : cljs.core.truth_(__GT_child) ? function(p1__21946_SHARP_, p2__21947_SHARP_, p3__21948_SHARP_) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__21946_SHARP_, p2__21947_SHARP_, __GT_child.cljs$core$IFn$_invoke$arity$1 ? __GT_child.cljs$core$IFn$_invoke$arity$1(p3__21948_SHARP_) : __GT_child.call(null, p3__21948_SHARP_));
          } : null;
          var apply__GT_key_child = cljs.core.truth_(__GT_key_child) ? function(p1__21949_SHARP_) {
            return cljs.core.reduce_kv(__GT_key_child, cljs.core.empty(p1__21949_SHARP_), p1__21949_SHARP_);
          } : null;
          var apply__GT_key_child__$1 = malli.core._guard(cljs.core.map_QMARK_, apply__GT_key_child);
          return malli.core._intercepting.cljs$core$IFn$_invoke$arity$2(this_transformer, apply__GT_key_child__$1);
        };
        malli.core.t_malli$core21970.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_indexed(this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core21970.prototype.malli$core$Schema$_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.cljs$core$IFn$_invoke$arity$1 ? self__.__GT_parser.cljs$core$IFn$_invoke$arity$1(malli.core._parser) : self__.__GT_parser.call(null, malli.core._parser);
        };
        malli.core.t_malli$core21970.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core21970.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core21970.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref(self__.form);
        };
        malli.core.t_malli$core21970.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          var key_explainer = malli.core._explainer(self__.key_schema, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(path, 0));
          var value_explainer = malli.core._explainer(self__.value_schema, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(path, 1));
          return function malli$core$_map_of_schema_$_explain(m, in$, acc) {
            if (!cljs.core.map_QMARK_(m)) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, malli.impl.util._error.cljs$core$IFn$_invoke$arity$5(path, in$, this$__$1, m, cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_type));
            } else {
              if (cljs.core.not(self__.validate_limits.cljs$core$IFn$_invoke$arity$1 ? self__.validate_limits.cljs$core$IFn$_invoke$arity$1(m) : self__.validate_limits.call(null, m))) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, malli.impl.util._error.cljs$core$IFn$_invoke$arity$5(path, in$, this$__$1, m, cljs$cst$keyword$malli_DOT_core_SLASH_limits));
              } else {
                return cljs.core.reduce_kv(function(acc__$1, key, value) {
                  var in$__$1 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(in$, key);
                  var G__21989 = value;
                  var G__21990 = in$__$1;
                  var G__21991 = key_explainer.cljs$core$IFn$_invoke$arity$3 ? key_explainer.cljs$core$IFn$_invoke$arity$3(key, in$__$1, acc__$1) : key_explainer.call(null, key, in$__$1, acc__$1);
                  return value_explainer.cljs$core$IFn$_invoke$arity$3 ? value_explainer.cljs$core$IFn$_invoke$arity$3(G__21989, G__21990, G__21991) : value_explainer.call(null, G__21989, G__21990, G__21991);
                }, acc, m);
              }
            }
          };
        };
        malli.core.t_malli$core21970.prototype.malli$core$Schema$_unparser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.cljs$core$IFn$_invoke$arity$1 ? self__.__GT_parser.cljs$core$IFn$_invoke$arity$1(malli.core._unparser) : self__.__GT_parser.call(null, malli.core._unparser);
        };
        malli.core.t_malli$core21970.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core21970.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21970.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core21970.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core21970.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core21970.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.children, key, default$);
        };
        malli.core.t_malli$core21970.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_assoc_children(this$__$1, key, value);
        };
        malli.core.t_malli$core21970.getBasis = function() {
          return new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$form, cljs$cst$symbol$options, cljs$cst$symbol$meta21951, cljs$cst$symbol$properties, cljs$cst$symbol$children, cljs$cst$symbol$min, cljs$cst$symbol$value_DASH_schema, cljs.core.with_meta(cljs$cst$symbol$parent, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core21950], null)), cljs$cst$symbol$map__21960, cljs$cst$symbol$key_DASH_schema, 
          cljs$cst$symbol$vec__21961, cljs$cst$symbol$p__21959, cljs$cst$symbol$_DASH__GT_parser, cljs$cst$symbol$cache, cljs$cst$symbol$validate_DASH_limits, cljs$cst$symbol$max, cljs$cst$symbol$meta21971], null);
        };
        malli.core.t_malli$core21970.cljs$lang$type = true;
        malli.core.t_malli$core21970.cljs$lang$ctorStr = "malli.core/t_malli$core21970";
        malli.core.t_malli$core21970.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
          return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core21970");
        };
        malli.core.__GT_t_malli$core21970 = function malli$core$_map_of_schema_$___GT_t_malli$core21970(form__$1, options__$1, meta21951__$1, properties__$1, children__$2, min__$1, value_schema__$1, parent__$2, map__21960__$2, key_schema__$1, vec__21961__$1, p__21959__$1, __GT_parser__$1, cache__$1, validate_limits__$1, max__$1, meta21971) {
          return new malli.core.t_malli$core21970(form__$1, options__$1, meta21951__$1, properties__$1, children__$2, min__$1, value_schema__$1, parent__$2, map__21960__$2, key_schema__$1, vec__21961__$1, p__21959__$1, __GT_parser__$1, cache__$1, validate_limits__$1, max__$1, meta21971);
        };
      }
      return new malli.core.t_malli$core21970(form, options, self__.meta21951, properties, children__$1, min, value_schema, parent__$1, map__21960__$1, key_schema, vec__21961, p__21959, __GT_parser, cache, validate_limits, max, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_schema], null));
    };
    malli.core.t_malli$core21950.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta21951], null);
    };
    malli.core.t_malli$core21950.cljs$lang$type = true;
    malli.core.t_malli$core21950.cljs$lang$ctorStr = "malli.core/t_malli$core21950";
    malli.core.t_malli$core21950.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core21950");
    };
    malli.core.__GT_t_malli$core21950 = function malli$core$_map_of_schema_$___GT_t_malli$core21950(meta21951) {
      return new malli.core.t_malli$core21950(meta21951);
    };
  }
  return new malli.core.t_malli$core21950(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_into_DASH_schema], null));
};
malli.core._collection_schema = function malli$core$_collection_schema(_QMARK_props) {
  var props_STAR_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.map_QMARK_(_QMARK_props) ? _QMARK_props : null);
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core21997 !== "undefined") {
  } else {
    malli.core.t_malli$core21997 = function(_QMARK_props, props_STAR_, meta21998) {
      this._QMARK_props = _QMARK_props;
      this.props_STAR_ = props_STAR_;
      this.meta21998 = meta21998;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core21997.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21999, meta21998__$1) {
      var self__ = this;
      var _21999__$1 = this;
      return new malli.core.t_malli$core21997(self__._QMARK_props, self__.props_STAR_, meta21998__$1);
    };
    malli.core.t_malli$core21997.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21999) {
      var self__ = this;
      var _21999__$1 = this;
      return self__.meta21998;
    };
    malli.core.t_malli$core21997.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core21997.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_child_ast(parent__$1, ast, options);
    };
    malli.core.t_malli$core21997.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core21997.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs$cst$keyword$type.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.props_STAR_));
    };
    malli.core.t_malli$core21997.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs$cst$keyword$type_DASH_properties.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.props_STAR_));
    };
    malli.core.t_malli$core21997.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core21997.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core21997.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, p__22003, children, options) {
      var self__ = this;
      var map__22004 = p__22003;
      var map__22004__$1 = cljs.core.__destructure_map(map__22004);
      var properties = map__22004__$1;
      var min = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22004__$1, cljs$cst$keyword$min);
      var max = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22004__$1, cljs$cst$keyword$max);
      var parent__$1 = this;
      if (cljs.core.fn_QMARK_(self__._QMARK_props)) {
        return malli.core._into_schema(function() {
          var G__22008 = self__._QMARK_props.cljs$core$IFn$_invoke$arity$2 ? self__._QMARK_props.cljs$core$IFn$_invoke$arity$2(properties, children) : self__._QMARK_props.call(null, properties, children);
          return malli.core._collection_schema.cljs$core$IFn$_invoke$arity$1 ? malli.core._collection_schema.cljs$core$IFn$_invoke$arity$1(G__22008) : malli.core._collection_schema.call(null, G__22008);
        }(), properties, children, options);
      } else {
        var map__22010 = self__._QMARK_props;
        var map__22010__$1 = cljs.core.__destructure_map(map__22010);
        var fpred = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22010__$1, cljs$cst$keyword$pred);
        var fempty = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22010__$1, cljs$cst$keyword$empty);
        var fin = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22010__$1, cljs$cst$keyword$in, function(i, _) {
          return i;
        });
        var type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22010__$1, cljs$cst$keyword$type);
        var parse = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22010__$1, cljs$cst$keyword$parse);
        var unparse = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22010__$1, cljs$cst$keyword$unparse);
        cljs.core.reset_BANG_(self__.props_STAR_, self__._QMARK_props);
        malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5(type, properties, children, 1, 1);
        var vec__22011 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p1__21993_SHARP_) {
          return malli.core.schema.cljs$core$IFn$_invoke$arity$2 ? malli.core.schema.cljs$core$IFn$_invoke$arity$2(p1__21993_SHARP_, options) : malli.core.schema.call(null, p1__21993_SHARP_, options);
        }, children);
        var schema = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22011, 0, null);
        var children__$1 = vec__22011;
        var form = new cljs.core.Delay(function() {
          return malli.core._simple_form(parent__$1, properties, children__$1, malli.core._form, options);
        }, null);
        var cache = malli.core._create_cache(options);
        var validate_limits = malli.core._validate_limits(min, max);
        var __GT_parser = function(f, g) {
          var child_parser = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(schema) : f.call(null, schema);
          return function(x) {
            if (cljs.core.not(fpred.cljs$core$IFn$_invoke$arity$1 ? fpred.cljs$core$IFn$_invoke$arity$1(x) : fpred.call(null, x))) {
              return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
            } else {
              if (cljs.core.not(validate_limits.cljs$core$IFn$_invoke$arity$1 ? validate_limits.cljs$core$IFn$_invoke$arity$1(x) : validate_limits.call(null, x))) {
                return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
              } else {
                var x_SINGLEQUOTE_ = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(acc, v) {
                  var v_SINGLEQUOTE_ = child_parser.cljs$core$IFn$_invoke$arity$1 ? child_parser.cljs$core$IFn$_invoke$arity$1(v) : child_parser.call(null, v);
                  if (malli.impl.util._invalid_QMARK_(v_SINGLEQUOTE_)) {
                    return cljs.core.reduced(cljs$cst$keyword$malli_DOT_core_SLASH_invalid);
                  } else {
                    return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, v_SINGLEQUOTE_);
                  }
                }, cljs.core.PersistentVector.EMPTY, x);
                if (malli.impl.util._invalid_QMARK_(x_SINGLEQUOTE_)) {
                  return x_SINGLEQUOTE_;
                } else {
                  if (cljs.core.truth_(g)) {
                    return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x_SINGLEQUOTE_) : g.call(null, x_SINGLEQUOTE_);
                  } else {
                    if (cljs.core.truth_(fempty)) {
                      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(fempty, x_SINGLEQUOTE_);
                    } else {
                      return x_SINGLEQUOTE_;
                    }
                  }
                }
              }
            }
          };
        };
        if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22017 !== "undefined") {
        } else {
          malli.core.t_malli$core22017 = function(form, p__22003, options, fpred, map__22010, fin, properties, unparse, schema, children, min, parent, props_STAR_, map__22004, type, __GT_parser, vec__22011, fempty, cache, validate_limits, meta21998, _QMARK_props, max, parse, meta22018) {
            this.form = form;
            this.p__22003 = p__22003;
            this.options = options;
            this.fpred = fpred;
            this.map__22010 = map__22010;
            this.fin = fin;
            this.properties = properties;
            this.unparse = unparse;
            this.schema = schema;
            this.children = children;
            this.min = min;
            this.parent = parent;
            this.props_STAR_ = props_STAR_;
            this.map__22004 = map__22004;
            this.type = type;
            this.__GT_parser = __GT_parser;
            this.vec__22011 = vec__22011;
            this.fempty = fempty;
            this.cache = cache;
            this.validate_limits = validate_limits;
            this.meta21998 = meta21998;
            this._QMARK_props = _QMARK_props;
            this.max = max;
            this.parse = parse;
            this.meta22018 = meta22018;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          malli.core.t_malli$core22017.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22019, meta22018__$1) {
            var self__ = this;
            var _22019__$1 = this;
            return new malli.core.t_malli$core22017(self__.form, self__.p__22003, self__.options, self__.fpred, self__.map__22010, self__.fin, self__.properties, self__.unparse, self__.schema, self__.children, self__.min, self__.parent, self__.props_STAR_, self__.map__22004, self__.type, self__.__GT_parser, self__.vec__22011, self__.fempty, self__.cache, self__.validate_limits, self__.meta21998, self__._QMARK_props, self__.max, self__.parse, meta22018__$1);
          };
          malli.core.t_malli$core22017.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22019) {
            var self__ = this;
            var _22019__$1 = this;
            return self__.meta22018;
          };
          malli.core.t_malli$core22017.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core22017.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._to_child_ast(this$__$1);
          };
          malli.core.t_malli$core22017.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core22017.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            var validator = malli.core._validator(self__.schema);
            return function(x) {
              var and__4251__auto__ = self__.fpred.cljs$core$IFn$_invoke$arity$1 ? self__.fpred.cljs$core$IFn$_invoke$arity$1(x) : self__.fpred.call(null, x);
              if (cljs.core.truth_(and__4251__auto__)) {
                var and__4251__auto____$1 = self__.validate_limits.cljs$core$IFn$_invoke$arity$1 ? self__.validate_limits.cljs$core$IFn$_invoke$arity$1(x) : self__.validate_limits.call(null, x);
                if (cljs.core.truth_(and__4251__auto____$1)) {
                  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(acc, v) {
                    if (cljs.core.truth_(validator.cljs$core$IFn$_invoke$arity$1 ? validator.cljs$core$IFn$_invoke$arity$1(v) : validator.call(null, v))) {
                      return acc;
                    } else {
                      return cljs.core.reduced(false);
                    }
                  }, true, x);
                } else {
                  return and__4251__auto____$1;
                }
              } else {
                return and__4251__auto__;
              }
            };
          };
          malli.core.t_malli$core22017.prototype.malli$core$Schema$_options$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.options;
          };
          malli.core.t_malli$core22017.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            var collection_QMARK_ = function(p1__21994_SHARP_) {
              return cljs.core.sequential_QMARK_(p1__21994_SHARP_) || cljs.core.set_QMARK_(p1__21994_SHARP_);
            };
            var this_transformer = malli.core._value_transformer(transformer, this$__$1, method, options__$1);
            var child_transformer = malli.core._transformer(self__.schema, transformer, method, options__$1);
            var __GT_child = cljs.core.truth_(child_transformer) ? cljs.core.truth_(self__.fempty) ? malli.core._collection_transformer(child_transformer, self__.fempty) : function(p1__21996_SHARP_) {
              return malli.core._vmap.cljs$core$IFn$_invoke$arity$2(child_transformer, p1__21996_SHARP_);
            } : null;
            var __GT_child__$1 = malli.core._guard(collection_QMARK_, __GT_child);
            return malli.core._intercepting.cljs$core$IFn$_invoke$arity$2(this_transformer, __GT_child__$1);
          };
          malli.core.t_malli$core22017.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            if (cljs.core.truth_(malli.core._accept(walker, this$__$1, path, options__$1))) {
              return malli.core._outer(walker, this$__$1, path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [malli.core._inner(walker, self__.schema, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(path, cljs$cst$keyword$malli_DOT_core_SLASH_in), options__$1)], null), options__$1);
            } else {
              return null;
            }
          };
          malli.core.t_malli$core22017.prototype.malli$core$Schema$_parser$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.__GT_parser.cljs$core$IFn$_invoke$arity$2 ? self__.__GT_parser.cljs$core$IFn$_invoke$arity$2(malli.core._parser, self__.parse) : self__.__GT_parser.call(null, malli.core._parser, self__.parse);
          };
          malli.core.t_malli$core22017.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.properties;
          };
          malli.core.t_malli$core22017.prototype.malli$core$Schema$_children$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.children;
          };
          malli.core.t_malli$core22017.prototype.malli$core$Schema$_form$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.deref(self__.form);
          };
          malli.core.t_malli$core22017.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
            var self__ = this;
            var this$__$1 = this;
            var explainer = malli.core._explainer(self__.schema, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(path, 0));
            return function(x, in$, acc) {
              if (cljs.core.not(self__.fpred.cljs$core$IFn$_invoke$arity$1 ? self__.fpred.cljs$core$IFn$_invoke$arity$1(x) : self__.fpred.call(null, x))) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, malli.impl.util._error.cljs$core$IFn$_invoke$arity$5(path, in$, this$__$1, x, cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_type));
              } else {
                if (cljs.core.not(self__.validate_limits.cljs$core$IFn$_invoke$arity$1 ? self__.validate_limits.cljs$core$IFn$_invoke$arity$1(x) : self__.validate_limits.call(null, x))) {
                  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, malli.impl.util._error.cljs$core$IFn$_invoke$arity$5(path, in$, this$__$1, x, cljs$cst$keyword$malli_DOT_core_SLASH_limits));
                } else {
                  var size = cljs.core.count(x);
                  var acc__$1 = acc;
                  var i = 0;
                  var G__22037 = x;
                  var vec__22038 = G__22037;
                  var seq__22039 = cljs.core.seq(vec__22038);
                  var first__22040 = cljs.core.first(seq__22039);
                  var seq__22039__$1 = cljs.core.next(seq__22039);
                  var x__$1 = first__22040;
                  var xs = seq__22039__$1;
                  var acc__$2 = acc__$1;
                  var i__$1 = i;
                  var G__22037__$1 = G__22037;
                  while (true) {
                    var acc__$3 = acc__$2;
                    var i__$2 = i__$1;
                    var vec__22042 = G__22037__$1;
                    var seq__22043 = cljs.core.seq(vec__22042);
                    var first__22044 = cljs.core.first(seq__22043);
                    var seq__22043__$1 = cljs.core.next(seq__22043);
                    var x__$2 = first__22044;
                    var xs__$1 = seq__22043__$1;
                    if (i__$2 < size) {
                      var G__22045 = function() {
                        var or__4253__auto__ = function() {
                          var G__22046 = x__$2;
                          var G__22047 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(in$, self__.fin.cljs$core$IFn$_invoke$arity$2 ? self__.fin.cljs$core$IFn$_invoke$arity$2(i__$2, x__$2) : self__.fin.call(null, i__$2, x__$2));
                          var G__22048 = acc__$3;
                          return explainer.cljs$core$IFn$_invoke$arity$3 ? explainer.cljs$core$IFn$_invoke$arity$3(G__22046, G__22047, G__22048) : explainer.call(null, G__22046, G__22047, G__22048);
                        }();
                        if (cljs.core.truth_(or__4253__auto__)) {
                          return or__4253__auto__;
                        } else {
                          return acc__$3;
                        }
                      }();
                      if (xs__$1) {
                        var G__23275 = G__22045;
                        var G__23276 = i__$2 + 1;
                        var G__23277 = xs__$1;
                        acc__$2 = G__23275;
                        i__$1 = G__23276;
                        G__22037__$1 = G__23277;
                        continue;
                      } else {
                        return G__22045;
                      }
                    } else {
                      return acc__$3;
                    }
                    break;
                  }
                }
              }
            };
          };
          malli.core.t_malli$core22017.prototype.malli$core$Schema$_unparser$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.__GT_parser.cljs$core$IFn$_invoke$arity$2 ? self__.__GT_parser.cljs$core$IFn$_invoke$arity$2(malli.core._unparser, self__.unparse) : self__.__GT_parser.call(null, malli.core._unparser, self__.unparse);
          };
          malli.core.t_malli$core22017.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.parent;
          };
          malli.core.t_malli$core22017.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core22017.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.cache;
          };
          malli.core.t_malli$core22017.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core22017.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return true;
          };
          malli.core.t_malli$core22017.prototype.malli$core$LensSchema$_get$arity$3 = function(_, ___$1, ___$2) {
            var self__ = this;
            var ___$3 = this;
            return self__.schema;
          };
          malli.core.t_malli$core22017.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, _, value) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._set_children(this$__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null));
          };
          malli.core.t_malli$core22017.getBasis = function() {
            return new cljs.core.PersistentVector(null, 25, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$form, cljs$cst$symbol$p__22003, cljs$cst$symbol$options, cljs$cst$symbol$fpred, cljs$cst$symbol$map__22010, cljs$cst$symbol$fin, cljs$cst$symbol$properties, cljs$cst$symbol$unparse, cljs$cst$symbol$schema, cljs$cst$symbol$children, cljs$cst$symbol$min, cljs.core.with_meta(cljs$cst$symbol$parent, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core21997], 
            null)), cljs$cst$symbol$props_STAR_, cljs$cst$symbol$map__22004, cljs$cst$symbol$type, cljs$cst$symbol$_DASH__GT_parser, cljs$cst$symbol$vec__22011, cljs$cst$symbol$fempty, cljs$cst$symbol$cache, cljs$cst$symbol$validate_DASH_limits, cljs$cst$symbol$meta21998, cljs$cst$symbol$_QMARK_props, cljs$cst$symbol$max, cljs$cst$symbol$parse, cljs$cst$symbol$meta22018], null);
          };
          malli.core.t_malli$core22017.cljs$lang$type = true;
          malli.core.t_malli$core22017.cljs$lang$ctorStr = "malli.core/t_malli$core22017";
          malli.core.t_malli$core22017.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
            return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22017");
          };
          malli.core.__GT_t_malli$core22017 = function malli$core$_collection_schema_$___GT_t_malli$core22017(form__$1, p__22003__$1, options__$1, fpred__$1, map__22010__$2, fin__$1, properties__$1, unparse__$1, schema__$1, children__$2, min__$1, parent__$2, props_STAR___$1, map__22004__$2, type__$1, __GT_parser__$1, vec__22011__$1, fempty__$1, cache__$1, validate_limits__$1, meta21998__$1, _QMARK_props__$1, max__$1, parse__$1, meta22018) {
            return new malli.core.t_malli$core22017(form__$1, p__22003__$1, options__$1, fpred__$1, map__22010__$2, fin__$1, properties__$1, unparse__$1, schema__$1, children__$2, min__$1, parent__$2, props_STAR___$1, map__22004__$2, type__$1, __GT_parser__$1, vec__22011__$1, fempty__$1, cache__$1, validate_limits__$1, meta21998__$1, _QMARK_props__$1, max__$1, parse__$1, meta22018);
          };
        }
        return new malli.core.t_malli$core22017(form, p__22003, options, fpred, map__22010__$1, fin, properties, unparse, schema, children__$1, min, parent__$1, self__.props_STAR_, map__22004__$1, type, __GT_parser, vec__22011, fempty, cache, validate_limits, self__.meta21998, self__._QMARK_props, max, parse, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_schema], null));
      }
    };
    malli.core.t_malli$core21997.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$_QMARK_props, cljs$cst$symbol$props_STAR_, cljs$cst$symbol$meta21998], null);
    };
    malli.core.t_malli$core21997.cljs$lang$type = true;
    malli.core.t_malli$core21997.cljs$lang$ctorStr = "malli.core/t_malli$core21997";
    malli.core.t_malli$core21997.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core21997");
    };
    malli.core.__GT_t_malli$core21997 = function malli$core$_collection_schema_$___GT_t_malli$core21997(_QMARK_props__$1, props_STAR___$1, meta21998) {
      return new malli.core.t_malli$core21997(_QMARK_props__$1, props_STAR___$1, meta21998);
    };
  }
  return new malli.core.t_malli$core21997(_QMARK_props, props_STAR_, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_into_DASH_schema], null));
};
malli.core._tuple_schema = function malli$core$_tuple_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22061 !== "undefined") {
  } else {
    malli.core.t_malli$core22061 = function(meta22062) {
      this.meta22062 = meta22062;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core22061.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22063, meta22062__$1) {
      var self__ = this;
      var _22063__$1 = this;
      return new malli.core.t_malli$core22061(meta22062__$1);
    };
    malli.core.t_malli$core22061.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22063) {
      var self__ = this;
      var _22063__$1 = this;
      return self__.meta22062;
    };
    malli.core.t_malli$core22061.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core22061.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs$cst$keyword$tuple;
    };
    malli.core.t_malli$core22061.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core22061.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core22061.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core22061.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      var children__$1 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p1__22058_SHARP_) {
        return malli.core.schema.cljs$core$IFn$_invoke$arity$2 ? malli.core.schema.cljs$core$IFn$_invoke$arity$2(p1__22058_SHARP_, options) : malli.core.schema.call(null, p1__22058_SHARP_, options);
      }, children);
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form(parent__$1, properties, children__$1, malli.core._form, options);
      }, null);
      var size = cljs.core.count(children__$1);
      var cache = malli.core._create_cache(options);
      var __GT_parser = function(f) {
        var parsers = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY, cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(cljs.core.vector)), children__$1);
        return function(x) {
          if (!cljs.core.vector_QMARK_(x)) {
            return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
          } else {
            if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(x), size)) {
              return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
            } else {
              return cljs.core.reduce_kv(function(x__$1, i, c) {
                var v = cljs.core.get.cljs$core$IFn$_invoke$arity$2(x__$1, i);
                var v_STAR_ = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(v) : c.call(null, v);
                if (malli.impl.util._invalid_QMARK_(v_STAR_)) {
                  return cljs.core.reduced(v_STAR_);
                } else {
                  if (v_STAR_ === v) {
                    return x__$1;
                  } else {
                    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(x__$1, i, v_STAR_);
                  }
                }
              }, x, parsers);
            }
          }
        };
      };
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22066 !== "undefined") {
      } else {
        malli.core.t_malli$core22066 = function(form, options, meta22062, properties, children, parent, size, __GT_parser, cache, meta22067) {
          this.form = form;
          this.options = options;
          this.meta22062 = meta22062;
          this.properties = properties;
          this.children = children;
          this.parent = parent;
          this.size = size;
          this.__GT_parser = __GT_parser;
          this.cache = cache;
          this.meta22067 = meta22067;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core22066.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22068, meta22067__$1) {
          var self__ = this;
          var _22068__$1 = this;
          return new malli.core.t_malli$core22066(self__.form, self__.options, self__.meta22062, self__.properties, self__.children, self__.parent, self__.size, self__.__GT_parser, self__.cache, meta22067__$1);
        };
        malli.core.t_malli$core22066.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22068) {
          var self__ = this;
          var _22068__$1 = this;
          return self__.meta22067;
        };
        malli.core.t_malli$core22066.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22066.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var validators = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(cljs.core.vector, cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(malli.core._validator, self__.children)));
          return function(x) {
            var and__4251__auto__ = cljs.core.vector_QMARK_(x);
            if (and__4251__auto__) {
              var and__4251__auto____$1 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(x), self__.size);
              if (and__4251__auto____$1) {
                return cljs.core.reduce_kv(function(acc, i, validator) {
                  if (cljs.core.truth_(function() {
                    var G__22072 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(x, i);
                    return validator.cljs$core$IFn$_invoke$arity$1 ? validator.cljs$core$IFn$_invoke$arity$1(G__22072) : validator.call(null, G__22072);
                  }())) {
                    return acc;
                  } else {
                    return cljs.core.reduced(false);
                  }
                }, true, validators);
              } else {
                return and__4251__auto____$1;
              }
            } else {
              return and__4251__auto__;
            }
          };
        };
        malli.core.t_malli$core22066.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core22066.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          var this_transformer = malli.core._value_transformer(transformer, this$__$1, method, options__$1);
          var __GT_children = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY, cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(cljs.core.vector), cljs.core.keep.cljs$core$IFn$_invoke$arity$1(function(p__22073) {
            var vec__22074 = p__22073;
            var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22074, 0, null);
            var c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22074, 1, null);
            var temp__5757__auto__ = malli.core._transformer(c, transformer, method, options__$1);
            if (temp__5757__auto__ == null) {
              return null;
            } else {
              var t = temp__5757__auto__;
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, t], null);
            }
          })), self__.children);
          var apply__GT_children = cljs.core.seq(__GT_children) ? malli.core._tuple_transformer(__GT_children) : null;
          var apply__GT_children__$1 = malli.core._guard(cljs.core.vector_QMARK_, apply__GT_children);
          return malli.core._intercepting.cljs$core$IFn$_invoke$arity$2(this_transformer, apply__GT_children__$1);
        };
        malli.core.t_malli$core22066.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_indexed(this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core22066.prototype.malli$core$Schema$_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.cljs$core$IFn$_invoke$arity$1 ? self__.__GT_parser.cljs$core$IFn$_invoke$arity$1(malli.core._parser) : self__.__GT_parser.call(null, malli.core._parser);
        };
        malli.core.t_malli$core22066.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core22066.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core22066.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref(self__.form);
        };
        malli.core.t_malli$core22066.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          var explainers = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p__22078) {
            var vec__22079 = p__22078;
            var i = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22079, 0, null);
            var s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22079, 1, null);
            return malli.core._explainer(s, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(path, i));
          }, cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(cljs.core.vector, self__.children));
          return function(x, in$, acc) {
            if (!cljs.core.vector_QMARK_(x)) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, malli.impl.util._error.cljs$core$IFn$_invoke$arity$5(path, in$, this$__$1, x, cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_type));
            } else {
              if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(x), self__.size)) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, malli.impl.util._error.cljs$core$IFn$_invoke$arity$5(path, in$, this$__$1, x, cljs$cst$keyword$malli_DOT_core_SLASH_tuple_DASH_size));
              } else {
                var acc__$1 = acc;
                var i = 0;
                var G__22090 = x;
                var vec__22092 = G__22090;
                var seq__22093 = cljs.core.seq(vec__22092);
                var first__22094 = cljs.core.first(seq__22093);
                var seq__22093__$1 = cljs.core.next(seq__22093);
                var x__$1 = first__22094;
                var xs = seq__22093__$1;
                var G__22091 = explainers;
                var vec__22096 = G__22091;
                var seq__22097 = cljs.core.seq(vec__22096);
                var first__22098 = cljs.core.first(seq__22097);
                var seq__22097__$1 = cljs.core.next(seq__22097);
                var e = first__22098;
                var es = seq__22097__$1;
                var acc__$2 = acc__$1;
                var i__$1 = i;
                var G__22090__$1 = G__22090;
                var G__22091__$1 = G__22091;
                while (true) {
                  var acc__$3 = acc__$2;
                  var i__$2 = i__$1;
                  var vec__22109 = G__22090__$1;
                  var seq__22110 = cljs.core.seq(vec__22109);
                  var first__22111 = cljs.core.first(seq__22110);
                  var seq__22110__$1 = cljs.core.next(seq__22110);
                  var x__$2 = first__22111;
                  var xs__$1 = seq__22110__$1;
                  var vec__22112 = G__22091__$1;
                  var seq__22113 = cljs.core.seq(vec__22112);
                  var first__22114 = cljs.core.first(seq__22113);
                  var seq__22113__$1 = cljs.core.next(seq__22113);
                  var e__$1 = first__22114;
                  var es__$1 = seq__22113__$1;
                  var G__22115 = function() {
                    var G__22116 = x__$2;
                    var G__22117 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(in$, i__$2);
                    var G__22118 = acc__$3;
                    return e__$1.cljs$core$IFn$_invoke$arity$3 ? e__$1.cljs$core$IFn$_invoke$arity$3(G__22116, G__22117, G__22118) : e__$1.call(null, G__22116, G__22117, G__22118);
                  }();
                  if (xs__$1) {
                    var G__23304 = G__22115;
                    var G__23305 = i__$2 + 1;
                    var G__23306 = xs__$1;
                    var G__23307 = es__$1;
                    acc__$2 = G__23304;
                    i__$1 = G__23305;
                    G__22090__$1 = G__23306;
                    G__22091__$1 = G__23307;
                    continue;
                  } else {
                    return G__22115;
                  }
                  break;
                }
              }
            }
          };
        };
        malli.core.t_malli$core22066.prototype.malli$core$Schema$_unparser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.cljs$core$IFn$_invoke$arity$1 ? self__.__GT_parser.cljs$core$IFn$_invoke$arity$1(malli.core._unparser) : self__.__GT_parser.call(null, malli.core._unparser);
        };
        malli.core.t_malli$core22066.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core22066.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22066.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core22066.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22066.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return true;
        };
        malli.core.t_malli$core22066.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.children, key, default$);
        };
        malli.core.t_malli$core22066.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_assoc_children(this$__$1, key, value);
        };
        malli.core.t_malli$core22066.getBasis = function() {
          return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$form, cljs$cst$symbol$options, cljs$cst$symbol$meta22062, cljs$cst$symbol$properties, cljs$cst$symbol$children, cljs.core.with_meta(cljs$cst$symbol$parent, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22061], null)), cljs$cst$symbol$size, cljs$cst$symbol$_DASH__GT_parser, cljs$cst$symbol$cache, cljs$cst$symbol$meta22067], 
          null);
        };
        malli.core.t_malli$core22066.cljs$lang$type = true;
        malli.core.t_malli$core22066.cljs$lang$ctorStr = "malli.core/t_malli$core22066";
        malli.core.t_malli$core22066.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
          return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22066");
        };
        malli.core.__GT_t_malli$core22066 = function malli$core$_tuple_schema_$___GT_t_malli$core22066(form__$1, options__$1, meta22062__$1, properties__$1, children__$2, parent__$2, size__$1, __GT_parser__$1, cache__$1, meta22067) {
          return new malli.core.t_malli$core22066(form__$1, options__$1, meta22062__$1, properties__$1, children__$2, parent__$2, size__$1, __GT_parser__$1, cache__$1, meta22067);
        };
      }
      return new malli.core.t_malli$core22066(form, options, self__.meta22062, properties, children__$1, parent__$1, size, __GT_parser, cache, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_schema], null));
    };
    malli.core.t_malli$core22061.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta22062], null);
    };
    malli.core.t_malli$core22061.cljs$lang$type = true;
    malli.core.t_malli$core22061.cljs$lang$ctorStr = "malli.core/t_malli$core22061";
    malli.core.t_malli$core22061.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22061");
    };
    malli.core.__GT_t_malli$core22061 = function malli$core$_tuple_schema_$___GT_t_malli$core22061(meta22062) {
      return new malli.core.t_malli$core22061(meta22062);
    };
  }
  return new malli.core.t_malli$core22061(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_into_DASH_schema], null));
};
malli.core._enum_schema = function malli$core$_enum_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22120 !== "undefined") {
  } else {
    malli.core.t_malli$core22120 = function(meta22121) {
      this.meta22121 = meta22121;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core22120.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22122, meta22121__$1) {
      var self__ = this;
      var _22122__$1 = this;
      return new malli.core.t_malli$core22120(meta22121__$1);
    };
    malli.core.t_malli$core22120.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22122) {
      var self__ = this;
      var _22122__$1 = this;
      return self__.meta22121;
    };
    malli.core.t_malli$core22120.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core22120.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return parent__$1.malli$core$IntoSchema$_into_schema$arity$4(null, cljs$cst$keyword$properties.cljs$core$IFn$_invoke$arity$1(ast), cljs$cst$keyword$values.cljs$core$IFn$_invoke$arity$1(ast), options);
    };
    malli.core.t_malli$core22120.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core22120.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs$cst$keyword$enum;
    };
    malli.core.t_malli$core22120.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core22120.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5(cljs$cst$keyword$enum, properties, children, 1, null);
      var children__$1 = cljs.core.vec(children);
      var schema = cljs.core.set(children__$1);
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form(parent__$1, properties, children__$1, cljs.core.identity, options);
      }, null);
      var cache = malli.core._create_cache(options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22135 !== "undefined") {
      } else {
        malli.core.t_malli$core22135 = function(meta22121, parent, properties, children, options, schema, form, cache, meta22136) {
          this.meta22121 = meta22121;
          this.parent = parent;
          this.properties = properties;
          this.children = children;
          this.options = options;
          this.schema = schema;
          this.form = form;
          this.cache = cache;
          this.meta22136 = meta22136;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core22135.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22137, meta22136__$1) {
          var self__ = this;
          var _22137__$1 = this;
          return new malli.core.t_malli$core22135(self__.meta22121, self__.parent, self__.properties, self__.children, self__.options, self__.schema, self__.form, self__.cache, meta22136__$1);
        };
        malli.core.t_malli$core22135.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22137) {
          var self__ = this;
          var _22137__$1 = this;
          return self__.meta22136;
        };
        malli.core.t_malli$core22135.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22135.prototype.malli$core$AST$_to_ast$arity$2 = function(_, ___$1) {
          var self__ = this;
          var ___$2 = this;
          return new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$type, cljs$cst$keyword$enum, cljs$cst$keyword$values, self__.children], null);
        };
        malli.core.t_malli$core22135.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22135.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return function(x) {
            return cljs.core.contains_QMARK_(self__.schema, x);
          };
        };
        malli.core.t_malli$core22135.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core22135.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._intercepting.cljs$core$IFn$_invoke$arity$1(malli.core._value_transformer(transformer, this$__$1, method, options__$1));
        };
        malli.core.t_malli$core22135.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_leaf(this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core22135.prototype.malli$core$Schema$_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return function(x) {
            if (cljs.core.contains_QMARK_(self__.schema, x)) {
              return x;
            } else {
              return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
            }
          };
        };
        malli.core.t_malli$core22135.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core22135.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core22135.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref(self__.form);
        };
        malli.core.t_malli$core22135.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          var validator = this$__$1.malli$core$Schema$_validator$arity$1(null);
          return function malli$core$_enum_schema_$_explain(x, in$, acc) {
            if (cljs.core.not(validator.cljs$core$IFn$_invoke$arity$1 ? validator.cljs$core$IFn$_invoke$arity$1(x) : validator.call(null, x))) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, malli.impl.util._error.cljs$core$IFn$_invoke$arity$4(path, in$, this$__$1, x));
            } else {
              return acc;
            }
          };
        };
        malli.core.t_malli$core22135.prototype.malli$core$Schema$_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return this$__$1.malli$core$Schema$_parser$arity$1(null);
        };
        malli.core.t_malli$core22135.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core22135.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22135.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core22135.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22135.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core22135.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.children, key, default$);
        };
        malli.core.t_malli$core22135.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_assoc_children(this$__$1, key, value);
        };
        malli.core.t_malli$core22135.getBasis = function() {
          return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta22121, cljs.core.with_meta(cljs$cst$symbol$parent, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22120], null)), cljs$cst$symbol$properties, cljs$cst$symbol$children, cljs$cst$symbol$options, cljs$cst$symbol$schema, cljs$cst$symbol$form, cljs$cst$symbol$cache, cljs$cst$symbol$meta22136], null);
        };
        malli.core.t_malli$core22135.cljs$lang$type = true;
        malli.core.t_malli$core22135.cljs$lang$ctorStr = "malli.core/t_malli$core22135";
        malli.core.t_malli$core22135.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
          return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22135");
        };
        malli.core.__GT_t_malli$core22135 = function malli$core$_enum_schema_$___GT_t_malli$core22135(meta22121__$1, parent__$2, properties__$1, children__$2, options__$1, schema__$1, form__$1, cache__$1, meta22136) {
          return new malli.core.t_malli$core22135(meta22121__$1, parent__$2, properties__$1, children__$2, options__$1, schema__$1, form__$1, cache__$1, meta22136);
        };
      }
      return new malli.core.t_malli$core22135(self__.meta22121, parent__$1, properties, children__$1, options, schema, form, cache, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_schema], null));
    };
    malli.core.t_malli$core22120.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta22121], null);
    };
    malli.core.t_malli$core22120.cljs$lang$type = true;
    malli.core.t_malli$core22120.cljs$lang$ctorStr = "malli.core/t_malli$core22120";
    malli.core.t_malli$core22120.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22120");
    };
    malli.core.__GT_t_malli$core22120 = function malli$core$_enum_schema_$___GT_t_malli$core22120(meta22121) {
      return new malli.core.t_malli$core22120(meta22121);
    };
  }
  return new malli.core.t_malli$core22120(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_into_DASH_schema], null));
};
malli.core._re_schema = function malli$core$_re_schema(class_QMARK_) {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22175 !== "undefined") {
  } else {
    malli.core.t_malli$core22175 = function(class_QMARK_, meta22176) {
      this.class_QMARK_ = class_QMARK_;
      this.meta22176 = meta22176;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core22175.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22177, meta22176__$1) {
      var self__ = this;
      var _22177__$1 = this;
      return new malli.core.t_malli$core22175(self__.class_QMARK_, meta22176__$1);
    };
    malli.core.t_malli$core22175.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22177) {
      var self__ = this;
      var _22177__$1 = this;
      return self__.meta22176;
    };
    malli.core.t_malli$core22175.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core22175.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_value_ast(parent__$1, ast, options);
    };
    malli.core.t_malli$core22175.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core22175.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs$cst$keyword$re;
    };
    malli.core.t_malli$core22175.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core22175.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core22175.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core22175.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, p__22179, options) {
      var self__ = this;
      var vec__22180 = p__22179;
      var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22180, 0, null);
      var children = vec__22180;
      var parent__$1 = this;
      malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5(cljs$cst$keyword$re, properties, children, 1, 1);
      var children__$1 = cljs.core.vec(children);
      var re = cljs.core.re_pattern(child);
      var form = new cljs.core.Delay(function() {
        if (cljs.core.truth_(self__.class_QMARK_)) {
          return re;
        } else {
          return malli.core._simple_form(parent__$1, properties, children__$1, cljs.core.identity, options);
        }
      }, null);
      var cache = malli.core._create_cache(options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22185 !== "undefined") {
      } else {
        malli.core.t_malli$core22185 = function(form, options, child, vec__22180, properties, children, parent, meta22176, re, class_QMARK_, cache, p__22179, meta22186) {
          this.form = form;
          this.options = options;
          this.child = child;
          this.vec__22180 = vec__22180;
          this.properties = properties;
          this.children = children;
          this.parent = parent;
          this.meta22176 = meta22176;
          this.re = re;
          this.class_QMARK_ = class_QMARK_;
          this.cache = cache;
          this.p__22179 = p__22179;
          this.meta22186 = meta22186;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core22185.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22187, meta22186__$1) {
          var self__ = this;
          var _22187__$1 = this;
          return new malli.core.t_malli$core22185(self__.form, self__.options, self__.child, self__.vec__22180, self__.properties, self__.children, self__.parent, self__.meta22176, self__.re, self__.class_QMARK_, self__.cache, self__.p__22179, meta22186__$1);
        };
        malli.core.t_malli$core22185.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22187) {
          var self__ = this;
          var _22187__$1 = this;
          return self__.meta22186;
        };
        malli.core.t_malli$core22185.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22185.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._to_value_ast(this$__$1);
        };
        malli.core.t_malli$core22185.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22185.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._safe_pred(function(p1__22173_SHARP_) {
            return cljs.core.re_find(self__.re, p1__22173_SHARP_);
          });
        };
        malli.core.t_malli$core22185.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core22185.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._intercepting.cljs$core$IFn$_invoke$arity$1(malli.core._value_transformer(transformer, this$__$1, method, options__$1));
        };
        malli.core.t_malli$core22185.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_leaf(this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core22185.prototype.malli$core$Schema$_parser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var valid_QMARK_ = this$__$1.malli$core$Schema$_validator$arity$1(null);
          return function(x) {
            if (cljs.core.truth_(valid_QMARK_.cljs$core$IFn$_invoke$arity$1 ? valid_QMARK_.cljs$core$IFn$_invoke$arity$1(x) : valid_QMARK_.call(null, x))) {
              return x;
            } else {
              return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
            }
          };
        };
        malli.core.t_malli$core22185.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core22185.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core22185.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref(self__.form);
        };
        malli.core.t_malli$core22185.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          return function malli$core$_re_schema_$_explain(x, in$, acc) {
            try {
              if (cljs.core.not(cljs.core.re_find(self__.re, x))) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, malli.impl.util._error.cljs$core$IFn$_invoke$arity$4(path, in$, this$__$1, x));
              } else {
                return acc;
              }
            } catch (e22200) {
              if (e22200 instanceof Error) {
                var e = e22200;
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, malli.impl.util._error.cljs$core$IFn$_invoke$arity$5(path, in$, this$__$1, x, cljs$cst$keyword$type.cljs$core$IFn$_invoke$arity$1(cljs.core.ex_data(e))));
              } else {
                throw e22200;
              }
            }
          };
        };
        malli.core.t_malli$core22185.prototype.malli$core$Schema$_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return this$__$1.malli$core$Schema$_parser$arity$1(null);
        };
        malli.core.t_malli$core22185.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core22185.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22185.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core22185.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22185.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core22185.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.children, key, default$);
        };
        malli.core.t_malli$core22185.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_assoc_children(this$__$1, key, value);
        };
        malli.core.t_malli$core22185.getBasis = function() {
          return new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$form, cljs$cst$symbol$options, cljs$cst$symbol$child, cljs$cst$symbol$vec__22180, cljs$cst$symbol$properties, cljs$cst$symbol$children, cljs.core.with_meta(cljs$cst$symbol$parent, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22175], null)), cljs$cst$symbol$meta22176, cljs$cst$symbol$re, cljs$cst$symbol$class_QMARK_, 
          cljs$cst$symbol$cache, cljs$cst$symbol$p__22179, cljs$cst$symbol$meta22186], null);
        };
        malli.core.t_malli$core22185.cljs$lang$type = true;
        malli.core.t_malli$core22185.cljs$lang$ctorStr = "malli.core/t_malli$core22185";
        malli.core.t_malli$core22185.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
          return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22185");
        };
        malli.core.__GT_t_malli$core22185 = function malli$core$_re_schema_$___GT_t_malli$core22185(form__$1, options__$1, child__$1, vec__22180__$1, properties__$1, children__$2, parent__$2, meta22176__$1, re__$1, class_QMARK___$1, cache__$1, p__22179__$1, meta22186) {
          return new malli.core.t_malli$core22185(form__$1, options__$1, child__$1, vec__22180__$1, properties__$1, children__$2, parent__$2, meta22176__$1, re__$1, class_QMARK___$1, cache__$1, p__22179__$1, meta22186);
        };
      }
      return new malli.core.t_malli$core22185(form, options, child, vec__22180, properties, children__$1, parent__$1, self__.meta22176, re, self__.class_QMARK_, cache, p__22179, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_schema], null));
    };
    malli.core.t_malli$core22175.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$class_QMARK_, cljs$cst$symbol$meta22176], null);
    };
    malli.core.t_malli$core22175.cljs$lang$type = true;
    malli.core.t_malli$core22175.cljs$lang$ctorStr = "malli.core/t_malli$core22175";
    malli.core.t_malli$core22175.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22175");
    };
    malli.core.__GT_t_malli$core22175 = function malli$core$_re_schema_$___GT_t_malli$core22175(class_QMARK___$1, meta22176) {
      return new malli.core.t_malli$core22175(class_QMARK___$1, meta22176);
    };
  }
  return new malli.core.t_malli$core22175(class_QMARK_, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_into_DASH_schema], null));
};
malli.core._fn_schema = function malli$core$_fn_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22233 !== "undefined") {
  } else {
    malli.core.t_malli$core22233 = function(meta22234) {
      this.meta22234 = meta22234;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core22233.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22235, meta22234__$1) {
      var self__ = this;
      var _22235__$1 = this;
      return new malli.core.t_malli$core22233(meta22234__$1);
    };
    malli.core.t_malli$core22233.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22235) {
      var self__ = this;
      var _22235__$1 = this;
      return self__.meta22234;
    };
    malli.core.t_malli$core22233.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core22233.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_value_ast(parent__$1, ast, options);
    };
    malli.core.t_malli$core22233.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core22233.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs$cst$keyword$fn;
    };
    malli.core.t_malli$core22233.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core22233.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5(cljs$cst$keyword$fn, properties, children, 1, 1);
      var children__$1 = cljs.core.vec(children);
      var f = function() {
        var G__22237 = cljs.core.first(children__$1);
        var G__22238 = options;
        return malli.core.eval.cljs$core$IFn$_invoke$arity$2 ? malli.core.eval.cljs$core$IFn$_invoke$arity$2(G__22237, G__22238) : malli.core.eval.call(null, G__22237, G__22238);
      }();
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form(parent__$1, properties, children__$1, cljs.core.identity, options);
      }, null);
      var cache = malli.core._create_cache(options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22243 !== "undefined") {
      } else {
        malli.core.t_malli$core22243 = function(meta22234, parent, properties, children, options, f, form, cache, meta22244) {
          this.meta22234 = meta22234;
          this.parent = parent;
          this.properties = properties;
          this.children = children;
          this.options = options;
          this.f = f;
          this.form = form;
          this.cache = cache;
          this.meta22244 = meta22244;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core22243.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22245, meta22244__$1) {
          var self__ = this;
          var _22245__$1 = this;
          return new malli.core.t_malli$core22243(self__.meta22234, self__.parent, self__.properties, self__.children, self__.options, self__.f, self__.form, self__.cache, meta22244__$1);
        };
        malli.core.t_malli$core22243.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22245) {
          var self__ = this;
          var _22245__$1 = this;
          return self__.meta22244;
        };
        malli.core.t_malli$core22243.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22243.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._to_value_ast(this$__$1);
        };
        malli.core.t_malli$core22243.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22243.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._safe_pred(self__.f);
        };
        malli.core.t_malli$core22243.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core22243.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._intercepting.cljs$core$IFn$_invoke$arity$1(malli.core._value_transformer(transformer, this$__$1, method, options__$1));
        };
        malli.core.t_malli$core22243.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_leaf(this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core22243.prototype.malli$core$Schema$_parser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var validator = this$__$1.malli$core$Schema$_validator$arity$1(null);
          return function(x) {
            if (cljs.core.truth_(validator.cljs$core$IFn$_invoke$arity$1 ? validator.cljs$core$IFn$_invoke$arity$1(x) : validator.call(null, x))) {
              return x;
            } else {
              return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
            }
          };
        };
        malli.core.t_malli$core22243.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core22243.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core22243.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref(self__.form);
        };
        malli.core.t_malli$core22243.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          return function malli$core$_fn_schema_$_explain(x, in$, acc) {
            try {
              if (cljs.core.not(self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(x) : self__.f.call(null, x))) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, malli.impl.util._error.cljs$core$IFn$_invoke$arity$4(path, in$, this$__$1, x));
              } else {
                return acc;
              }
            } catch (e22269) {
              if (e22269 instanceof Error) {
                var e = e22269;
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, malli.impl.util._error.cljs$core$IFn$_invoke$arity$5(path, in$, this$__$1, x, cljs$cst$keyword$type.cljs$core$IFn$_invoke$arity$1(cljs.core.ex_data(e))));
              } else {
                throw e22269;
              }
            }
          };
        };
        malli.core.t_malli$core22243.prototype.malli$core$Schema$_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return this$__$1.malli$core$Schema$_parser$arity$1(null);
        };
        malli.core.t_malli$core22243.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core22243.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22243.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core22243.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22243.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core22243.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.children, key, default$);
        };
        malli.core.t_malli$core22243.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_assoc_children(this$__$1, key, value);
        };
        malli.core.t_malli$core22243.getBasis = function() {
          return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta22234, cljs.core.with_meta(cljs$cst$symbol$parent, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22233], null)), cljs$cst$symbol$properties, cljs$cst$symbol$children, cljs$cst$symbol$options, cljs$cst$symbol$f, cljs$cst$symbol$form, cljs$cst$symbol$cache, cljs$cst$symbol$meta22244], null);
        };
        malli.core.t_malli$core22243.cljs$lang$type = true;
        malli.core.t_malli$core22243.cljs$lang$ctorStr = "malli.core/t_malli$core22243";
        malli.core.t_malli$core22243.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
          return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22243");
        };
        malli.core.__GT_t_malli$core22243 = function malli$core$_fn_schema_$___GT_t_malli$core22243(meta22234__$1, parent__$2, properties__$1, children__$2, options__$1, f__$1, form__$1, cache__$1, meta22244) {
          return new malli.core.t_malli$core22243(meta22234__$1, parent__$2, properties__$1, children__$2, options__$1, f__$1, form__$1, cache__$1, meta22244);
        };
      }
      return new malli.core.t_malli$core22243(self__.meta22234, parent__$1, properties, children__$1, options, f, form, cache, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_schema], null));
    };
    malli.core.t_malli$core22233.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta22234], null);
    };
    malli.core.t_malli$core22233.cljs$lang$type = true;
    malli.core.t_malli$core22233.cljs$lang$ctorStr = "malli.core/t_malli$core22233";
    malli.core.t_malli$core22233.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22233");
    };
    malli.core.__GT_t_malli$core22233 = function malli$core$_fn_schema_$___GT_t_malli$core22233(meta22234) {
      return new malli.core.t_malli$core22233(meta22234);
    };
  }
  return new malli.core.t_malli$core22233(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_into_DASH_schema], null));
};
malli.core._maybe_schema = function malli$core$_maybe_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22281 !== "undefined") {
  } else {
    malli.core.t_malli$core22281 = function(meta22282) {
      this.meta22282 = meta22282;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core22281.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22283, meta22282__$1) {
      var self__ = this;
      var _22283__$1 = this;
      return new malli.core.t_malli$core22281(meta22282__$1);
    };
    malli.core.t_malli$core22281.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22283) {
      var self__ = this;
      var _22283__$1 = this;
      return self__.meta22282;
    };
    malli.core.t_malli$core22281.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core22281.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_child_ast(parent__$1, ast, options);
    };
    malli.core.t_malli$core22281.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core22281.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs$cst$keyword$maybe;
    };
    malli.core.t_malli$core22281.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core22281.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core22281.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core22281.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5(cljs$cst$keyword$maybe, properties, children, 1, 1);
      var vec__22285 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p1__22279_SHARP_) {
        return malli.core.schema.cljs$core$IFn$_invoke$arity$2 ? malli.core.schema.cljs$core$IFn$_invoke$arity$2(p1__22279_SHARP_, options) : malli.core.schema.call(null, p1__22279_SHARP_, options);
      }, children);
      var schema = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22285, 0, null);
      var children__$1 = vec__22285;
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form(parent__$1, properties, children__$1, malli.core._form, options);
      }, null);
      var cache = malli.core._create_cache(options);
      var __GT_parser = function(f) {
        var parser = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(schema) : f.call(null, schema);
        return function(x) {
          if (x == null) {
            return x;
          } else {
            return parser.cljs$core$IFn$_invoke$arity$1 ? parser.cljs$core$IFn$_invoke$arity$1(x) : parser.call(null, x);
          }
        };
      };
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22290 !== "undefined") {
      } else {
        malli.core.t_malli$core22290 = function(form, options, properties, schema, children, meta22282, parent, __GT_parser, vec__22285, cache, meta22291) {
          this.form = form;
          this.options = options;
          this.properties = properties;
          this.schema = schema;
          this.children = children;
          this.meta22282 = meta22282;
          this.parent = parent;
          this.__GT_parser = __GT_parser;
          this.vec__22285 = vec__22285;
          this.cache = cache;
          this.meta22291 = meta22291;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core22290.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22292, meta22291__$1) {
          var self__ = this;
          var _22292__$1 = this;
          return new malli.core.t_malli$core22290(self__.form, self__.options, self__.properties, self__.schema, self__.children, self__.meta22282, self__.parent, self__.__GT_parser, self__.vec__22285, self__.cache, meta22291__$1);
        };
        malli.core.t_malli$core22290.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22292) {
          var self__ = this;
          var _22292__$1 = this;
          return self__.meta22291;
        };
        malli.core.t_malli$core22290.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22290.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._to_child_ast(this$__$1);
        };
        malli.core.t_malli$core22290.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22290.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var validator = malli.core._validator(self__.schema);
          return function(x) {
            var or__4253__auto__ = x == null;
            if (or__4253__auto__) {
              return or__4253__auto__;
            } else {
              return validator.cljs$core$IFn$_invoke$arity$1 ? validator.cljs$core$IFn$_invoke$arity$1(x) : validator.call(null, x);
            }
          };
        };
        malli.core.t_malli$core22290.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core22290.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._parent_children_transformer(this$__$1, self__.children, transformer, method, options__$1);
        };
        malli.core.t_malli$core22290.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_indexed(this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core22290.prototype.malli$core$Schema$_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.cljs$core$IFn$_invoke$arity$1 ? self__.__GT_parser.cljs$core$IFn$_invoke$arity$1(malli.core._parser) : self__.__GT_parser.call(null, malli.core._parser);
        };
        malli.core.t_malli$core22290.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core22290.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core22290.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref(self__.form);
        };
        malli.core.t_malli$core22290.prototype.malli$core$Schema$_explainer$arity$2 = function(_, path) {
          var self__ = this;
          var ___$1 = this;
          var explainer = malli.core._explainer(self__.schema, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(path, 0));
          return function malli$core$_maybe_schema_$_explain(x, in$, acc) {
            if (x == null) {
              return acc;
            } else {
              return explainer.cljs$core$IFn$_invoke$arity$3 ? explainer.cljs$core$IFn$_invoke$arity$3(x, in$, acc) : explainer.call(null, x, in$, acc);
            }
          };
        };
        malli.core.t_malli$core22290.prototype.malli$core$Schema$_unparser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.cljs$core$IFn$_invoke$arity$1 ? self__.__GT_parser.cljs$core$IFn$_invoke$arity$1(malli.core._unparser) : self__.__GT_parser.call(null, malli.core._unparser);
        };
        malli.core.t_malli$core22290.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core22290.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22290.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core22290.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22290.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core22290.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(0, key)) {
            return self__.schema;
          } else {
            return default$;
          }
        };
        malli.core.t_malli$core22290.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(0, key)) {
            return malli.core._set_children(this$__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null));
          } else {
            return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_index_DASH_out_DASH_of_DASH_bounds, new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$schema, this$__$1, cljs$cst$keyword$key, key], null));
          }
        };
        malli.core.t_malli$core22290.getBasis = function() {
          return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$form, cljs$cst$symbol$options, cljs$cst$symbol$properties, cljs$cst$symbol$schema, cljs$cst$symbol$children, cljs$cst$symbol$meta22282, cljs.core.with_meta(cljs$cst$symbol$parent, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22281], null)), cljs$cst$symbol$_DASH__GT_parser, cljs$cst$symbol$vec__22285, cljs$cst$symbol$cache, 
          cljs$cst$symbol$meta22291], null);
        };
        malli.core.t_malli$core22290.cljs$lang$type = true;
        malli.core.t_malli$core22290.cljs$lang$ctorStr = "malli.core/t_malli$core22290";
        malli.core.t_malli$core22290.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
          return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22290");
        };
        malli.core.__GT_t_malli$core22290 = function malli$core$_maybe_schema_$___GT_t_malli$core22290(form__$1, options__$1, properties__$1, schema__$1, children__$2, meta22282__$1, parent__$2, __GT_parser__$1, vec__22285__$1, cache__$1, meta22291) {
          return new malli.core.t_malli$core22290(form__$1, options__$1, properties__$1, schema__$1, children__$2, meta22282__$1, parent__$2, __GT_parser__$1, vec__22285__$1, cache__$1, meta22291);
        };
      }
      return new malli.core.t_malli$core22290(form, options, properties, schema, children__$1, self__.meta22282, parent__$1, __GT_parser, vec__22285, cache, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_schema], null));
    };
    malli.core.t_malli$core22281.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta22282], null);
    };
    malli.core.t_malli$core22281.cljs$lang$type = true;
    malli.core.t_malli$core22281.cljs$lang$ctorStr = "malli.core/t_malli$core22281";
    malli.core.t_malli$core22281.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22281");
    };
    malli.core.__GT_t_malli$core22281 = function malli$core$_maybe_schema_$___GT_t_malli$core22281(meta22282) {
      return new malli.core.t_malli$core22281(meta22282);
    };
  }
  return new malli.core.t_malli$core22281(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_into_DASH_schema], null));
};
malli.core._multi_schema = function malli$core$_multi_schema(var_args) {
  var G__22307 = arguments.length;
  switch(G__22307) {
    case 0:
      return malli.core._multi_schema.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.core._multi_schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._multi_schema.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.core._multi_schema.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$naked_DASH_keys, true], null));
};
malli.core._multi_schema.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22310 !== "undefined") {
  } else {
    malli.core.t_malli$core22310 = function(opts, meta22311) {
      this.opts = opts;
      this.meta22311 = meta22311;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core22310.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22312, meta22311__$1) {
      var self__ = this;
      var _22312__$1 = this;
      return new malli.core.t_malli$core22310(self__.opts, meta22311__$1);
    };
    malli.core.t_malli$core22310.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22312) {
      var self__ = this;
      var _22312__$1 = this;
      return self__.meta22311;
    };
    malli.core.t_malli$core22310.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core22310.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_entry_ast(parent__$1, ast, options);
    };
    malli.core.t_malli$core22310.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core22310.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var or__4253__auto__ = cljs$cst$keyword$type.cljs$core$IFn$_invoke$arity$1(self__.opts);
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        return cljs$cst$keyword$multi;
      }
    };
    malli.core.t_malli$core22310.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs$cst$keyword$type_DASH_properties.cljs$core$IFn$_invoke$arity$1(self__.opts);
    };
    malli.core.t_malli$core22310.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core22310.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core22310.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      var opts_SINGLEQUOTE_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.opts, cljs.core.select_keys(properties, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$lazy_DASH_refs], null))], 0));
      var entry_parser = malli.core._create_entry_parser(children, opts_SINGLEQUOTE_, options);
      var form = new cljs.core.Delay(function() {
        return malli.core._create_entry_form(parent__$1, properties, entry_parser, options);
      }, null);
      var cache = malli.core._create_cache(options);
      var dispatch = function() {
        var G__22322 = cljs$cst$keyword$dispatch.cljs$core$IFn$_invoke$arity$1(properties);
        var G__22323 = options;
        return malli.core.eval.cljs$core$IFn$_invoke$arity$2 ? malli.core.eval.cljs$core$IFn$_invoke$arity$2(G__22322, G__22323) : malli.core.eval.call(null, G__22322, G__22323);
      }();
      var dispatch_map = new cljs.core.Delay(function() {
        return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, malli.core._entry_entries(entry_parser));
      }, null);
      var finder = function(p__22327) {
        var map__22328 = p__22327;
        var map__22328__$1 = cljs.core.__destructure_map(map__22328);
        var m = map__22328__$1;
        var default$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22328__$1, cljs$cst$keyword$malli_DOT_core_SLASH_default);
        return function(x) {
          return m.cljs$core$IFn$_invoke$arity$2 ? m.cljs$core$IFn$_invoke$arity$2(x, default$) : m.call(null, x, default$);
        };
      };
      if (cljs.core.truth_(dispatch)) {
      } else {
        malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_missing_DASH_property, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$key, cljs$cst$keyword$dispatch], null));
      }
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22335 !== "undefined") {
      } else {
        malli.core.t_malli$core22335 = function(form, options, properties, children, meta22311, entry_parser, parent, opts_SINGLEQUOTE_, dispatch, cache, finder, opts, dispatch_map, meta22336) {
          this.form = form;
          this.options = options;
          this.properties = properties;
          this.children = children;
          this.meta22311 = meta22311;
          this.entry_parser = entry_parser;
          this.parent = parent;
          this.opts_SINGLEQUOTE_ = opts_SINGLEQUOTE_;
          this.dispatch = dispatch;
          this.cache = cache;
          this.finder = finder;
          this.opts = opts;
          this.dispatch_map = dispatch_map;
          this.meta22336 = meta22336;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core22335.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22337, meta22336__$1) {
          var self__ = this;
          var _22337__$1 = this;
          return new malli.core.t_malli$core22335(self__.form, self__.options, self__.properties, self__.children, self__.meta22311, self__.entry_parser, self__.parent, self__.opts_SINGLEQUOTE_, self__.dispatch, self__.cache, self__.finder, self__.opts, self__.dispatch_map, meta22336__$1);
        };
        malli.core.t_malli$core22335.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22337) {
          var self__ = this;
          var _22337__$1 = this;
          return self__.meta22336;
        };
        malli.core.t_malli$core22335.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22335.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._entry_ast(this$__$1, malli.core._entry_keyset(self__.entry_parser));
        };
        malli.core.t_malli$core22335.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22335.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var find = function() {
            var G__22345 = cljs.core.reduce_kv(function(acc, k, s) {
              return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(acc, k, malli.core._validator(s));
            }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.deref(self__.dispatch_map));
            return self__.finder.cljs$core$IFn$_invoke$arity$1 ? self__.finder.cljs$core$IFn$_invoke$arity$1(G__22345) : self__.finder.call(null, G__22345);
          }();
          return function(x) {
            var temp__5751__auto__ = function() {
              var G__22350 = self__.dispatch.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch.cljs$core$IFn$_invoke$arity$1(x) : self__.dispatch.call(null, x);
              return find.cljs$core$IFn$_invoke$arity$1 ? find.cljs$core$IFn$_invoke$arity$1(G__22350) : find.call(null, G__22350);
            }();
            if (cljs.core.truth_(temp__5751__auto__)) {
              var validator = temp__5751__auto__;
              return validator.cljs$core$IFn$_invoke$arity$1 ? validator.cljs$core$IFn$_invoke$arity$1(x) : validator.call(null, x);
            } else {
              return false;
            }
          };
        };
        malli.core.t_malli$core22335.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core22335.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          var this_transformer = malli.core._value_transformer(transformer, this$__$1, method, options__$1);
          var __GT_children = cljs.core.reduce_kv(function(acc, k, s) {
            var t = malli.core._transformer(s, transformer, method, options__$1);
            var G__22356 = acc;
            if (cljs.core.truth_(t)) {
              return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22356, k, t);
            } else {
              return G__22356;
            }
          }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.deref(self__.dispatch_map));
          var find = self__.finder.cljs$core$IFn$_invoke$arity$1 ? self__.finder.cljs$core$IFn$_invoke$arity$1(__GT_children) : self__.finder.call(null, __GT_children);
          var child_transformer = cljs.core.seq(__GT_children) ? function(x) {
            var temp__5755__auto__ = function() {
              var G__22357 = self__.dispatch.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch.cljs$core$IFn$_invoke$arity$1(x) : self__.dispatch.call(null, x);
              return find.cljs$core$IFn$_invoke$arity$1 ? find.cljs$core$IFn$_invoke$arity$1(G__22357) : find.call(null, G__22357);
            }();
            if (temp__5755__auto__ == null) {
              return x;
            } else {
              var t = temp__5755__auto__;
              return t.cljs$core$IFn$_invoke$arity$1 ? t.cljs$core$IFn$_invoke$arity$1(x) : t.call(null, x);
            }
          } : null;
          return malli.core._intercepting.cljs$core$IFn$_invoke$arity$2(this_transformer, child_transformer);
        };
        malli.core.t_malli$core22335.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_entries(this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core22335.prototype.malli$core$Schema$_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var parse = function(k, s) {
            var p = malli.core._parser(s);
            return function(x) {
              return malli.impl.util._map_valid(function(p1__22304_SHARP_) {
                return malli.impl.util._tagged(k, p1__22304_SHARP_);
              }, p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
            };
          };
          var find = function() {
            var G__22358 = cljs.core.reduce_kv(function(acc, k, s) {
              return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(acc, k, parse(k, s));
            }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.deref(self__.dispatch_map));
            return self__.finder.cljs$core$IFn$_invoke$arity$1 ? self__.finder.cljs$core$IFn$_invoke$arity$1(G__22358) : self__.finder.call(null, G__22358);
          }();
          return function(x) {
            var temp__5755__auto__ = function() {
              var G__22359 = self__.dispatch.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch.cljs$core$IFn$_invoke$arity$1(x) : self__.dispatch.call(null, x);
              return find.cljs$core$IFn$_invoke$arity$1 ? find.cljs$core$IFn$_invoke$arity$1(G__22359) : find.call(null, G__22359);
            }();
            if (temp__5755__auto__ == null) {
              return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
            } else {
              var parser = temp__5755__auto__;
              return parser.cljs$core$IFn$_invoke$arity$1 ? parser.cljs$core$IFn$_invoke$arity$1(x) : parser.call(null, x);
            }
          };
        };
        malli.core.t_malli$core22335.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core22335.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._entry_children(self__.entry_parser);
        };
        malli.core.t_malli$core22335.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref(self__.form);
        };
        malli.core.t_malli$core22335.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          var find = function() {
            var G__22365 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(acc, p__22369) {
              var vec__22372 = p__22369;
              var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22372, 0, null);
              var s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22372, 1, null);
              return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(acc, k, malli.core._explainer(s, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(path, k)));
            }, cljs.core.PersistentArrayMap.EMPTY, this$__$1.malli$core$EntrySchema$_entries$arity$1(null));
            return self__.finder.cljs$core$IFn$_invoke$arity$1 ? self__.finder.cljs$core$IFn$_invoke$arity$1(G__22365) : self__.finder.call(null, G__22365);
          }();
          var __GT_path = self__.dispatch instanceof cljs.core.Keyword ? function(p1__22303_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22303_SHARP_, self__.dispatch);
          } : cljs.core.identity;
          return function(x, in$, acc) {
            var temp__5751__auto__ = function() {
              var G__22378 = self__.dispatch.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch.cljs$core$IFn$_invoke$arity$1(x) : self__.dispatch.call(null, x);
              return find.cljs$core$IFn$_invoke$arity$1 ? find.cljs$core$IFn$_invoke$arity$1(G__22378) : find.call(null, G__22378);
            }();
            if (cljs.core.truth_(temp__5751__auto__)) {
              var explainer = temp__5751__auto__;
              return explainer.cljs$core$IFn$_invoke$arity$3 ? explainer.cljs$core$IFn$_invoke$arity$3(x, in$, acc) : explainer.call(null, x, in$, acc);
            } else {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, malli.impl.util._error.cljs$core$IFn$_invoke$arity$5(__GT_path.cljs$core$IFn$_invoke$arity$1 ? __GT_path.cljs$core$IFn$_invoke$arity$1(path) : __GT_path.call(null, path), __GT_path.cljs$core$IFn$_invoke$arity$1 ? __GT_path.cljs$core$IFn$_invoke$arity$1(in$) : __GT_path.call(null, in$), this$__$1, x, cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_dispatch_DASH_value));
            }
          };
        };
        malli.core.t_malli$core22335.prototype.malli$core$Schema$_unparser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var unparsers = cljs.core.reduce_kv(function(acc, k, s) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(acc, k, malli.core._unparser(s));
          }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.deref(self__.dispatch_map));
          return function(x) {
            if (malli.impl.util._tagged_QMARK_(x)) {
              var temp__5755__auto__ = function() {
                var G__22391 = cljs.core.key(x);
                return unparsers.cljs$core$IFn$_invoke$arity$1 ? unparsers.cljs$core$IFn$_invoke$arity$1(G__22391) : unparsers.call(null, G__22391);
              }();
              if (temp__5755__auto__ == null) {
                return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
              } else {
                var f = temp__5755__auto__;
                var G__22392 = cljs.core.val(x);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22392) : f.call(null, G__22392);
              }
            } else {
              return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
            }
          };
        };
        malli.core.t_malli$core22335.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core22335.prototype.malli$core$EntrySchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22335.prototype.malli$core$EntrySchema$_entries$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._entry_entries(self__.entry_parser);
        };
        malli.core.t_malli$core22335.prototype.malli$core$EntrySchema$_entry_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.entry_parser;
        };
        malli.core.t_malli$core22335.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22335.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core22335.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22335.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core22335.prototype.malli$core$LensSchema$_get$arity$3 = function(this$, key, default$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._get_entries(this$__$1, key, default$);
        };
        malli.core.t_malli$core22335.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_entries(this$__$1, key, value);
        };
        malli.core.t_malli$core22335.getBasis = function() {
          return new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$form, cljs$cst$symbol$options, cljs$cst$symbol$properties, cljs$cst$symbol$children, cljs$cst$symbol$meta22311, cljs$cst$symbol$entry_DASH_parser, cljs.core.with_meta(cljs$cst$symbol$parent, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22310], null)), cljs$cst$symbol$opts_SINGLEQUOTE_, cljs$cst$symbol$dispatch, cljs$cst$symbol$cache, 
          cljs$cst$symbol$finder, cljs$cst$symbol$opts, cljs$cst$symbol$dispatch_DASH_map, cljs$cst$symbol$meta22336], null);
        };
        malli.core.t_malli$core22335.cljs$lang$type = true;
        malli.core.t_malli$core22335.cljs$lang$ctorStr = "malli.core/t_malli$core22335";
        malli.core.t_malli$core22335.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
          return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22335");
        };
        malli.core.__GT_t_malli$core22335 = function malli$core$__GT_t_malli$core22335(form__$1, options__$1, properties__$1, children__$1, meta22311__$1, entry_parser__$1, parent__$2, opts_SINGLEQUOTE___$1, dispatch__$1, cache__$1, finder__$1, opts__$1, dispatch_map__$1, meta22336) {
          return new malli.core.t_malli$core22335(form__$1, options__$1, properties__$1, children__$1, meta22311__$1, entry_parser__$1, parent__$2, opts_SINGLEQUOTE___$1, dispatch__$1, cache__$1, finder__$1, opts__$1, dispatch_map__$1, meta22336);
        };
      }
      return new malli.core.t_malli$core22335(form, options, properties, children, self__.meta22311, entry_parser, parent__$1, opts_SINGLEQUOTE_, dispatch, cache, finder, self__.opts, dispatch_map, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_schema], null));
    };
    malli.core.t_malli$core22310.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$opts, cljs$cst$symbol$meta22311], null);
    };
    malli.core.t_malli$core22310.cljs$lang$type = true;
    malli.core.t_malli$core22310.cljs$lang$ctorStr = "malli.core/t_malli$core22310";
    malli.core.t_malli$core22310.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22310");
    };
    malli.core.__GT_t_malli$core22310 = function malli$core$__GT_t_malli$core22310(opts__$1, meta22311) {
      return new malli.core.t_malli$core22310(opts__$1, meta22311);
    };
  }
  return new malli.core.t_malli$core22310(opts, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_into_DASH_schema], null));
};
malli.core._multi_schema.cljs$lang$maxFixedArity = 1;
malli.core._ref_schema = function malli$core$_ref_schema(var_args) {
  var G__22411 = arguments.length;
  switch(G__22411) {
    case 0:
      return malli.core._ref_schema.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.core._ref_schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._ref_schema.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.core._ref_schema.cljs$core$IFn$_invoke$arity$1(null);
};
malli.core._ref_schema.cljs$core$IFn$_invoke$arity$1 = function(p__22415) {
  var map__22417 = p__22415;
  var map__22417__$1 = cljs.core.__destructure_map(map__22417);
  var lazy = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22417__$1, cljs$cst$keyword$lazy);
  var type_properties = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22417__$1, cljs$cst$keyword$type_DASH_properties);
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22418 !== "undefined") {
  } else {
    malli.core.t_malli$core22418 = function(p__22415, map__22417, lazy, type_properties, meta22419) {
      this.p__22415 = p__22415;
      this.map__22417 = map__22417;
      this.lazy = lazy;
      this.type_properties = type_properties;
      this.meta22419 = meta22419;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core22418.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22420, meta22419__$1) {
      var self__ = this;
      var _22420__$1 = this;
      return new malli.core.t_malli$core22418(self__.p__22415, self__.map__22417, self__.lazy, self__.type_properties, meta22419__$1);
    };
    malli.core.t_malli$core22418.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22420) {
      var self__ = this;
      var _22420__$1 = this;
      return self__.meta22419;
    };
    malli.core.t_malli$core22418.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core22418.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_value_ast(parent__$1, ast, options);
    };
    malli.core.t_malli$core22418.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core22418.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs$cst$keyword$ref;
    };
    malli.core.t_malli$core22418.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.type_properties;
    };
    malli.core.t_malli$core22418.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, p__22435, p__22436) {
      var self__ = this;
      var vec__22437 = p__22435;
      var ref = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22437, 0, null);
      var children = vec__22437;
      var map__22440 = p__22436;
      var map__22440__$1 = cljs.core.__destructure_map(map__22440);
      var options = map__22440__$1;
      var allow_invalid_refs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22440__$1, cljs$cst$keyword$malli_DOT_core_SLASH_allow_DASH_invalid_DASH_refs);
      var parent__$1 = this;
      malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5(cljs$cst$keyword$ref, properties, children, 1, 1);
      if (malli.core._reference_QMARK_(ref)) {
      } else {
        malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_ref, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$ref, ref], null));
      }
      var _ref = function() {
        var or__4253__auto__ = function() {
          var and__4251__auto__ = self__.lazy;
          if (cljs.core.truth_(and__4251__auto__)) {
            return malli.core._memoize(function() {
              var G__22447 = malli.registry._schema(malli.core._registry.cljs$core$IFn$_invoke$arity$1(options), ref);
              var G__22448 = options;
              return malli.core.schema.cljs$core$IFn$_invoke$arity$2 ? malli.core.schema.cljs$core$IFn$_invoke$arity$2(G__22447, G__22448) : malli.core.schema.call(null, G__22447, G__22448);
            });
          } else {
            return and__4251__auto__;
          }
        }();
        if (cljs.core.truth_(or__4253__auto__)) {
          return or__4253__auto__;
        } else {
          var or__4253__auto____$1 = function() {
            var temp__5753__auto__ = malli.registry._schema(malli.core._registry.cljs$core$IFn$_invoke$arity$1(options), ref);
            if (cljs.core.truth_(temp__5753__auto__)) {
              var s = temp__5753__auto__;
              return malli.core._memoize(function() {
                return malli.core.schema.cljs$core$IFn$_invoke$arity$2 ? malli.core.schema.cljs$core$IFn$_invoke$arity$2(s, options) : malli.core.schema.call(null, s, options);
              });
            } else {
              return null;
            }
          }();
          if (cljs.core.truth_(or__4253__auto____$1)) {
            return or__4253__auto____$1;
          } else {
            if (cljs.core.truth_(allow_invalid_refs)) {
              return null;
            } else {
              return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_ref, new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$type, cljs$cst$keyword$ref, cljs$cst$keyword$ref, ref], null));
            }
          }
        }
      }();
      var children__$1 = cljs.core.vec(children);
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form(parent__$1, properties, children__$1, cljs.core.identity, options);
      }, null);
      var cache = malli.core._create_cache(options);
      var __GT_parser = function(f) {
        var parser = malli.core._memoize(function() {
          var G__22458 = _ref.cljs$core$IFn$_invoke$arity$0 ? _ref.cljs$core$IFn$_invoke$arity$0() : _ref.call(null);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22458) : f.call(null, G__22458);
        });
        return function(x) {
          var fexpr__22459 = parser();
          return fexpr__22459.cljs$core$IFn$_invoke$arity$1 ? fexpr__22459.cljs$core$IFn$_invoke$arity$1(x) : fexpr__22459.call(null, x);
        };
      };
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22460 !== "undefined") {
      } else {
        malli.core.t_malli$core22460 = function(form, options, map__22440, vec__22437, p__22435, properties, children, type_properties, parent, map__22417, ref, p__22436, __GT_parser, cache, lazy, allow_invalid_refs, meta22419, _ref, p__22415, meta22461) {
          this.form = form;
          this.options = options;
          this.map__22440 = map__22440;
          this.vec__22437 = vec__22437;
          this.p__22435 = p__22435;
          this.properties = properties;
          this.children = children;
          this.type_properties = type_properties;
          this.parent = parent;
          this.map__22417 = map__22417;
          this.ref = ref;
          this.p__22436 = p__22436;
          this.__GT_parser = __GT_parser;
          this.cache = cache;
          this.lazy = lazy;
          this.allow_invalid_refs = allow_invalid_refs;
          this.meta22419 = meta22419;
          this._ref = _ref;
          this.p__22415 = p__22415;
          this.meta22461 = meta22461;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core22460.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22462, meta22461__$1) {
          var self__ = this;
          var _22462__$1 = this;
          return new malli.core.t_malli$core22460(self__.form, self__.options, self__.map__22440, self__.vec__22437, self__.p__22435, self__.properties, self__.children, self__.type_properties, self__.parent, self__.map__22417, self__.ref, self__.p__22436, self__.__GT_parser, self__.cache, self__.lazy, self__.allow_invalid_refs, self__.meta22419, self__._ref, self__.p__22415, meta22461__$1);
        };
        malli.core.t_malli$core22460.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22462) {
          var self__ = this;
          var _22462__$1 = this;
          return self__.meta22461;
        };
        malli.core.t_malli$core22460.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22460.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._to_value_ast(this$__$1);
        };
        malli.core.t_malli$core22460.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22460.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var validator = malli.core._memoize(function() {
            return malli.core._validator(self__._ref.cljs$core$IFn$_invoke$arity$0 ? self__._ref.cljs$core$IFn$_invoke$arity$0() : self__._ref.call(null));
          });
          return function(x) {
            var fexpr__22463 = validator();
            return fexpr__22463.cljs$core$IFn$_invoke$arity$1 ? fexpr__22463.cljs$core$IFn$_invoke$arity$1(x) : fexpr__22463.call(null, x);
          };
        };
        malli.core.t_malli$core22460.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core22460.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          var this_transformer = malli.core._value_transformer(transformer, this$__$1, method, options__$1);
          var deref_transformer = malli.core._memoize(function() {
            return malli.core._transformer(self__._ref.cljs$core$IFn$_invoke$arity$0 ? self__._ref.cljs$core$IFn$_invoke$arity$0() : self__._ref.call(null), transformer, method, options__$1);
          });
          return malli.core._intercepting.cljs$core$IFn$_invoke$arity$2(this_transformer, function(x) {
            var temp__5755__auto__ = deref_transformer();
            if (temp__5755__auto__ == null) {
              return x;
            } else {
              var t = temp__5755__auto__;
              return t.cljs$core$IFn$_invoke$arity$1 ? t.cljs$core$IFn$_invoke$arity$1(x) : t.call(null, x);
            }
          });
        };
        malli.core.t_malli$core22460.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          var accept = function() {
            return malli.core._inner(walker, self__._ref.cljs$core$IFn$_invoke$arity$0 ? self__._ref.cljs$core$IFn$_invoke$arity$0() : self__._ref.call(null), cljs.core.into.cljs$core$IFn$_invoke$arity$2(path, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)), malli.core._update(options__$1, cljs$cst$keyword$malli_DOT_core_SLASH_walked_DASH_refs, function(p1__22397_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
                var or__4253__auto__ = p1__22397_SHARP_;
                if (cljs.core.truth_(or__4253__auto__)) {
                  return or__4253__auto__;
                } else {
                  return cljs.core.PersistentHashSet.EMPTY;
                }
              }(), self__.ref);
            }));
          };
          if (cljs.core.truth_(malli.core._accept(walker, this$__$1, path, options__$1))) {
            if (cljs.core.not(function() {
              var fexpr__22464 = malli.core._boolean_fn(cljs$cst$keyword$malli_DOT_core_SLASH_walk_DASH_refs.cljs$core$IFn$_invoke$arity$2(options__$1, false));
              return fexpr__22464.cljs$core$IFn$_invoke$arity$1 ? fexpr__22464.cljs$core$IFn$_invoke$arity$1(self__.ref) : fexpr__22464.call(null, self__.ref);
            }()) || cljs.core.contains_QMARK_(cljs$cst$keyword$malli_DOT_core_SLASH_walked_DASH_refs.cljs$core$IFn$_invoke$arity$1(options__$1), self__.ref)) {
              return malli.core._outer(walker, this$__$1, path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ref], null), options__$1);
            } else {
              return malli.core._outer(walker, this$__$1, path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [accept()], null), options__$1);
            }
          } else {
            return null;
          }
        };
        malli.core.t_malli$core22460.prototype.malli$core$Schema$_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.cljs$core$IFn$_invoke$arity$1 ? self__.__GT_parser.cljs$core$IFn$_invoke$arity$1(malli.core._parser) : self__.__GT_parser.call(null, malli.core._parser);
        };
        malli.core.t_malli$core22460.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core22460.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core22460.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref(self__.form);
        };
        malli.core.t_malli$core22460.prototype.malli$core$Schema$_explainer$arity$2 = function(_, path) {
          var self__ = this;
          var ___$1 = this;
          var explainer = malli.core._memoize(function() {
            return malli.core._explainer(self__._ref.cljs$core$IFn$_invoke$arity$0 ? self__._ref.cljs$core$IFn$_invoke$arity$0() : self__._ref.call(null), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(path, 0));
          });
          return function(x, in$, acc) {
            var fexpr__22465 = explainer();
            return fexpr__22465.cljs$core$IFn$_invoke$arity$3 ? fexpr__22465.cljs$core$IFn$_invoke$arity$3(x, in$, acc) : fexpr__22465.call(null, x, in$, acc);
          };
        };
        malli.core.t_malli$core22460.prototype.malli$core$Schema$_unparser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.cljs$core$IFn$_invoke$arity$1 ? self__.__GT_parser.cljs$core$IFn$_invoke$arity$1(malli.core._unparser) : self__.__GT_parser.call(null, malli.core._unparser);
        };
        malli.core.t_malli$core22460.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core22460.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22460.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core22460.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22460.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, 0)) {
            return malli.core._pointer(self__.ref, self__._ref.cljs$core$IFn$_invoke$arity$0 ? self__._ref.cljs$core$IFn$_invoke$arity$0() : self__._ref.call(null), self__.options);
          } else {
            return default$;
          }
        };
        malli.core.t_malli$core22460.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core22460.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, 0)) {
            return malli.core._set_children(this$__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null));
          } else {
            return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_index_DASH_out_DASH_of_DASH_bounds, new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$schema, this$__$1, cljs$cst$keyword$key, key], null));
          }
        };
        malli.core.t_malli$core22460.prototype.malli$core$RefSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22460.prototype.malli$core$RefSchema$_ref$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ref;
        };
        malli.core.t_malli$core22460.prototype.malli$core$RefSchema$_deref$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__._ref.cljs$core$IFn$_invoke$arity$0 ? self__._ref.cljs$core$IFn$_invoke$arity$0() : self__._ref.call(null);
        };
        malli.core.t_malli$core22460.prototype.malli$core$RegexSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22460.prototype.malli$core$RegexSchema$_regex_op_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return false;
        };
        malli.core.t_malli$core22460.prototype.malli$core$RegexSchema$_regex_validator$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_potentially_DASH_recursive_DASH_seqex, this$__$1);
        };
        malli.core.t_malli$core22460.prototype.malli$core$RegexSchema$_regex_explainer$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_potentially_DASH_recursive_DASH_seqex, this$__$1);
        };
        malli.core.t_malli$core22460.prototype.malli$core$RegexSchema$_regex_parser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_potentially_DASH_recursive_DASH_seqex, this$__$1);
        };
        malli.core.t_malli$core22460.prototype.malli$core$RegexSchema$_regex_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_potentially_DASH_recursive_DASH_seqex, this$__$1);
        };
        malli.core.t_malli$core22460.prototype.malli$core$RegexSchema$_regex_transformer$arity$4 = function(this$, _, ___$1, ___$2) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_potentially_DASH_recursive_DASH_seqex, this$__$1);
        };
        malli.core.t_malli$core22460.prototype.malli$core$RegexSchema$_regex_min_max$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_potentially_DASH_recursive_DASH_seqex, this$__$1);
        };
        malli.core.t_malli$core22460.getBasis = function() {
          return new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$form, cljs$cst$symbol$options, cljs$cst$symbol$map__22440, cljs$cst$symbol$vec__22437, cljs$cst$symbol$p__22435, cljs$cst$symbol$properties, cljs$cst$symbol$children, cljs$cst$symbol$type_DASH_properties, cljs.core.with_meta(cljs$cst$symbol$parent, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22418], null)), cljs$cst$symbol$map__22417, 
          cljs$cst$symbol$ref, cljs$cst$symbol$p__22436, cljs$cst$symbol$_DASH__GT_parser, cljs$cst$symbol$cache, cljs$cst$symbol$lazy, cljs$cst$symbol$allow_DASH_invalid_DASH_refs, cljs$cst$symbol$meta22419, cljs$cst$symbol$_DASH_ref, cljs$cst$symbol$p__22415, cljs$cst$symbol$meta22461], null);
        };
        malli.core.t_malli$core22460.cljs$lang$type = true;
        malli.core.t_malli$core22460.cljs$lang$ctorStr = "malli.core/t_malli$core22460";
        malli.core.t_malli$core22460.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
          return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22460");
        };
        malli.core.__GT_t_malli$core22460 = function malli$core$__GT_t_malli$core22460(form__$1, options__$1, map__22440__$2, vec__22437__$1, p__22435__$1, properties__$1, children__$2, type_properties__$1, parent__$2, map__22417__$1, ref__$1, p__22436__$1, __GT_parser__$1, cache__$1, lazy__$1, allow_invalid_refs__$1, meta22419__$1, _ref__$1, p__22415__$1, meta22461) {
          return new malli.core.t_malli$core22460(form__$1, options__$1, map__22440__$2, vec__22437__$1, p__22435__$1, properties__$1, children__$2, type_properties__$1, parent__$2, map__22417__$1, ref__$1, p__22436__$1, __GT_parser__$1, cache__$1, lazy__$1, allow_invalid_refs__$1, meta22419__$1, _ref__$1, p__22415__$1, meta22461);
        };
      }
      return new malli.core.t_malli$core22460(form, options, map__22440__$1, vec__22437, p__22435, properties, children__$1, self__.type_properties, parent__$1, self__.map__22417, ref, p__22436, __GT_parser, cache, self__.lazy, allow_invalid_refs, self__.meta22419, _ref, self__.p__22415, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_schema], null));
    };
    malli.core.t_malli$core22418.getBasis = function() {
      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$p__22415, cljs$cst$symbol$map__22417, cljs$cst$symbol$lazy, cljs$cst$symbol$type_DASH_properties, cljs$cst$symbol$meta22419], null);
    };
    malli.core.t_malli$core22418.cljs$lang$type = true;
    malli.core.t_malli$core22418.cljs$lang$ctorStr = "malli.core/t_malli$core22418";
    malli.core.t_malli$core22418.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22418");
    };
    malli.core.__GT_t_malli$core22418 = function malli$core$__GT_t_malli$core22418(p__22415__$1, map__22417__$2, lazy__$1, type_properties__$1, meta22419) {
      return new malli.core.t_malli$core22418(p__22415__$1, map__22417__$2, lazy__$1, type_properties__$1, meta22419);
    };
  }
  return new malli.core.t_malli$core22418(p__22415, map__22417__$1, lazy, type_properties, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_into_DASH_schema], null));
};
malli.core._ref_schema.cljs$lang$maxFixedArity = 1;
malli.core._schema_schema = function malli$core$_schema_schema(p__22482) {
  var map__22483 = p__22482;
  var map__22483__$1 = cljs.core.__destructure_map(map__22483);
  var id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22483__$1, cljs$cst$keyword$id);
  var raw = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22483__$1, cljs$cst$keyword$raw);
  var internal = function() {
    var or__4253__auto__ = id;
    if (cljs.core.truth_(or__4253__auto__)) {
      return or__4253__auto__;
    } else {
      return raw;
    }
  }();
  var type = cljs.core.truth_(internal) ? cljs$cst$keyword$malli_DOT_core_SLASH_schema : cljs$cst$keyword$schema;
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22486 !== "undefined") {
  } else {
    malli.core.t_malli$core22486 = function(p__22482, map__22483, id, raw, internal, type, meta22487) {
      this.p__22482 = p__22482;
      this.map__22483 = map__22483;
      this.id = id;
      this.raw = raw;
      this.internal = internal;
      this.type = type;
      this.meta22487 = meta22487;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core22486.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22488, meta22487__$1) {
      var self__ = this;
      var _22488__$1 = this;
      return new malli.core.t_malli$core22486(self__.p__22482, self__.map__22483, self__.id, self__.raw, self__.internal, self__.type, meta22487__$1);
    };
    malli.core.t_malli$core22486.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22488) {
      var self__ = this;
      var _22488__$1 = this;
      return self__.meta22487;
    };
    malli.core.t_malli$core22486.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core22486.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      var fexpr__22493 = cljs.core.truth_(self__.internal) ? malli.core._from_value_ast : malli.core._from_child_ast;
      return fexpr__22493.cljs$core$IFn$_invoke$arity$3 ? fexpr__22493.cljs$core$IFn$_invoke$arity$3(parent__$1, ast, options) : fexpr__22493.call(null, parent__$1, ast, options);
    };
    malli.core.t_malli$core22486.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core22486.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.type;
    };
    malli.core.t_malli$core22486.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core22486.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core22486.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core22486.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5(self__.type, properties, children, 1, 1);
      var children__$1 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p1__22478_SHARP_) {
        return malli.core.schema.cljs$core$IFn$_invoke$arity$2 ? malli.core.schema.cljs$core$IFn$_invoke$arity$2(p1__22478_SHARP_, options) : malli.core.schema.call(null, p1__22478_SHARP_, options);
      }, children);
      var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(children__$1, 0);
      var form = new cljs.core.Delay(function() {
        var or__4253__auto__ = function() {
          var and__4251__auto__ = cljs.core.empty_QMARK_(properties);
          if (and__4251__auto__) {
            var or__4253__auto__ = self__.id;
            if (cljs.core.truth_(or__4253__auto__)) {
              return or__4253__auto__;
            } else {
              var and__4251__auto____$1 = self__.raw;
              if (cljs.core.truth_(and__4251__auto____$1)) {
                return malli.core._form(child);
              } else {
                return and__4251__auto____$1;
              }
            }
          } else {
            return and__4251__auto__;
          }
        }();
        if (cljs.core.truth_(or__4253__auto__)) {
          return or__4253__auto__;
        } else {
          return malli.core._simple_form(parent__$1, properties, children__$1, malli.core._form, options);
        }
      }, null);
      var cache = malli.core._create_cache(options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22545 !== "undefined") {
      } else {
        malli.core.t_malli$core22545 = function(form, meta22487, options, child, map__22483, properties, children, parent, raw, type, internal, cache, id, p__22482, meta22546) {
          this.form = form;
          this.meta22487 = meta22487;
          this.options = options;
          this.child = child;
          this.map__22483 = map__22483;
          this.properties = properties;
          this.children = children;
          this.parent = parent;
          this.raw = raw;
          this.type = type;
          this.internal = internal;
          this.cache = cache;
          this.id = id;
          this.p__22482 = p__22482;
          this.meta22546 = meta22546;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core22545.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22547, meta22546__$1) {
          var self__ = this;
          var _22547__$1 = this;
          return new malli.core.t_malli$core22545(self__.form, self__.meta22487, self__.options, self__.child, self__.map__22483, self__.properties, self__.children, self__.parent, self__.raw, self__.type, self__.internal, self__.cache, self__.id, self__.p__22482, meta22546__$1);
        };
        malli.core.t_malli$core22545.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22547) {
          var self__ = this;
          var _22547__$1 = this;
          return self__.meta22546;
        };
        malli.core.t_malli$core22545.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22545.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          if (cljs.core.truth_(self__.id)) {
            return malli.core._ast(new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$type, self__.type, cljs$cst$keyword$value, self__.id], null), this$__$1.malli$core$Schema$_properties$arity$1(null), this$__$1.malli$core$Schema$_options$arity$1(null));
          } else {
            if (cljs.core.truth_(self__.raw)) {
              return malli.core._to_value_ast(this$__$1);
            } else {
              return malli.core._to_child_ast(this$__$1);
            }
          }
        };
        malli.core.t_malli$core22545.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22545.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._validator(self__.child);
        };
        malli.core.t_malli$core22545.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core22545.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._parent_children_transformer(this$__$1, self__.children, transformer, method, options__$1);
        };
        malli.core.t_malli$core22545.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          if (cljs.core.truth_(malli.core._accept(walker, this$__$1, path, options__$1))) {
            if (cljs.core.truth_(function() {
              var or__4253__auto__ = cljs.core.not(self__.id);
              if (or__4253__auto__) {
                return or__4253__auto__;
              } else {
                var fexpr__22561 = malli.core._boolean_fn(cljs$cst$keyword$malli_DOT_core_SLASH_walk_DASH_schema_DASH_refs.cljs$core$IFn$_invoke$arity$2(options__$1, false));
                return fexpr__22561.cljs$core$IFn$_invoke$arity$1 ? fexpr__22561.cljs$core$IFn$_invoke$arity$1(self__.id) : fexpr__22561.call(null, self__.id);
              }
            }())) {
              return malli.core._outer(walker, this$__$1, path, malli.core._inner_indexed(walker, path, self__.children, options__$1), options__$1);
            } else {
              return malli.core._outer(walker, this$__$1, path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.id], null), options__$1);
            }
          } else {
            return null;
          }
        };
        malli.core.t_malli$core22545.prototype.malli$core$Schema$_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._parser(self__.child);
        };
        malli.core.t_malli$core22545.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core22545.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core22545.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref(self__.form);
        };
        malli.core.t_malli$core22545.prototype.malli$core$Schema$_explainer$arity$2 = function(_, path) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._explainer(self__.child, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(path, 0));
        };
        malli.core.t_malli$core22545.prototype.malli$core$Schema$_unparser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._unparser(self__.child);
        };
        malli.core.t_malli$core22545.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core22545.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22545.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core22545.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22545.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core22545.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, 0)) {
            return self__.child;
          } else {
            return default$;
          }
        };
        malli.core.t_malli$core22545.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, 0)) {
            return malli.core._set_children(this$__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null));
          } else {
            return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_index_DASH_out_DASH_of_DASH_bounds, new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$schema, this$__$1, cljs$cst$keyword$key, key], null));
          }
        };
        malli.core.t_malli$core22545.prototype.malli$core$RefSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22545.prototype.malli$core$RefSchema$_ref$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.id;
        };
        malli.core.t_malli$core22545.prototype.malli$core$RefSchema$_deref$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.child;
        };
        malli.core.t_malli$core22545.prototype.malli$core$RegexSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22545.prototype.malli$core$RegexSchema$_regex_op_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return false;
        };
        malli.core.t_malli$core22545.prototype.malli$core$RegexSchema$_regex_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.internal)) {
            return malli.core._regex_validator(self__.child);
          } else {
            return malli.impl.regex.item_validator(malli.core._validator(self__.child));
          }
        };
        malli.core.t_malli$core22545.prototype.malli$core$RegexSchema$_regex_explainer$arity$2 = function(_, path) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.internal)) {
            return malli.core._regex_explainer(self__.child, path);
          } else {
            return malli.impl.regex.item_explainer(path, self__.child, malli.core._explainer(self__.child, path));
          }
        };
        malli.core.t_malli$core22545.prototype.malli$core$RegexSchema$_regex_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.internal)) {
            return malli.core._regex_parser(self__.child);
          } else {
            return malli.impl.regex.item_parser(malli.core.parser.cljs$core$IFn$_invoke$arity$1 ? malli.core.parser.cljs$core$IFn$_invoke$arity$1(self__.child) : malli.core.parser.call(null, self__.child));
          }
        };
        malli.core.t_malli$core22545.prototype.malli$core$RegexSchema$_regex_unparser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.internal)) {
            return malli.core._regex_unparser(self__.child);
          } else {
            return malli.impl.regex.item_unparser(malli.core.unparser.cljs$core$IFn$_invoke$arity$1 ? malli.core.unparser.cljs$core$IFn$_invoke$arity$1(self__.child) : malli.core.unparser.call(null, self__.child));
          }
        };
        malli.core.t_malli$core22545.prototype.malli$core$RegexSchema$_regex_transformer$arity$4 = function(_, transformer, method, options__$1) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.internal)) {
            return malli.core._regex_transformer(self__.child, transformer, method, options__$1);
          } else {
            return malli.impl.regex.item_transformer(method, malli.core._validator(self__.child), function() {
              var or__4253__auto__ = malli.core._transformer(self__.child, transformer, method, options__$1);
              if (cljs.core.truth_(or__4253__auto__)) {
                return or__4253__auto__;
              } else {
                return cljs.core.identity;
              }
            }());
          }
        };
        malli.core.t_malli$core22545.prototype.malli$core$RegexSchema$_regex_min_max$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._regex_min_max(self__.child);
        };
        malli.core.t_malli$core22545.getBasis = function() {
          return new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$form, cljs$cst$symbol$meta22487, cljs$cst$symbol$options, cljs$cst$symbol$child, cljs$cst$symbol$map__22483, cljs$cst$symbol$properties, cljs$cst$symbol$children, cljs.core.with_meta(cljs$cst$symbol$parent, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22486], null)), cljs$cst$symbol$raw, cljs$cst$symbol$type, cljs$cst$symbol$internal, 
          cljs$cst$symbol$cache, cljs$cst$symbol$id, cljs$cst$symbol$p__22482, cljs$cst$symbol$meta22546], null);
        };
        malli.core.t_malli$core22545.cljs$lang$type = true;
        malli.core.t_malli$core22545.cljs$lang$ctorStr = "malli.core/t_malli$core22545";
        malli.core.t_malli$core22545.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
          return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22545");
        };
        malli.core.__GT_t_malli$core22545 = function malli$core$_schema_schema_$___GT_t_malli$core22545(form__$1, meta22487__$1, options__$1, child__$1, map__22483__$1, properties__$1, children__$2, parent__$2, raw__$1, type__$1, internal__$1, cache__$1, id__$1, p__22482__$1, meta22546) {
          return new malli.core.t_malli$core22545(form__$1, meta22487__$1, options__$1, child__$1, map__22483__$1, properties__$1, children__$2, parent__$2, raw__$1, type__$1, internal__$1, cache__$1, id__$1, p__22482__$1, meta22546);
        };
      }
      return new malli.core.t_malli$core22545(form, self__.meta22487, options, child, self__.map__22483, properties, children__$1, parent__$1, self__.raw, self__.type, self__.internal, cache, self__.id, self__.p__22482, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_schema], null));
    };
    malli.core.t_malli$core22486.getBasis = function() {
      return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$p__22482, cljs$cst$symbol$map__22483, cljs$cst$symbol$id, cljs$cst$symbol$raw, cljs$cst$symbol$internal, cljs$cst$symbol$type, cljs$cst$symbol$meta22487], null);
    };
    malli.core.t_malli$core22486.cljs$lang$type = true;
    malli.core.t_malli$core22486.cljs$lang$ctorStr = "malli.core/t_malli$core22486";
    malli.core.t_malli$core22486.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22486");
    };
    malli.core.__GT_t_malli$core22486 = function malli$core$_schema_schema_$___GT_t_malli$core22486(p__22482__$1, map__22483__$2, id__$1, raw__$1, internal__$1, type__$1, meta22487) {
      return new malli.core.t_malli$core22486(p__22482__$1, map__22483__$2, id__$1, raw__$1, internal__$1, type__$1, meta22487);
    };
  }
  return new malli.core.t_malli$core22486(p__22482, map__22483__$1, id, raw, internal, type, cljs.core.PersistentArrayMap.EMPTY);
};
malli.core.__EQ__GT__schema = function malli$core$__EQ__GT__schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22583 !== "undefined") {
  } else {
    malli.core.t_malli$core22583 = function(meta22584) {
      this.meta22584 = meta22584;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core22583.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22585, meta22584__$1) {
      var self__ = this;
      var _22585__$1 = this;
      return new malli.core.t_malli$core22583(meta22584__$1);
    };
    malli.core.t_malli$core22583.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22585) {
      var self__ = this;
      var _22585__$1 = this;
      return self__.meta22584;
    };
    malli.core.t_malli$core22583.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core22583.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, p__22586, options) {
      var self__ = this;
      var map__22587 = p__22586;
      var map__22587__$1 = cljs.core.__destructure_map(map__22587);
      var input = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22587__$1, cljs$cst$keyword$input);
      var output = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22587__$1, cljs$cst$keyword$output);
      var properties = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22587__$1, cljs$cst$keyword$properties);
      var parent__$1 = this;
      return parent__$1.malli$core$IntoSchema$_into_schema$arity$4(null, properties, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [malli.core.from_ast.cljs$core$IFn$_invoke$arity$2 ? malli.core.from_ast.cljs$core$IFn$_invoke$arity$2(input, options) : malli.core.from_ast.call(null, input, options), malli.core.from_ast.cljs$core$IFn$_invoke$arity$2 ? malli.core.from_ast.cljs$core$IFn$_invoke$arity$2(output, options) : malli.core.from_ast.call(null, output, options)], 
      null), options);
    };
    malli.core.t_malli$core22583.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core22583.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs$cst$keyword$_EQ__GT_;
    };
    malli.core.t_malli$core22583.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core22583.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, p__22588) {
      var self__ = this;
      var map__22589 = p__22588;
      var map__22589__$1 = cljs.core.__destructure_map(map__22589);
      var options = map__22589__$1;
      var function_checker = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22589__$1, cljs$cst$keyword$malli_DOT_core_SLASH_function_DASH_checker);
      var parent__$1 = this;
      malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5(cljs$cst$keyword$_EQ__GT_, properties, children, 2, 2);
      var vec__22590 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p1__22581_SHARP_) {
        return malli.core.schema.cljs$core$IFn$_invoke$arity$2 ? malli.core.schema.cljs$core$IFn$_invoke$arity$2(p1__22581_SHARP_, options) : malli.core.schema.call(null, p1__22581_SHARP_, options);
      }, children);
      var input = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22590, 0, null);
      var output = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22590, 1, null);
      var children__$1 = vec__22590;
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form(parent__$1, properties, children__$1, malli.core._form, options);
      }, null);
      var cache = malli.core._create_cache(options);
      var __GT_checker = cljs.core.truth_(function_checker) ? function(p1__22582_SHARP_) {
        return function_checker.cljs$core$IFn$_invoke$arity$2 ? function_checker.cljs$core$IFn$_invoke$arity$2(p1__22582_SHARP_, options) : function_checker.call(null, p1__22582_SHARP_, options);
      } : cljs.core.constantly(null);
      if (cljs.core.truth_(function() {
        var G__22594 = malli.core.type.cljs$core$IFn$_invoke$arity$1 ? malli.core.type.cljs$core$IFn$_invoke$arity$1(input) : malli.core.type.call(null, input);
        var fexpr__22593 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$cat, null, cljs$cst$keyword$catn, null], null), null);
        return fexpr__22593.cljs$core$IFn$_invoke$arity$1 ? fexpr__22593.cljs$core$IFn$_invoke$arity$1(G__22594) : fexpr__22593.call(null, G__22594);
      }())) {
      } else {
        malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_input_DASH_schema, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$input, input], null));
      }
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22595 !== "undefined") {
      } else {
        malli.core.t_malli$core22595 = function(form, input, options, properties, children, parent, __GT_checker, meta22584, output, function_checker, cache, p__22588, map__22589, vec__22590, meta22596) {
          this.form = form;
          this.input = input;
          this.options = options;
          this.properties = properties;
          this.children = children;
          this.parent = parent;
          this.__GT_checker = __GT_checker;
          this.meta22584 = meta22584;
          this.output = output;
          this.function_checker = function_checker;
          this.cache = cache;
          this.p__22588 = p__22588;
          this.map__22589 = map__22589;
          this.vec__22590 = vec__22590;
          this.meta22596 = meta22596;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core22595.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22597, meta22596__$1) {
          var self__ = this;
          var _22597__$1 = this;
          return new malli.core.t_malli$core22595(self__.form, self__.input, self__.options, self__.properties, self__.children, self__.parent, self__.__GT_checker, self__.meta22584, self__.output, self__.function_checker, self__.cache, self__.p__22588, self__.map__22589, self__.vec__22590, meta22596__$1);
        };
        malli.core.t_malli$core22595.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22597) {
          var self__ = this;
          var _22597__$1 = this;
          return self__.meta22596;
        };
        malli.core.t_malli$core22595.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22595.prototype.malli$core$AST$_to_ast$arity$2 = function(_, ___$1) {
          var self__ = this;
          var ___$2 = this;
          var G__22598 = new cljs.core.PersistentArrayMap(null, 3, [cljs$cst$keyword$type, cljs$cst$keyword$_EQ__GT_, cljs$cst$keyword$input, malli.core.ast.cljs$core$IFn$_invoke$arity$1 ? malli.core.ast.cljs$core$IFn$_invoke$arity$1(self__.input) : malli.core.ast.call(null, self__.input), cljs$cst$keyword$output, malli.core.ast.cljs$core$IFn$_invoke$arity$1 ? malli.core.ast.cljs$core$IFn$_invoke$arity$1(self__.output) : malli.core.ast.call(null, self__.output)], null);
          if (cljs.core.truth_(self__.properties)) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22598, cljs$cst$keyword$properties, self__.properties);
          } else {
            return G__22598;
          }
        };
        malli.core.t_malli$core22595.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22595.prototype.malli$core$Schema$_validator$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var temp__5751__auto__ = self__.__GT_checker.cljs$core$IFn$_invoke$arity$1 ? self__.__GT_checker.cljs$core$IFn$_invoke$arity$1(this$__$1) : self__.__GT_checker.call(null, this$__$1);
          if (cljs.core.truth_(temp__5751__auto__)) {
            var checker = temp__5751__auto__;
            var validator = function(x) {
              return (checker.cljs$core$IFn$_invoke$arity$1 ? checker.cljs$core$IFn$_invoke$arity$1(x) : checker.call(null, x)) == null;
            };
            return function(x) {
              return cljs.core.ifn_QMARK_(x) && validator(x);
            };
          } else {
            return cljs.core.ifn_QMARK_;
          }
        };
        malli.core.t_malli$core22595.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core22595.prototype.malli$core$Schema$_transformer$arity$4 = function(_, ___$1, ___$2, ___$3) {
          var self__ = this;
          var ___$4 = this;
          return null;
        };
        malli.core.t_malli$core22595.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_indexed(this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core22595.prototype.malli$core$Schema$_parser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var validator = this$__$1.malli$core$Schema$_validator$arity$1(null);
          return function(x) {
            if (cljs.core.truth_(validator.cljs$core$IFn$_invoke$arity$1 ? validator.cljs$core$IFn$_invoke$arity$1(x) : validator.call(null, x))) {
              return x;
            } else {
              return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
            }
          };
        };
        malli.core.t_malli$core22595.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core22595.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core22595.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref(self__.form);
        };
        malli.core.t_malli$core22595.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          var temp__5751__auto__ = self__.__GT_checker.cljs$core$IFn$_invoke$arity$1 ? self__.__GT_checker.cljs$core$IFn$_invoke$arity$1(this$__$1) : self__.__GT_checker.call(null, this$__$1);
          if (cljs.core.truth_(temp__5751__auto__)) {
            var checker = temp__5751__auto__;
            return function malli$core$__EQ__GT__schema_$_explain(x, in$, acc) {
              if (!cljs.core.fn_QMARK_(x)) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, malli.impl.util._error.cljs$core$IFn$_invoke$arity$4(path, in$, this$__$1, x));
              } else {
                var temp__5751__auto____$1 = checker.cljs$core$IFn$_invoke$arity$1 ? checker.cljs$core$IFn$_invoke$arity$1(x) : checker.call(null, x);
                if (cljs.core.truth_(temp__5751__auto____$1)) {
                  var res = temp__5751__auto____$1;
                  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(malli.impl.util._error.cljs$core$IFn$_invoke$arity$4(path, in$, this$__$1, x), cljs$cst$keyword$check, res));
                } else {
                  return acc;
                }
              }
            };
          } else {
            var validator = this$__$1.malli$core$Schema$_validator$arity$1(null);
            return function malli$core$__EQ__GT__schema_$_explain(x, in$, acc) {
              if (cljs.core.not(validator.cljs$core$IFn$_invoke$arity$1 ? validator.cljs$core$IFn$_invoke$arity$1(x) : validator.call(null, x))) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, malli.impl.util._error.cljs$core$IFn$_invoke$arity$4(path, in$, this$__$1, x));
              } else {
                return acc;
              }
            };
          }
        };
        malli.core.t_malli$core22595.prototype.malli$core$Schema$_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return this$__$1.malli$core$Schema$_parser$arity$1(null);
        };
        malli.core.t_malli$core22595.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core22595.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22595.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core22595.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22595.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core22595.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.children, key, default$);
        };
        malli.core.t_malli$core22595.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_assoc_children(this$__$1, key, value);
        };
        malli.core.t_malli$core22595.getBasis = function() {
          return new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$form, cljs$cst$symbol$input, cljs$cst$symbol$options, cljs$cst$symbol$properties, cljs$cst$symbol$children, cljs.core.with_meta(cljs$cst$symbol$parent, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22583], null)), cljs$cst$symbol$_DASH__GT_checker, cljs$cst$symbol$meta22584, cljs$cst$symbol$output, cljs$cst$symbol$function_DASH_checker, 
          cljs$cst$symbol$cache, cljs$cst$symbol$p__22588, cljs$cst$symbol$map__22589, cljs$cst$symbol$vec__22590, cljs$cst$symbol$meta22596], null);
        };
        malli.core.t_malli$core22595.cljs$lang$type = true;
        malli.core.t_malli$core22595.cljs$lang$ctorStr = "malli.core/t_malli$core22595";
        malli.core.t_malli$core22595.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
          return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22595");
        };
        malli.core.__GT_t_malli$core22595 = function malli$core$__EQ__GT__schema_$___GT_t_malli$core22595(form__$1, input__$1, options__$1, properties__$1, children__$2, parent__$2, __GT_checker__$1, meta22584__$1, output__$1, function_checker__$1, cache__$1, p__22588__$1, map__22589__$2, vec__22590__$1, meta22596) {
          return new malli.core.t_malli$core22595(form__$1, input__$1, options__$1, properties__$1, children__$2, parent__$2, __GT_checker__$1, meta22584__$1, output__$1, function_checker__$1, cache__$1, p__22588__$1, map__22589__$2, vec__22590__$1, meta22596);
        };
      }
      return new malli.core.t_malli$core22595(form, input, options, properties, children__$1, parent__$1, __GT_checker, self__.meta22584, output, function_checker, cache, p__22588, map__22589__$1, vec__22590, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_schema], null));
    };
    malli.core.t_malli$core22583.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$meta22584], null);
    };
    malli.core.t_malli$core22583.cljs$lang$type = true;
    malli.core.t_malli$core22583.cljs$lang$ctorStr = "malli.core/t_malli$core22583";
    malli.core.t_malli$core22583.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22583");
    };
    malli.core.__GT_t_malli$core22583 = function malli$core$__EQ__GT__schema_$___GT_t_malli$core22583(meta22584) {
      return new malli.core.t_malli$core22583(meta22584);
    };
  }
  return new malli.core.t_malli$core22583(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_into_DASH_schema], null));
};
malli.core._function_schema = function malli$core$_function_schema(_) {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22603 !== "undefined") {
  } else {
    malli.core.t_malli$core22603 = function(_, meta22604) {
      this._ = _;
      this.meta22604 = meta22604;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core22603.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22605, meta22604__$1) {
      var self__ = this;
      var _22605__$1 = this;
      return new malli.core.t_malli$core22603(self__._, meta22604__$1);
    };
    malli.core.t_malli$core22603.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22605) {
      var self__ = this;
      var _22605__$1 = this;
      return self__.meta22604;
    };
    malli.core.t_malli$core22603.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core22603.prototype.malli$core$IntoSchema$_type$arity$1 = function(___$1) {
      var self__ = this;
      var ___$2 = this;
      return cljs$cst$keyword$function;
    };
    malli.core.t_malli$core22603.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core22603.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(___$1, ___$2) {
      var self__ = this;
      var ___$3 = this;
      return null;
    };
    malli.core.t_malli$core22603.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(___$1, ___$2) {
      var self__ = this;
      var ___$3 = this;
      return null;
    };
    malli.core.t_malli$core22603.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, p__22607) {
      var self__ = this;
      var map__22608 = p__22607;
      var map__22608__$1 = cljs.core.__destructure_map(map__22608);
      var options = map__22608__$1;
      var function_checker = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22608__$1, cljs$cst$keyword$malli_DOT_core_SLASH_function_DASH_checker);
      var parent__$1 = this;
      malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5(cljs$cst$keyword$function, properties, children, 1, null);
      var children__$1 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p1__22600_SHARP_) {
        return malli.core.schema.cljs$core$IFn$_invoke$arity$2 ? malli.core.schema.cljs$core$IFn$_invoke$arity$2(p1__22600_SHARP_, options) : malli.core.schema.call(null, p1__22600_SHARP_, options);
      }, children);
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form(parent__$1, properties, children__$1, malli.core._form, options);
      }, null);
      var cache = malli.core._create_cache(options);
      var __GT_checker = cljs.core.truth_(function_checker) ? function(p1__22601_SHARP_) {
        return function_checker.cljs$core$IFn$_invoke$arity$2 ? function_checker.cljs$core$IFn$_invoke$arity$2(p1__22601_SHARP_, options) : function_checker.call(null, p1__22601_SHARP_, options);
      } : cljs.core.constantly(null);
      if (cljs.core.every_QMARK_(function(p1__22602_SHARP_) {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$_EQ__GT_, malli.core.type.cljs$core$IFn$_invoke$arity$1 ? malli.core.type.cljs$core$IFn$_invoke$arity$1(p1__22602_SHARP_) : malli.core.type.call(null, p1__22602_SHARP_));
      }, children__$1)) {
      } else {
        malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_non_DASH_function_DASH_childs, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$children, children__$1], null));
      }
      malli.core._group_by_arity_BANG_(malli.core._vmap.cljs$core$IFn$_invoke$arity$2(malli.core._function_info, children__$1));
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22615 !== "undefined") {
      } else {
        malli.core.t_malli$core22615 = function(form, options, map__22608, properties, children, parent, _, __GT_checker, meta22604, function_checker, cache, p__22607, meta22616) {
          this.form = form;
          this.options = options;
          this.map__22608 = map__22608;
          this.properties = properties;
          this.children = children;
          this.parent = parent;
          this._ = _;
          this.__GT_checker = __GT_checker;
          this.meta22604 = meta22604;
          this.function_checker = function_checker;
          this.cache = cache;
          this.p__22607 = p__22607;
          this.meta22616 = meta22616;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core22615.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22617, meta22616__$1) {
          var self__ = this;
          var _22617__$1 = this;
          return new malli.core.t_malli$core22615(self__.form, self__.options, self__.map__22608, self__.properties, self__.children, self__.parent, self__._, self__.__GT_checker, self__.meta22604, self__.function_checker, self__.cache, self__.p__22607, meta22616__$1);
        };
        malli.core.t_malli$core22615.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22617) {
          var self__ = this;
          var _22617__$1 = this;
          return self__.meta22616;
        };
        malli.core.t_malli$core22615.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22615.prototype.malli$core$Schema$_validator$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var temp__5751__auto__ = self__.__GT_checker.cljs$core$IFn$_invoke$arity$1 ? self__.__GT_checker.cljs$core$IFn$_invoke$arity$1(this$__$1) : self__.__GT_checker.call(null, this$__$1);
          if (cljs.core.truth_(temp__5751__auto__)) {
            var checker = temp__5751__auto__;
            var validator = function(x) {
              return (checker.cljs$core$IFn$_invoke$arity$1 ? checker.cljs$core$IFn$_invoke$arity$1(x) : checker.call(null, x)) == null;
            };
            return function(x) {
              return cljs.core.ifn_QMARK_(x) && validator(x);
            };
          } else {
            return cljs.core.ifn_QMARK_;
          }
        };
        malli.core.t_malli$core22615.prototype.malli$core$Schema$_options$arity$1 = function(___$1) {
          var self__ = this;
          var ___$2 = this;
          return self__.options;
        };
        malli.core.t_malli$core22615.prototype.malli$core$Schema$_transformer$arity$4 = function(___$1, ___$2, ___$3, ___$4) {
          var self__ = this;
          var ___$5 = this;
          return null;
        };
        malli.core.t_malli$core22615.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_indexed(this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core22615.prototype.malli$core$Schema$_parser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var validator = this$__$1.malli$core$Schema$_validator$arity$1(null);
          return function(x) {
            if (cljs.core.truth_(validator.cljs$core$IFn$_invoke$arity$1 ? validator.cljs$core$IFn$_invoke$arity$1(x) : validator.call(null, x))) {
              return x;
            } else {
              return cljs$cst$keyword$malli_DOT_core_SLASH_invalid;
            }
          };
        };
        malli.core.t_malli$core22615.prototype.malli$core$Schema$_properties$arity$1 = function(___$1) {
          var self__ = this;
          var ___$2 = this;
          return self__.properties;
        };
        malli.core.t_malli$core22615.prototype.malli$core$Schema$_children$arity$1 = function(___$1) {
          var self__ = this;
          var ___$2 = this;
          return self__.children;
        };
        malli.core.t_malli$core22615.prototype.malli$core$Schema$_form$arity$1 = function(___$1) {
          var self__ = this;
          var ___$2 = this;
          return cljs.core.deref(self__.form);
        };
        malli.core.t_malli$core22615.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          var temp__5751__auto__ = self__.__GT_checker.cljs$core$IFn$_invoke$arity$1 ? self__.__GT_checker.cljs$core$IFn$_invoke$arity$1(this$__$1) : self__.__GT_checker.call(null, this$__$1);
          if (cljs.core.truth_(temp__5751__auto__)) {
            var checker = temp__5751__auto__;
            return function malli$core$_function_schema_$_explain(x, in$, acc) {
              if (!cljs.core.fn_QMARK_(x)) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, malli.impl.util._error.cljs$core$IFn$_invoke$arity$4(path, in$, this$__$1, x));
              } else {
                var temp__5751__auto____$1 = checker.cljs$core$IFn$_invoke$arity$1 ? checker.cljs$core$IFn$_invoke$arity$1(x) : checker.call(null, x);
                if (cljs.core.truth_(temp__5751__auto____$1)) {
                  var res = temp__5751__auto____$1;
                  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(malli.impl.util._error.cljs$core$IFn$_invoke$arity$4(path, in$, this$__$1, x), cljs$cst$keyword$check, res));
                } else {
                  return acc;
                }
              }
            };
          } else {
            var validator = this$__$1.malli$core$Schema$_validator$arity$1(null);
            return function malli$core$_function_schema_$_explain(x, in$, acc) {
              if (cljs.core.not(validator.cljs$core$IFn$_invoke$arity$1 ? validator.cljs$core$IFn$_invoke$arity$1(x) : validator.call(null, x))) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, malli.impl.util._error.cljs$core$IFn$_invoke$arity$4(path, in$, this$__$1, x));
              } else {
                return acc;
              }
            };
          }
        };
        malli.core.t_malli$core22615.prototype.malli$core$Schema$_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return this$__$1.malli$core$Schema$_parser$arity$1(null);
        };
        malli.core.t_malli$core22615.prototype.malli$core$Schema$_parent$arity$1 = function(___$1) {
          var self__ = this;
          var ___$2 = this;
          return self__.parent;
        };
        malli.core.t_malli$core22615.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22615.prototype.malli$core$Cached$_cache$arity$1 = function(___$1) {
          var self__ = this;
          var ___$2 = this;
          return self__.cache;
        };
        malli.core.t_malli$core22615.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22615.prototype.malli$core$LensSchema$_keep$arity$1 = function(___$1) {
          var self__ = this;
          var ___$2 = this;
          return null;
        };
        malli.core.t_malli$core22615.prototype.malli$core$LensSchema$_get$arity$3 = function(___$1, key, default$) {
          var self__ = this;
          var ___$2 = this;
          return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.children, key, default$);
        };
        malli.core.t_malli$core22615.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_assoc_children(this$__$1, key, value);
        };
        malli.core.t_malli$core22615.getBasis = function() {
          return new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$form, cljs$cst$symbol$options, cljs$cst$symbol$map__22608, cljs$cst$symbol$properties, cljs$cst$symbol$children, cljs.core.with_meta(cljs$cst$symbol$parent, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22603], null)), cljs$cst$symbol$_, cljs$cst$symbol$_DASH__GT_checker, cljs$cst$symbol$meta22604, cljs$cst$symbol$function_DASH_checker, 
          cljs$cst$symbol$cache, cljs$cst$symbol$p__22607, cljs$cst$symbol$meta22616], null);
        };
        malli.core.t_malli$core22615.cljs$lang$type = true;
        malli.core.t_malli$core22615.cljs$lang$ctorStr = "malli.core/t_malli$core22615";
        malli.core.t_malli$core22615.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
          return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22615");
        };
        malli.core.__GT_t_malli$core22615 = function malli$core$_function_schema_$___GT_t_malli$core22615(form__$1, options__$1, map__22608__$2, properties__$1, children__$2, parent__$2, ___$1, __GT_checker__$1, meta22604__$1, function_checker__$1, cache__$1, p__22607__$1, meta22616) {
          return new malli.core.t_malli$core22615(form__$1, options__$1, map__22608__$2, properties__$1, children__$2, parent__$2, ___$1, __GT_checker__$1, meta22604__$1, function_checker__$1, cache__$1, p__22607__$1, meta22616);
        };
      }
      return new malli.core.t_malli$core22615(form, options, map__22608__$1, properties, children__$1, parent__$1, self__._, __GT_checker, self__.meta22604, function_checker, cache, p__22607, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_schema], null));
    };
    malli.core.t_malli$core22603.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$_, cljs$cst$symbol$meta22604], null);
    };
    malli.core.t_malli$core22603.cljs$lang$type = true;
    malli.core.t_malli$core22603.cljs$lang$ctorStr = "malli.core/t_malli$core22603";
    malli.core.t_malli$core22603.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22603");
    };
    malli.core.__GT_t_malli$core22603 = function malli$core$_function_schema_$___GT_t_malli$core22603(___$1, meta22604) {
      return new malli.core.t_malli$core22603(___$1, meta22604);
    };
  }
  return new malli.core.t_malli$core22603(_, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_into_DASH_schema], null));
};
malli.core.regex_validator = function malli$core$regex_validator(schema) {
  return malli.impl.regex.validator(malli.core._regex_validator(schema));
};
malli.core.regex_explainer = function malli$core$regex_explainer(schema, path) {
  return malli.impl.regex.explainer(schema, path, malli.core._regex_explainer(schema, path));
};
malli.core.regex_parser = function malli$core$regex_parser(schema) {
  return malli.impl.regex.parser(malli.core._regex_parser(schema));
};
malli.core.regex_transformer = function malli$core$regex_transformer(schema, transformer, method, options) {
  var this_transformer = malli.core._value_transformer(transformer, schema, method, options);
  var __GT_children = malli.impl.regex.transformer(malli.core._regex_transformer(schema, transformer, method, options));
  return malli.core._intercepting.cljs$core$IFn$_invoke$arity$2(this_transformer, __GT_children);
};
malli.core._sequence_schema = function malli$core$_sequence_schema(p__22640) {
  var map__22641 = p__22640;
  var map__22641__$1 = cljs.core.__destructure_map(map__22641);
  var map__22642 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22641__$1, cljs$cst$keyword$child_DASH_bounds);
  var map__22642__$1 = cljs.core.__destructure_map(map__22642);
  var min = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22642__$1, cljs$cst$keyword$min);
  var max = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22642__$1, cljs$cst$keyword$max);
  var type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22641__$1, cljs$cst$keyword$type);
  var re_validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22641__$1, cljs$cst$keyword$re_DASH_validator);
  var re_explainer = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22641__$1, cljs$cst$keyword$re_DASH_explainer);
  var re_parser = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22641__$1, cljs$cst$keyword$re_DASH_parser);
  var re_unparser = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22641__$1, cljs$cst$keyword$re_DASH_unparser);
  var re_transformer = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22641__$1, cljs$cst$keyword$re_DASH_transformer);
  var re_min_max = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22641__$1, cljs$cst$keyword$re_DASH_min_DASH_max);
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22643 !== "undefined") {
  } else {
    malli.core.t_malli$core22643 = function(re_min_max, map__22641, re_explainer, min, re_parser, p__22640, re_unparser, map__22642, type, re_transformer, max, re_validator, meta22644) {
      this.re_min_max = re_min_max;
      this.map__22641 = map__22641;
      this.re_explainer = re_explainer;
      this.min = min;
      this.re_parser = re_parser;
      this.p__22640 = p__22640;
      this.re_unparser = re_unparser;
      this.map__22642 = map__22642;
      this.type = type;
      this.re_transformer = re_transformer;
      this.max = max;
      this.re_validator = re_validator;
      this.meta22644 = meta22644;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core22643.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22645, meta22644__$1) {
      var self__ = this;
      var _22645__$1 = this;
      return new malli.core.t_malli$core22643(self__.re_min_max, self__.map__22641, self__.re_explainer, self__.min, self__.re_parser, self__.p__22640, self__.re_unparser, self__.map__22642, self__.type, self__.re_transformer, self__.max, self__.re_validator, meta22644__$1);
    };
    malli.core.t_malli$core22643.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22645) {
      var self__ = this;
      var _22645__$1 = this;
      return self__.meta22644;
    };
    malli.core.t_malli$core22643.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core22643.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.type;
    };
    malli.core.t_malli$core22643.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core22643.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core22643.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core22643.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5(self__.type, properties, children, self__.min, self__.max);
      var children__$1 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p1__22638_SHARP_) {
        return malli.core.schema.cljs$core$IFn$_invoke$arity$2 ? malli.core.schema.cljs$core$IFn$_invoke$arity$2(p1__22638_SHARP_, options) : malli.core.schema.call(null, p1__22638_SHARP_, options);
      }, children);
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form(parent__$1, properties, children__$1, malli.core._form, options);
      }, null);
      var cache = malli.core._create_cache(options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22646 !== "undefined") {
      } else {
        malli.core.t_malli$core22646 = function(form, options, re_min_max, map__22641, properties, re_explainer, meta22644, children, min, re_parser, parent, p__22640, re_unparser, map__22642, type, cache, re_transformer, max, re_validator, meta22647) {
          this.form = form;
          this.options = options;
          this.re_min_max = re_min_max;
          this.map__22641 = map__22641;
          this.properties = properties;
          this.re_explainer = re_explainer;
          this.meta22644 = meta22644;
          this.children = children;
          this.min = min;
          this.re_parser = re_parser;
          this.parent = parent;
          this.p__22640 = p__22640;
          this.re_unparser = re_unparser;
          this.map__22642 = map__22642;
          this.type = type;
          this.cache = cache;
          this.re_transformer = re_transformer;
          this.max = max;
          this.re_validator = re_validator;
          this.meta22647 = meta22647;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core22646.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22648, meta22647__$1) {
          var self__ = this;
          var _22648__$1 = this;
          return new malli.core.t_malli$core22646(self__.form, self__.options, self__.re_min_max, self__.map__22641, self__.properties, self__.re_explainer, self__.meta22644, self__.children, self__.min, self__.re_parser, self__.parent, self__.p__22640, self__.re_unparser, self__.map__22642, self__.type, self__.cache, self__.re_transformer, self__.max, self__.re_validator, meta22647__$1);
        };
        malli.core.t_malli$core22646.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22648) {
          var self__ = this;
          var _22648__$1 = this;
          return self__.meta22647;
        };
        malli.core.t_malli$core22646.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22646.prototype.malli$core$Schema$_validator$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core.regex_validator(this$__$1);
        };
        malli.core.t_malli$core22646.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core22646.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core.regex_transformer(this$__$1, transformer, method, options__$1);
        };
        malli.core.t_malli$core22646.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_indexed(this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core22646.prototype.malli$core$Schema$_parser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core.regex_parser(this$__$1);
        };
        malli.core.t_malli$core22646.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core22646.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core22646.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref(self__.form);
        };
        malli.core.t_malli$core22646.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core.regex_explainer(this$__$1, path);
        };
        malli.core.t_malli$core22646.prototype.malli$core$Schema$_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return this$__$1.malli$core$RegexSchema$_regex_unparser$arity$1(null);
        };
        malli.core.t_malli$core22646.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core22646.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22646.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core22646.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22646.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return true;
        };
        malli.core.t_malli$core22646.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.children, key, default$);
        };
        malli.core.t_malli$core22646.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_assoc_children(this$__$1, key, value);
        };
        malli.core.t_malli$core22646.prototype.malli$core$RegexSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22646.prototype.malli$core$RegexSchema$_regex_op_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return true;
        };
        malli.core.t_malli$core22646.prototype.malli$core$RegexSchema$_regex_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var G__22649 = self__.properties;
          var G__22650 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(malli.core._regex_validator, self__.children);
          return self__.re_validator.cljs$core$IFn$_invoke$arity$2 ? self__.re_validator.cljs$core$IFn$_invoke$arity$2(G__22649, G__22650) : self__.re_validator.call(null, G__22649, G__22650);
        };
        malli.core.t_malli$core22646.prototype.malli$core$RegexSchema$_regex_explainer$arity$2 = function(_, path) {
          var self__ = this;
          var ___$1 = this;
          var G__22651 = self__.properties;
          var G__22652 = cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(function(i, child) {
            return malli.core._regex_explainer(child, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(path, i));
          }, self__.children);
          return self__.re_explainer.cljs$core$IFn$_invoke$arity$2 ? self__.re_explainer.cljs$core$IFn$_invoke$arity$2(G__22651, G__22652) : self__.re_explainer.call(null, G__22651, G__22652);
        };
        malli.core.t_malli$core22646.prototype.malli$core$RegexSchema$_regex_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var G__22653 = self__.properties;
          var G__22654 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(malli.core._regex_parser, self__.children);
          return self__.re_parser.cljs$core$IFn$_invoke$arity$2 ? self__.re_parser.cljs$core$IFn$_invoke$arity$2(G__22653, G__22654) : self__.re_parser.call(null, G__22653, G__22654);
        };
        malli.core.t_malli$core22646.prototype.malli$core$RegexSchema$_regex_unparser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var G__22655 = self__.properties;
          var G__22656 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(malli.core._regex_unparser, self__.children);
          return self__.re_unparser.cljs$core$IFn$_invoke$arity$2 ? self__.re_unparser.cljs$core$IFn$_invoke$arity$2(G__22655, G__22656) : self__.re_unparser.call(null, G__22655, G__22656);
        };
        malli.core.t_malli$core22646.prototype.malli$core$RegexSchema$_regex_transformer$arity$4 = function(_, transformer, method, options__$1) {
          var self__ = this;
          var ___$1 = this;
          var G__22657 = self__.properties;
          var G__22658 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p1__22639_SHARP_) {
            return malli.core._regex_transformer(p1__22639_SHARP_, transformer, method, options__$1);
          }, self__.children);
          return self__.re_transformer.cljs$core$IFn$_invoke$arity$2 ? self__.re_transformer.cljs$core$IFn$_invoke$arity$2(G__22657, G__22658) : self__.re_transformer.call(null, G__22657, G__22658);
        };
        malli.core.t_malli$core22646.prototype.malli$core$RegexSchema$_regex_min_max$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.re_min_max.cljs$core$IFn$_invoke$arity$2 ? self__.re_min_max.cljs$core$IFn$_invoke$arity$2(self__.properties, self__.children) : self__.re_min_max.call(null, self__.properties, self__.children);
        };
        malli.core.t_malli$core22646.getBasis = function() {
          return new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$form, cljs$cst$symbol$options, cljs$cst$symbol$re_DASH_min_DASH_max, cljs$cst$symbol$map__22641, cljs$cst$symbol$properties, cljs$cst$symbol$re_DASH_explainer, cljs$cst$symbol$meta22644, cljs$cst$symbol$children, cljs$cst$symbol$min, cljs$cst$symbol$re_DASH_parser, cljs.core.with_meta(cljs$cst$symbol$parent, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$tag, cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22643], 
          null)), cljs$cst$symbol$p__22640, cljs$cst$symbol$re_DASH_unparser, cljs$cst$symbol$map__22642, cljs$cst$symbol$type, cljs$cst$symbol$cache, cljs$cst$symbol$re_DASH_transformer, cljs$cst$symbol$max, cljs$cst$symbol$re_DASH_validator, cljs$cst$symbol$meta22647], null);
        };
        malli.core.t_malli$core22646.cljs$lang$type = true;
        malli.core.t_malli$core22646.cljs$lang$ctorStr = "malli.core/t_malli$core22646";
        malli.core.t_malli$core22646.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
          return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22646");
        };
        malli.core.__GT_t_malli$core22646 = function malli$core$_sequence_schema_$___GT_t_malli$core22646(form__$1, options__$1, re_min_max__$1, map__22641__$1, properties__$1, re_explainer__$1, meta22644__$1, children__$2, min__$1, re_parser__$1, parent__$2, p__22640__$1, re_unparser__$1, map__22642__$1, type__$1, cache__$1, re_transformer__$1, max__$1, re_validator__$1, meta22647) {
          return new malli.core.t_malli$core22646(form__$1, options__$1, re_min_max__$1, map__22641__$1, properties__$1, re_explainer__$1, meta22644__$1, children__$2, min__$1, re_parser__$1, parent__$2, p__22640__$1, re_unparser__$1, map__22642__$1, type__$1, cache__$1, re_transformer__$1, max__$1, re_validator__$1, meta22647);
        };
      }
      return new malli.core.t_malli$core22646(form, options, self__.re_min_max, self__.map__22641, properties, self__.re_explainer, self__.meta22644, children__$1, self__.min, self__.re_parser, parent__$1, self__.p__22640, self__.re_unparser, self__.map__22642, self__.type, cache, self__.re_transformer, self__.max, self__.re_validator, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_schema], null));
    };
    malli.core.t_malli$core22643.getBasis = function() {
      return new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$re_DASH_min_DASH_max, cljs$cst$symbol$map__22641, cljs$cst$symbol$re_DASH_explainer, cljs$cst$symbol$min, cljs$cst$symbol$re_DASH_parser, cljs$cst$symbol$p__22640, cljs$cst$symbol$re_DASH_unparser, cljs$cst$symbol$map__22642, cljs$cst$symbol$type, cljs$cst$symbol$re_DASH_transformer, cljs$cst$symbol$max, cljs$cst$symbol$re_DASH_validator, cljs$cst$symbol$meta22644], null);
    };
    malli.core.t_malli$core22643.cljs$lang$type = true;
    malli.core.t_malli$core22643.cljs$lang$ctorStr = "malli.core/t_malli$core22643";
    malli.core.t_malli$core22643.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22643");
    };
    malli.core.__GT_t_malli$core22643 = function malli$core$_sequence_schema_$___GT_t_malli$core22643(re_min_max__$1, map__22641__$2, re_explainer__$1, min__$1, re_parser__$1, p__22640__$1, re_unparser__$1, map__22642__$2, type__$1, re_transformer__$1, max__$1, re_validator__$1, meta22644) {
      return new malli.core.t_malli$core22643(re_min_max__$1, map__22641__$2, re_explainer__$1, min__$1, re_parser__$1, p__22640__$1, re_unparser__$1, map__22642__$2, type__$1, re_transformer__$1, max__$1, re_validator__$1, meta22644);
    };
  }
  return new malli.core.t_malli$core22643(re_min_max, map__22641__$1, re_explainer, min, re_parser, p__22640, re_unparser, map__22642__$1, type, re_transformer, max, re_validator, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_into_DASH_schema], null));
};
malli.core._sequence_entry_schema = function malli$core$_sequence_entry_schema(p__22659) {
  var map__22660 = p__22659;
  var map__22660__$1 = cljs.core.__destructure_map(map__22660);
  var opts = map__22660__$1;
  var map__22661 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22660__$1, cljs$cst$keyword$child_DASH_bounds);
  var map__22661__$1 = cljs.core.__destructure_map(map__22661);
  var min = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22661__$1, cljs$cst$keyword$min);
  var max = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22661__$1, cljs$cst$keyword$max);
  var type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22660__$1, cljs$cst$keyword$type);
  var re_validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22660__$1, cljs$cst$keyword$re_DASH_validator);
  var re_explainer = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22660__$1, cljs$cst$keyword$re_DASH_explainer);
  var re_parser = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22660__$1, cljs$cst$keyword$re_DASH_parser);
  var re_unparser = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22660__$1, cljs$cst$keyword$re_DASH_unparser);
  var re_transformer = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22660__$1, cljs$cst$keyword$re_DASH_transformer);
  var re_min_max = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22660__$1, cljs$cst$keyword$re_DASH_min_DASH_max);
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22662 !== "undefined") {
  } else {
    malli.core.t_malli$core22662 = function(re_min_max, p__22659, map__22661, re_explainer, min, map__22660, re_parser, re_unparser, type, re_transformer, max, opts, re_validator, meta22663) {
      this.re_min_max = re_min_max;
      this.p__22659 = p__22659;
      this.map__22661 = map__22661;
      this.re_explainer = re_explainer;
      this.min = min;
      this.map__22660 = map__22660;
      this.re_parser = re_parser;
      this.re_unparser = re_unparser;
      this.type = type;
      this.re_transformer = re_transformer;
      this.max = max;
      this.opts = opts;
      this.re_validator = re_validator;
      this.meta22663 = meta22663;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core22662.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22664, meta22663__$1) {
      var self__ = this;
      var _22664__$1 = this;
      return new malli.core.t_malli$core22662(self__.re_min_max, self__.p__22659, self__.map__22661, self__.re_explainer, self__.min, self__.map__22660, self__.re_parser, self__.re_unparser, self__.type, self__.re_transformer, self__.max, self__.opts, self__.re_validator, meta22663__$1);
    };
    malli.core.t_malli$core22662.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22664) {
      var self__ = this;
      var _22664__$1 = this;
      return self__.meta22663;
    };
    malli.core.t_malli$core22662.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core22662.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_entry_ast(parent__$1, ast, options);
    };
    malli.core.t_malli$core22662.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core22662.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.type;
    };
    malli.core.t_malli$core22662.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core22662.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core22662.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core22662.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5(self__.type, properties, children, self__.min, self__.max);
      var entry_parser = malli.core._create_entry_parser(children, self__.opts, options);
      var form = new cljs.core.Delay(function() {
        return malli.core._create_entry_form(parent__$1, properties, entry_parser, options);
      }, null);
      var cache = malli.core._create_cache(options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22665 !== "undefined") {
      } else {
        malli.core.t_malli$core22665 = function(form, options, re_min_max, p__22659, map__22661, properties, re_explainer, children, min, map__22660, re_parser, entry_parser, parent, re_unparser, type, meta22663, cache, re_transformer, max, opts, re_validator, meta22666) {
          this.form = form;
          this.options = options;
          this.re_min_max = re_min_max;
          this.p__22659 = p__22659;
          this.map__22661 = map__22661;
          this.properties = properties;
          this.re_explainer = re_explainer;
          this.children = children;
          this.min = min;
          this.map__22660 = map__22660;
          this.re_parser = re_parser;
          this.entry_parser = entry_parser;
          this.parent = parent;
          this.re_unparser = re_unparser;
          this.type = type;
          this.meta22663 = meta22663;
          this.cache = cache;
          this.re_transformer = re_transformer;
          this.max = max;
          this.opts = opts;
          this.re_validator = re_validator;
          this.meta22666 = meta22666;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core22665.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22667, meta22666__$1) {
          var self__ = this;
          var _22667__$1 = this;
          return new malli.core.t_malli$core22665(self__.form, self__.options, self__.re_min_max, self__.p__22659, self__.map__22661, self__.properties, self__.re_explainer, self__.children, self__.min, self__.map__22660, self__.re_parser, self__.entry_parser, self__.parent, self__.re_unparser, self__.type, self__.meta22663, self__.cache, self__.re_transformer, self__.max, self__.opts, self__.re_validator, meta22666__$1);
        };
        malli.core.t_malli$core22665.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22667) {
          var self__ = this;
          var _22667__$1 = this;
          return self__.meta22666;
        };
        malli.core.t_malli$core22665.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22665.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._entry_ast(this$__$1, malli.core._entry_keyset(self__.entry_parser));
        };
        malli.core.t_malli$core22665.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22665.prototype.malli$core$Schema$_validator$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core.regex_validator(this$__$1);
        };
        malli.core.t_malli$core22665.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core22665.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core.regex_transformer(this$__$1, transformer, method, options__$1);
        };
        malli.core.t_malli$core22665.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_entries(this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core22665.prototype.malli$core$Schema$_parser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core.regex_parser(this$__$1);
        };
        malli.core.t_malli$core22665.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core22665.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._entry_children(self__.entry_parser);
        };
        malli.core.t_malli$core22665.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref(self__.form);
        };
        malli.core.t_malli$core22665.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core.regex_explainer(this$__$1, path);
        };
        malli.core.t_malli$core22665.prototype.malli$core$Schema$_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return this$__$1.malli$core$RegexSchema$_regex_unparser$arity$1(null);
        };
        malli.core.t_malli$core22665.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core22665.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22665.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core22665.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22665.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return true;
        };
        malli.core.t_malli$core22665.prototype.malli$core$LensSchema$_get$arity$3 = function(this$, key, default$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._get_entries(this$__$1, key, default$);
        };
        malli.core.t_malli$core22665.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_entries(this$__$1, key, value);
        };
        malli.core.t_malli$core22665.prototype.malli$core$EntrySchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22665.prototype.malli$core$EntrySchema$_entries$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._entry_entries(self__.entry_parser);
        };
        malli.core.t_malli$core22665.prototype.malli$core$EntrySchema$_entry_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.entry_parser;
        };
        malli.core.t_malli$core22665.prototype.malli$core$RegexSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core22665.prototype.malli$core$RegexSchema$_regex_op_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return true;
        };
        malli.core.t_malli$core22665.prototype.malli$core$RegexSchema$_regex_validator$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var G__22668 = self__.properties;
          var G__22669 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p__22670) {
            var vec__22671 = p__22670;
            var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22671, 0, null);
            var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22671, 1, null);
            var s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22671, 2, null);
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._regex_validator(s)], null);
          }, this$__$1.malli$core$Schema$_children$arity$1(null));
          return self__.re_validator.cljs$core$IFn$_invoke$arity$2 ? self__.re_validator.cljs$core$IFn$_invoke$arity$2(G__22668, G__22669) : self__.re_validator.call(null, G__22668, G__22669);
        };
        malli.core.t_malli$core22665.prototype.malli$core$RegexSchema$_regex_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          var G__22674 = self__.properties;
          var G__22675 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p__22676) {
            var vec__22677 = p__22676;
            var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22677, 0, null);
            var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22677, 1, null);
            var s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22677, 2, null);
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._regex_explainer(s, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(path, k))], null);
          }, this$__$1.malli$core$Schema$_children$arity$1(null));
          return self__.re_explainer.cljs$core$IFn$_invoke$arity$2 ? self__.re_explainer.cljs$core$IFn$_invoke$arity$2(G__22674, G__22675) : self__.re_explainer.call(null, G__22674, G__22675);
        };
        malli.core.t_malli$core22665.prototype.malli$core$RegexSchema$_regex_parser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var G__22680 = self__.properties;
          var G__22681 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p__22682) {
            var vec__22683 = p__22682;
            var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22683, 0, null);
            var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22683, 1, null);
            var s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22683, 2, null);
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._regex_parser(s)], null);
          }, this$__$1.malli$core$Schema$_children$arity$1(null));
          return self__.re_parser.cljs$core$IFn$_invoke$arity$2 ? self__.re_parser.cljs$core$IFn$_invoke$arity$2(G__22680, G__22681) : self__.re_parser.call(null, G__22680, G__22681);
        };
        malli.core.t_malli$core22665.prototype.malli$core$RegexSchema$_regex_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var G__22686 = self__.properties;
          var G__22687 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p__22688) {
            var vec__22689 = p__22688;
            var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22689, 0, null);
            var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22689, 1, null);
            var s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22689, 2, null);
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._regex_unparser(s)], null);
          }, this$__$1.malli$core$Schema$_children$arity$1(null));
          return self__.re_unparser.cljs$core$IFn$_invoke$arity$2 ? self__.re_unparser.cljs$core$IFn$_invoke$arity$2(G__22686, G__22687) : self__.re_unparser.call(null, G__22686, G__22687);
        };
        malli.core.t_malli$core22665.prototype.malli$core$RegexSchema$_regex_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          var G__22692 = self__.properties;
          var G__22693 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p__22694) {
            var vec__22695 = p__22694;
            var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22695, 0, null);
            var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22695, 1, null);
            var s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22695, 2, null);
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._regex_transformer(s, transformer, method, options__$1)], null);
          }, this$__$1.malli$core$Schema$_children$arity$1(null));
          return self__.re_transformer.cljs$core$IFn$_invoke$arity$2 ? self__.re_transformer.cljs$core$IFn$_invoke$arity$2(G__22692, G__22693) : self__.re_transformer.call(null, G__22692, G__22693);
        };
        malli.core.t_malli$core22665.prototype.malli$core$RegexSchema$_regex_min_max$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var G__22698 = self__.properties;
          var G__22699 = this$__$1.malli$core$Schema$_children$arity$1(null);
          return self__.re_min_max.cljs$core$IFn$_invoke$arity$2 ? self__.re_min_max.cljs$core$IFn$_invoke$arity$2(G__22698, G__22699) : self__.re_min_max.call(null, G__22698, G__22699);
        };
        malli.core.t_malli$core22665.getBasis = function() {
          return new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$form, cljs$cst$symbol$options, cljs$cst$symbol$re_DASH_min_DASH_max, cljs$cst$symbol$p__22659, cljs$cst$symbol$map__22661, cljs$cst$symbol$properties, cljs$cst$symbol$re_DASH_explainer, cljs$cst$symbol$children, cljs$cst$symbol$min, cljs$cst$symbol$map__22660, cljs$cst$symbol$re_DASH_parser, cljs$cst$symbol$entry_DASH_parser, cljs.core.with_meta(cljs$cst$symbol$parent, new cljs.core.PersistentArrayMap(null, 
          1, [cljs$cst$keyword$tag, cljs$cst$symbol$malli_DOT_core_SLASH_t_malli$core22662], null)), cljs$cst$symbol$re_DASH_unparser, cljs$cst$symbol$type, cljs$cst$symbol$meta22663, cljs$cst$symbol$cache, cljs$cst$symbol$re_DASH_transformer, cljs$cst$symbol$max, cljs$cst$symbol$opts, cljs$cst$symbol$re_DASH_validator, cljs$cst$symbol$meta22666], null);
        };
        malli.core.t_malli$core22665.cljs$lang$type = true;
        malli.core.t_malli$core22665.cljs$lang$ctorStr = "malli.core/t_malli$core22665";
        malli.core.t_malli$core22665.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
          return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22665");
        };
        malli.core.__GT_t_malli$core22665 = function malli$core$_sequence_entry_schema_$___GT_t_malli$core22665(form__$1, options__$1, re_min_max__$1, p__22659__$1, map__22661__$1, properties__$1, re_explainer__$1, children__$1, min__$1, map__22660__$1, re_parser__$1, entry_parser__$1, parent__$2, re_unparser__$1, type__$1, meta22663__$1, cache__$1, re_transformer__$1, max__$1, opts__$1, re_validator__$1, meta22666) {
          return new malli.core.t_malli$core22665(form__$1, options__$1, re_min_max__$1, p__22659__$1, map__22661__$1, properties__$1, re_explainer__$1, children__$1, min__$1, map__22660__$1, re_parser__$1, entry_parser__$1, parent__$2, re_unparser__$1, type__$1, meta22663__$1, cache__$1, re_transformer__$1, max__$1, opts__$1, re_validator__$1, meta22666);
        };
      }
      return new malli.core.t_malli$core22665(form, options, self__.re_min_max, self__.p__22659, self__.map__22661, properties, self__.re_explainer, children, self__.min, self__.map__22660, self__.re_parser, entry_parser, parent__$1, self__.re_unparser, self__.type, self__.meta22663, cache, self__.re_transformer, self__.max, self__.opts, self__.re_validator, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_schema], null));
    };
    malli.core.t_malli$core22662.getBasis = function() {
      return new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$re_DASH_min_DASH_max, cljs$cst$symbol$p__22659, cljs$cst$symbol$map__22661, cljs$cst$symbol$re_DASH_explainer, cljs$cst$symbol$min, cljs$cst$symbol$map__22660, cljs$cst$symbol$re_DASH_parser, cljs$cst$symbol$re_DASH_unparser, cljs$cst$symbol$type, cljs$cst$symbol$re_DASH_transformer, cljs$cst$symbol$max, cljs$cst$symbol$opts, cljs$cst$symbol$re_DASH_validator, cljs$cst$symbol$meta22663], 
      null);
    };
    malli.core.t_malli$core22662.cljs$lang$type = true;
    malli.core.t_malli$core22662.cljs$lang$ctorStr = "malli.core/t_malli$core22662";
    malli.core.t_malli$core22662.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22662");
    };
    malli.core.__GT_t_malli$core22662 = function malli$core$_sequence_entry_schema_$___GT_t_malli$core22662(re_min_max__$1, p__22659__$1, map__22661__$2, re_explainer__$1, min__$1, map__22660__$2, re_parser__$1, re_unparser__$1, type__$1, re_transformer__$1, max__$1, opts__$1, re_validator__$1, meta22663) {
      return new malli.core.t_malli$core22662(re_min_max__$1, p__22659__$1, map__22661__$2, re_explainer__$1, min__$1, map__22660__$2, re_parser__$1, re_unparser__$1, type__$1, re_transformer__$1, max__$1, opts__$1, re_validator__$1, meta22663);
    };
  }
  return new malli.core.t_malli$core22662(re_min_max, p__22659, map__22661__$1, re_explainer, min, map__22660__$1, re_parser, re_unparser, type, re_transformer, max, opts, re_validator, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_into_DASH_schema], null));
};
malli.core.into_schema_QMARK_ = function malli$core$into_schema_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$IntoSchema$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.core.into_schema = function malli$core$into_schema(var_args) {
  var G__22703 = arguments.length;
  switch(G__22703) {
    case 3:
      return malli.core.into_schema.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return malli.core.into_schema.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.into_schema.cljs$core$IFn$_invoke$arity$3 = function(type, properties, children) {
  return malli.core.into_schema.cljs$core$IFn$_invoke$arity$4(type, properties, children, null);
};
malli.core.into_schema.cljs$core$IFn$_invoke$arity$4 = function(type, properties, children, options) {
  var properties__$1 = cljs.core.truth_(properties) ? cljs.core.count(properties) > 0 ? properties : null : null;
  var r = cljs.core.truth_(properties__$1) ? properties__$1.cljs$core$IFn$_invoke$arity$1 ? properties__$1.cljs$core$IFn$_invoke$arity$1(cljs$cst$keyword$registry) : properties__$1.call(null, cljs$cst$keyword$registry) : null;
  var options__$1 = cljs.core.truth_(r) ? malli.core._update(options, cljs$cst$keyword$registry, function(p1__22701_SHARP_) {
    return malli.registry.composite_registry.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([r, function() {
      var or__4253__auto__ = p1__22701_SHARP_;
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        return malli.core._registry.cljs$core$IFn$_invoke$arity$1(options);
      }
    }()], 0));
  }) : options;
  var properties__$2 = cljs.core.truth_(r) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(properties__$1, cljs$cst$keyword$registry, malli.core._property_registry(r, options__$1, cljs.core.identity)) : properties__$1;
  return malli.core._into_schema(malli.core._lookup_BANG_(type, malli.core.into_schema_QMARK_, options__$1), properties__$2, children, options__$1);
};
malli.core.into_schema.cljs$lang$maxFixedArity = 4;
malli.core.type = function malli$core$type(var_args) {
  var G__22705 = arguments.length;
  switch(G__22705) {
    case 1:
      return malli.core.type.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.type.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.type.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.type.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, null);
};
malli.core.type.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._type(malli.core._parent(malli.core.schema.cljs$core$IFn$_invoke$arity$2 ? malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options) : malli.core.schema.call(null, _QMARK_schema, options)));
};
malli.core.type.cljs$lang$maxFixedArity = 2;
malli.core.type_properties = function malli$core$type_properties(var_args) {
  var G__22707 = arguments.length;
  switch(G__22707) {
    case 1:
      return malli.core.type_properties.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.type_properties.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.type_properties.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.type_properties.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, null);
};
malli.core.type_properties.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._type_properties(malli.core._parent(malli.core.schema.cljs$core$IFn$_invoke$arity$2 ? malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options) : malli.core.schema.call(null, _QMARK_schema, options)));
};
malli.core.type_properties.cljs$lang$maxFixedArity = 2;
malli.core.properties_schema = function malli$core$properties_schema(var_args) {
  var G__22709 = arguments.length;
  switch(G__22709) {
    case 1:
      return malli.core.properties_schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.properties_schema.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.properties_schema.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.properties_schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, null);
};
malli.core.properties_schema.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  if (malli.core.into_schema_QMARK_(_QMARK_schema)) {
    var G__22710 = _QMARK_schema;
    var G__22710__$1 = G__22710 == null ? null : malli.core._properties_schema(G__22710, options);
    if (G__22710__$1 == null) {
      return null;
    } else {
      return malli.core.schema.cljs$core$IFn$_invoke$arity$1 ? malli.core.schema.cljs$core$IFn$_invoke$arity$1(G__22710__$1) : malli.core.schema.call(null, G__22710__$1);
    }
  } else {
    var G__22711 = malli.core.schema.cljs$core$IFn$_invoke$arity$2 ? malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options) : malli.core.schema.call(null, _QMARK_schema, options);
    var G__22711__$1 = G__22711 == null ? null : malli.core._parent(G__22711);
    if (G__22711__$1 == null) {
      return null;
    } else {
      return malli.core._properties_schema(G__22711__$1, options);
    }
  }
};
malli.core.properties_schema.cljs$lang$maxFixedArity = 2;
malli.core.children_schema = function malli$core$children_schema(var_args) {
  var G__22713 = arguments.length;
  switch(G__22713) {
    case 1:
      return malli.core.children_schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.children_schema.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.children_schema.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.children_schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, null);
};
malli.core.children_schema.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  if (malli.core.into_schema_QMARK_(_QMARK_schema)) {
    var G__22714 = _QMARK_schema;
    var G__22714__$1 = G__22714 == null ? null : malli.core._children_schema(G__22714, options);
    if (G__22714__$1 == null) {
      return null;
    } else {
      return malli.core.schema.cljs$core$IFn$_invoke$arity$1 ? malli.core.schema.cljs$core$IFn$_invoke$arity$1(G__22714__$1) : malli.core.schema.call(null, G__22714__$1);
    }
  } else {
    var G__22715 = malli.core.schema.cljs$core$IFn$_invoke$arity$2 ? malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options) : malli.core.schema.call(null, _QMARK_schema, options);
    var G__22715__$1 = G__22715 == null ? null : malli.core._parent(G__22715);
    if (G__22715__$1 == null) {
      return null;
    } else {
      return malli.core._children_schema(G__22715__$1, options);
    }
  }
};
malli.core.children_schema.cljs$lang$maxFixedArity = 2;
malli.core.schema_QMARK_ = function malli$core$schema_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$Schema$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.core.schema = function malli$core$schema(var_args) {
  var G__22718 = arguments.length;
  switch(G__22718) {
    case 1:
      return malli.core.schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.schema.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.schema.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, null);
};
malli.core.schema.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  while (true) {
    if (malli.core.schema_QMARK_(_QMARK_schema)) {
      return _QMARK_schema;
    } else {
      if (malli.core.into_schema_QMARK_(_QMARK_schema)) {
        return malli.core._into_schema(_QMARK_schema, null, null, options);
      } else {
        if (cljs.core.vector_QMARK_(_QMARK_schema)) {
          var v = _QMARK_schema;
          var t = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, 0);
          var n = cljs.core.count(v);
          var _QMARK_p = n > 1 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, 1) : null;
          if (_QMARK_p == null || cljs.core.map_QMARK_(_QMARK_p)) {
            return malli.core.into_schema.cljs$core$IFn$_invoke$arity$4(t, _QMARK_p, 2 < n ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, 2, n) : null, options);
          } else {
            return malli.core.into_schema.cljs$core$IFn$_invoke$arity$4(t, null, 1 < n ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, 1, n) : null, options);
          }
        } else {
          var temp__5751__auto__ = function() {
            var and__4251__auto__ = malli.core._reference_QMARK_(_QMARK_schema);
            if (and__4251__auto__) {
              return malli.core._lookup(_QMARK_schema, options);
            } else {
              return and__4251__auto__;
            }
          }();
          if (cljs.core.truth_(temp__5751__auto__)) {
            var _QMARK_schema_SINGLEQUOTE_ = temp__5751__auto__;
            return malli.core._pointer(_QMARK_schema, malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema_SINGLEQUOTE_, options), options);
          } else {
            var G__23389 = malli.core._lookup_BANG_(_QMARK_schema, null, options);
            var G__23390 = options;
            _QMARK_schema = G__23389;
            options = G__23390;
            continue;
          }
        }
      }
    }
    break;
  }
};
malli.core.schema.cljs$lang$maxFixedArity = 2;
malli.core.form = function malli$core$form(var_args) {
  var G__22720 = arguments.length;
  switch(G__22720) {
    case 1:
      return malli.core.form.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.form.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.form.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.form.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, null);
};
malli.core.form.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._form(malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options));
};
malli.core.form.cljs$lang$maxFixedArity = 2;
malli.core.properties = function malli$core$properties(var_args) {
  var G__22722 = arguments.length;
  switch(G__22722) {
    case 1:
      return malli.core.properties.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.properties.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.properties.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.properties.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, null);
};
malli.core.properties.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._properties(malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options));
};
malli.core.properties.cljs$lang$maxFixedArity = 2;
malli.core.options = function malli$core$options(var_args) {
  var G__22724 = arguments.length;
  switch(G__22724) {
    case 1:
      return malli.core.options.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.options.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.options.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.options.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, null);
};
malli.core.options.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._options(malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options));
};
malli.core.options.cljs$lang$maxFixedArity = 2;
malli.core.children = function malli$core$children(var_args) {
  var G__22726 = arguments.length;
  switch(G__22726) {
    case 1:
      return malli.core.children.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.children.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.children.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.children.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, null);
};
malli.core.children.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  var schema = malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options);
  return malli.core._children(schema);
};
malli.core.children.cljs$lang$maxFixedArity = 2;
malli.core.parent = function malli$core$parent(var_args) {
  var G__22728 = arguments.length;
  switch(G__22728) {
    case 1:
      return malli.core.parent.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.parent.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.parent.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.parent.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, null);
};
malli.core.parent.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._parent(malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options));
};
malli.core.parent.cljs$lang$maxFixedArity = 2;
malli.core.walk = function malli$core$walk(var_args) {
  var G__22730 = arguments.length;
  switch(G__22730) {
    case 2:
      return malli.core.walk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core.walk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.walk.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, f) {
  return malli.core.walk.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, f, null);
};
malli.core.walk.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, f, options) {
  return malli.core._walk(malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options), function() {
    if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core22731 !== "undefined") {
    } else {
      malli.core.t_malli$core22731 = function(_QMARK_schema, f, options, meta22732) {
        this._QMARK_schema = _QMARK_schema;
        this.f = f;
        this.options = options;
        this.meta22732 = meta22732;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      malli.core.t_malli$core22731.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22733, meta22732__$1) {
        var self__ = this;
        var _22733__$1 = this;
        return new malli.core.t_malli$core22731(self__._QMARK_schema, self__.f, self__.options, meta22732__$1);
      };
      malli.core.t_malli$core22731.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22733) {
        var self__ = this;
        var _22733__$1 = this;
        return self__.meta22732;
      };
      malli.core.t_malli$core22731.prototype.malli$core$Walker$ = cljs.core.PROTOCOL_SENTINEL;
      malli.core.t_malli$core22731.prototype.malli$core$Walker$_accept$arity$4 = function(_, s, ___$1, ___$2) {
        var self__ = this;
        var ___$3 = this;
        return s;
      };
      malli.core.t_malli$core22731.prototype.malli$core$Walker$_inner$arity$4 = function(this$, s, p, options__$1) {
        var self__ = this;
        var this$__$1 = this;
        return malli.core._walk(s, this$__$1, p, options__$1);
      };
      malli.core.t_malli$core22731.prototype.malli$core$Walker$_outer$arity$5 = function(_, s, p, c, options__$1) {
        var self__ = this;
        var ___$1 = this;
        return self__.f.cljs$core$IFn$_invoke$arity$4 ? self__.f.cljs$core$IFn$_invoke$arity$4(s, p, c, options__$1) : self__.f.call(null, s, p, c, options__$1);
      };
      malli.core.t_malli$core22731.getBasis = function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$_QMARK_schema, cljs$cst$symbol$f, cljs$cst$symbol$options, cljs$cst$symbol$meta22732], null);
      };
      malli.core.t_malli$core22731.cljs$lang$type = true;
      malli.core.t_malli$core22731.cljs$lang$ctorStr = "malli.core/t_malli$core22731";
      malli.core.t_malli$core22731.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
        return cljs.core._write(writer__4492__auto__, "malli.core/t_malli$core22731");
      };
      malli.core.__GT_t_malli$core22731 = function malli$core$__GT_t_malli$core22731(_QMARK_schema__$1, f__$1, options__$1, meta22732) {
        return new malli.core.t_malli$core22731(_QMARK_schema__$1, f__$1, options__$1, meta22732);
      };
    }
    return new malli.core.t_malli$core22731(_QMARK_schema, f, options, cljs.core.PersistentArrayMap.EMPTY);
  }(), cljs.core.PersistentVector.EMPTY, options);
};
malli.core.walk.cljs$lang$maxFixedArity = 3;
malli.core.validator = function malli$core$validator(var_args) {
  var G__22735 = arguments.length;
  switch(G__22735) {
    case 1:
      return malli.core.validator.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.validator.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.validator.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.validator.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, null);
};
malli.core.validator.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._cached(malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options), cljs$cst$keyword$validator, malli.core._validator);
};
malli.core.validator.cljs$lang$maxFixedArity = 2;
malli.core.validate = function malli$core$validate(var_args) {
  var G__22737 = arguments.length;
  switch(G__22737) {
    case 2:
      return malli.core.validate.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core.validate.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.validate.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, value) {
  return malli.core.validate.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, value, null);
};
malli.core.validate.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, value, options) {
  var fexpr__22738 = malli.core.validator.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options);
  return fexpr__22738.cljs$core$IFn$_invoke$arity$1 ? fexpr__22738.cljs$core$IFn$_invoke$arity$1(value) : fexpr__22738.call(null, value);
};
malli.core.validate.cljs$lang$maxFixedArity = 3;
malli.core.explainer = function malli$core$explainer(var_args) {
  var G__22741 = arguments.length;
  switch(G__22741) {
    case 1:
      return malli.core.explainer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.explainer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.explainer.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.explainer.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, null);
};
malli.core.explainer.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  var schema_SINGLEQUOTE_ = malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options);
  var explainer_SINGLEQUOTE_ = malli.core._cached(schema_SINGLEQUOTE_, cljs$cst$keyword$explainer, function(p1__22739_SHARP_) {
    return malli.core._explainer(p1__22739_SHARP_, cljs.core.PersistentVector.EMPTY);
  });
  return function() {
    var malli$core$explainer = null;
    var malli$core$explainer__1 = function(value) {
      return malli$core$explainer.cljs$core$IFn$_invoke$arity$3(value, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY);
    };
    var malli$core$explainer__3 = function(value, in$, acc) {
      var temp__5753__auto__ = cljs.core.seq(explainer_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3 ? explainer_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3(value, in$, acc) : explainer_SINGLEQUOTE_.call(null, value, in$, acc));
      if (temp__5753__auto__) {
        var errors = temp__5753__auto__;
        return new cljs.core.PersistentArrayMap(null, 3, [cljs$cst$keyword$schema, schema_SINGLEQUOTE_, cljs$cst$keyword$value, value, cljs$cst$keyword$errors, errors], null);
      } else {
        return null;
      }
    };
    malli$core$explainer = function(value, in$, acc) {
      switch(arguments.length) {
        case 1:
          return malli$core$explainer__1.call(this, value);
        case 3:
          return malli$core$explainer__3.call(this, value, in$, acc);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    malli$core$explainer.cljs$core$IFn$_invoke$arity$1 = malli$core$explainer__1;
    malli$core$explainer.cljs$core$IFn$_invoke$arity$3 = malli$core$explainer__3;
    return malli$core$explainer;
  }();
};
malli.core.explainer.cljs$lang$maxFixedArity = 2;
malli.core.explain = function malli$core$explain(var_args) {
  var G__22743 = arguments.length;
  switch(G__22743) {
    case 2:
      return malli.core.explain.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core.explain.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.explain.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, value) {
  return malli.core.explain.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, value, null);
};
malli.core.explain.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, value, options) {
  return malli.core.explainer.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options)(value, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY);
};
malli.core.explain.cljs$lang$maxFixedArity = 3;
malli.core.parser = function malli$core$parser(var_args) {
  var G__22745 = arguments.length;
  switch(G__22745) {
    case 1:
      return malli.core.parser.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.parser.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.parser.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.parser.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, null);
};
malli.core.parser.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._cached(malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options), cljs$cst$keyword$parser, malli.core._parser);
};
malli.core.parser.cljs$lang$maxFixedArity = 2;
malli.core.parse = function malli$core$parse(var_args) {
  var G__22747 = arguments.length;
  switch(G__22747) {
    case 2:
      return malli.core.parse.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core.parse.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.parse.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, value) {
  return malli.core.parse.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, value, null);
};
malli.core.parse.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, value, options) {
  var fexpr__22748 = malli.core.parser.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options);
  return fexpr__22748.cljs$core$IFn$_invoke$arity$1 ? fexpr__22748.cljs$core$IFn$_invoke$arity$1(value) : fexpr__22748.call(null, value);
};
malli.core.parse.cljs$lang$maxFixedArity = 3;
malli.core.unparser = function malli$core$unparser(var_args) {
  var G__22750 = arguments.length;
  switch(G__22750) {
    case 1:
      return malli.core.unparser.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.unparser.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.unparser.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.unparser.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, null);
};
malli.core.unparser.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._cached(malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options), cljs$cst$keyword$unparser, malli.core._unparser);
};
malli.core.unparser.cljs$lang$maxFixedArity = 2;
malli.core.unparse = function malli$core$unparse(var_args) {
  var G__22752 = arguments.length;
  switch(G__22752) {
    case 2:
      return malli.core.unparse.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core.unparse.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.unparse.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, value) {
  return malli.core.unparse.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, value, null);
};
malli.core.unparse.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, value, options) {
  var fexpr__22753 = malli.core.unparser.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options);
  return fexpr__22753.cljs$core$IFn$_invoke$arity$1 ? fexpr__22753.cljs$core$IFn$_invoke$arity$1(value) : fexpr__22753.call(null, value);
};
malli.core.unparse.cljs$lang$maxFixedArity = 3;
malli.core.decoder = function malli$core$decoder(var_args) {
  var G__22755 = arguments.length;
  switch(G__22755) {
    case 2:
      return malli.core.decoder.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core.decoder.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.decoder.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, t) {
  return malli.core.decoder.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, null, t);
};
malli.core.decoder.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, options, t) {
  var or__4253__auto__ = malli.core._transformer(malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options), malli.core._into_transformer(t), cljs$cst$keyword$decode, options);
  if (cljs.core.truth_(or__4253__auto__)) {
    return or__4253__auto__;
  } else {
    return cljs.core.identity;
  }
};
malli.core.decoder.cljs$lang$maxFixedArity = 3;
malli.core.decode = function malli$core$decode(var_args) {
  var G__22757 = arguments.length;
  switch(G__22757) {
    case 3:
      return malli.core.decode.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return malli.core.decode.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.decode.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, value, t) {
  return malli.core.decode.cljs$core$IFn$_invoke$arity$4(_QMARK_schema, value, null, t);
};
malli.core.decode.cljs$core$IFn$_invoke$arity$4 = function(_QMARK_schema, value, options, t) {
  var temp__5751__auto__ = malli.core.decoder.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, options, t);
  if (cljs.core.truth_(temp__5751__auto__)) {
    var transform = temp__5751__auto__;
    return transform.cljs$core$IFn$_invoke$arity$1 ? transform.cljs$core$IFn$_invoke$arity$1(value) : transform.call(null, value);
  } else {
    return value;
  }
};
malli.core.decode.cljs$lang$maxFixedArity = 4;
malli.core.encoder = function malli$core$encoder(var_args) {
  var G__22759 = arguments.length;
  switch(G__22759) {
    case 2:
      return malli.core.encoder.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core.encoder.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.encoder.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, t) {
  return malli.core.encoder.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, null, t);
};
malli.core.encoder.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, options, t) {
  var or__4253__auto__ = malli.core._transformer(malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options), malli.core._into_transformer(t), cljs$cst$keyword$encode, options);
  if (cljs.core.truth_(or__4253__auto__)) {
    return or__4253__auto__;
  } else {
    return cljs.core.identity;
  }
};
malli.core.encoder.cljs$lang$maxFixedArity = 3;
malli.core.encode = function malli$core$encode(var_args) {
  var G__22761 = arguments.length;
  switch(G__22761) {
    case 3:
      return malli.core.encode.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return malli.core.encode.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.encode.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, value, t) {
  return malli.core.encode.cljs$core$IFn$_invoke$arity$4(_QMARK_schema, value, null, t);
};
malli.core.encode.cljs$core$IFn$_invoke$arity$4 = function(_QMARK_schema, value, options, t) {
  var temp__5751__auto__ = malli.core.encoder.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, options, t);
  if (cljs.core.truth_(temp__5751__auto__)) {
    var transform = temp__5751__auto__;
    return transform.cljs$core$IFn$_invoke$arity$1 ? transform.cljs$core$IFn$_invoke$arity$1(value) : transform.call(null, value);
  } else {
    return value;
  }
};
malli.core.encode.cljs$lang$maxFixedArity = 4;
malli.core.entries = function malli$core$entries(var_args) {
  var G__22763 = arguments.length;
  switch(G__22763) {
    case 1:
      return malli.core.entries.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.entries.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.entries.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.entries.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, null);
};
malli.core.entries.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  var temp__5753__auto__ = malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options);
  if (cljs.core.truth_(temp__5753__auto__)) {
    var schema = temp__5753__auto__;
    if (malli.core._entry_schema_QMARK_(schema)) {
      return malli.core._entries(schema);
    } else {
      return null;
    }
  } else {
    return null;
  }
};
malli.core.entries.cljs$lang$maxFixedArity = 2;
malli.core.deref = function malli$core$deref(var_args) {
  var G__22765 = arguments.length;
  switch(G__22765) {
    case 1:
      return malli.core.deref.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.deref.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.deref.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.deref.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, null);
};
malli.core.deref.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  var schema = malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options);
  var G__22766 = schema;
  if (malli.core._ref_schema_QMARK_(schema)) {
    return malli.core._deref(G__22766);
  } else {
    return G__22766;
  }
};
malli.core.deref.cljs$lang$maxFixedArity = 2;
malli.core.deref_all = function malli$core$deref_all(var_args) {
  var G__22768 = arguments.length;
  switch(G__22768) {
    case 1:
      return malli.core.deref_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.deref_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.deref_all.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.deref_all.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, null);
};
malli.core.deref_all.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  while (true) {
    var schema = malli.core.deref.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options);
    var G__22769 = schema;
    if (malli.core._ref_schema_QMARK_(schema)) {
      var G__23412 = G__22769;
      var G__23413 = options;
      _QMARK_schema = G__23412;
      options = G__23413;
      continue;
    } else {
      return G__22769;
    }
    break;
  }
};
malli.core.deref_all.cljs$lang$maxFixedArity = 2;
malli.core.from_ast = function malli$core$from_ast(var_args) {
  var G__22774 = arguments.length;
  switch(G__22774) {
    case 1:
      return malli.core.from_ast.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.from_ast.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.from_ast.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_ast) {
  return malli.core.from_ast.cljs$core$IFn$_invoke$arity$2(_QMARK_ast, null);
};
malli.core.from_ast.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_ast, options) {
  if (malli.core.schema_QMARK_(_QMARK_ast)) {
    return _QMARK_ast;
  } else {
    if (cljs.core.map_QMARK_(_QMARK_ast)) {
      var temp__5751__auto__ = malli.core._lookup(cljs$cst$keyword$type.cljs$core$IFn$_invoke$arity$1(_QMARK_ast), options);
      if (cljs.core.truth_(temp__5751__auto__)) {
        var s = temp__5751__auto__;
        var r = function() {
          var temp__5753__auto__ = cljs$cst$keyword$registry.cljs$core$IFn$_invoke$arity$1(_QMARK_ast);
          if (cljs.core.truth_(temp__5753__auto__)) {
            var r = temp__5753__auto__;
            return malli.core._delayed_registry(r, malli.core.from_ast);
          } else {
            return null;
          }
        }();
        var options__$1 = function() {
          var G__22775 = options;
          if (cljs.core.truth_(r)) {
            return malli.core._update(G__22775, cljs$cst$keyword$registry, function(p1__22770_SHARP_) {
              return malli.registry.composite_registry.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([r, function() {
                var or__4253__auto__ = p1__22770_SHARP_;
                if (cljs.core.truth_(or__4253__auto__)) {
                  return or__4253__auto__;
                } else {
                  return malli.core._registry.cljs$core$IFn$_invoke$arity$1(options);
                }
              }()], 0));
            });
          } else {
            return G__22775;
          }
        }();
        var ast = function() {
          var G__22776 = _QMARK_ast;
          if (cljs.core.truth_(r)) {
            return malli.core._update(G__22776, cljs$cst$keyword$properties, function(p1__22771_SHARP_) {
              return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__22771_SHARP_, cljs$cst$keyword$registry, malli.core._property_registry(r, options__$1, cljs.core.identity));
            });
          } else {
            return G__22776;
          }
        }();
        if (malli.core.into_schema_QMARK_(s) && malli.core._ast_QMARK_(s)) {
          return malli.core._from_ast(s, ast, options__$1);
        } else {
          if (malli.core.into_schema_QMARK_(s)) {
            return malli.core._into_schema(s, cljs$cst$keyword$properties.cljs$core$IFn$_invoke$arity$1(ast), malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p1__22772_SHARP_) {
              return malli.core.from_ast.cljs$core$IFn$_invoke$arity$2(p1__22772_SHARP_, options__$1);
            }, cljs$cst$keyword$children.cljs$core$IFn$_invoke$arity$1(ast)), options__$1);
          } else {
            return s;
          }
        }
      } else {
        return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_ast, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$ast, _QMARK_ast], null));
      }
    } else {
      return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_ast, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$ast, _QMARK_ast], null));
    }
  }
};
malli.core.from_ast.cljs$lang$maxFixedArity = 2;
malli.core.ast = function malli$core$ast(var_args) {
  var G__22779 = arguments.length;
  switch(G__22779) {
    case 1:
      return malli.core.ast.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.ast.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.ast.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.ast.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, null);
};
malli.core.ast.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  var s = malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options);
  if (malli.core._ast_QMARK_(s)) {
    return malli.core._to_ast(s, options);
  } else {
    var c = malli.core._children(s);
    return malli.core._ast(function() {
      var G__22780 = new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, malli.core.type.cljs$core$IFn$_invoke$arity$1(s)], null);
      if (cljs.core.truth_(c)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22780, cljs$cst$keyword$children, malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p1__22777_SHARP_) {
          return malli.core.ast.cljs$core$IFn$_invoke$arity$2(p1__22777_SHARP_, options);
        }, c));
      } else {
        return G__22780;
      }
    }(), malli.core._properties(s), malli.core._options(s));
  }
};
malli.core.ast.cljs$lang$maxFixedArity = 2;
malli.core._default_sci_options = function malli$core$_default_sci_options() {
  return new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$preset, cljs$cst$keyword$termination_DASH_safe, cljs$cst$keyword$namespaces, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$symbol$malli_DOT_core, new cljs.core.PersistentArrayMap(null, 4, [cljs$cst$symbol$properties, malli.core.properties, cljs$cst$symbol$type, malli.core.type, cljs$cst$symbol$children, malli.core.children, cljs$cst$symbol$entries, malli.core.entries], null)], null)], null);
};
var _fail_BANG__23416 = function(p1__22781_SHARP_) {
  return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_sci_DASH_not_DASH_available, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$code, p1__22781_SHARP_], null));
};
var _eval_QMARK__23417 = function(p1__22782_SHARP_) {
  return p1__22782_SHARP_ instanceof cljs.core.Symbol || (typeof p1__22782_SHARP_ === "string" || cljs.core.sequential_QMARK_(p1__22782_SHARP_));
};
var _evaluator_23418 = cljs.core.memoize(malli.sci.evaluator);
malli.core.eval = function malli$core$eval(var_args) {
  var G__22784 = arguments.length;
  switch(G__22784) {
    case 1:
      return malli.core.eval.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.eval.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.eval.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_code) {
  return malli.core.eval.cljs$core$IFn$_invoke$arity$2(_QMARK_code, null);
};
malli.core.eval.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_code, options) {
  if (cljs.core.vector_QMARK_(_QMARK_code)) {
    return _QMARK_code;
  } else {
    if (_eval_QMARK__23417(_QMARK_code)) {
      if (cljs.core.truth_(cljs$cst$keyword$malli_DOT_core_SLASH_disable_DASH_sci.cljs$core$IFn$_invoke$arity$1(options))) {
        return _fail_BANG__23416(_QMARK_code);
      } else {
        var fexpr__22786 = function() {
          var fexpr__22787 = _evaluator_23418(function() {
            var or__4253__auto__ = cljs$cst$keyword$malli_DOT_core_SLASH_sci_DASH_options.cljs$core$IFn$_invoke$arity$1(options);
            if (cljs.core.truth_(or__4253__auto__)) {
              return or__4253__auto__;
            } else {
              return malli.core._default_sci_options();
            }
          }(), _fail_BANG__23416);
          return fexpr__22787.cljs$core$IFn$_invoke$arity$0 ? fexpr__22787.cljs$core$IFn$_invoke$arity$0() : fexpr__22787.call(null);
        }();
        return fexpr__22786.cljs$core$IFn$_invoke$arity$1 ? fexpr__22786.cljs$core$IFn$_invoke$arity$1(_QMARK_code) : fexpr__22786.call(null, _QMARK_code);
      }
    } else {
      return _QMARK_code;
    }
  }
};
malli.core.eval.cljs$lang$maxFixedArity = 2;
malli.core.schema_walker = function malli$core$schema_walker(f) {
  return function(schema, _, children, ___$1) {
    var G__22788 = malli.core._set_children(schema, children);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22788) : f.call(null, G__22788);
  };
};
malli.core.predicate_schemas = function malli$core$predicate_schemas() {
  var _safe_empty_QMARK_ = function(x) {
    return cljs.core.seqable_QMARK_(x) && cljs.core.empty_QMARK_(x);
  };
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(malli.core._register_var, cljs.core.PersistentArrayMap.EMPTY, cljs.core.PersistentVector.fromArray([new cljs.core.Var(function() {
    return cljs.core.any_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_any_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$any_QMARK_, "cljs/core.cljs", 11, 1, 283, 283, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs$cst$symbol$x], null)), "Returns true if given any argument.", cljs.core.truth_(cljs.core.any_QMARK_) ? cljs.core.any_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.some_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_some_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$tag, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$some_QMARK_, "cljs/core.cljs", 21, 1, 262, 262, cljs$cst$symbol$boolean, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Returns true if x is not nil, false otherwise.", cljs.core.some_QMARK_ ? cljs.core.some_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.number_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_number_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$tag, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$number_QMARK_, "cljs/core.cljs", 23, 1, 249, 249, cljs$cst$symbol$boolean, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Returns true if x is a JavaScript number.", cljs.core.number_QMARK_ ? cljs.core.number_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.integer_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_integer_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$integer_QMARK_, "cljs/core.cljs", 15, 1, 2279, 2279, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$n], null)), "Returns true if n is a JavaScript number with no decimal part.", cljs.core.truth_(cljs.core.integer_QMARK_) ? cljs.core.integer_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.int_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_int_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$int_QMARK_, "cljs/core.cljs", 11, 1, 2291, 2291, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, 
  cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Return true if x satisfies integer? or is an instance of goog.math.Integer\n   or goog.math.Long.", cljs.core.truth_(cljs.core.int_QMARK_) ? cljs.core.int_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.pos_int_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_pos_DASH_int_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$pos_DASH_int_QMARK_, "cljs/core.cljs", 15, 1, 2299, 2299, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Return true if x satisfies int? and is positive.", cljs.core.truth_(cljs.core.pos_int_QMARK_) ? cljs.core.pos_int_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.neg_int_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_neg_DASH_int_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$tag, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$neg_DASH_int_QMARK_, "cljs/core.cljs", 24, 1, 2315, 2315, cljs$cst$symbol$boolean, 
  cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Return true if x satisfies int? and is negative.", cljs.core.neg_int_QMARK_ ? cljs.core.neg_int_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.nat_int_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_nat_DASH_int_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$nat_DASH_int_QMARK_, "cljs/core.cljs", 15, 1, 2329, 2329, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Return true if x satisfies int? and is a natural integer value.", cljs.core.truth_(cljs.core.nat_int_QMARK_) ? cljs.core.nat_int_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.pos_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_pos_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$tag, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$pos_QMARK_, "cljs/core.cljs", 20, 1, 2964, 2964, cljs$cst$symbol$boolean, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Returns true if num is greater than zero, else false", cljs.core.pos_QMARK_ ? cljs.core.pos_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.neg_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_neg_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$tag, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$neg_QMARK_, "cljs/core.cljs", 20, 1, 2973, 2973, cljs$cst$symbol$boolean, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Returns true if num is less than zero, else false", cljs.core.neg_QMARK_ ? cljs.core.neg_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.float_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_float_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$float_QMARK_, "cljs/core.cljs", 13, 1, 2344, 2344, cljs.core.list(new cljs.core.PersistentVector(null, 1, 
  5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Returns true for JavaScript numbers, false otherwise.", cljs.core.truth_(cljs.core.float_QMARK_) ? cljs.core.float_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.double_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_double_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$double_QMARK_, "cljs/core.cljs", 14, 1, 2349, 2349, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Returns true for JavaScript numbers, false otherwise.", cljs.core.truth_(cljs.core.double_QMARK_) ? cljs.core.double_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.boolean_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_boolean_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$boolean_QMARK_, "cljs/core.cljs", 15, 1, 2241, 2241, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Return true if x is a Boolean", cljs.core.truth_(cljs.core.boolean_QMARK_) ? cljs.core.boolean_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.string_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_string_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$tag, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$string_QMARK_, "cljs/core.cljs", 23, 1, 273, 273, cljs$cst$symbol$boolean, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Returns true if x is a JavaScript string.", cljs.core.string_QMARK_ ? cljs.core.string_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.ident_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_ident_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$ident_QMARK_, "cljs/core.cljs", 13, 1, 3393, 3393, cljs.core.list(new cljs.core.PersistentVector(null, 1, 
  5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Return true if x is a symbol or keyword", cljs.core.truth_(cljs.core.ident_QMARK_) ? cljs.core.ident_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.simple_ident_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_simple_DASH_ident_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$simple_DASH_ident_QMARK_, "cljs/core.cljs", 20, 1, 3397, 3397, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Return true if x is a symbol or keyword without a namespace", cljs.core.truth_(cljs.core.simple_ident_QMARK_) ? cljs.core.simple_ident_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.qualified_ident_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_qualified_DASH_ident_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$qualified_DASH_ident_QMARK_, "cljs/core.cljs", 23, 1, 3401, 3401, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Return true if x is a symbol or keyword with a namespace", cljs.core.truth_(cljs.core.qualified_ident_QMARK_) ? cljs.core.qualified_ident_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.keyword_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_keyword_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$keyword_QMARK_, "cljs/core.cljs", 15, 1, 3363, 3363, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Return true if x is a Keyword", cljs.core.truth_(cljs.core.keyword_QMARK_) ? cljs.core.keyword_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.simple_keyword_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_simple_DASH_keyword_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$simple_DASH_keyword_QMARK_, "cljs/core.cljs", 22, 1, 3413, 3413, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Return true if x is a keyword without a namespace", cljs.core.truth_(cljs.core.simple_keyword_QMARK_) ? cljs.core.simple_keyword_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.qualified_keyword_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_qualified_DASH_keyword_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$qualified_DASH_keyword_QMARK_, "cljs/core.cljs", 25, 1, 3417, 3417, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Return true if x is a keyword with a namespace", cljs.core.truth_(cljs.core.qualified_keyword_QMARK_) ? cljs.core.qualified_keyword_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.symbol_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_symbol_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$tag, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$symbol_QMARK_, "cljs/core.cljs", 23, 1, 1051, 1051, cljs$cst$symbol$boolean, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Return true if x is a Symbol", cljs.core.symbol_QMARK_ ? cljs.core.symbol_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.simple_symbol_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_simple_DASH_symbol_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$simple_DASH_symbol_QMARK_, "cljs/core.cljs", 21, 1, 3405, 3405, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Return true if x is a symbol without a namespace", cljs.core.truth_(cljs.core.simple_symbol_QMARK_) ? cljs.core.simple_symbol_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.qualified_symbol_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_qualified_DASH_symbol_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$qualified_DASH_symbol_QMARK_, "cljs/core.cljs", 24, 1, 3409, 3409, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Return true if x is a symbol with a namespace", cljs.core.truth_(cljs.core.qualified_symbol_QMARK_) ? cljs.core.qualified_symbol_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.uuid_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_uuid_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$uuid_QMARK_, "cljs/core.cljs", 12, 1, 11463, 11463, cljs.core.list(new cljs.core.PersistentVector(null, 1, 
  5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), null, cljs.core.truth_(cljs.core.uuid_QMARK_) ? cljs.core.uuid_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.uri_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_uri_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$added, cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], ["1.9", cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$uri_QMARK_, "cljs/core.cljs", 11, 1, 11851, 11851, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Returns true x is a goog.Uri instance.", cljs.core.truth_(cljs.core.uri_QMARK_) ? cljs.core.uri_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.inst_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_inst_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$inst_QMARK_, "cljs/core.cljs", 12, 1, 1417, 1417, cljs.core.list(new cljs.core.PersistentVector(null, 1, 
  5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Return true if x satisfies Inst", cljs.core.truth_(cljs.core.inst_QMARK_) ? cljs.core.inst_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.seqable_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_seqable_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$seqable_QMARK_, "cljs/core.cljs", 15, 1, 2257, 2257, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$s], null)), "Return true if the seq function is supported for s", cljs.core.truth_(cljs.core.seqable_QMARK_) ? cljs.core.seqable_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.indexed_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_indexed_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$indexed_QMARK_, "cljs/core.cljs", 15, 1, 1540, 1540, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Returns true if coll implements nth in constant time", cljs.core.truth_(cljs.core.indexed_QMARK_) ? cljs.core.indexed_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.map_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_map_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$map_QMARK_, "cljs/core.cljs", 11, 1, 2171, 2171, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, 
  cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Return true if x satisfies IMap", cljs.core.truth_(cljs.core.map_QMARK_) ? cljs.core.map_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.vector_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_vector_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$vector_QMARK_, "cljs/core.cljs", 14, 1, 2183, 2183, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Return true if x satisfies IVector", cljs.core.truth_(cljs.core.vector_QMARK_) ? cljs.core.vector_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.list_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_list_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$list_QMARK_, "cljs/core.cljs", 12, 1, 3139, 3139, cljs.core.list(new cljs.core.PersistentVector(null, 1, 
  5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Returns true if x implements IList", cljs.core.truth_(cljs.core.list_QMARK_) ? cljs.core.list_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.seq_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_seq_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$seq_QMARK_, "cljs/core.cljs", 11, 1, 2250, 2250, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, 
  cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$s], null)), "Return true if s satisfies ISeq", cljs.core.truth_(cljs.core.seq_QMARK_) ? cljs.core.seq_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.char_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_char_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$char_QMARK_, "cljs/core.cljs", 12, 1, 278, 278, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, 
  cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Returns true if x is a JavaScript string of length one.", cljs.core.truth_(cljs.core.char_QMARK_) ? cljs.core.char_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.set_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_set_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$set_QMARK_, "cljs/core.cljs", 11, 1, 2144, 2144, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, 
  cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Returns true if x satisfies ISet", cljs.core.truth_(cljs.core.set_QMARK_) ? cljs.core.set_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.nil_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_nil_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$tag, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$nil_QMARK_, "cljs/core.cljs", 20, 1, 237, 237, cljs$cst$symbol$boolean, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Returns true if x is nil, false otherwise.", cljs.core.nil_QMARK_ ? cljs.core.nil_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.false_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_false_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$tag, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$false_QMARK_, "cljs/core.cljs", 22, 1, 2233, 2233, cljs$cst$symbol$boolean, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Returns true if x is the value false, false otherwise.", cljs.core.false_QMARK_ ? cljs.core.false_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.true_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_true_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$tag, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$true_QMARK_, "cljs/core.cljs", 21, 1, 2237, 2237, cljs$cst$symbol$boolean, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Returns true if x is the value true, false otherwise.", cljs.core.true_QMARK_ ? cljs.core.true_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.zero_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_zero_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$tag, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$zero_QMARK_, "cljs/core.cljs", 21, 1, 2968, 2968, cljs$cst$symbol$boolean, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Returns true if num is zero, else false", cljs.core.zero_QMARK_ ? cljs.core.zero_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.coll_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_coll_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$coll_QMARK_, "cljs/core.cljs", 12, 1, 2137, 2137, cljs.core.list(new cljs.core.PersistentVector(null, 1, 
  5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Returns true if x satisfies ICollection", cljs.core.truth_(cljs.core.coll_QMARK_) ? cljs.core.coll_QMARK_.cljs$lang$test : null])), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
    return cljs.core.empty_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_empty_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$empty_QMARK_, "cljs/core.cljs", 13, 1, 2131, 2131, cljs.core.list(new cljs.core.PersistentVector(null, 1, 
  5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$coll], null)), "Returns true if coll has no items - same as (not (seq coll)).\n  Please use the idiom (seq x) rather than (not (empty? x))", cljs.core.truth_(cljs.core.empty_QMARK_) ? cljs.core.empty_QMARK_.cljs$lang$test : null])), _safe_empty_QMARK_], null), new cljs.core.Var(function() {
    return cljs.core.associative_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_associative_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$associative_QMARK_, "cljs/core.cljs", 19, 1, 2151, 2151, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Returns true if coll implements IAssociative", cljs.core.truth_(cljs.core.associative_QMARK_) ? cljs.core.associative_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.sequential_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_sequential_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$sequential_QMARK_, "cljs/core.cljs", 18, 1, 2159, 2159, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$x], null)), "Returns true if coll satisfies ISequential", cljs.core.truth_(cljs.core.sequential_QMARK_) ? cljs.core.sequential_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.ifn_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_ifn_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$ifn_QMARK_, "cljs/core.cljs", 11, 1, 2274, 2274, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, 
  cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$f], null)), "Returns true if f returns true for fn? or satisfies IFn.", cljs.core.truth_(cljs.core.ifn_QMARK_) ? cljs.core.ifn_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.fn_QMARK_;
  }, cljs$cst$symbol$cljs_DOT_core_SLASH_fn_QMARK_, cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$ns, cljs$cst$keyword$name, cljs$cst$keyword$file, cljs$cst$keyword$end_DASH_column, cljs$cst$keyword$column, cljs$cst$keyword$line, cljs$cst$keyword$end_DASH_line, cljs$cst$keyword$arglists, cljs$cst$keyword$doc, cljs$cst$keyword$test], [cljs$cst$symbol$cljs_DOT_core, cljs$cst$symbol$fn_QMARK_, "cljs/core.cljs", 10, 1, 2028, 2028, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs$cst$symbol$f], null)), "Return true if f is a JavaScript function or satisfies the Fn protocol.", cljs.core.truth_(cljs.core.fn_QMARK_) ? cljs.core.fn_QMARK_.cljs$lang$test : null]))], true));
};
malli.core.class_schemas = function malli$core$class_schemas() {
  return cljs.core.PersistentArrayMap.createAsIfByAssoc([RegExp, malli.core._re_schema(true)]);
};
malli.core.comparator_schemas = function malli$core$comparator_schemas() {
  return cljs.core.reduce_kv(cljs.core.assoc, null, cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, malli.core._vmap.cljs$core$IFn$_invoke$arity$2(function(p__22790) {
    var vec__22791 = p__22790;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22791, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22791, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._simple_schema(function(_, p__22794) {
      var vec__22795 = p__22794;
      var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22795, 0, null);
      return new cljs.core.PersistentArrayMap(null, 6, [cljs$cst$keyword$type, k, cljs$cst$keyword$pred, malli.core._safe_pred(function(p1__22789_SHARP_) {
        return v.cljs$core$IFn$_invoke$arity$2 ? v.cljs$core$IFn$_invoke$arity$2(p1__22789_SHARP_, child) : v.call(null, p1__22789_SHARP_, child);
      }), cljs$cst$keyword$from_DASH_ast, malli.core._from_value_ast, cljs$cst$keyword$to_DASH_ast, malli.core._to_value_ast, cljs$cst$keyword$min, 1, cljs$cst$keyword$max, 1], null);
    })], null);
  }, new cljs.core.PersistentArrayMap(null, 6, [cljs$cst$keyword$_GT_, cljs.core._GT_, cljs$cst$keyword$_GT__EQ_, cljs.core._GT__EQ_, cljs$cst$keyword$_LT_, cljs.core._LT_, cljs$cst$keyword$_LT__EQ_, cljs.core._LT__EQ_, cljs$cst$keyword$_EQ_, cljs.core._EQ_, cljs$cst$keyword$not_EQ_, cljs.core.not_EQ_], null))));
};
malli.core.type_schemas = function malli$core$type_schemas() {
  return cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$qualified_DASH_symbol, cljs$cst$keyword$double, cljs$cst$keyword$int, cljs$cst$keyword$symbol, cljs$cst$keyword$qualified_DASH_keyword, cljs$cst$keyword$string, cljs$cst$keyword$keyword, cljs$cst$keyword$nil, cljs$cst$keyword$uuid, cljs$cst$keyword$boolean, cljs$cst$keyword$any], [malli.core._qualified_symbol_schema(), malli.core._double_schema(), malli.core._int_schema(), malli.core._symbol_schema(), malli.core._qualified_keyword_schema(), 
  malli.core._string_schema(), malli.core._keyword_schema(), malli.core._nil_schema(), malli.core._uuid_schema(), malli.core._boolean_schema(), malli.core._any_schema()]);
};
malli.core.sequence_schemas = function malli$core$sequence_schemas() {
  return new cljs.core.PersistentArrayMap(null, 8, [cljs$cst$keyword$_PLUS_, malli.core._sequence_schema(new cljs.core.PersistentArrayMap(null, 8, [cljs$cst$keyword$type, cljs$cst$keyword$_PLUS_, cljs$cst$keyword$child_DASH_bounds, new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$min, 1, cljs$cst$keyword$max, 1], null), cljs$cst$keyword$re_DASH_validator, function(_, p__22798) {
    var vec__22799 = p__22798;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22799, 0, null);
    return malli.impl.regex._PLUS__validator(child);
  }, cljs$cst$keyword$re_DASH_explainer, function(_, p__22802) {
    var vec__22803 = p__22802;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22803, 0, null);
    return malli.impl.regex._PLUS__explainer(child);
  }, cljs$cst$keyword$re_DASH_parser, function(_, p__22806) {
    var vec__22807 = p__22806;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22807, 0, null);
    return malli.impl.regex._PLUS__parser(child);
  }, cljs$cst$keyword$re_DASH_unparser, function(_, p__22810) {
    var vec__22811 = p__22810;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22811, 0, null);
    return malli.impl.regex._PLUS__unparser(child);
  }, cljs$cst$keyword$re_DASH_transformer, function(_, p__22814) {
    var vec__22815 = p__22814;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22815, 0, null);
    return malli.impl.regex._PLUS__transformer(child);
  }, cljs$cst$keyword$re_DASH_min_DASH_max, function(_, p__22818) {
    var vec__22819 = p__22818;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22819, 0, null);
    return new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$min, cljs$cst$keyword$min.cljs$core$IFn$_invoke$arity$1(malli.core._regex_min_max(child))], null);
  }], null)), cljs$cst$keyword$_STAR_, malli.core._sequence_schema(new cljs.core.PersistentArrayMap(null, 8, [cljs$cst$keyword$type, cljs$cst$keyword$_STAR_, cljs$cst$keyword$child_DASH_bounds, new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$min, 1, cljs$cst$keyword$max, 1], null), cljs$cst$keyword$re_DASH_validator, function(_, p__22822) {
    var vec__22823 = p__22822;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22823, 0, null);
    return malli.impl.regex._STAR__validator(child);
  }, cljs$cst$keyword$re_DASH_explainer, function(_, p__22826) {
    var vec__22827 = p__22826;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22827, 0, null);
    return malli.impl.regex._STAR__explainer(child);
  }, cljs$cst$keyword$re_DASH_parser, function(_, p__22830) {
    var vec__22831 = p__22830;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22831, 0, null);
    return malli.impl.regex._STAR__parser(child);
  }, cljs$cst$keyword$re_DASH_unparser, function(_, p__22834) {
    var vec__22835 = p__22834;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22835, 0, null);
    return malli.impl.regex._STAR__unparser(child);
  }, cljs$cst$keyword$re_DASH_transformer, function(_, p__22838) {
    var vec__22839 = p__22838;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22839, 0, null);
    return malli.impl.regex._STAR__transformer(child);
  }, cljs$cst$keyword$re_DASH_min_DASH_max, function(_, ___$1) {
    return new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$min, 0], null);
  }], null)), cljs$cst$keyword$_QMARK_, malli.core._sequence_schema(new cljs.core.PersistentArrayMap(null, 8, [cljs$cst$keyword$type, cljs$cst$keyword$_QMARK_, cljs$cst$keyword$child_DASH_bounds, new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$min, 1, cljs$cst$keyword$max, 1], null), cljs$cst$keyword$re_DASH_validator, function(_, p__22842) {
    var vec__22843 = p__22842;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22843, 0, null);
    return malli.impl.regex._QMARK__validator(child);
  }, cljs$cst$keyword$re_DASH_explainer, function(_, p__22846) {
    var vec__22847 = p__22846;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22847, 0, null);
    return malli.impl.regex._QMARK__explainer(child);
  }, cljs$cst$keyword$re_DASH_parser, function(_, p__22850) {
    var vec__22851 = p__22850;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22851, 0, null);
    return malli.impl.regex._QMARK__parser(child);
  }, cljs$cst$keyword$re_DASH_unparser, function(_, p__22854) {
    var vec__22855 = p__22854;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22855, 0, null);
    return malli.impl.regex._QMARK__unparser(child);
  }, cljs$cst$keyword$re_DASH_transformer, function(_, p__22858) {
    var vec__22859 = p__22858;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22859, 0, null);
    return malli.impl.regex._QMARK__transformer(child);
  }, cljs$cst$keyword$re_DASH_min_DASH_max, function(_, p__22862) {
    var vec__22863 = p__22862;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22863, 0, null);
    return new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$min, 0, cljs$cst$keyword$max, cljs$cst$keyword$max.cljs$core$IFn$_invoke$arity$1(malli.core._regex_min_max(child))], null);
  }], null)), cljs$cst$keyword$repeat, malli.core._sequence_schema(new cljs.core.PersistentArrayMap(null, 8, [cljs$cst$keyword$type, cljs$cst$keyword$repeat, cljs$cst$keyword$child_DASH_bounds, new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$min, 1, cljs$cst$keyword$max, 1], null), cljs$cst$keyword$re_DASH_validator, function(p__22866, p__22867) {
    var map__22868 = p__22866;
    var map__22868__$1 = cljs.core.__destructure_map(map__22868);
    var min = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22868__$1, cljs$cst$keyword$min, 0);
    var max = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22868__$1, cljs$cst$keyword$max, Infinity);
    var vec__22869 = p__22867;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22869, 0, null);
    return malli.impl.regex.repeat_validator(min, max, child);
  }, cljs$cst$keyword$re_DASH_explainer, function(p__22872, p__22873) {
    var map__22874 = p__22872;
    var map__22874__$1 = cljs.core.__destructure_map(map__22874);
    var min = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22874__$1, cljs$cst$keyword$min, 0);
    var max = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22874__$1, cljs$cst$keyword$max, Infinity);
    var vec__22875 = p__22873;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22875, 0, null);
    return malli.impl.regex.repeat_explainer(min, max, child);
  }, cljs$cst$keyword$re_DASH_parser, function(p__22878, p__22879) {
    var map__22880 = p__22878;
    var map__22880__$1 = cljs.core.__destructure_map(map__22880);
    var min = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22880__$1, cljs$cst$keyword$min, 0);
    var max = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22880__$1, cljs$cst$keyword$max, Infinity);
    var vec__22881 = p__22879;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22881, 0, null);
    return malli.impl.regex.repeat_parser(min, max, child);
  }, cljs$cst$keyword$re_DASH_unparser, function(p__22884, p__22885) {
    var map__22886 = p__22884;
    var map__22886__$1 = cljs.core.__destructure_map(map__22886);
    var min = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22886__$1, cljs$cst$keyword$min, 0);
    var max = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22886__$1, cljs$cst$keyword$max, Infinity);
    var vec__22887 = p__22885;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22887, 0, null);
    return malli.impl.regex.repeat_unparser(min, max, child);
  }, cljs$cst$keyword$re_DASH_transformer, function(p__22890, p__22891) {
    var map__22892 = p__22890;
    var map__22892__$1 = cljs.core.__destructure_map(map__22892);
    var min = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22892__$1, cljs$cst$keyword$min, 0);
    var max = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22892__$1, cljs$cst$keyword$max, Infinity);
    var vec__22893 = p__22891;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22893, 0, null);
    return malli.impl.regex.repeat_transformer(min, max, child);
  }, cljs$cst$keyword$re_DASH_min_DASH_max, function(props, p__22896) {
    var vec__22897 = p__22896;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22897, 0, null);
    return malli.core._re_min_max(cljs.core._STAR_, props, child);
  }], null)), cljs$cst$keyword$cat, malli.core._sequence_schema(new cljs.core.PersistentArrayMap(null, 8, [cljs$cst$keyword$type, cljs$cst$keyword$cat, cljs$cst$keyword$child_DASH_bounds, cljs.core.PersistentArrayMap.EMPTY, cljs$cst$keyword$re_DASH_validator, function(_, children) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(malli.impl.regex.cat_validator, children);
  }, cljs$cst$keyword$re_DASH_explainer, function(_, children) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(malli.impl.regex.cat_explainer, children);
  }, cljs$cst$keyword$re_DASH_parser, function(_, children) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(malli.impl.regex.cat_parser, children);
  }, cljs$cst$keyword$re_DASH_unparser, function(_, children) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(malli.impl.regex.cat_unparser, children);
  }, cljs$cst$keyword$re_DASH_transformer, function(_, children) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(malli.impl.regex.cat_transformer, children);
  }, cljs$cst$keyword$re_DASH_min_DASH_max, function(_, children) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(malli.core._re_min_max, cljs.core._PLUS_), new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$min, 0, cljs$cst$keyword$max, 0], null), children);
  }], null)), cljs$cst$keyword$alt, malli.core._sequence_schema(new cljs.core.PersistentArrayMap(null, 8, [cljs$cst$keyword$type, cljs$cst$keyword$alt, cljs$cst$keyword$child_DASH_bounds, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$min, 1], null), cljs$cst$keyword$re_DASH_validator, function(_, children) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(malli.impl.regex.alt_validator, children);
  }, cljs$cst$keyword$re_DASH_explainer, function(_, children) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(malli.impl.regex.alt_explainer, children);
  }, cljs$cst$keyword$re_DASH_parser, function(_, children) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(malli.impl.regex.alt_parser, children);
  }, cljs$cst$keyword$re_DASH_unparser, function(_, children) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(malli.impl.regex.alt_unparser, children);
  }, cljs$cst$keyword$re_DASH_transformer, function(_, children) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(malli.impl.regex.alt_transformer, children);
  }, cljs$cst$keyword$re_DASH_min_DASH_max, function(_, children) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(malli.core._re_alt_min_max, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$max, 0], null), children);
  }], null)), cljs$cst$keyword$catn, malli.core._sequence_entry_schema(new cljs.core.PersistentArrayMap(null, 8, [cljs$cst$keyword$type, cljs$cst$keyword$catn, cljs$cst$keyword$child_DASH_bounds, cljs.core.PersistentArrayMap.EMPTY, cljs$cst$keyword$re_DASH_validator, function(_, children) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(malli.impl.regex.cat_validator, children);
  }, cljs$cst$keyword$re_DASH_explainer, function(_, children) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(malli.impl.regex.cat_explainer, children);
  }, cljs$cst$keyword$re_DASH_parser, function(_, children) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(malli.impl.regex.catn_parser, children);
  }, cljs$cst$keyword$re_DASH_unparser, function(_, children) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(malli.impl.regex.catn_unparser, children);
  }, cljs$cst$keyword$re_DASH_transformer, function(_, children) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(malli.impl.regex.cat_transformer, children);
  }, cljs$cst$keyword$re_DASH_min_DASH_max, function(_, children) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(malli.core._re_min_max, cljs.core._PLUS_), new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$min, 0, cljs$cst$keyword$max, 0], null), malli.core._vmap.cljs$core$IFn$_invoke$arity$2(cljs.core.last, children));
  }], null)), cljs$cst$keyword$altn, malli.core._sequence_entry_schema(new cljs.core.PersistentArrayMap(null, 8, [cljs$cst$keyword$type, cljs$cst$keyword$altn, cljs$cst$keyword$child_DASH_bounds, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$min, 1], null), cljs$cst$keyword$re_DASH_validator, function(_, children) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(malli.impl.regex.alt_validator, children);
  }, cljs$cst$keyword$re_DASH_explainer, function(_, children) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(malli.impl.regex.alt_explainer, children);
  }, cljs$cst$keyword$re_DASH_parser, function(_, children) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(malli.impl.regex.altn_parser, children);
  }, cljs$cst$keyword$re_DASH_unparser, function(_, children) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(malli.impl.regex.altn_unparser, children);
  }, cljs$cst$keyword$re_DASH_transformer, function(_, children) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(malli.impl.regex.alt_transformer, children);
  }, cljs$cst$keyword$re_DASH_min_DASH_max, function(_, children) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(malli.core._re_alt_min_max, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$max, 0], null), malli.core._vmap.cljs$core$IFn$_invoke$arity$2(cljs.core.last, children));
  }], null))], null);
};
malli.core.base_schemas = function malli$core$base_schemas() {
  return cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$enum, cljs$cst$keyword$schema, cljs$cst$keyword$fn, cljs$cst$keyword$orn, cljs$cst$keyword$ref, cljs$cst$keyword$maybe, cljs$cst$keyword$sequential, cljs$cst$keyword$or, cljs$cst$keyword$re, cljs$cst$keyword$not, cljs$cst$keyword$tuple, cljs$cst$keyword$vector, cljs$cst$keyword$function, cljs$cst$keyword$_EQ__GT_, cljs$cst$keyword$map_DASH_of, cljs$cst$keyword$multi, cljs$cst$keyword$and, cljs$cst$keyword$malli_DOT_core_SLASH_schema, 
  cljs$cst$keyword$set, cljs$cst$keyword$map], [malli.core._enum_schema(), malli.core._schema_schema(null), malli.core._fn_schema(), malli.core._orn_schema(), malli.core._ref_schema.cljs$core$IFn$_invoke$arity$0(), malli.core._maybe_schema(), malli.core._collection_schema(new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$type, cljs$cst$keyword$sequential, cljs$cst$keyword$pred, cljs.core.sequential_QMARK_], null)), malli.core._or_schema(), malli.core._re_schema(false), malli.core._not_schema(), 
  malli.core._tuple_schema(), malli.core._collection_schema(new cljs.core.PersistentArrayMap(null, 3, [cljs$cst$keyword$type, cljs$cst$keyword$vector, cljs$cst$keyword$pred, cljs.core.vector_QMARK_, cljs$cst$keyword$empty, cljs.core.PersistentVector.EMPTY], null)), malli.core._function_schema(null), malli.core.__EQ__GT__schema(), malli.core._map_of_schema(), malli.core._multi_schema.cljs$core$IFn$_invoke$arity$0(), malli.core._and_schema(), malli.core._schema_schema(new cljs.core.PersistentArrayMap(null, 
  1, [cljs$cst$keyword$raw, true], null)), malli.core._collection_schema(new cljs.core.PersistentArrayMap(null, 4, [cljs$cst$keyword$type, cljs$cst$keyword$set, cljs$cst$keyword$pred, cljs.core.set_QMARK_, cljs$cst$keyword$empty, cljs.core.PersistentHashSet.EMPTY, cljs$cst$keyword$in, function(_, x) {
    return x;
  }], null)), malli.core._map_schema.cljs$core$IFn$_invoke$arity$0()]);
};
malli.core.default_schemas = function malli$core$default_schemas() {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([malli.core.predicate_schemas(), malli.core.class_schemas(), malli.core.comparator_schemas(), malli.core.type_schemas(), malli.core.sequence_schemas(), malli.core.base_schemas()], 0));
};
malli.core.default_registry = function() {
  var strict = malli.registry.mode === "strict";
  var registry = malli.registry.fast_registry(malli.registry.type === "custom" ? cljs.core.PersistentArrayMap.EMPTY : malli.core.default_schemas());
  if (strict) {
  } else {
    malli.registry.set_default_registry_BANG_(registry);
  }
  return malli.registry.registry(strict ? registry : malli.registry.custom_default_registry());
}();
malli.core._function_schemas_STAR_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
malli.core.function_schemas = function malli$core$function_schemas(var_args) {
  var G__22901 = arguments.length;
  switch(G__22901) {
    case 0:
      return malli.core.function_schemas.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.core.function_schemas.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.function_schemas.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.core.function_schemas.cljs$core$IFn$_invoke$arity$1(cljs$cst$keyword$clj);
};
malli.core.function_schemas.cljs$core$IFn$_invoke$arity$1 = function(key) {
  var fexpr__22902 = cljs.core.deref(malli.core._function_schemas_STAR_);
  return fexpr__22902.cljs$core$IFn$_invoke$arity$1 ? fexpr__22902.cljs$core$IFn$_invoke$arity$1(key) : fexpr__22902.call(null, key);
};
malli.core.function_schemas.cljs$lang$maxFixedArity = 1;
malli.core.function_schema = function malli$core$function_schema(var_args) {
  var G__22904 = arguments.length;
  switch(G__22904) {
    case 1:
      return malli.core.function_schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.function_schema.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.function_schema.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.function_schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, null);
};
malli.core.function_schema.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  var s = malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options);
  var t = malli.core.type.cljs$core$IFn$_invoke$arity$1(s);
  if (cljs.core.truth_(function() {
    var fexpr__22905 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$function, null, cljs$cst$keyword$_EQ__GT_, null], null), null);
    return fexpr__22905.cljs$core$IFn$_invoke$arity$1 ? fexpr__22905.cljs$core$IFn$_invoke$arity$1(t) : fexpr__22905.call(null, t);
  }())) {
    return s;
  } else {
    return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH__EQ__GT_schema, new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$type, t, cljs$cst$keyword$schema, s], null));
  }
};
malli.core.function_schema.cljs$lang$maxFixedArity = 2;
malli.core._register_function_schema_BANG_ = function malli$core$_register_function_schema_BANG_(var_args) {
  var G__22907 = arguments.length;
  switch(G__22907) {
    case 4:
      return malli.core._register_function_schema_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return malli.core._register_function_schema_BANG_.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._register_function_schema_BANG_.cljs$core$IFn$_invoke$arity$4 = function(ns, name, _QMARK_schema, data) {
  return malli.core._register_function_schema_BANG_.cljs$core$IFn$_invoke$arity$6(ns, name, _QMARK_schema, data, cljs$cst$keyword$clj, malli.core.function_schema);
};
malli.core._register_function_schema_BANG_.cljs$core$IFn$_invoke$arity$6 = function(ns, name, _QMARK_schema, data, key, f) {
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(malli.core._function_schemas_STAR_, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, ns, name], null), cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([data, new cljs.core.PersistentArrayMap(null, 3, [cljs$cst$keyword$schema, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(_QMARK_schema) : f.call(null, _QMARK_schema), 
  cljs$cst$keyword$ns, ns, cljs$cst$keyword$name, name], null)], 0)));
};
malli.core._register_function_schema_BANG_.cljs$lang$maxFixedArity = 6;
malli.core._instrument = function malli$core$_instrument(var_args) {
  var G__22909 = arguments.length;
  switch(G__22909) {
    case 1:
      return malli.core._instrument.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core._instrument.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core._instrument.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._instrument.cljs$core$IFn$_invoke$arity$1 = function(props) {
  return malli.core._instrument.cljs$core$IFn$_invoke$arity$3(props, null, null);
};
malli.core._instrument.cljs$core$IFn$_invoke$arity$2 = function(props, f) {
  return malli.core._instrument.cljs$core$IFn$_invoke$arity$3(props, f, null);
};
malli.core._instrument.cljs$core$IFn$_invoke$arity$3 = function(p__22910, f, options) {
  var map__22911 = p__22910;
  var map__22911__$1 = cljs.core.__destructure_map(map__22911);
  var props = map__22911__$1;
  var scope = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22911__$1, cljs$cst$keyword$scope, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$output, null, cljs$cst$keyword$input, null], null), null));
  var report = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22911__$1, cljs$cst$keyword$report, malli.core._fail_BANG_);
  var gen = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22911__$1, cljs$cst$keyword$gen);
  var schema = malli.core.schema.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$schema.cljs$core$IFn$_invoke$arity$1(props), options);
  var G__22912 = malli.core.type.cljs$core$IFn$_invoke$arity$1(schema);
  var G__22912__$1 = G__22912 instanceof cljs.core.Keyword ? G__22912.fqn : null;
  switch(G__22912__$1) {
    case "\x3d\x3e":
      var map__22913 = malli.core._function_info(schema);
      var map__22913__$1 = cljs.core.__destructure_map(map__22913);
      var min = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22913__$1, cljs$cst$keyword$min);
      var max = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22913__$1, cljs$cst$keyword$max);
      var input = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22913__$1, cljs$cst$keyword$input);
      var output = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22913__$1, cljs$cst$keyword$output);
      var vec__22914 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(malli.core.validator, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [input, output], null));
      var validate_input = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22914, 0, null);
      var validate_output = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22914, 1, null);
      var vec__22917 = malli.core._vmap.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.contains_QMARK_, scope), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$input, cljs$cst$keyword$output], null));
      var wrap_input = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22917, 0, null);
      var wrap_output = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22917, 1, null);
      var f__$1 = function() {
        var or__4253__auto__ = cljs.core.truth_(gen) ? gen.cljs$core$IFn$_invoke$arity$1 ? gen.cljs$core$IFn$_invoke$arity$1(schema) : gen.call(null, schema) : f;
        if (cljs.core.truth_(or__4253__auto__)) {
          return or__4253__auto__;
        } else {
          return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_missing_DASH_function, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$props, props], null));
        }
      }();
      return function() {
        var G__23425__delegate = function(args) {
          var args__$1 = cljs.core.vec(args);
          var arity = cljs.core.count(args__$1);
          if (cljs.core.truth_(wrap_input)) {
            if (min <= arity && arity <= function() {
              var or__4253__auto__ = max;
              if (cljs.core.truth_(or__4253__auto__)) {
                return or__4253__auto__;
              } else {
                return malli.impl.util._PLUS_max_size_PLUS_;
              }
            }()) {
            } else {
              var G__22920_23426 = cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_arity;
              var G__22921_23427 = new cljs.core.PersistentArrayMap(null, 5, [cljs$cst$keyword$arity, arity, cljs$cst$keyword$arities, cljs.core.PersistentHashSet.createAsIfByAssoc([new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$min, min, cljs$cst$keyword$max, max], null)]), cljs$cst$keyword$args, args__$1, cljs$cst$keyword$input, input, cljs$cst$keyword$schema, schema], null);
              report.cljs$core$IFn$_invoke$arity$2 ? report.cljs$core$IFn$_invoke$arity$2(G__22920_23426, G__22921_23427) : report.call(null, G__22920_23426, G__22921_23427);
            }
            if (cljs.core.truth_(validate_input.cljs$core$IFn$_invoke$arity$1 ? validate_input.cljs$core$IFn$_invoke$arity$1(args__$1) : validate_input.call(null, args__$1))) {
            } else {
              var G__22922_23428 = cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_input;
              var G__22923_23429 = new cljs.core.PersistentArrayMap(null, 3, [cljs$cst$keyword$input, input, cljs$cst$keyword$args, args__$1, cljs$cst$keyword$schema, schema], null);
              report.cljs$core$IFn$_invoke$arity$2 ? report.cljs$core$IFn$_invoke$arity$2(G__22922_23428, G__22923_23429) : report.call(null, G__22922_23428, G__22923_23429);
            }
          } else {
          }
          var value = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f__$1, args__$1);
          if (cljs.core.truth_(wrap_output)) {
            if (cljs.core.truth_(validate_output.cljs$core$IFn$_invoke$arity$1 ? validate_output.cljs$core$IFn$_invoke$arity$1(value) : validate_output.call(null, value))) {
            } else {
              var G__22924_23430 = cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_output;
              var G__22925_23431 = new cljs.core.PersistentArrayMap(null, 4, [cljs$cst$keyword$output, output, cljs$cst$keyword$value, value, cljs$cst$keyword$args, args__$1, cljs$cst$keyword$schema, schema], null);
              report.cljs$core$IFn$_invoke$arity$2 ? report.cljs$core$IFn$_invoke$arity$2(G__22924_23430, G__22925_23431) : report.call(null, G__22924_23430, G__22925_23431);
            }
          } else {
          }
          return value;
        };
        var G__23425 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            var G__23432__i = 0, G__23432__a = new Array(arguments.length - 0);
            while (G__23432__i < G__23432__a.length) {
              G__23432__a[G__23432__i] = arguments[G__23432__i + 0];
              ++G__23432__i;
            }
            args = new cljs.core.IndexedSeq(G__23432__a, 0, null);
          }
          return G__23425__delegate.call(this, args);
        };
        G__23425.cljs$lang$maxFixedArity = 0;
        G__23425.cljs$lang$applyTo = function(arglist__23433) {
          var args = cljs.core.seq(arglist__23433);
          return G__23425__delegate(args);
        };
        G__23425.cljs$core$IFn$_invoke$arity$variadic = G__23425__delegate;
        return G__23425;
      }();
      break;
    case "function":
      var arity__GT_info = malli.core._group_by_arity_BANG_(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(s) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(malli.core._function_info(s), cljs$cst$keyword$f, malli.core._instrument.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(props, cljs$cst$keyword$schema, s), f, options));
      }, malli.core.children.cljs$core$IFn$_invoke$arity$1(schema)));
      var arities = cljs.core.set(cljs.core.keys(arity__GT_info));
      var varargs_info = arity__GT_info.cljs$core$IFn$_invoke$arity$1 ? arity__GT_info.cljs$core$IFn$_invoke$arity$1(cljs$cst$keyword$varargs) : arity__GT_info.call(null, cljs$cst$keyword$varargs);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, cljs.core.count(arities))) {
        return cljs$cst$keyword$f.cljs$core$IFn$_invoke$arity$1(cljs.core.val(cljs.core.first(arity__GT_info)));
      } else {
        return function() {
          var G__23434__delegate = function(args) {
            var arity = cljs.core.count(args);
            var map__22926 = arity__GT_info.cljs$core$IFn$_invoke$arity$1 ? arity__GT_info.cljs$core$IFn$_invoke$arity$1(arity) : arity__GT_info.call(null, arity);
            var map__22926__$1 = cljs.core.__destructure_map(map__22926);
            var info = map__22926__$1;
            var input = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22926__$1, cljs$cst$keyword$input);
            var report_arity = function() {
              var G__22927 = cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_arity;
              var G__22928 = new cljs.core.PersistentArrayMap(null, 5, [cljs$cst$keyword$arity, arity, cljs$cst$keyword$arities, arities, cljs$cst$keyword$args, args, cljs$cst$keyword$input, input, cljs$cst$keyword$schema, schema], null);
              return report.cljs$core$IFn$_invoke$arity$2 ? report.cljs$core$IFn$_invoke$arity$2(G__22927, G__22928) : report.call(null, G__22927, G__22928);
            };
            if (cljs.core.truth_(info)) {
              return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$f.cljs$core$IFn$_invoke$arity$1(info), args);
            } else {
              if (cljs.core.truth_(varargs_info)) {
                if (arity < cljs$cst$keyword$min.cljs$core$IFn$_invoke$arity$1(varargs_info)) {
                  return report_arity();
                } else {
                  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$f.cljs$core$IFn$_invoke$arity$1(varargs_info), args);
                }
              } else {
                return report_arity();
              }
            }
          };
          var G__23434 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__23435__i = 0, G__23435__a = new Array(arguments.length - 0);
              while (G__23435__i < G__23435__a.length) {
                G__23435__a[G__23435__i] = arguments[G__23435__i + 0];
                ++G__23435__i;
              }
              args = new cljs.core.IndexedSeq(G__23435__a, 0, null);
            }
            return G__23434__delegate.call(this, args);
          };
          G__23434.cljs$lang$maxFixedArity = 0;
          G__23434.cljs$lang$applyTo = function(arglist__23436) {
            var args = cljs.core.seq(arglist__23436);
            return G__23434__delegate(args);
          };
          G__23434.cljs$core$IFn$_invoke$arity$variadic = G__23434__delegate;
          return G__23434;
        }();
      }
      break;
    default:
      throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__22912__$1)].join(""));
  }
};
malli.core._instrument.cljs$lang$maxFixedArity = 3;
goog.provide("malli.instrument.cljs");
malli.instrument.cljs.instrumented_vars = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
malli.instrument.cljs._filter_var = function malli$instrument$cljs$_filter_var(f) {
  return function(_, s, ___$1) {
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(s) : f.call(null, s);
  };
};
malli.instrument.cljs._filter_ns = function malli$instrument$cljs$_filter_ns(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___19969 = arguments.length;
  var i__4865__auto___19971 = 0;
  while (true) {
    if (i__4865__auto___19971 < len__4864__auto___19969) {
      args__4870__auto__.push(arguments[i__4865__auto___19971]);
      var G__19972 = i__4865__auto___19971 + 1;
      i__4865__auto___19971 = G__19972;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 0 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(0), 0, null) : null;
  return malli.instrument.cljs._filter_ns.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);
};
malli.instrument.cljs._filter_ns.cljs$core$IFn$_invoke$arity$variadic = function(ns) {
  return function(n, _, ___$1) {
    var fexpr__19934 = cljs.core.set(ns);
    return fexpr__19934.cljs$core$IFn$_invoke$arity$1 ? fexpr__19934.cljs$core$IFn$_invoke$arity$1(n) : fexpr__19934.call(null, n);
  };
};
malli.instrument.cljs._filter_ns.cljs$lang$maxFixedArity = 0;
malli.instrument.cljs._filter_ns.cljs$lang$applyTo = function(seq19933) {
  var self__4852__auto__ = this;
  return self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19933));
};
goog.provide("arrangement.core");
arrangement.core.type_predicates = new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.nil_QMARK_, cljs.core.false_QMARK_, cljs.core.true_QMARK_, cljs.core.number_QMARK_, cljs.core.char_QMARK_, cljs.core.string_QMARK_, cljs.core.keyword_QMARK_, cljs.core.symbol_QMARK_, cljs.core.list_QMARK_, cljs.core.vector_QMARK_, cljs.core.set_QMARK_, cljs.core.map_QMARK_], null);
arrangement.core.type_priority = function arrangement$core$type_priority(x) {
  var i = 0;
  while (true) {
    if (i < cljs.core.count(arrangement.core.type_predicates)) {
      var p = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arrangement.core.type_predicates, i);
      if (cljs.core.truth_(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x))) {
        return i;
      } else {
        var G__20001 = i + 1;
        i = G__20001;
        continue;
      }
    } else {
      return i;
    }
    break;
  }
};
arrangement.core.directly_comparable_QMARK_ = function arrangement$core$directly_comparable_QMARK_(p) {
  return 3 <= p && p <= 7;
};
arrangement.core.type_name = function arrangement$core$type_name(x) {
  var t = cljs.core.type(x);
  var n = t.name;
  if (cljs.core.empty_QMARK_(n)) {
    return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([t], 0));
  } else {
    return n;
  }
};
arrangement.core.compare_seqs = function arrangement$core$compare_seqs(xs, ys) {
  while (true) {
    if (cljs.core.seq(xs) && cljs.core.seq(ys)) {
      var x = cljs.core.first(xs);
      var y = cljs.core.first(ys);
      var o = arrangement.core.rank.cljs$core$IFn$_invoke$arity$2 ? arrangement.core.rank.cljs$core$IFn$_invoke$arity$2(x, y) : arrangement.core.rank.call(null, x, y);
      if (o === 0) {
        var G__20004 = cljs.core.next(xs);
        var G__20005 = cljs.core.next(ys);
        xs = G__20004;
        ys = G__20005;
        continue;
      } else {
        return o;
      }
    } else {
      return cljs.core.count(xs) - cljs.core.count(ys);
    }
    break;
  }
};
arrangement.core.rank = function arrangement$core$rank(a, b) {
  if (a === b) {
    return 0;
  } else {
    var pri_a = arrangement.core.type_priority(a);
    var pri_b = arrangement.core.type_priority(b);
    if (pri_a < pri_b) {
      return -1;
    } else {
      if (pri_a > pri_b) {
        return 1;
      } else {
        if (arrangement.core.directly_comparable_QMARK_(pri_a)) {
          return cljs.core.compare(a, b);
        } else {
          if (cljs.core.set_QMARK_(a)) {
            var size_diff = cljs.core.count(a) - cljs.core.count(b);
            if (size_diff === 0) {
              return arrangement.core.compare_seqs(cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arrangement.core.rank, a), cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arrangement.core.rank, b));
            } else {
              return size_diff;
            }
          } else {
            if (cljs.core.map_QMARK_(a)) {
              var size_diff = cljs.core.count(a) - cljs.core.count(b);
              if (size_diff === 0) {
                return arrangement.core.compare_seqs(cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(cljs.core.key, arrangement.core.rank, cljs.core.seq(a)), cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(cljs.core.key, arrangement.core.rank, cljs.core.seq(b)));
              } else {
                return size_diff;
              }
            } else {
              if (cljs.core.coll_QMARK_(a)) {
                return arrangement.core.compare_seqs(a, b);
              } else {
                var class_diff = cljs.core.compare(arrangement.core.type_name(a), arrangement.core.type_name(b));
                if (class_diff === 0) {
                  return cljs.core.compare(a, b);
                } else {
                  return class_diff;
                }
              }
            }
          }
        }
      }
    }
  }
};
goog.provide("fipp.util");
fipp.util.boolean_QMARK_ = function fipp$util$boolean_QMARK_(x) {
  return x === true || x === false;
};
fipp.util.char_QMARK_ = function fipp$util$char_QMARK_(x) {
  return false;
};
fipp.util.regexp_QMARK_ = cljs.core.regexp_QMARK_;
fipp.util.edn_QMARK_ = function fipp$util$edn_QMARK_(x) {
  var or__4253__auto__ = x == null;
  if (or__4253__auto__) {
    return or__4253__auto__;
  } else {
    var or__4253__auto____$1 = fipp.util.boolean_QMARK_(x);
    if (or__4253__auto____$1) {
      return or__4253__auto____$1;
    } else {
      var or__4253__auto____$2 = typeof x === "string";
      if (or__4253__auto____$2) {
        return or__4253__auto____$2;
      } else {
        var or__4253__auto____$3 = fipp.util.char_QMARK_(x);
        if (or__4253__auto____$3) {
          return or__4253__auto____$3;
        } else {
          var or__4253__auto____$4 = x instanceof cljs.core.Symbol;
          if (or__4253__auto____$4) {
            return or__4253__auto____$4;
          } else {
            var or__4253__auto____$5 = x instanceof cljs.core.Keyword;
            if (or__4253__auto____$5) {
              return or__4253__auto____$5;
            } else {
              var or__4253__auto____$6 = typeof x === "number";
              if (or__4253__auto____$6) {
                return or__4253__auto____$6;
              } else {
                var or__4253__auto____$7 = cljs.core.seq_QMARK_(x);
                if (or__4253__auto____$7) {
                  return or__4253__auto____$7;
                } else {
                  var or__4253__auto____$8 = cljs.core.vector_QMARK_(x);
                  if (or__4253__auto____$8) {
                    return or__4253__auto____$8;
                  } else {
                    var or__4253__auto____$9 = cljs.core.record_QMARK_(x);
                    if (or__4253__auto____$9) {
                      return or__4253__auto____$9;
                    } else {
                      var or__4253__auto____$10 = cljs.core.map_QMARK_(x);
                      if (or__4253__auto____$10) {
                        return or__4253__auto____$10;
                      } else {
                        var or__4253__auto____$11 = cljs.core.set_QMARK_(x);
                        if (or__4253__auto____$11) {
                          return or__4253__auto____$11;
                        } else {
                          var or__4253__auto____$12 = cljs.core.tagged_literal_QMARK_(x);
                          if (or__4253__auto____$12) {
                            return or__4253__auto____$12;
                          } else {
                            var or__4253__auto____$13 = cljs.core.var_QMARK_(x);
                            if (or__4253__auto____$13) {
                              return or__4253__auto____$13;
                            } else {
                              return fipp.util.regexp_QMARK_.cljs$core$IFn$_invoke$arity$1 ? fipp.util.regexp_QMARK_.cljs$core$IFn$_invoke$arity$1(x) : fipp.util.regexp_QMARK_.call(null, x);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
fipp.util.value_obj_QMARK_ = function fipp$util$value_obj_QMARK_(x) {
  var and__4251__auto__ = !(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 262144 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IWithMeta$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, x);
  if (and__4251__auto__) {
    return !cljs.core.var_QMARK_(x);
  } else {
    return and__4251__auto__;
  }
};
fipp.util.instant_supported_QMARK_ = true;
goog.provide("fipp.ednize");
fipp.ednize.IEdn = function() {
};
var fipp$ednize$IEdn$_edn$dyn_20040 = function(x) {
  var x__4550__auto__ = x == null ? null : x;
  var m__4551__auto__ = fipp.ednize._edn[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4551__auto__.call(null, x);
  } else {
    var m__4549__auto__ = fipp.ednize._edn["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4549__auto__.call(null, x);
    } else {
      throw cljs.core.missing_protocol("IEdn.-edn", x);
    }
  }
};
fipp.ednize._edn = function fipp$ednize$_edn(x) {
  if (!(x == null) && !(x.fipp$ednize$IEdn$_edn$arity$1 == null)) {
    return x.fipp$ednize$IEdn$_edn$arity$1(x);
  } else {
    return fipp$ednize$IEdn$_edn$dyn_20040(x);
  }
};
fipp.ednize.IOverride = function() {
};
fipp.ednize.override_QMARK_ = function fipp$ednize$override_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.fipp$ednize$IEdn$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(fipp.ednize.IEdn, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(fipp.ednize.IEdn, x);
  }
};
fipp.ednize.edn = function fipp$ednize$edn(x) {
  if (fipp.ednize.override_QMARK_(x)) {
    return fipp.ednize._edn(x);
  } else {
    if (cljs.core.object_QMARK_(x)) {
      return cljs.core.tagged_literal(cljs$cst$symbol$js, cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
        var iter__4652__auto__ = function fipp$ednize$edn_$_iter__20006(s__20007) {
          return new cljs.core.LazySeq(null, function() {
            var s__20007__$1 = s__20007;
            while (true) {
              var temp__5753__auto__ = cljs.core.seq(s__20007__$1);
              if (temp__5753__auto__) {
                var s__20007__$2 = temp__5753__auto__;
                if (cljs.core.chunked_seq_QMARK_(s__20007__$2)) {
                  var c__4650__auto__ = cljs.core.chunk_first(s__20007__$2);
                  var size__4651__auto__ = cljs.core.count(c__4650__auto__);
                  var b__20009 = cljs.core.chunk_buffer(size__4651__auto__);
                  if (function() {
                    var i__20008 = 0;
                    while (true) {
                      if (i__20008 < size__4651__auto__) {
                        var k = cljs.core._nth(c__4650__auto__, i__20008);
                        cljs.core.chunk_append(b__20009, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), x[k]], null));
                        var G__20046 = i__20008 + 1;
                        i__20008 = G__20046;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons(cljs.core.chunk(b__20009), fipp$ednize$edn_$_iter__20006(cljs.core.chunk_rest(s__20007__$2)));
                  } else {
                    return cljs.core.chunk_cons(cljs.core.chunk(b__20009), null);
                  }
                } else {
                  var k = cljs.core.first(s__20007__$2);
                  return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), x[k]], null), fipp$ednize$edn_$_iter__20006(cljs.core.rest(s__20007__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          }, null, null);
        };
        return iter__4652__auto__(cljs.core.js_keys(x));
      }()));
    } else {
      if (cljs.core.array_QMARK_(x)) {
        return cljs.core.tagged_literal(cljs$cst$symbol$js, cljs.core.vec(x));
      } else {
        if (!(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IDeref$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IDeref, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IDeref, x)) {
          var pending_QMARK_ = function() {
            var and__4251__auto__ = !(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 1 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IPending$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IPending, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IPending, x);
            if (and__4251__auto__) {
              return !cljs.core.realized_QMARK_(x);
            } else {
              return and__4251__auto__;
            }
          }();
          var val = pending_QMARK_ ? null : cljs.core.deref(x);
          var status = pending_QMARK_ ? cljs$cst$keyword$pending : cljs$cst$keyword$ready;
          return cljs.core.tagged_literal(cljs$cst$symbol$object, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.type(x)], 0))), new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$status, status, cljs$cst$keyword$val, val], null)], null));
        } else {
          if (x instanceof Date) {
            return cljs.core.tagged_literal(cljs$cst$symbol$inst, function() {
              var normalize = function(n, len) {
                var ns = cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                while (true) {
                  if (ns.length < len) {
                    var G__20049 = ["0", ns].join("");
                    ns = G__20049;
                    continue;
                  } else {
                    return ns;
                  }
                  break;
                }
              };
              return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(x.getUTCFullYear()), "-", normalize(x.getUTCMonth() + 1, 2), "-", normalize(x.getUTCDate(), 2), "T", normalize(x.getUTCHours(), 2), ":", normalize(x.getUTCMinutes(), 2), ":", normalize(x.getUTCSeconds(), 2), ".", normalize(x.getUTCMilliseconds(), 3), "-", "00:00"].join("");
            }());
          } else {
            if (!(x == null) ? false || cljs.core.PROTOCOL_SENTINEL === x.fipp$ednize$IEdn$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(fipp.ednize.IEdn, x) : false : cljs.core.native_satisfies_QMARK_(fipp.ednize.IEdn, x)) {
              return fipp.ednize._edn(x);
            } else {
              if (cljs.core.truth_(fipp.util.edn_QMARK_(x))) {
                return x;
              } else {
                return cljs.core.tagged_literal(cljs$cst$symbol$object, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.type(x)], 0)))], null));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.UUID.prototype.fipp$ednize$IEdn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.UUID.prototype.fipp$ednize$IEdn$_edn$arity$1 = function(x) {
  var x__$1 = this;
  return cljs.core.tagged_literal(cljs$cst$symbol$uuid, cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1));
};
cljs.core.ExceptionInfo.prototype.fipp$ednize$IEdn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ExceptionInfo.prototype.fipp$ednize$IEdn$_edn$arity$1 = function(x) {
  var x__$1 = this;
  return cljs.core.tagged_literal(cljs$cst$symbol$ExceptionInfo, cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$message, cljs.core.ex_message(x__$1), cljs$cst$keyword$data, cljs.core.ex_data(x__$1)], null), function() {
    var temp__5753__auto__ = cljs.core.ex_cause(x__$1);
    if (cljs.core.truth_(temp__5753__auto__)) {
      var cause = temp__5753__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$cause, cause], null);
    } else {
      return null;
    }
  }()], 0)));
};
fipp.ednize.record__GT_tagged = function fipp$ednize$record__GT_tagged(x) {
  return cljs.core.tagged_literal(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol, clojure.string.split.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.type(x)], 0)), /\//, 2)), cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, x));
};
goog.provide("fipp.visit");
fipp.visit.IVisitor = function() {
};
var fipp$visit$IVisitor$visit_unknown$dyn_20288 = function(this$, x) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = fipp.visit.visit_unknown[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4551__auto__.call(null, this$, x);
  } else {
    var m__4549__auto__ = fipp.visit.visit_unknown["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4549__auto__.call(null, this$, x);
    } else {
      throw cljs.core.missing_protocol("IVisitor.visit-unknown", this$);
    }
  }
};
fipp.visit.visit_unknown = function fipp$visit$visit_unknown(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_unknown$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_unknown$arity$2(this$, x);
  } else {
    return fipp$visit$IVisitor$visit_unknown$dyn_20288(this$, x);
  }
};
var fipp$visit$IVisitor$visit_nil$dyn_20294 = function(this$) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = fipp.visit.visit_nil[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4551__auto__.call(null, this$);
  } else {
    var m__4549__auto__ = fipp.visit.visit_nil["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4549__auto__.call(null, this$);
    } else {
      throw cljs.core.missing_protocol("IVisitor.visit-nil", this$);
    }
  }
};
fipp.visit.visit_nil = function fipp$visit$visit_nil(this$) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_nil$arity$1 == null)) {
    return this$.fipp$visit$IVisitor$visit_nil$arity$1(this$);
  } else {
    return fipp$visit$IVisitor$visit_nil$dyn_20294(this$);
  }
};
var fipp$visit$IVisitor$visit_boolean$dyn_20300 = function(this$, x) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = fipp.visit.visit_boolean[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4551__auto__.call(null, this$, x);
  } else {
    var m__4549__auto__ = fipp.visit.visit_boolean["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4549__auto__.call(null, this$, x);
    } else {
      throw cljs.core.missing_protocol("IVisitor.visit-boolean", this$);
    }
  }
};
fipp.visit.visit_boolean = function fipp$visit$visit_boolean(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_boolean$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_boolean$arity$2(this$, x);
  } else {
    return fipp$visit$IVisitor$visit_boolean$dyn_20300(this$, x);
  }
};
var fipp$visit$IVisitor$visit_string$dyn_20304 = function(this$, x) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = fipp.visit.visit_string[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4551__auto__.call(null, this$, x);
  } else {
    var m__4549__auto__ = fipp.visit.visit_string["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4549__auto__.call(null, this$, x);
    } else {
      throw cljs.core.missing_protocol("IVisitor.visit-string", this$);
    }
  }
};
fipp.visit.visit_string = function fipp$visit$visit_string(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_string$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_string$arity$2(this$, x);
  } else {
    return fipp$visit$IVisitor$visit_string$dyn_20304(this$, x);
  }
};
var fipp$visit$IVisitor$visit_character$dyn_20307 = function(this$, x) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = fipp.visit.visit_character[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4551__auto__.call(null, this$, x);
  } else {
    var m__4549__auto__ = fipp.visit.visit_character["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4549__auto__.call(null, this$, x);
    } else {
      throw cljs.core.missing_protocol("IVisitor.visit-character", this$);
    }
  }
};
fipp.visit.visit_character = function fipp$visit$visit_character(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_character$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_character$arity$2(this$, x);
  } else {
    return fipp$visit$IVisitor$visit_character$dyn_20307(this$, x);
  }
};
var fipp$visit$IVisitor$visit_symbol$dyn_20308 = function(this$, x) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = fipp.visit.visit_symbol[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4551__auto__.call(null, this$, x);
  } else {
    var m__4549__auto__ = fipp.visit.visit_symbol["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4549__auto__.call(null, this$, x);
    } else {
      throw cljs.core.missing_protocol("IVisitor.visit-symbol", this$);
    }
  }
};
fipp.visit.visit_symbol = function fipp$visit$visit_symbol(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_symbol$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_symbol$arity$2(this$, x);
  } else {
    return fipp$visit$IVisitor$visit_symbol$dyn_20308(this$, x);
  }
};
var fipp$visit$IVisitor$visit_keyword$dyn_20309 = function(this$, x) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = fipp.visit.visit_keyword[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4551__auto__.call(null, this$, x);
  } else {
    var m__4549__auto__ = fipp.visit.visit_keyword["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4549__auto__.call(null, this$, x);
    } else {
      throw cljs.core.missing_protocol("IVisitor.visit-keyword", this$);
    }
  }
};
fipp.visit.visit_keyword = function fipp$visit$visit_keyword(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_keyword$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_keyword$arity$2(this$, x);
  } else {
    return fipp$visit$IVisitor$visit_keyword$dyn_20309(this$, x);
  }
};
var fipp$visit$IVisitor$visit_number$dyn_20310 = function(this$, x) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = fipp.visit.visit_number[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4551__auto__.call(null, this$, x);
  } else {
    var m__4549__auto__ = fipp.visit.visit_number["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4549__auto__.call(null, this$, x);
    } else {
      throw cljs.core.missing_protocol("IVisitor.visit-number", this$);
    }
  }
};
fipp.visit.visit_number = function fipp$visit$visit_number(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_number$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_number$arity$2(this$, x);
  } else {
    return fipp$visit$IVisitor$visit_number$dyn_20310(this$, x);
  }
};
var fipp$visit$IVisitor$visit_seq$dyn_20317 = function(this$, x) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = fipp.visit.visit_seq[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4551__auto__.call(null, this$, x);
  } else {
    var m__4549__auto__ = fipp.visit.visit_seq["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4549__auto__.call(null, this$, x);
    } else {
      throw cljs.core.missing_protocol("IVisitor.visit-seq", this$);
    }
  }
};
fipp.visit.visit_seq = function fipp$visit$visit_seq(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_seq$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_seq$arity$2(this$, x);
  } else {
    return fipp$visit$IVisitor$visit_seq$dyn_20317(this$, x);
  }
};
var fipp$visit$IVisitor$visit_vector$dyn_20320 = function(this$, x) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = fipp.visit.visit_vector[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4551__auto__.call(null, this$, x);
  } else {
    var m__4549__auto__ = fipp.visit.visit_vector["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4549__auto__.call(null, this$, x);
    } else {
      throw cljs.core.missing_protocol("IVisitor.visit-vector", this$);
    }
  }
};
fipp.visit.visit_vector = function fipp$visit$visit_vector(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_vector$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_vector$arity$2(this$, x);
  } else {
    return fipp$visit$IVisitor$visit_vector$dyn_20320(this$, x);
  }
};
var fipp$visit$IVisitor$visit_map$dyn_20340 = function(this$, x) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = fipp.visit.visit_map[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4551__auto__.call(null, this$, x);
  } else {
    var m__4549__auto__ = fipp.visit.visit_map["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4549__auto__.call(null, this$, x);
    } else {
      throw cljs.core.missing_protocol("IVisitor.visit-map", this$);
    }
  }
};
fipp.visit.visit_map = function fipp$visit$visit_map(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_map$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_map$arity$2(this$, x);
  } else {
    return fipp$visit$IVisitor$visit_map$dyn_20340(this$, x);
  }
};
var fipp$visit$IVisitor$visit_set$dyn_20342 = function(this$, x) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = fipp.visit.visit_set[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4551__auto__.call(null, this$, x);
  } else {
    var m__4549__auto__ = fipp.visit.visit_set["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4549__auto__.call(null, this$, x);
    } else {
      throw cljs.core.missing_protocol("IVisitor.visit-set", this$);
    }
  }
};
fipp.visit.visit_set = function fipp$visit$visit_set(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_set$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_set$arity$2(this$, x);
  } else {
    return fipp$visit$IVisitor$visit_set$dyn_20342(this$, x);
  }
};
var fipp$visit$IVisitor$visit_tagged$dyn_20349 = function(this$, x) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = fipp.visit.visit_tagged[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4551__auto__.call(null, this$, x);
  } else {
    var m__4549__auto__ = fipp.visit.visit_tagged["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4549__auto__.call(null, this$, x);
    } else {
      throw cljs.core.missing_protocol("IVisitor.visit-tagged", this$);
    }
  }
};
fipp.visit.visit_tagged = function fipp$visit$visit_tagged(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_tagged$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_tagged$arity$2(this$, x);
  } else {
    return fipp$visit$IVisitor$visit_tagged$dyn_20349(this$, x);
  }
};
var fipp$visit$IVisitor$visit_meta$dyn_20350 = function(this$, meta, x) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = fipp.visit.visit_meta[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(this$, meta, x) : m__4551__auto__.call(null, this$, meta, x);
  } else {
    var m__4549__auto__ = fipp.visit.visit_meta["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(this$, meta, x) : m__4549__auto__.call(null, this$, meta, x);
    } else {
      throw cljs.core.missing_protocol("IVisitor.visit-meta", this$);
    }
  }
};
fipp.visit.visit_meta = function fipp$visit$visit_meta(this$, meta, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_meta$arity$3 == null)) {
    return this$.fipp$visit$IVisitor$visit_meta$arity$3(this$, meta, x);
  } else {
    return fipp$visit$IVisitor$visit_meta$dyn_20350(this$, meta, x);
  }
};
var fipp$visit$IVisitor$visit_var$dyn_20357 = function(this$, x) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = fipp.visit.visit_var[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4551__auto__.call(null, this$, x);
  } else {
    var m__4549__auto__ = fipp.visit.visit_var["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4549__auto__.call(null, this$, x);
    } else {
      throw cljs.core.missing_protocol("IVisitor.visit-var", this$);
    }
  }
};
fipp.visit.visit_var = function fipp$visit$visit_var(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_var$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_var$arity$2(this$, x);
  } else {
    return fipp$visit$IVisitor$visit_var$dyn_20357(this$, x);
  }
};
var fipp$visit$IVisitor$visit_pattern$dyn_20359 = function(this$, x) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = fipp.visit.visit_pattern[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4551__auto__.call(null, this$, x);
  } else {
    var m__4549__auto__ = fipp.visit.visit_pattern["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4549__auto__.call(null, this$, x);
    } else {
      throw cljs.core.missing_protocol("IVisitor.visit-pattern", this$);
    }
  }
};
fipp.visit.visit_pattern = function fipp$visit$visit_pattern(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_pattern$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_pattern$arity$2(this$, x);
  } else {
    return fipp$visit$IVisitor$visit_pattern$dyn_20359(this$, x);
  }
};
var fipp$visit$IVisitor$visit_record$dyn_20360 = function(this$, x) {
  var x__4550__auto__ = this$ == null ? null : this$;
  var m__4551__auto__ = fipp.visit.visit_record[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4551__auto__.call(null, this$, x);
  } else {
    var m__4549__auto__ = fipp.visit.visit_record["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(this$, x) : m__4549__auto__.call(null, this$, x);
    } else {
      throw cljs.core.missing_protocol("IVisitor.visit-record", this$);
    }
  }
};
fipp.visit.visit_record = function fipp$visit$visit_record(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_record$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_record$arity$2(this$, x);
  } else {
    return fipp$visit$IVisitor$visit_record$dyn_20360(this$, x);
  }
};
fipp.visit.visit_STAR_ = function fipp$visit$visit_STAR_(visitor, x) {
  if (x == null) {
    return fipp.visit.visit_nil(visitor);
  } else {
    if (fipp.ednize.override_QMARK_(x)) {
      return fipp.visit.visit_unknown(visitor, x);
    } else {
      if (fipp.util.boolean_QMARK_(x)) {
        return fipp.visit.visit_boolean(visitor, x);
      } else {
        if (typeof x === "string") {
          return fipp.visit.visit_string(visitor, x);
        } else {
          if (fipp.util.char_QMARK_(x)) {
            return fipp.visit.visit_character(visitor, x);
          } else {
            if (x instanceof cljs.core.Symbol) {
              return fipp.visit.visit_symbol(visitor, x);
            } else {
              if (x instanceof cljs.core.Keyword) {
                return fipp.visit.visit_keyword(visitor, x);
              } else {
                if (typeof x === "number") {
                  return fipp.visit.visit_number(visitor, x);
                } else {
                  if (cljs.core.seq_QMARK_(x)) {
                    return fipp.visit.visit_seq(visitor, x);
                  } else {
                    if (cljs.core.vector_QMARK_(x)) {
                      return fipp.visit.visit_vector(visitor, x);
                    } else {
                      if (cljs.core.record_QMARK_(x)) {
                        return fipp.visit.visit_record(visitor, x);
                      } else {
                        if (cljs.core.map_QMARK_(x)) {
                          return fipp.visit.visit_map(visitor, x);
                        } else {
                          if (cljs.core.set_QMARK_(x)) {
                            return fipp.visit.visit_set(visitor, x);
                          } else {
                            if (cljs.core.tagged_literal_QMARK_(x)) {
                              return fipp.visit.visit_tagged(visitor, x);
                            } else {
                              if (cljs.core.var_QMARK_(x)) {
                                return fipp.visit.visit_var(visitor, x);
                              } else {
                                if (cljs.core.truth_(fipp.util.regexp_QMARK_.cljs$core$IFn$_invoke$arity$1 ? fipp.util.regexp_QMARK_.cljs$core$IFn$_invoke$arity$1(x) : fipp.util.regexp_QMARK_.call(null, x))) {
                                  return fipp.visit.visit_pattern(visitor, x);
                                } else {
                                  return fipp.visit.visit_unknown(visitor, x);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
fipp.visit.value_meta = function fipp$visit$value_meta(x) {
  if (fipp.util.value_obj_QMARK_(x)) {
    return cljs.core.meta(x);
  } else {
    return null;
  }
};
fipp.visit.visit = function fipp$visit$visit(visitor, x) {
  var temp__5751__auto__ = fipp.visit.value_meta(x);
  if (cljs.core.truth_(temp__5751__auto__)) {
    var m = temp__5751__auto__;
    return fipp.visit.visit_meta(visitor, m, x);
  } else {
    return fipp.visit.visit_STAR_(visitor, x);
  }
};
goog.provide("clojure.core.rrb_vector.protocols");
clojure.core.rrb_vector.protocols.PSpliceableVector = function() {
};
var clojure$core$rrb_vector$protocols$PSpliceableVector$_splicev$dyn_20025 = function(v1, v2) {
  var x__4550__auto__ = v1 == null ? null : v1;
  var m__4551__auto__ = clojure.core.rrb_vector.protocols._splicev[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(v1, v2) : m__4551__auto__.call(null, v1, v2);
  } else {
    var m__4549__auto__ = clojure.core.rrb_vector.protocols._splicev["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(v1, v2) : m__4549__auto__.call(null, v1, v2);
    } else {
      throw cljs.core.missing_protocol("PSpliceableVector.-splicev", v1);
    }
  }
};
clojure.core.rrb_vector.protocols._splicev = function clojure$core$rrb_vector$protocols$_splicev(v1, v2) {
  if (!(v1 == null) && !(v1.clojure$core$rrb_vector$protocols$PSpliceableVector$_splicev$arity$2 == null)) {
    return v1.clojure$core$rrb_vector$protocols$PSpliceableVector$_splicev$arity$2(v1, v2);
  } else {
    return clojure$core$rrb_vector$protocols$PSpliceableVector$_splicev$dyn_20025(v1, v2);
  }
};
clojure.core.rrb_vector.protocols.PSliceableVector = function() {
};
var clojure$core$rrb_vector$protocols$PSliceableVector$_slicev$dyn_20027 = function(v, start, end) {
  var x__4550__auto__ = v == null ? null : v;
  var m__4551__auto__ = clojure.core.rrb_vector.protocols._slicev[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(v, start, end) : m__4551__auto__.call(null, v, start, end);
  } else {
    var m__4549__auto__ = clojure.core.rrb_vector.protocols._slicev["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(v, start, end) : m__4549__auto__.call(null, v, start, end);
    } else {
      throw cljs.core.missing_protocol("PSliceableVector.-slicev", v);
    }
  }
};
clojure.core.rrb_vector.protocols._slicev = function clojure$core$rrb_vector$protocols$_slicev(v, start, end) {
  if (!(v == null) && !(v.clojure$core$rrb_vector$protocols$PSliceableVector$_slicev$arity$3 == null)) {
    return v.clojure$core$rrb_vector$protocols$PSliceableVector$_slicev$arity$3(v, start, end);
  } else {
    return clojure$core$rrb_vector$protocols$PSliceableVector$_slicev$dyn_20027(v, start, end);
  }
};
goog.provide("clojure.core.rrb_vector.nodes");
clojure.core.rrb_vector.nodes.empty_node = cljs.core.PersistentVector.EMPTY_NODE;
clojure.core.rrb_vector.nodes.clone = function clojure$core$rrb_vector$nodes$clone(shift, node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
clojure.core.rrb_vector.nodes.regular_QMARK_ = function clojure$core$rrb_vector$nodes$regular_QMARK_(node) {
  return !(node.arr.length === 33);
};
clojure.core.rrb_vector.nodes.node_ranges = function clojure$core$rrb_vector$nodes$node_ranges(node) {
  return node.arr[32];
};
clojure.core.rrb_vector.nodes.last_range = function clojure$core$rrb_vector$nodes$last_range(node) {
  var rngs = clojure.core.rrb_vector.nodes.node_ranges(node);
  var i = rngs[32] - 1;
  return rngs[i];
};
clojure.core.rrb_vector.nodes.regular_ranges = function clojure$core$rrb_vector$nodes$regular_ranges(shift, cnt) {
  var step = 1 << shift;
  var rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  var i = 0;
  var r = step;
  while (true) {
    if (r < cnt) {
      rngs[i] = r;
      var G__20078 = i + 1;
      var G__20079 = r + step;
      i = G__20078;
      r = G__20079;
      continue;
    } else {
      rngs[i] = cnt;
      rngs[32] = i + 1;
      return rngs;
    }
    break;
  }
};
clojure.core.rrb_vector.nodes.overflow_QMARK_ = function clojure$core$rrb_vector$nodes$overflow_QMARK_(root, shift, cnt) {
  while (true) {
    if (clojure.core.rrb_vector.nodes.regular_QMARK_(root)) {
      return cnt >> 5 > 1 << shift;
    } else {
      var rngs = clojure.core.rrb_vector.nodes.node_ranges(root);
      var slc = rngs[32];
      var and__4251__auto__ = slc === 32;
      if (and__4251__auto__) {
        var or__4253__auto__ = shift === 5;
        if (or__4253__auto__) {
          return or__4253__auto__;
        } else {
          var G__20082 = root.arr[slc - 1];
          var G__20083 = shift - 5;
          var G__20084 = rngs[31] - rngs[30] + 32;
          root = G__20082;
          shift = G__20083;
          cnt = G__20084;
          continue;
        }
      } else {
        return and__4251__auto__;
      }
    }
    break;
  }
};
clojure.core.rrb_vector.nodes.index_of_0 = function clojure$core$rrb_vector$nodes$index_of_0(arr) {
  var l = 0;
  var h = 31;
  while (true) {
    if (l >= h - 1) {
      if ((arr[l] | 0) === 0) {
        return l;
      } else {
        if ((arr[h] | 0) === 0) {
          return h;
        } else {
          return 32;
        }
      }
    } else {
      var mid = l + (h - l >> 1);
      if ((arr[mid] | 0) === 0) {
        var G__20085 = l;
        var G__20086 = mid;
        l = G__20085;
        h = G__20086;
        continue;
      } else {
        var G__20087 = mid + 1;
        var G__20088 = h;
        l = G__20087;
        h = G__20088;
        continue;
      }
    }
    break;
  }
};
clojure.core.rrb_vector.nodes.index_of_nil = function clojure$core$rrb_vector$nodes$index_of_nil(arr) {
  var l = 0;
  var h = 31;
  while (true) {
    if (l >= h - 1) {
      if (arr[l] == null) {
        return l;
      } else {
        if (arr[h] == null) {
          return h;
        } else {
          return 32;
        }
      }
    } else {
      var mid = l + (h - l >> 1);
      if (arr[mid] == null) {
        var G__20089 = l;
        var G__20090 = mid;
        l = G__20089;
        h = G__20090;
        continue;
      } else {
        var G__20091 = mid + 1;
        var G__20092 = h;
        l = G__20091;
        h = G__20092;
        continue;
      }
    }
    break;
  }
};
clojure.core.rrb_vector.nodes.first_child = function clojure$core$rrb_vector$nodes$first_child(node) {
  return node.arr[0];
};
clojure.core.rrb_vector.nodes.last_child = function clojure$core$rrb_vector$nodes$last_child(node) {
  var arr = node.arr;
  if (clojure.core.rrb_vector.nodes.regular_QMARK_(node)) {
    return arr[clojure.core.rrb_vector.nodes.index_of_nil(arr) - 1];
  } else {
    return arr[clojure.core.rrb_vector.nodes.node_ranges(node)[32] - 1];
  }
};
clojure.core.rrb_vector.nodes.remove_leftmost_child = function clojure$core$rrb_vector$nodes$remove_leftmost_child(shift, parent) {
  var arr = parent.arr;
  if (arr[1] == null) {
    return null;
  } else {
    var r_QMARK_ = clojure.core.rrb_vector.nodes.regular_QMARK_(parent);
    var new_arr = new Array(r_QMARK_ ? 32 : 33);
    cljs.core.array_copy(arr, 1, new_arr, 0, 31);
    if (!r_QMARK_) {
      var rngs_20093 = clojure.core.rrb_vector.nodes.node_ranges(parent);
      var rng0_20094 = rngs_20093[0];
      var new_rngs_20095 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var lim_20096 = rngs_20093[32];
      cljs.core.array_copy(rngs_20093, 1, new_rngs_20095, 0, lim_20096 - 1);
      var i_20097 = 0;
      while (true) {
        if (i_20097 < lim_20096) {
          new_rngs_20095[i_20097] = new_rngs_20095[i_20097] - rng0_20094;
          var G__20098 = i_20097 + 1;
          i_20097 = G__20098;
          continue;
        } else {
        }
        break;
      }
      new_rngs_20095[32] = rngs_20093[32] - 1;
      new_rngs_20095[rngs_20093[32] - 1] = 0;
      new_arr[32] = new_rngs_20095;
    } else {
    }
    return cljs.core.__GT_VectorNode(parent.edit, new_arr);
  }
};
clojure.core.rrb_vector.nodes.replace_leftmost_child = function clojure$core$rrb_vector$nodes$replace_leftmost_child(shift, parent, pcnt, child, d) {
  if (clojure.core.rrb_vector.nodes.regular_QMARK_(parent)) {
    var step = 1 << shift;
    var rng0 = step - d;
    var ncnt = pcnt - d;
    var li = shift >> pcnt - 1 & 31;
    var arr = parent.arr;
    var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
    var new_rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
    new_arr[0] = child;
    cljs.core.array_copy(arr, 1, new_arr, 1, li);
    new_arr[32] = new_rngs;
    new_rngs[0] = rng0;
    new_rngs[li] = ncnt;
    new_rngs[32] = li + 1;
    var i_20099 = 1;
    while (true) {
      if (i_20099 <= li) {
        new_rngs[i_20099] = new_rngs[i_20099 - 1] + step;
        var G__20101 = i_20099 + 1;
        i_20099 = G__20101;
        continue;
      } else {
      }
      break;
    }
    return cljs.core.__GT_VectorNode(null, new_arr);
  } else {
    var new_arr = cljs.core.aclone(parent.arr);
    var rngs = clojure.core.rrb_vector.nodes.node_ranges(parent);
    var new_rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
    var li = rngs[32] - 1;
    new_rngs[32] = rngs[32];
    new_arr[32] = new_rngs;
    new_arr[0] = child;
    var i_20102 = 0;
    while (true) {
      if (i_20102 <= li) {
        new_rngs[i_20102] = rngs[i_20102] - d;
        var G__20103 = i_20102 + 1;
        i_20102 = G__20103;
        continue;
      } else {
      }
      break;
    }
    return cljs.core.__GT_VectorNode(null, new_arr);
  }
};
clojure.core.rrb_vector.nodes.replace_rightmost_child = function clojure$core$rrb_vector$nodes$replace_rightmost_child(shift, parent, child, d) {
  if (clojure.core.rrb_vector.nodes.regular_QMARK_(parent)) {
    var arr = parent.arr;
    var i = clojure.core.rrb_vector.nodes.index_of_nil(arr) - 1;
    if (clojure.core.rrb_vector.nodes.regular_QMARK_(child)) {
      var new_arr = cljs.core.aclone(arr);
      new_arr[i] = child;
      return cljs.core.__GT_VectorNode(null, new_arr);
    } else {
      var arr__$1 = parent.arr;
      var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var step = 1 << shift;
      var rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      rngs[32] = i + 1;
      new_arr[32] = rngs;
      cljs.core.array_copy(arr__$1, 0, new_arr, 0, i);
      new_arr[i] = child;
      var j_20114 = 0;
      var r_20115 = step;
      while (true) {
        if (j_20114 <= i) {
          rngs[j_20114] = r_20115;
          var G__20116 = j_20114 + 1;
          var G__20118 = r_20115 + step;
          j_20114 = G__20116;
          r_20115 = G__20118;
          continue;
        } else {
        }
        break;
      }
      rngs[i] = clojure.core.rrb_vector.nodes.last_range(child);
      return cljs.core.__GT_VectorNode(null, new_arr);
    }
  } else {
    var rngs = clojure.core.rrb_vector.nodes.node_ranges(parent);
    var new_rngs = cljs.core.aclone(rngs);
    var i = rngs[32] - 1;
    var new_arr = cljs.core.aclone(parent.arr);
    new_arr[i] = child;
    new_arr[32] = new_rngs;
    new_rngs[i] = rngs[i] + d;
    return cljs.core.__GT_VectorNode(null, new_arr);
  }
};
clojure.core.rrb_vector.nodes.new_path_STAR_ = function clojure$core$rrb_vector$nodes$new_path_STAR_(shift, node) {
  var reg_QMARK_ = 32 === node.arr.length;
  var len = reg_QMARK_ ? 32 : 33;
  var arr = new Array(len);
  var rngs = !reg_QMARK_ ? function() {
    var G__20058 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
    G__20058[0] = node.arr.length;
    G__20058[32] = 1;
    return G__20058;
  }() : null;
  var ret = cljs.core.__GT_VectorNode(null, arr);
  var arr_20124__$1 = arr;
  var shift_20125__$1 = shift;
  while (true) {
    if (shift_20125__$1 === 5) {
      if (!reg_QMARK_) {
        arr_20124__$1[32] = rngs;
      } else {
      }
      arr_20124__$1[0] = node;
    } else {
      var a_20126 = new Array(len);
      var e_20127 = cljs.core.__GT_VectorNode(null, a_20126);
      arr_20124__$1[0] = e_20127;
      if (!reg_QMARK_) {
        arr_20124__$1[32] = rngs;
      } else {
      }
      var G__20128 = a_20126;
      var G__20129 = shift_20125__$1 - 5;
      arr_20124__$1 = G__20128;
      shift_20125__$1 = G__20129;
      continue;
    }
    break;
  }
  return ret;
};
clojure.core.rrb_vector.nodes.fold_tail = function clojure$core$rrb_vector$nodes$fold_tail(node, shift, cnt, tail) {
  var tlen = tail.length;
  var reg_QMARK_ = clojure.core.rrb_vector.nodes.regular_QMARK_(node) && tlen === 32;
  var arr = node.arr;
  var li = clojure.core.rrb_vector.nodes.index_of_nil(arr);
  var new_arr = new Array(reg_QMARK_ ? 32 : 33);
  var rngs = !clojure.core.rrb_vector.nodes.regular_QMARK_(node) ? clojure.core.rrb_vector.nodes.node_ranges(node) : null;
  var cret = shift === 5 ? cljs.core.__GT_VectorNode(null, tail) : function() {
    var G__20066 = arr[li - 1];
    var G__20068 = shift - 5;
    var G__20069 = clojure.core.rrb_vector.nodes.regular_QMARK_(node) ? cljs.core.mod(cnt, 1 << shift) : function() {
      var li__$1 = rngs[32] - 1;
      if (li__$1 > 0) {
        return rngs[li__$1] - rngs[li__$1 - 1];
      } else {
        return rngs[0];
      }
    }();
    var G__20070 = tail;
    return clojure.core.rrb_vector.nodes.fold_tail.cljs$core$IFn$_invoke$arity$4 ? clojure.core.rrb_vector.nodes.fold_tail.cljs$core$IFn$_invoke$arity$4(G__20066, G__20068, G__20069, G__20070) : clojure.core.rrb_vector.nodes.fold_tail.call(null, G__20066, G__20068, G__20069, G__20070);
  }();
  var new_rngs = !reg_QMARK_ ? cljs.core.truth_(rngs) ? cljs.core.aclone(rngs) : clojure.core.rrb_vector.nodes.regular_ranges(shift, cnt) : null;
  if ((cret == null || shift === 5) && li === 32) {
    return null;
  } else {
    cljs.core.array_copy(arr, 0, new_arr, 0, li);
    if (reg_QMARK_) {
    } else {
      if (cret == null || shift === 5) {
        new_rngs[li] = (li > 0 ? new_rngs[li - 1] : 0 | 0) + tlen;
        new_rngs[32] = li + 1;
      } else {
        if (li > 0) {
          new_rngs[li - 1] = new_rngs[li - 1] + tlen;
        } else {
        }
        new_rngs[32] = li;
      }
    }
    if (!reg_QMARK_) {
      new_arr[32] = new_rngs;
    } else {
    }
    if (cret == null) {
      new_arr[li] = clojure.core.rrb_vector.nodes.new_path_STAR_(shift - 5, cljs.core.__GT_VectorNode(null, tail));
    } else {
      new_arr[shift === 5 ? li : li - 1] = cret;
    }
    return cljs.core.__GT_VectorNode(null, new_arr);
  }
};
goog.provide("clojure.core.rrb_vector.trees");
clojure.core.rrb_vector.trees.new_path = function clojure$core$rrb_vector$trees$new_path(tail, edit, shift, current_node) {
  if (tail.length === 32) {
    var s = 0;
    var n = current_node;
    while (true) {
      if (s === shift) {
        return n;
      } else {
        var arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var ret = cljs.core.__GT_VectorNode(edit, arr);
        arr[0] = n;
        var G__20195 = s + 5;
        var G__20196 = ret;
        s = G__20195;
        n = G__20196;
        continue;
      }
      break;
    }
  } else {
    var s = 0;
    var n = current_node;
    while (true) {
      if (s === shift) {
        return n;
      } else {
        var arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var ret = cljs.core.__GT_VectorNode(edit, arr);
        arr[0] = n;
        arr[32] = rngs;
        rngs[32] = 1;
        rngs[0] = tail.length;
        var G__20198 = s + 5;
        var G__20199 = ret;
        s = G__20198;
        n = G__20199;
        continue;
      }
      break;
    }
  }
};
clojure.core.rrb_vector.trees.push_tail = function clojure$core$rrb_vector$trees$push_tail(shift, cnt, root_edit, current_node, tail_node) {
  if (clojure.core.rrb_vector.nodes.regular_QMARK_(current_node)) {
    var arr = cljs.core.aclone(current_node.arr);
    var ret = cljs.core.__GT_VectorNode(current_node.edit, arr);
    var n_20200 = ret;
    var shift_20201__$1 = shift;
    while (true) {
      var arr_20203__$1 = n_20200.arr;
      var subidx_20204 = cnt - 1 >> shift_20201__$1 & 31;
      if (shift_20201__$1 === 5) {
        arr_20203__$1[subidx_20204] = tail_node;
      } else {
        var temp__5751__auto___20207 = arr_20203__$1[subidx_20204];
        if (cljs.core.truth_(temp__5751__auto___20207)) {
          var child_20208 = temp__5751__auto___20207;
          var new_carr_20209 = cljs.core.aclone(child_20208.arr);
          var new_child_20210 = cljs.core.__GT_VectorNode(root_edit, new_carr_20209);
          arr_20203__$1[subidx_20204] = new_child_20210;
          var G__20211 = new_child_20210;
          var G__20212 = shift_20201__$1 - 5;
          n_20200 = G__20211;
          shift_20201__$1 = G__20212;
          continue;
        } else {
          arr_20203__$1[subidx_20204] = clojure.core.rrb_vector.trees.new_path(tail_node.arr, root_edit, shift_20201__$1 - 5, tail_node);
        }
      }
      break;
    }
    return ret;
  } else {
    var arr = cljs.core.aclone(current_node.arr);
    var rngs = clojure.core.rrb_vector.nodes.node_ranges(current_node);
    var li = rngs[32] - 1;
    var ret = cljs.core.__GT_VectorNode(current_node.edit, arr);
    var cret = shift === 5 ? null : function() {
      var child = arr[li];
      var ccnt = (li > 0 ? rngs[li] - rngs[li - 1] : rngs[0]) + 32;
      if (!clojure.core.rrb_vector.nodes.overflow_QMARK_(child, shift - 5, ccnt)) {
        var G__20109 = shift - 5;
        var G__20110 = ccnt;
        var G__20111 = root_edit;
        var G__20112 = child;
        var G__20113 = tail_node;
        return clojure.core.rrb_vector.trees.push_tail.cljs$core$IFn$_invoke$arity$5 ? clojure.core.rrb_vector.trees.push_tail.cljs$core$IFn$_invoke$arity$5(G__20109, G__20110, G__20111, G__20112, G__20113) : clojure.core.rrb_vector.trees.push_tail.call(null, G__20109, G__20110, G__20111, G__20112, G__20113);
      } else {
        return null;
      }
    }();
    if (cljs.core.truth_(cret)) {
      arr[li] = cret;
      rngs[li] = rngs[li] + 32;
      return ret;
    } else {
      if (li >= 31) {
        var msg_20215 = ["Assigning index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(li + 1), " of vector", " object array to become a node, when that", " index should only be used for storing", " range arrays."].join("");
        var data_20216 = new cljs.core.PersistentArrayMap(null, 7, [cljs$cst$keyword$shift, shift, cljs$cst$keyword$cnt, cnt, cljs$cst$keyword$current_DASH_node, current_node, cljs$cst$keyword$tail_DASH_node, tail_node, cljs$cst$keyword$rngs, rngs, cljs$cst$keyword$li, li, cljs$cst$keyword$cret, cret], null);
        throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(msg_20215, data_20216);
      } else {
      }
      arr[li + 1] = clojure.core.rrb_vector.trees.new_path(tail_node.arr, root_edit, shift - 5, tail_node);
      rngs[li + 1] = rngs[li] + 32;
      rngs[32] = rngs[32] + 1;
      return ret;
    }
  }
};
clojure.core.rrb_vector.trees.pop_tail = function clojure$core$rrb_vector$trees$pop_tail(shift, cnt, root_edit, current_node) {
  if (clojure.core.rrb_vector.nodes.regular_QMARK_(current_node)) {
    var subidx = cnt - 2 >> shift & 31;
    if (shift > 5) {
      var new_child = function() {
        var G__20152 = shift - 5;
        var G__20153 = cnt;
        var G__20154 = root_edit;
        var G__20155 = current_node.arr[subidx];
        return clojure.core.rrb_vector.trees.pop_tail.cljs$core$IFn$_invoke$arity$4 ? clojure.core.rrb_vector.trees.pop_tail.cljs$core$IFn$_invoke$arity$4(G__20152, G__20153, G__20154, G__20155) : clojure.core.rrb_vector.trees.pop_tail.call(null, G__20152, G__20153, G__20154, G__20155);
      }();
      if (new_child == null && subidx === 0) {
        return null;
      } else {
        var arr = cljs.core.aclone(current_node.arr);
        arr[subidx] = new_child;
        return cljs.core.__GT_VectorNode(root_edit, arr);
      }
    } else {
      if (subidx === 0) {
        return null;
      } else {
        var arr = cljs.core.aclone(current_node.arr);
        arr[subidx] = null;
        return cljs.core.__GT_VectorNode(root_edit, arr);
      }
    }
  } else {
    var rngs = clojure.core.rrb_vector.nodes.node_ranges(current_node);
    var subidx = rngs[32] - 1;
    var new_rngs = cljs.core.aclone(rngs);
    if (shift > 5) {
      var child = current_node.arr[subidx];
      var child_cnt = subidx === 0 ? rngs[0] : rngs[subidx] - rngs[subidx - 1];
      var new_child = function() {
        var G__20156 = shift - 5;
        var G__20157 = child_cnt;
        var G__20158 = root_edit;
        var G__20159 = child;
        return clojure.core.rrb_vector.trees.pop_tail.cljs$core$IFn$_invoke$arity$4 ? clojure.core.rrb_vector.trees.pop_tail.cljs$core$IFn$_invoke$arity$4(G__20156, G__20157, G__20158, G__20159) : clojure.core.rrb_vector.trees.pop_tail.call(null, G__20156, G__20157, G__20158, G__20159);
      }();
      if (new_child == null && subidx === 0) {
        return null;
      } else {
        if (clojure.core.rrb_vector.nodes.regular_QMARK_(child)) {
          var arr = cljs.core.aclone(current_node.arr);
          new_rngs[subidx] = new_rngs[subidx] - 32;
          arr[subidx] = new_child;
          arr[32] = new_rngs;
          if (new_child == null) {
            new_rngs[32] = new_rngs[32] - 1;
          } else {
          }
          return cljs.core.__GT_VectorNode(root_edit, arr);
        } else {
          var rng = clojure.core.rrb_vector.nodes.last_range(child);
          var diff = rng - (cljs.core.truth_(new_child) ? clojure.core.rrb_vector.nodes.last_range(new_child) : 0);
          var arr = cljs.core.aclone(current_node.arr);
          new_rngs[subidx] = new_rngs[subidx] - diff;
          arr[subidx] = new_child;
          arr[32] = new_rngs;
          if (new_child == null) {
            new_rngs[32] = new_rngs[32] - 1;
          } else {
          }
          return cljs.core.__GT_VectorNode(root_edit, arr);
        }
      }
    } else {
      if (subidx === 0) {
        return null;
      } else {
        var arr = cljs.core.aclone(current_node.arr);
        var child = arr[subidx];
        var new_rngs__$1 = cljs.core.aclone(rngs);
        arr[subidx] = null;
        arr[32] = new_rngs__$1;
        new_rngs__$1[subidx] = 0;
        new_rngs__$1[32] = new_rngs__$1[32] - 1;
        return cljs.core.__GT_VectorNode(root_edit, arr);
      }
    }
  }
};
clojure.core.rrb_vector.trees.do_assoc = function clojure$core$rrb_vector$trees$do_assoc(shift, current_node, i, val) {
  if (clojure.core.rrb_vector.nodes.regular_QMARK_(current_node)) {
    var node = clojure.core.rrb_vector.nodes.clone(shift, current_node);
    var shift_20236__$1 = shift;
    var node_20237__$1 = node;
    while (true) {
      if (shift_20236__$1 === 0) {
        var arr_20239 = node_20237__$1.arr;
        arr_20239[i & 31] = val;
      } else {
        var arr_20240 = node_20237__$1.arr;
        var subidx_20241 = i >> shift_20236__$1 & 31;
        var child_20242 = clojure.core.rrb_vector.nodes.clone(shift_20236__$1, arr_20240[subidx_20241]);
        arr_20240[subidx_20241] = child_20242;
        var G__20243 = shift_20236__$1 - 5;
        var G__20244 = child_20242;
        shift_20236__$1 = G__20243;
        node_20237__$1 = G__20244;
        continue;
      }
      break;
    }
    return node;
  } else {
    var arr = cljs.core.aclone(current_node.arr);
    var rngs = clojure.core.rrb_vector.nodes.node_ranges(current_node);
    var subidx = i >> shift & 31;
    var subidx__$1 = function() {
      var subidx__$1 = subidx;
      while (true) {
        if (i < (rngs[subidx__$1] | 0)) {
          return subidx__$1;
        } else {
          var G__20245 = subidx__$1 + 1;
          subidx__$1 = G__20245;
          continue;
        }
        break;
      }
    }();
    var i__$1 = subidx__$1 === 0 ? i : i - rngs[subidx__$1 - 1];
    arr[subidx__$1] = function() {
      var G__20183 = shift - 5;
      var G__20184 = arr[subidx__$1];
      var G__20185 = i__$1;
      var G__20186 = val;
      return clojure.core.rrb_vector.trees.do_assoc.cljs$core$IFn$_invoke$arity$4 ? clojure.core.rrb_vector.trees.do_assoc.cljs$core$IFn$_invoke$arity$4(G__20183, G__20184, G__20185, G__20186) : clojure.core.rrb_vector.trees.do_assoc.call(null, G__20183, G__20184, G__20185, G__20186);
    }();
    return cljs.core.__GT_VectorNode(current_node.edit, arr);
  }
};
goog.provide("clojure.core.rrb_vector.transients");
clojure.core.rrb_vector.transients.ensure_editable = function clojure$core$rrb_vector$transients$ensure_editable(edit, node) {
  if (node.edit === edit) {
    return node;
  } else {
    var new_arr = cljs.core.aclone(node.arr);
    if (33 === new_arr.length) {
      new_arr[32] = cljs.core.aclone(new_arr[32]);
    } else {
    }
    return new cljs.core.VectorNode(edit, new_arr);
  }
};
clojure.core.rrb_vector.transients.editable_root = function clojure$core$rrb_vector$transients$editable_root(root) {
  var new_arr = cljs.core.aclone(root.arr);
  if (33 === new_arr.length) {
    new_arr[32] = cljs.core.aclone(new_arr[32]);
  } else {
  }
  return new cljs.core.VectorNode({}, new_arr);
};
clojure.core.rrb_vector.transients.editable_tail = function clojure$core$rrb_vector$transients$editable_tail(tail) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tail, 0, ret, 0, tail.length);
  return ret;
};
clojure.core.rrb_vector.transients.push_tail_BANG_ = function clojure$core$rrb_vector$transients$push_tail_BANG_(shift, cnt, root_edit, current_node, tail_node) {
  var ret = clojure.core.rrb_vector.transients.ensure_editable(root_edit, current_node);
  if (clojure.core.rrb_vector.nodes.regular_QMARK_(ret)) {
    var n_20295 = ret;
    var shift_20296__$1 = shift;
    while (true) {
      var arr_20297 = n_20295.arr;
      var subidx_20298 = cnt - 1 >> shift_20296__$1 & 31;
      if (shift_20296__$1 === 5) {
        arr_20297[subidx_20298] = tail_node;
      } else {
        var child_20299 = arr_20297[subidx_20298];
        if (child_20299 == null) {
          arr_20297[subidx_20298] = clojure.core.rrb_vector.trees.new_path(tail_node.arr, root_edit, shift_20296__$1 - 5, tail_node);
        } else {
          var editable_child_20301 = clojure.core.rrb_vector.transients.ensure_editable(root_edit, child_20299);
          arr_20297[subidx_20298] = editable_child_20301;
          var G__20302 = editable_child_20301;
          var G__20303 = shift_20296__$1 - 5;
          n_20295 = G__20302;
          shift_20296__$1 = G__20303;
          continue;
        }
      }
      break;
    }
    return ret;
  } else {
    var arr = ret.arr;
    var rngs = clojure.core.rrb_vector.nodes.node_ranges(ret);
    var li = rngs[32] - 1;
    var cret = shift === 5 ? null : function() {
      var child = clojure.core.rrb_vector.transients.ensure_editable(root_edit, arr[li]);
      var ccnt = (li > 0 ? rngs[li] - rngs[li - 1] : rngs[0]) + 32;
      if (!clojure.core.rrb_vector.nodes.overflow_QMARK_(child, shift - 5, ccnt)) {
        var G__20219 = shift - 5;
        var G__20220 = ccnt;
        var G__20221 = root_edit;
        var G__20222 = child;
        var G__20223 = tail_node;
        return clojure.core.rrb_vector.transients.push_tail_BANG_.cljs$core$IFn$_invoke$arity$5 ? clojure.core.rrb_vector.transients.push_tail_BANG_.cljs$core$IFn$_invoke$arity$5(G__20219, G__20220, G__20221, G__20222, G__20223) : clojure.core.rrb_vector.transients.push_tail_BANG_.call(null, G__20219, G__20220, G__20221, G__20222, G__20223);
      } else {
        return null;
      }
    }();
    if (cljs.core.truth_(cret)) {
      arr[li] = cret;
      rngs[li] = rngs[li] + 32;
      return ret;
    } else {
      if (li >= 31) {
        var msg_20305 = ["Assigning index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(li + 1), " of vector", " object array to become a node, when that", " index should only be used for storing", " range arrays."].join("");
        var data_20306 = new cljs.core.PersistentArrayMap(null, 7, [cljs$cst$keyword$shift, shift, cljs$cst$keyword$cnd, cnt, cljs$cst$keyword$current_DASH_node, current_node, cljs$cst$keyword$tail_DASH_node, tail_node, cljs$cst$keyword$rngs, rngs, cljs$cst$keyword$li, li, cljs$cst$keyword$cret, cret], null);
        throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(msg_20305, data_20306);
      } else {
      }
      arr[li + 1] = clojure.core.rrb_vector.trees.new_path(tail_node.arr, root_edit, shift - 5, tail_node);
      rngs[li + 1] = rngs[li] + 32;
      rngs[32] = rngs[32] + 1;
      return ret;
    }
  }
};
clojure.core.rrb_vector.transients.pop_tail_BANG_ = function clojure$core$rrb_vector$transients$pop_tail_BANG_(shift, cnt, root_edit, current_node) {
  var ret = clojure.core.rrb_vector.transients.ensure_editable(root_edit, current_node);
  if (clojure.core.rrb_vector.nodes.regular_QMARK_(ret)) {
    var subidx = cnt - 2 >> shift & 31;
    if (shift > 5) {
      var child = function() {
        var G__20246 = shift - 5;
        var G__20247 = cnt;
        var G__20248 = root_edit;
        var G__20249 = ret.arr[subidx];
        return clojure.core.rrb_vector.transients.pop_tail_BANG_.cljs$core$IFn$_invoke$arity$4 ? clojure.core.rrb_vector.transients.pop_tail_BANG_.cljs$core$IFn$_invoke$arity$4(G__20246, G__20247, G__20248, G__20249) : clojure.core.rrb_vector.transients.pop_tail_BANG_.call(null, G__20246, G__20247, G__20248, G__20249);
      }();
      if (child == null && subidx === 0) {
        return null;
      } else {
        var arr = ret.arr;
        arr[subidx] = child;
        return ret;
      }
    } else {
      if (subidx === 0) {
        return null;
      } else {
        var arr = ret.arr;
        arr[subidx] = null;
        return ret;
      }
    }
  } else {
    var rngs = clojure.core.rrb_vector.nodes.node_ranges(ret);
    var subidx = rngs[32] - 1;
    if (shift > 5) {
      var child = ret.arr[subidx];
      var child_cnt = subidx === 0 ? rngs[0] : rngs[subidx] - rngs[subidx - 1];
      var new_child = function() {
        var G__20257 = shift - 5;
        var G__20258 = child_cnt;
        var G__20259 = root_edit;
        var G__20260 = child;
        return clojure.core.rrb_vector.transients.pop_tail_BANG_.cljs$core$IFn$_invoke$arity$4 ? clojure.core.rrb_vector.transients.pop_tail_BANG_.cljs$core$IFn$_invoke$arity$4(G__20257, G__20258, G__20259, G__20260) : clojure.core.rrb_vector.transients.pop_tail_BANG_.call(null, G__20257, G__20258, G__20259, G__20260);
      }();
      if (new_child == null && subidx === 0) {
        return null;
      } else {
        if (clojure.core.rrb_vector.nodes.regular_QMARK_(child)) {
          var arr = ret.arr;
          rngs[subidx] = rngs[subidx] - 32;
          arr[subidx] = new_child;
          if (new_child == null) {
            rngs[32] = rngs[32] - 1;
          } else {
          }
          return ret;
        } else {
          var rng = clojure.core.rrb_vector.nodes.last_range(child);
          var diff = rng - (cljs.core.truth_(new_child) ? clojure.core.rrb_vector.nodes.last_range(new_child) : 0);
          var arr = ret.arr;
          rngs[subidx] = rngs[subidx] - diff;
          arr[subidx] = new_child;
          if (new_child == null) {
            rngs[32] = rngs[32] - 1;
          } else {
          }
          return ret;
        }
      }
    } else {
      if (subidx === 0) {
        return null;
      } else {
        var arr = ret.arr;
        var child = arr[subidx];
        arr[subidx] = null;
        rngs[subidx] = 0;
        rngs[32] = rngs[32] - 1;
        return ret;
      }
    }
  }
};
clojure.core.rrb_vector.transients.do_assoc_BANG_ = function clojure$core$rrb_vector$transients$do_assoc_BANG_(shift, root_edit, current_node, i, val) {
  var ret = clojure.core.rrb_vector.transients.ensure_editable(root_edit, current_node);
  if (clojure.core.rrb_vector.nodes.regular_QMARK_(ret)) {
    var shift_20321__$1 = shift;
    var node_20322 = ret;
    while (true) {
      if (shift_20321__$1 === 0) {
        var arr_20323 = node_20322.arr;
        arr_20323[i & 31] = val;
      } else {
        var arr_20330 = node_20322.arr;
        var subidx_20331 = i >> shift_20321__$1 & 31;
        var child_20332 = clojure.core.rrb_vector.transients.ensure_editable(root_edit, arr_20330[subidx_20331]);
        arr_20330[subidx_20331] = child_20332;
        var G__20333 = shift_20321__$1 - 5;
        var G__20334 = child_20332;
        shift_20321__$1 = G__20333;
        node_20322 = G__20334;
        continue;
      }
      break;
    }
  } else {
    var arr_20335 = ret.arr;
    var rngs_20336 = clojure.core.rrb_vector.nodes.node_ranges(ret);
    var subidx_20337 = i >> shift & 31;
    var subidx_20338__$1 = function() {
      var subidx_20338__$1 = subidx_20337;
      while (true) {
        if (i < (rngs_20336[subidx_20338__$1] | 0)) {
          return subidx_20338__$1;
        } else {
          var G__20341 = subidx_20338__$1 + 1;
          subidx_20338__$1 = G__20341;
          continue;
        }
        break;
      }
    }();
    var i_20339__$1 = subidx_20338__$1 === 0 ? i : i - rngs_20336[subidx_20338__$1 - 1];
    arr_20335[subidx_20338__$1] = function() {
      var G__20277 = shift - 5;
      var G__20278 = root_edit;
      var G__20279 = arr_20335[subidx_20338__$1];
      var G__20280 = i_20339__$1;
      var G__20281 = val;
      return clojure.core.rrb_vector.transients.do_assoc_BANG_.cljs$core$IFn$_invoke$arity$5 ? clojure.core.rrb_vector.transients.do_assoc_BANG_.cljs$core$IFn$_invoke$arity$5(G__20277, G__20278, G__20279, G__20280, G__20281) : clojure.core.rrb_vector.transients.do_assoc_BANG_.call(null, G__20277, G__20278, G__20279, G__20280, G__20281);
    }();
  }
  return ret;
};
goog.provide("clojure.core.rrb_vector.rrbt");
clojure.core.rrb_vector.rrbt.rrbt_concat_threshold = 33;
clojure.core.rrb_vector.rrbt.max_extra_search_steps = 2;
clojure.core.rrb_vector.rrbt.IVecImpl = function() {
};
var clojure$core$rrb_vector$rrbt$IVecImpl$_tail_offset$dyn_20738 = function(v) {
  var x__4550__auto__ = v == null ? null : v;
  var m__4551__auto__ = clojure.core.rrb_vector.rrbt._tail_offset[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(v) : m__4551__auto__.call(null, v);
  } else {
    var m__4549__auto__ = clojure.core.rrb_vector.rrbt._tail_offset["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(v) : m__4549__auto__.call(null, v);
    } else {
      throw cljs.core.missing_protocol("IVecImpl.-tail-offset", v);
    }
  }
};
clojure.core.rrb_vector.rrbt._tail_offset = function clojure$core$rrb_vector$rrbt$_tail_offset(v) {
  if (!(v == null) && !(v.clojure$core$rrb_vector$rrbt$IVecImpl$_tail_offset$arity$1 == null)) {
    return v.clojure$core$rrb_vector$rrbt$IVecImpl$_tail_offset$arity$1(v);
  } else {
    return clojure$core$rrb_vector$rrbt$IVecImpl$_tail_offset$dyn_20738(v);
  }
};
var clojure$core$rrb_vector$rrbt$IVecImpl$_array_for$dyn_20743 = function(v, i) {
  var x__4550__auto__ = v == null ? null : v;
  var m__4551__auto__ = clojure.core.rrb_vector.rrbt._array_for[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(v, i) : m__4551__auto__.call(null, v, i);
  } else {
    var m__4549__auto__ = clojure.core.rrb_vector.rrbt._array_for["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(v, i) : m__4549__auto__.call(null, v, i);
    } else {
      throw cljs.core.missing_protocol("IVecImpl.-array-for", v);
    }
  }
};
clojure.core.rrb_vector.rrbt._array_for = function clojure$core$rrb_vector$rrbt$_array_for(v, i) {
  if (!(v == null) && !(v.clojure$core$rrb_vector$rrbt$IVecImpl$_array_for$arity$2 == null)) {
    return v.clojure$core$rrb_vector$rrbt$IVecImpl$_array_for$arity$2(v, i);
  } else {
    return clojure$core$rrb_vector$rrbt$IVecImpl$_array_for$dyn_20743(v, i);
  }
};
clojure.core.rrb_vector.rrbt.AsRRBT = function() {
};
var clojure$core$rrb_vector$rrbt$AsRRBT$_as_rrbt$dyn_20745 = function(v) {
  var x__4550__auto__ = v == null ? null : v;
  var m__4551__auto__ = clojure.core.rrb_vector.rrbt._as_rrbt[goog.typeOf(x__4550__auto__)];
  if (!(m__4551__auto__ == null)) {
    return m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(v) : m__4551__auto__.call(null, v);
  } else {
    var m__4549__auto__ = clojure.core.rrb_vector.rrbt._as_rrbt["_"];
    if (!(m__4549__auto__ == null)) {
      return m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(v) : m__4549__auto__.call(null, v);
    } else {
      throw cljs.core.missing_protocol("AsRRBT.-as-rrbt", v);
    }
  }
};
clojure.core.rrb_vector.rrbt._as_rrbt = function clojure$core$rrb_vector$rrbt$_as_rrbt(v) {
  if (!(v == null) && !(v.clojure$core$rrb_vector$rrbt$AsRRBT$_as_rrbt$arity$1 == null)) {
    return v.clojure$core$rrb_vector$rrbt$AsRRBT$_as_rrbt$arity$1(v);
  } else {
    return clojure$core$rrb_vector$rrbt$AsRRBT$_as_rrbt$dyn_20745(v);
  }
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2179858668;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, this$__$1);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__20361 = self__.vec;
      var G__20362 = self__.node;
      var G__20363 = self__.i;
      var G__20364 = self__.off + 1;
      return clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$4 ? clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$4(G__20361, G__20362, G__20363, G__20364) : clojure.core.rrb_vector.rrbt.rrb_chunked_seq.call(null, G__20361, G__20362, G__20363, G__20364);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return coll__$1.cljs$core$IChunkedNext$_chunked_next$arity$1(null);
  }
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(self__.vec, self__.i + self__.off, cljs.core.count(self__.vec)), f);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(self__.vec, self__.i + self__.off, cljs.core.count(self__.vec)), f, start);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__20367 = self__.vec;
      var G__20368 = self__.node;
      var G__20369 = self__.i;
      var G__20370 = self__.off + 1;
      return clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$4 ? clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$4(G__20367, G__20368, G__20369, G__20370) : clojure.core.rrb_vector.rrbt.rrb_chunked_seq.call(null, G__20367, G__20368, G__20369, G__20370);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return coll__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null);
  }
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count(self__.vec) ? function() {
    var G__20373 = self__.vec;
    var G__20374 = self__.i + l;
    var G__20375 = 0;
    return clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$3 ? clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$3(G__20373, G__20374, G__20375) : clojure.core.rrb_vector.rrbt.rrb_chunked_seq.call(null, G__20373, G__20374, G__20375);
  }() : null;
  if (s == null) {
    return cljs.core.List.EMPTY;
  } else {
    return s;
  }
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$5 ? clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m) : clojure.core.rrb_vector.rrbt.rrb_chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count(self__.vec) ? function() {
    var G__20378 = self__.vec;
    var G__20379 = self__.i + l;
    var G__20380 = 0;
    return clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$3 ? clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$3(G__20378, G__20379, G__20380) : clojure.core.rrb_vector.rrbt.rrb_chunked_seq.call(null, G__20378, G__20379, G__20380);
  }() : null;
  if (s == null) {
    return null;
  } else {
    return s;
  }
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$vec, cljs$cst$symbol$node, cljs$cst$symbol$i, cljs$cst$symbol$off, cljs$cst$symbol$meta, cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.cljs$lang$type = true;
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.cljs$lang$ctorStr = "clojure.core.rrb-vector.rrbt/RRBChunkedSeq";
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "clojure.core.rrb-vector.rrbt/RRBChunkedSeq");
};
clojure.core.rrb_vector.rrbt.__GT_RRBChunkedSeq = function clojure$core$rrb_vector$rrbt$__GT_RRBChunkedSeq(vec, node, i, off, meta, __hash) {
  return new clojure.core.rrb_vector.rrbt.RRBChunkedSeq(vec, node, i, off, meta, __hash);
};
clojure.core.rrb_vector.rrbt.rrb_chunked_seq = function clojure$core$rrb_vector$rrbt$rrb_chunked_seq(var_args) {
  var G__20385 = arguments.length;
  switch(G__20385) {
    case 3:
      return clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new clojure.core.rrb_vector.rrbt.RRBChunkedSeq(vec, clojure.core.rrb_vector.rrbt._array_for(vec, i), i, off, null, null);
};
clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new clojure.core.rrb_vector.rrbt.RRBChunkedSeq(vec, node, i, off, null, null);
};
clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new clojure.core.rrb_vector.rrbt.RRBChunkedSeq(vec, node, i, off, meta, null);
};
clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$lang$maxFixedArity = 5;
clojure.core.rrb_vector.rrbt.slice_right = function clojure$core$rrb_vector$rrbt$slice_right(node, shift, end) {
  if (shift === 0) {
    var arr = node.arr;
    var new_arr = new Array(end);
    cljs.core.array_copy(arr, 0, new_arr, 0, end);
    return cljs.core.__GT_VectorNode(null, new_arr);
  } else {
    var reg_QMARK_ = clojure.core.rrb_vector.nodes.regular_QMARK_(node);
    var rngs = !reg_QMARK_ ? clojure.core.rrb_vector.nodes.node_ranges(node) : null;
    var i = end - 1 >> shift & 31;
    var i__$1 = reg_QMARK_ ? i : function() {
      var j = i;
      while (true) {
        if (end <= rngs[j]) {
          return j;
        } else {
          var G__20772 = j + 1;
          j = G__20772;
          continue;
        }
        break;
      }
    }();
    var child_end = reg_QMARK_ ? function() {
      var ce = cljs.core.mod(end, 1 << shift);
      if (ce === 0) {
        return 1 << shift;
      } else {
        return ce;
      }
    }() : i__$1 > 0 ? end - rngs[i__$1 - 1] : end;
    var arr = node.arr;
    var new_child = function() {
      var G__20388 = arr[i__$1];
      var G__20389 = shift - 5;
      var G__20390 = child_end;
      return clojure.core.rrb_vector.rrbt.slice_right.cljs$core$IFn$_invoke$arity$3 ? clojure.core.rrb_vector.rrbt.slice_right.cljs$core$IFn$_invoke$arity$3(G__20388, G__20389, G__20390) : clojure.core.rrb_vector.rrbt.slice_right.call(null, G__20388, G__20389, G__20390);
    }();
    var regular_child_QMARK_ = shift === 5 ? 32 === new_child.arr.length : clojure.core.rrb_vector.nodes.regular_QMARK_(new_child);
    var new_arr = new Array(reg_QMARK_ && regular_child_QMARK_ ? 32 : 33);
    var new_child_rng = regular_child_QMARK_ ? function() {
      var m = cljs.core.mod(child_end, 1 << shift);
      if (m === 0) {
        return 1 << shift;
      } else {
        return m;
      }
    }() : shift === 5 ? new_child.arr.length : clojure.core.rrb_vector.nodes.last_range(new_child);
    cljs.core.array_copy(arr, 0, new_arr, 0, i__$1);
    new_arr[i__$1] = new_child;
    if (!(reg_QMARK_ && regular_child_QMARK_)) {
      var new_rngs_20777 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var step_20778 = 1 << shift;
      if (reg_QMARK_) {
        var n__4741__auto___20779 = i__$1;
        var j_20780 = 0;
        while (true) {
          if (j_20780 < n__4741__auto___20779) {
            new_rngs_20777[j_20780] = (j_20780 + 1) * step_20778;
            var G__20782 = j_20780 + 1;
            j_20780 = G__20782;
            continue;
          } else {
          }
          break;
        }
      } else {
        var n__4741__auto___20783 = i__$1;
        var j_20785 = 0;
        while (true) {
          if (j_20785 < n__4741__auto___20783) {
            new_rngs_20777[j_20785] = rngs[j_20785];
            var G__20788 = j_20785 + 1;
            j_20785 = G__20788;
            continue;
          } else {
          }
          break;
        }
      }
      new_rngs_20777[i__$1] = (i__$1 > 0 ? new_rngs_20777[i__$1 - 1] : 0) + new_child_rng;
      new_rngs_20777[32] = i__$1 + 1;
      new_arr[32] = new_rngs_20777;
    } else {
    }
    return cljs.core.__GT_VectorNode(null, new_arr);
  }
};
clojure.core.rrb_vector.rrbt.slice_left = function clojure$core$rrb_vector$rrbt$slice_left(node, shift, start, end) {
  if (shift === 0) {
    var arr = node.arr;
    var new_len = arr.length - start;
    var new_arr = new Array(new_len);
    cljs.core.array_copy(arr, start, new_arr, 0, new_len);
    return cljs.core.__GT_VectorNode(null, new_arr);
  } else {
    var reg_QMARK_ = clojure.core.rrb_vector.nodes.regular_QMARK_(node);
    var arr = node.arr;
    var rngs = !reg_QMARK_ ? clojure.core.rrb_vector.nodes.node_ranges(node) : null;
    var i = start >> shift & 31;
    var i__$1 = reg_QMARK_ ? i : function() {
      var j = i;
      while (true) {
        if (start < rngs[j]) {
          return j;
        } else {
          var G__20791 = j + 1;
          j = G__20791;
          continue;
        }
        break;
      }
    }();
    var len = reg_QMARK_ ? function() {
      var i__$2 = i__$1;
      while (true) {
        if (i__$2 === 32 || arr[i__$2] == null) {
          return i__$2;
        } else {
          var G__20794 = i__$2 + 1;
          i__$2 = G__20794;
          continue;
        }
        break;
      }
    }() : rngs[32];
    var child_start = i__$1 > 0 ? start - (reg_QMARK_ ? i__$1 * (1 << shift) : rngs[i__$1 - 1]) : start;
    var child_end = reg_QMARK_ ? function() {
      var x__4339__auto__ = 1 << shift;
      var y__4340__auto__ = i__$1 > 0 ? end - i__$1 * (1 << shift) : end;
      return x__4339__auto__ < y__4340__auto__ ? x__4339__auto__ : y__4340__auto__;
    }() : function() {
      var capped_end = function() {
        var x__4339__auto__ = rngs[i__$1];
        var y__4340__auto__ = end;
        return x__4339__auto__ < y__4340__auto__ ? x__4339__auto__ : y__4340__auto__;
      }();
      if (i__$1 > 0) {
        return capped_end - rngs[i__$1 - 1];
      } else {
        return capped_end;
      }
    }();
    var new_child = function() {
      var G__20391 = arr[i__$1];
      var G__20392 = shift - 5;
      var G__20393 = child_start;
      var G__20394 = child_end;
      return clojure.core.rrb_vector.rrbt.slice_left.cljs$core$IFn$_invoke$arity$4 ? clojure.core.rrb_vector.rrbt.slice_left.cljs$core$IFn$_invoke$arity$4(G__20391, G__20392, G__20393, G__20394) : clojure.core.rrb_vector.rrbt.slice_left.call(null, G__20391, G__20392, G__20393, G__20394);
    }();
    var new_len = len - i__$1;
    var new_len__$1 = new_child == null ? new_len - 1 : new_len;
    if (new_len__$1 === 0) {
      return null;
    } else {
      if (reg_QMARK_) {
        var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var rngs__$1 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var rng0 = new_child == null || (shift === 5 || clojure.core.rrb_vector.nodes.regular_QMARK_(new_child)) ? (1 << shift) - (start >> shift - 5 & 31) : clojure.core.rrb_vector.nodes.last_range(new_child);
        var step = 1 << shift;
        var j_20803 = 0;
        var r_20804 = rng0;
        while (true) {
          if (j_20803 < new_len__$1) {
            rngs__$1[j_20803] = r_20804;
            var G__20805 = j_20803 + 1;
            var G__20806 = r_20804 + step;
            j_20803 = G__20805;
            r_20804 = G__20806;
            continue;
          } else {
          }
          break;
        }
        if (new_len__$1 > 1) {
          rngs__$1[new_len__$1 - 1] = end - start;
        } else {
        }
        rngs__$1[32] = new_len__$1;
        cljs.core.array_copy(arr, new_child == null ? i__$1 + 1 : i__$1, new_arr, 0, new_len__$1);
        if (!(new_child == null)) {
          new_arr[0] = new_child;
        } else {
        }
        new_arr[32] = rngs__$1;
        return cljs.core.__GT_VectorNode(node.edit, new_arr);
      } else {
        var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var j_20814 = 0;
        var i_20815__$2 = i__$1;
        while (true) {
          if (j_20814 < new_len__$1) {
            new_rngs[j_20814] = rngs[i_20815__$2] - start;
            var G__20817 = j_20814 + 1;
            var G__20818 = i_20815__$2 + 1;
            j_20814 = G__20817;
            i_20815__$2 = G__20818;
            continue;
          } else {
          }
          break;
        }
        new_rngs[32] = new_len__$1;
        cljs.core.array_copy(arr, new_child == null ? i__$1 + 1 : i__$1, new_arr, 0, new_len__$1);
        if (!(new_child == null)) {
          new_arr[0] = new_child;
        } else {
        }
        new_arr[32] = new_rngs;
        return cljs.core.__GT_VectorNode(node.edit, new_arr);
      }
    }
  }
};
clojure.core.rrb_vector.rrbt.Vector = function(cnt, shift, root, tail, meta, __hash) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2315152159;
  this.cljs$lang$protocol_mask$partition1$ = 2052;
};
clojure.core.rrb_vector.rrbt.Vector.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this$, f, init) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.cnt === 0) {
    return init;
  } else {
    var i = 0;
    var j = 0;
    var init__$1 = init;
    var arr = this$__$1.clojure$core$rrb_vector$rrbt$IVecImpl$_array_for$arity$2(null, i);
    var lim = arr.length - 1;
    var step = lim + 1;
    while (true) {
      var init__$2 = function() {
        var G__20416 = init__$1;
        var G__20417 = i + j;
        var G__20418 = arr[j];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20416, G__20417, G__20418) : f.call(null, G__20416, G__20417, G__20418);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        if (j < lim) {
          var G__20831 = i;
          var G__20832 = j + 1;
          var G__20833 = init__$2;
          var G__20834 = arr;
          var G__20835 = lim;
          var G__20836 = step;
          i = G__20831;
          j = G__20832;
          init__$1 = G__20833;
          arr = G__20834;
          lim = G__20835;
          step = G__20836;
          continue;
        } else {
          var i__$1 = i + step;
          if (i__$1 < self__.cnt) {
            var arr__$1 = this$__$1.clojure$core$rrb_vector$rrbt$IVecImpl$_array_for$arity$2(null, i__$1);
            var len = arr__$1.length;
            var lim__$1 = len - 1;
            var G__20838 = i__$1;
            var G__20839 = 0;
            var G__20840 = init__$2;
            var G__20841 = arr__$1;
            var G__20842 = lim__$1;
            var G__20843 = len;
            i = G__20838;
            j = G__20839;
            init__$1 = G__20840;
            arr = G__20841;
            lim = G__20842;
            step = G__20843;
            continue;
          } else {
            return init__$2;
          }
        }
      }
      break;
    }
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, i) {
  var self__ = this;
  var this$__$1 = this;
  if (0 <= i && i < self__.cnt) {
    var tail_off = self__.cnt - self__.tail.length;
    if (tail_off <= i) {
      return self__.tail[i - tail_off];
    } else {
      var i__$1 = i;
      var node = self__.root;
      var shift__$1 = self__.shift;
      while (true) {
        if (shift__$1 === 0) {
          var arr = node.arr;
          return arr[i__$1 >> shift__$1 & 31];
        } else {
          if (clojure.core.rrb_vector.nodes.regular_QMARK_(node)) {
            var arr = node.arr;
            var idx = i__$1 >> shift__$1 & 31;
            var i__$2 = i__$1;
            var node__$1 = arr[idx];
            var shift__$2 = shift__$1 - 5;
            while (true) {
              var arr__$1 = node__$1.arr;
              var idx__$1 = i__$2 >> shift__$2 & 31;
              if (shift__$2 === 0) {
                return arr__$1[idx__$1];
              } else {
                var G__20855 = i__$2;
                var G__20856 = arr__$1[idx__$1];
                var G__20857 = shift__$2 - 5;
                i__$2 = G__20855;
                node__$1 = G__20856;
                shift__$2 = G__20857;
                continue;
              }
              break;
            }
          } else {
            var arr = node.arr;
            var rngs = clojure.core.rrb_vector.nodes.node_ranges(node);
            var idx = function() {
              var j = i__$1 >> shift__$1 & 31;
              while (true) {
                if (i__$1 < rngs[j]) {
                  return j;
                } else {
                  var G__20858 = j + 1;
                  j = G__20858;
                  continue;
                }
                break;
              }
            }();
            var i__$2 = idx === 0 ? i__$1 : i__$1 - rngs[idx - 1];
            var G__20862 = i__$2;
            var G__20863 = arr[idx];
            var G__20864 = shift__$1 - 5;
            i__$1 = G__20862;
            node = G__20863;
            shift__$1 = G__20864;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return cljs.core.vector_index_out_of_bounds(i, self__.cnt);
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, i, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (i >= 0 && i < self__.cnt) {
    return this$__$1.cljs$core$IIndexed$_nth$arity$2(null, i);
  } else {
    return not_found;
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, this$__$1);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(this$, i, val) {
  var self__ = this;
  var this$__$1 = this;
  if (0 <= i && i < self__.cnt) {
    var tail_off = this$__$1.clojure$core$rrb_vector$rrbt$IVecImpl$_tail_offset$arity$1(null);
    if (i >= tail_off) {
      var new_tail = new Array(self__.tail.length);
      var idx = i - tail_off;
      cljs.core.array_copy(self__.tail, 0, new_tail, 0, self__.tail.length);
      new_tail[idx] = val;
      return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt, self__.shift, self__.root, new_tail, self__.meta, null);
    } else {
      return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt, self__.shift, clojure.core.rrb_vector.trees.do_assoc(self__.shift, self__.root, i, val), self__.tail, self__.meta, null);
    }
  } else {
    if (i === self__.cnt) {
      return this$__$1.cljs$core$ICollection$_conj$arity$2(null, val);
    } else {
      return cljs.core.vector_index_out_of_bounds(i, self__.cnt);
    }
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$rrbt$AsRRBT$ = cljs.core.PROTOCOL_SENTINEL;
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$rrbt$AsRRBT$_as_rrbt$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.meta;
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.cnt;
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.cljs$core$IIndexed$_nth$arity$2(null, 0);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.cljs$core$IIndexed$_nth$arity$2(null, 1);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.cnt > 0) {
    return this$__$1.cljs$core$IIndexed$_nth$arity$2(null, self__.cnt - 1);
  } else {
    return null;
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (self__.tail.length > 1) {
        var new_tail = new Array(self__.tail.length - 1);
        cljs.core.array_copy(self__.tail, 0, new_tail, 0, new_tail.length);
        return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt - 1, self__.shift, self__.root, new_tail, self__.meta, null);
      } else {
        var new_tail = this$__$1.clojure$core$rrb_vector$rrbt$IVecImpl$_array_for$arity$2(null, self__.cnt - 2);
        var root_cnt = this$__$1.clojure$core$rrb_vector$rrbt$IVecImpl$_tail_offset$arity$1(null);
        var new_root = clojure.core.rrb_vector.trees.pop_tail(self__.shift, root_cnt, self__.root.edit, self__.root);
        if (new_root == null) {
          return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt - 1, self__.shift, clojure.core.rrb_vector.nodes.empty_node, new_tail, self__.meta, null);
        } else {
          if (self__.shift > 5 && new_root.arr[1] == null) {
            return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt - 1, self__.shift - 5, new_root.arr[0], new_tail, self__.meta, null);
          } else {
            return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt - 1, self__.shift, new_root, new_tail, self__.meta, null);
          }
        }
      }
    }
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(this$__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = cljs.core.hash_ordered_coll(this$__$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, that) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.equiv_sequential(this$__$1, that);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__20455 = self__.cnt;
  var G__20456 = self__.shift;
  var G__20457 = clojure.core.rrb_vector.transients.editable_root(self__.root);
  var G__20458 = clojure.core.rrb_vector.transients.editable_tail(self__.tail);
  var G__20459 = self__.tail.length;
  return clojure.core.rrb_vector.rrbt.__GT_Transient.cljs$core$IFn$_invoke$arity$5 ? clojure.core.rrb_vector.rrbt.__GT_Transient.cljs$core$IFn$_invoke$arity$5(G__20455, G__20456, G__20457, G__20458, G__20459) : clojure.core.rrb_vector.rrbt.__GT_Transient.call(null, G__20455, G__20456, G__20457, G__20458, G__20459);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$protocols$PSliceableVector$ = cljs.core.PROTOCOL_SENTINEL;
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$protocols$PSliceableVector$_slicev$arity$3 = function(this$, start, end) {
  var self__ = this;
  var this$__$1 = this;
  var new_cnt = end - start;
  if (start < 0 || end > self__.cnt) {
    throw new Error("vector index out of bounds");
  } else {
    if (start === end) {
      return cljs.core.empty(this$__$1);
    } else {
      if (start > end) {
        throw new Error("start index greater than end index");
      } else {
        var tail_off = this$__$1.clojure$core$rrb_vector$rrbt$IVecImpl$_tail_offset$arity$1(null);
        if (start >= tail_off) {
          var new_tail = new Array(new_cnt);
          cljs.core.array_copy(self__.tail, start - tail_off, new_tail, 0, new_cnt);
          return new clojure.core.rrb_vector.rrbt.Vector(new_cnt, 5, clojure.core.rrb_vector.nodes.empty_node, new_tail, self__.meta, null);
        } else {
          var tail_cut_QMARK_ = end > tail_off;
          var new_root = tail_cut_QMARK_ ? self__.root : clojure.core.rrb_vector.rrbt.slice_right(self__.root, self__.shift, end);
          var new_root__$1 = start === 0 ? new_root : clojure.core.rrb_vector.rrbt.slice_left(new_root, self__.shift, start, function() {
            var x__4339__auto__ = end;
            var y__4340__auto__ = tail_off;
            return x__4339__auto__ < y__4340__auto__ ? x__4339__auto__ : y__4340__auto__;
          }());
          var new_tail = tail_cut_QMARK_ ? function() {
            var new_len = end - tail_off;
            var new_tail = new Array(new_len);
            cljs.core.array_copy(self__.tail, 0, new_tail, 0, new_len);
            return new_tail;
          }() : (new clojure.core.rrb_vector.rrbt.Vector(new_cnt, self__.shift, new_root__$1, [], self__.meta, null)).clojure$core$rrb_vector$rrbt$IVecImpl$_array_for$arity$2(null, new_cnt - 1);
          var new_root__$2 = tail_cut_QMARK_ ? new_root__$1 : clojure.core.rrb_vector.trees.pop_tail(self__.shift, new_cnt, new_root__$1.edit, new_root__$1);
          if (new_root__$2 == null) {
            return new clojure.core.rrb_vector.rrbt.Vector(new_cnt, 5, clojure.core.rrb_vector.nodes.empty_node, new_tail, self__.meta, null);
          } else {
            var r = new_root__$2;
            var s = self__.shift;
            while (true) {
              if (s > 5 && r.arr[1] == null) {
                var G__20915 = r.arr[0];
                var G__20916 = s - 5;
                r = G__20915;
                s = G__20916;
                continue;
              } else {
                return new clojure.core.rrb_vector.rrbt.Vector(new_cnt, s, r, new_tail, self__.meta, null);
              }
              break;
            }
          }
        }
      }
    }
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$rrbt$IVecImpl$ = cljs.core.PROTOCOL_SENTINEL;
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$rrbt$IVecImpl$_tail_offset$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.cnt - self__.tail.length;
};
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$rrbt$IVecImpl$_array_for$arity$2 = function(this$, i) {
  var self__ = this;
  var this$__$1 = this;
  if (0 <= i && i < self__.cnt) {
    if (i >= this$__$1.clojure$core$rrb_vector$rrbt$IVecImpl$_tail_offset$arity$1(null)) {
      return self__.tail;
    } else {
      var i__$1 = i;
      var node = self__.root;
      var shift__$1 = self__.shift;
      while (true) {
        if (shift__$1 === 0) {
          return node.arr;
        } else {
          if (clojure.core.rrb_vector.nodes.regular_QMARK_(node)) {
            var node__$1 = node.arr[i__$1 >> shift__$1 & 31];
            var shift__$2 = shift__$1 - 5;
            while (true) {
              if (shift__$2 === 0) {
                return node__$1.arr;
              } else {
                var G__20924 = node__$1.arr[i__$1 >> shift__$2 & 31];
                var G__20925 = shift__$2 - 5;
                node__$1 = G__20924;
                shift__$2 = G__20925;
                continue;
              }
              break;
            }
          } else {
            var rngs = clojure.core.rrb_vector.nodes.node_ranges(node);
            var j = function() {
              var j = i__$1 >> shift__$1 & 31;
              while (true) {
                if (i__$1 < rngs[j]) {
                  return j;
                } else {
                  var G__20926 = j + 1;
                  j = G__20926;
                  continue;
                }
                break;
              }
            }();
            var i__$2 = j > 0 ? i__$1 - rngs[j - 1] : i__$1;
            var G__20928 = i__$2;
            var G__20929 = node.arr[j];
            var G__20930 = shift__$1 - 5;
            i__$1 = G__20928;
            node = G__20929;
            shift__$1 = G__20930;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return cljs.core.vector_index_out_of_bounds(i, self__.cnt);
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(this$__$1, f);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(this$, f, start) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(this$__$1, f, start);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, k, v) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.cljs$core$IVector$_assoc_n$arity$3(null, k, v);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (this$__$1.clojure$core$rrb_vector$rrbt$IVecImpl$_tail_offset$arity$1(null) === 0) {
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(self__.tail);
    } else {
      return clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$3(this$__$1, 0, 0);
    }
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, meta__$1) {
  var self__ = this;
  var this$__$1 = this;
  return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt, self__.shift, self__.root, self__.tail, meta__$1, self__.__hash);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, val) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.tail.length < 32) {
    var tail_len = self__.tail.length;
    var new_tail = new Array(tail_len + 1);
    cljs.core.array_copy(self__.tail, 0, new_tail, 0, tail_len);
    new_tail[tail_len] = val;
    return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt + 1, self__.shift, self__.root, new_tail, self__.meta, null);
  } else {
    var tail_node = cljs.core.__GT_VectorNode(self__.root.edit, self__.tail);
    var new_tail = function() {
      var new_arr = [null];
      new_arr[0] = val;
      return new_arr;
    }();
    if (clojure.core.rrb_vector.nodes.overflow_QMARK_(self__.root, self__.shift, self__.cnt)) {
      if (clojure.core.rrb_vector.nodes.regular_QMARK_(self__.root)) {
        var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_root = cljs.core.__GT_VectorNode(self__.root.edit, new_arr);
        var G__20486_20936 = new_arr;
        G__20486_20936[0] = self__.root;
        G__20486_20936[1] = clojure.core.rrb_vector.trees.new_path(self__.tail, self__.root.edit, self__.shift, tail_node);
        return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt + 1, self__.shift + 5, new_root, new_tail, self__.meta, null);
      } else {
        var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_root = cljs.core.__GT_VectorNode(self__.root.edit, new_arr);
        var root_total_range = clojure.core.rrb_vector.nodes.node_ranges(self__.root)[31];
        var G__20491_20937 = new_arr;
        G__20491_20937[0] = self__.root;
        G__20491_20937[1] = clojure.core.rrb_vector.trees.new_path(self__.tail, self__.root.edit, self__.shift, tail_node);
        G__20491_20937[32] = new_rngs;
        var G__20494_20938 = new_rngs;
        G__20494_20938[0] = root_total_range;
        G__20494_20938[1] = root_total_range + 32;
        G__20494_20938[32] = 2;
        return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt + 1, self__.shift + 5, new_root, new_tail, self__.meta, null);
      }
    } else {
      return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt + 1, self__.shift, clojure.core.rrb_vector.trees.push_tail(self__.shift, self__.cnt, self__.root.edit, self__.root, tail_node), new_tail, self__.meta, null);
    }
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.call = function(unused__9633__auto__) {
  var self__ = this;
  var self__ = this;
  var G__20502 = arguments.length - 1;
  switch(G__20502) {
    case 1:
      return self__.cljs$core$IFn$_invoke$arity$1(arguments[1]);
      break;
    case 2:
      return self__.cljs$core$IFn$_invoke$arity$2(arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 1)].join(""));
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.apply = function(self__, args20400) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20400)));
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IIndexed$_nth$arity$2(null, k);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, that) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(this$__$1, that);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$protocols$PSpliceableVector$ = cljs.core.PROTOCOL_SENTINEL;
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$protocols$PSpliceableVector$_splicev$arity$2 = function(this$, that) {
  var self__ = this;
  var this$__$1 = this;
  var G__20511 = this$__$1;
  var G__20512 = clojure.core.rrb_vector.rrbt._as_rrbt(that);
  return clojure.core.rrb_vector.rrbt.splice_rrbts.cljs$core$IFn$_invoke$arity$2 ? clojure.core.rrb_vector.rrbt.splice_rrbts.cljs$core$IFn$_invoke$arity$2(G__20511, G__20512) : clojure.core.rrb_vector.rrbt.splice_rrbts.call(null, G__20511, G__20512);
};
clojure.core.rrb_vector.rrbt.Vector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$cnt, cljs$cst$symbol$shift, cljs$cst$symbol$root, cljs$cst$symbol$tail, cljs$cst$symbol$meta, cljs.core.with_meta(cljs$cst$symbol$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
clojure.core.rrb_vector.rrbt.Vector.cljs$lang$type = true;
clojure.core.rrb_vector.rrbt.Vector.cljs$lang$ctorStr = "clojure.core.rrb-vector.rrbt/Vector";
clojure.core.rrb_vector.rrbt.Vector.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "clojure.core.rrb-vector.rrbt/Vector");
};
clojure.core.rrb_vector.rrbt.__GT_Vector = function clojure$core$rrb_vector$rrbt$__GT_Vector(cnt, shift, root, tail, meta, __hash) {
  return new clojure.core.rrb_vector.rrbt.Vector(cnt, shift, root, tail, meta, __hash);
};
cljs.core.PersistentVector.prototype.clojure$core$rrb_vector$rrbt$AsRRBT$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.clojure$core$rrb_vector$rrbt$AsRRBT$_as_rrbt$arity$1 = function(this$) {
  var this$__$1 = this;
  return new clojure.core.rrb_vector.rrbt.Vector(cljs.core.count(this$__$1), this$__$1.shift, this$__$1.root, this$__$1.tail, cljs.core.meta(this$__$1), null);
};
cljs.core.Subvec.prototype.clojure$core$rrb_vector$rrbt$AsRRBT$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.clojure$core$rrb_vector$rrbt$AsRRBT$_as_rrbt$arity$1 = function(this$) {
  var this$__$1 = this;
  var v = this$__$1.v;
  var start = this$__$1.start;
  var end = this$__$1.end;
  return clojure.core.rrb_vector.protocols._slicev(clojure.core.rrb_vector.rrbt._as_rrbt(v), start, end);
};
clojure.core.rrb_vector.rrbt.shift_from_to = function clojure$core$rrb_vector$rrbt$shift_from_to(node, from, to) {
  while (true) {
    if (from === to) {
      return node;
    } else {
      if (clojure.core.rrb_vector.nodes.regular_QMARK_(node)) {
        var G__20953 = cljs.core.__GT_VectorNode(node.edit, function() {
          var G__20523 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
          G__20523[0] = node;
          return G__20523;
        }());
        var G__20954 = 5 + from;
        var G__20955 = to;
        node = G__20953;
        from = G__20954;
        to = G__20955;
        continue;
      } else {
        var G__20957 = cljs.core.__GT_VectorNode(node.edit, function() {
          var G__20527 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
          G__20527[0] = node;
          G__20527[32] = function() {
            var G__20528 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            G__20528[0] = clojure.core.rrb_vector.nodes.last_range(node);
            G__20528[32] = 1;
            return G__20528;
          }();
          return G__20527;
        }());
        var G__20958 = 5 + from;
        var G__20959 = to;
        node = G__20957;
        from = G__20958;
        to = G__20959;
        continue;
      }
    }
    break;
  }
};
clojure.core.rrb_vector.rrbt.slot_count = function clojure$core$rrb_vector$rrbt$slot_count(node, shift) {
  var arr = node.arr;
  if (shift === 0) {
    return arr.length;
  } else {
    if (clojure.core.rrb_vector.nodes.regular_QMARK_(node)) {
      return clojure.core.rrb_vector.nodes.index_of_nil(arr);
    } else {
      var rngs = clojure.core.rrb_vector.nodes.node_ranges(node);
      return rngs[32];
    }
  }
};
clojure.core.rrb_vector.rrbt.subtree_branch_count = function clojure$core$rrb_vector$rrbt$subtree_branch_count(node, shift) {
  var arr = node.arr;
  var cs = shift - 5;
  if (clojure.core.rrb_vector.nodes.regular_QMARK_(node)) {
    var i = 0;
    var sbc = 0;
    while (true) {
      if (i === 32) {
        return sbc;
      } else {
        var temp__5751__auto__ = arr[i];
        if (cljs.core.truth_(temp__5751__auto__)) {
          var child = temp__5751__auto__;
          var G__20969 = i + 1;
          var G__20970 = sbc + clojure.core.rrb_vector.rrbt.slot_count(child, cs);
          i = G__20969;
          sbc = G__20970;
          continue;
        } else {
          return sbc;
        }
      }
      break;
    }
  } else {
    var lim = clojure.core.rrb_vector.nodes.node_ranges(node)[32];
    var i = 0;
    var sbc = 0;
    while (true) {
      if (i === lim) {
        return sbc;
      } else {
        var child = arr[i];
        var G__20975 = i + 1;
        var G__20976 = sbc + clojure.core.rrb_vector.rrbt.slot_count(child, cs);
        i = G__20975;
        sbc = G__20976;
        continue;
      }
      break;
    }
  }
};
clojure.core.rrb_vector.rrbt.leaf_seq = function clojure$core$rrb_vector$rrbt$leaf_seq(arr) {
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function(p1__20546_SHARP_) {
    return p1__20546_SHARP_.arr;
  }, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.take.cljs$core$IFn$_invoke$arity$2(clojure.core.rrb_vector.nodes.index_of_nil(arr), arr)], 0));
};
clojure.core.rrb_vector.rrbt.rebalance_leaves = function clojure$core$rrb_vector$rrbt$rebalance_leaves(n1, cnt1, n2, cnt2, transferred_leaves) {
  var slc1 = clojure.core.rrb_vector.rrbt.slot_count(n1, 5);
  var slc2 = clojure.core.rrb_vector.rrbt.slot_count(n2, 5);
  var a = slc1 + slc2;
  var sbc1 = clojure.core.rrb_vector.rrbt.subtree_branch_count(n1, 5);
  var sbc2 = clojure.core.rrb_vector.rrbt.subtree_branch_count(n2, 5);
  var p = sbc1 + sbc2;
  var e = a - (cljs.core.quot(p - 1, 32) + 1);
  if (e <= 2) {
    return [n1, n2];
  } else {
    if (sbc1 + sbc2 <= 1024) {
      var reg_QMARK_ = cljs.core.mod(p, 32) === 0;
      var new_arr = new Array(reg_QMARK_ ? 32 : 33);
      var new_n1 = cljs.core.__GT_VectorNode(null, new_arr);
      var i_20981 = 0;
      var bs_20982 = cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(32, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(clojure.core.rrb_vector.rrbt.leaf_seq(n1.arr), clojure.core.rrb_vector.rrbt.leaf_seq(n2.arr)));
      while (true) {
        var temp__5753__auto___20983 = cljs.core.seq(bs_20982);
        if (temp__5753__auto___20983) {
          var xs__6308__auto___20984 = temp__5753__auto___20983;
          var block_20986 = cljs.core.first(xs__6308__auto___20984);
          var a_20987__$1 = new Array(cljs.core.count(block_20986));
          var i_20989__$1 = 0;
          var xs_20990 = cljs.core.seq(block_20986);
          while (true) {
            if (xs_20990) {
              a_20987__$1[i_20989__$1] = cljs.core.first(xs_20990);
              var G__20991 = i_20989__$1 + 1;
              var G__20992 = cljs.core.next(xs_20990);
              i_20989__$1 = G__20991;
              xs_20990 = G__20992;
              continue;
            } else {
            }
            break;
          }
          new_arr[i_20981] = cljs.core.__GT_VectorNode(null, a_20987__$1);
          var G__20994 = i_20981 + 1;
          var G__20995 = cljs.core.next(bs_20982);
          i_20981 = G__20994;
          bs_20982 = G__20995;
          continue;
        } else {
        }
        break;
      }
      if (!reg_QMARK_) {
        new_arr[32] = clojure.core.rrb_vector.nodes.regular_ranges(5, p);
      } else {
      }
      transferred_leaves.val = sbc2;
      return [new_n1, null];
    } else {
      var reg_QMARK_ = cljs.core.mod(p, 32) === 0;
      var new_arr1 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var new_arr2 = new Array(reg_QMARK_ ? 32 : 33);
      var new_n1 = cljs.core.__GT_VectorNode(null, new_arr1);
      var new_n2 = cljs.core.__GT_VectorNode(null, new_arr2);
      var i_21000 = 0;
      var bs_21001 = cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(32, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(clojure.core.rrb_vector.rrbt.leaf_seq(n1.arr), clojure.core.rrb_vector.rrbt.leaf_seq(n2.arr)));
      while (true) {
        var temp__5753__auto___21005 = cljs.core.seq(bs_21001);
        if (temp__5753__auto___21005) {
          var xs__6308__auto___21006 = temp__5753__auto___21005;
          var block_21007 = cljs.core.first(xs__6308__auto___21006);
          var a_21008__$1 = new Array(cljs.core.count(block_21007));
          var i_21009__$1 = 0;
          var xs_21010 = cljs.core.seq(block_21007);
          while (true) {
            if (xs_21010) {
              a_21008__$1[i_21009__$1] = cljs.core.first(xs_21010);
              var G__21011 = i_21009__$1 + 1;
              var G__21012 = cljs.core.next(xs_21010);
              i_21009__$1 = G__21011;
              xs_21010 = G__21012;
              continue;
            } else {
            }
            break;
          }
          if (i_21000 < 32) {
            new_arr1[i_21000] = cljs.core.__GT_VectorNode(null, a_21008__$1);
          } else {
            new_arr2[i_21000 - 32] = cljs.core.__GT_VectorNode(null, a_21008__$1);
          }
          var G__21013 = i_21000 + 1;
          var G__21014 = cljs.core.next(bs_21001);
          i_21000 = G__21013;
          bs_21001 = G__21014;
          continue;
        } else {
        }
        break;
      }
      if (!reg_QMARK_) {
        new_arr2[32] = clojure.core.rrb_vector.nodes.regular_ranges(5, p - 1024);
      } else {
      }
      transferred_leaves.val = 1024 - sbc1;
      return [new_n1, new_n2];
    }
  }
};
clojure.core.rrb_vector.rrbt.child_seq = function clojure$core$rrb_vector$rrbt$child_seq(node, shift, cnt) {
  var arr = node.arr;
  var rngs = clojure.core.rrb_vector.nodes.regular_QMARK_(node) ? clojure.core.rrb_vector.nodes.regular_ranges(shift, cnt) : clojure.core.rrb_vector.nodes.node_ranges(node);
  var cs = cljs.core.truth_(rngs) ? rngs[32] : clojure.core.rrb_vector.nodes.index_of_nil(arr);
  var cseq = function clojure$core$rrb_vector$rrbt$child_seq_$_cseq(c, r) {
    var arr__$1 = c.arr;
    var rngs__$1 = clojure.core.rrb_vector.nodes.regular_QMARK_(c) ? clojure.core.rrb_vector.nodes.regular_ranges(shift - 5, r) : clojure.core.rrb_vector.nodes.node_ranges(c);
    var gcs = cljs.core.truth_(rngs__$1) ? rngs__$1[32] : clojure.core.rrb_vector.nodes.index_of_nil(arr__$1);
    return cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.list, cljs.core.take.cljs$core$IFn$_invoke$arity$2(gcs, arr__$1), cljs.core.take.cljs$core$IFn$_invoke$arity$2(gcs, cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core._, rngs__$1, cljs.core.cons(0, rngs__$1))));
  };
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cseq, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.take.cljs$core$IFn$_invoke$arity$2(cs, arr), cljs.core.take.cljs$core$IFn$_invoke$arity$2(cs, cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core._, rngs, cljs.core.cons(0, rngs)))], 0));
};
clojure.core.rrb_vector.rrbt.rebalance = function clojure$core$rrb_vector$rrbt$rebalance(shift, n1, cnt1, n2, cnt2, transferred_leaves) {
  if (n2 == null) {
    return [n1, null];
  } else {
    var slc1 = clojure.core.rrb_vector.rrbt.slot_count(n1, shift);
    var slc2 = clojure.core.rrb_vector.rrbt.slot_count(n2, shift);
    var a = slc1 + slc2;
    var sbc1 = clojure.core.rrb_vector.rrbt.subtree_branch_count(n1, shift);
    var sbc2 = clojure.core.rrb_vector.rrbt.subtree_branch_count(n2, shift);
    var p = sbc1 + sbc2;
    var e = a - (cljs.core.quot(p - 1, 32) + 1);
    if (e <= 2) {
      return [n1, n2];
    } else {
      if (sbc1 + sbc2 <= 1024) {
        var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_n1 = cljs.core.__GT_VectorNode(null, new_arr);
        var i_21029 = 0;
        var bs_21030 = cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(32, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(clojure.core.rrb_vector.rrbt.child_seq(n1, shift, cnt1), clojure.core.rrb_vector.rrbt.child_seq(n2, shift, cnt2)));
        while (true) {
          var temp__5753__auto___21031 = cljs.core.seq(bs_21030);
          if (temp__5753__auto___21031) {
            var xs__6308__auto___21035 = temp__5753__auto___21031;
            var block_21036 = cljs.core.first(xs__6308__auto___21035);
            var a_21037__$1 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            var r_21038 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            a_21037__$1[32] = r_21038;
            r_21038[32] = cljs.core.count(block_21036);
            var i_21039__$1 = 0;
            var o_21040 = 0;
            var gcs_21041 = cljs.core.seq(block_21036);
            while (true) {
              var temp__5753__auto___21042__$1 = cljs.core.seq(gcs_21041);
              if (temp__5753__auto___21042__$1) {
                var xs__6308__auto___21043__$1 = temp__5753__auto___21042__$1;
                var vec__20567_21044 = cljs.core.first(xs__6308__auto___21043__$1);
                var gc_21045 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20567_21044, 0, null);
                var gcr_21046 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20567_21044, 1, null);
                a_21037__$1[i_21039__$1] = gc_21045;
                r_21038[i_21039__$1] = o_21040 + gcr_21046;
                var G__21047 = i_21039__$1 + 1;
                var G__21048 = o_21040 + gcr_21046;
                var G__21049 = cljs.core.next(gcs_21041);
                i_21039__$1 = G__21047;
                o_21040 = G__21048;
                gcs_21041 = G__21049;
                continue;
              } else {
              }
              break;
            }
            new_arr[i_21029] = cljs.core.__GT_VectorNode(null, a_21037__$1);
            new_rngs[i_21029] = r_21038[r_21038[32] - 1] + (i_21029 > 0 ? new_rngs[i_21029 - 1] : 0);
            new_rngs[32] = i_21029 + 1;
            var G__21050 = i_21029 + 1;
            var G__21051 = cljs.core.next(bs_21030);
            i_21029 = G__21050;
            bs_21030 = G__21051;
            continue;
          } else {
          }
          break;
        }
        new_arr[32] = new_rngs;
        transferred_leaves.val = cnt2;
        return [new_n1, null];
      } else {
        var new_arr1 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_arr2 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_rngs1 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_rngs2 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_n1 = cljs.core.__GT_VectorNode(null, new_arr1);
        var new_n2 = cljs.core.__GT_VectorNode(null, new_arr2);
        var i_21053 = 0;
        var bs_21054 = cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(32, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(clojure.core.rrb_vector.rrbt.child_seq(n1, shift, cnt1), clojure.core.rrb_vector.rrbt.child_seq(n2, shift, cnt2)));
        while (true) {
          var temp__5753__auto___21056 = cljs.core.seq(bs_21054);
          if (temp__5753__auto___21056) {
            var xs__6308__auto___21057 = temp__5753__auto___21056;
            var block_21058 = cljs.core.first(xs__6308__auto___21057);
            var a_21059__$1 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            var r_21060 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            a_21059__$1[32] = r_21060;
            r_21060[32] = cljs.core.count(block_21058);
            var i_21063__$1 = 0;
            var o_21064 = 0;
            var gcs_21065 = cljs.core.seq(block_21058);
            while (true) {
              var temp__5753__auto___21066__$1 = cljs.core.seq(gcs_21065);
              if (temp__5753__auto___21066__$1) {
                var xs__6308__auto___21067__$1 = temp__5753__auto___21066__$1;
                var vec__20589_21068 = cljs.core.first(xs__6308__auto___21067__$1);
                var gc_21069 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20589_21068, 0, null);
                var gcr_21070 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20589_21068, 1, null);
                a_21059__$1[i_21063__$1] = gc_21069;
                r_21060[i_21063__$1] = o_21064 + gcr_21070;
                var G__21075 = i_21063__$1 + 1;
                var G__21076 = o_21064 + gcr_21070;
                var G__21077 = cljs.core.next(gcs_21065);
                i_21063__$1 = G__21075;
                o_21064 = G__21076;
                gcs_21065 = G__21077;
                continue;
              } else {
              }
              break;
            }
            if (i_21053 < 32 && i_21053 * 32 + cljs.core.count(block_21058) > sbc1) {
              var tbs_21079 = i_21053 * 32 + cljs.core.count(block_21058) - sbc1;
              var li_21080 = r_21060[32] - 1;
              var d_21081 = tbs_21079 >= 32 ? r_21060[li_21080] : r_21060[li_21080] - r_21060[li_21080 - tbs_21079];
              transferred_leaves.val = transferred_leaves.val + d_21081;
            } else {
            }
            var new_arr_21082 = i_21053 < 32 ? new_arr1 : new_arr2;
            var new_rngs_21083 = i_21053 < 32 ? new_rngs1 : new_rngs2;
            var i_21084__$1 = cljs.core.mod(i_21053, 32);
            new_arr_21082[i_21084__$1] = cljs.core.__GT_VectorNode(null, a_21059__$1);
            new_rngs_21083[i_21084__$1] = r_21060[r_21060[32] - 1] + (i_21084__$1 > 0 ? new_rngs_21083[i_21084__$1 - 1] : 0);
            new_rngs_21083[32] = i_21084__$1 + 1;
            var G__21086 = i_21053 + 1;
            var G__21087 = cljs.core.next(bs_21054);
            i_21053 = G__21086;
            bs_21054 = G__21087;
            continue;
          } else {
          }
          break;
        }
        new_arr1[32] = new_rngs1;
        new_arr2[32] = new_rngs2;
        return [new_n1, new_n2];
      }
    }
  }
};
clojure.core.rrb_vector.rrbt.zippath = function clojure$core$rrb_vector$rrbt$zippath(shift, n1, cnt1, n2, cnt2, transferred_leaves) {
  if (shift === 5) {
    return clojure.core.rrb_vector.rrbt.rebalance_leaves(n1, cnt1, n2, cnt2, transferred_leaves);
  } else {
    var c1 = clojure.core.rrb_vector.nodes.last_child(n1);
    var c2 = clojure.core.rrb_vector.nodes.first_child(n2);
    var ccnt1 = clojure.core.rrb_vector.nodes.regular_QMARK_(n1) ? function() {
      var m = cljs.core.mod(cnt1, 1 << shift);
      if (m === 0) {
        return 1 << shift;
      } else {
        return m;
      }
    }() : function() {
      var rngs = clojure.core.rrb_vector.nodes.node_ranges(n1);
      var i = rngs[32] - 1;
      if (i === 0) {
        return rngs[0];
      } else {
        return rngs[i] - rngs[i - 1];
      }
    }();
    var ccnt2 = clojure.core.rrb_vector.nodes.regular_QMARK_(n2) ? function() {
      var m = cljs.core.mod(cnt2, 1 << shift);
      if (m === 0) {
        return 1 << shift;
      } else {
        return m;
      }
    }() : clojure.core.rrb_vector.nodes.node_ranges(n2)[0];
    var next_transferred_leaves = new cljs.core.Box(0);
    var vec__20598 = function() {
      var G__20607 = shift - 5;
      var G__20608 = c1;
      var G__20609 = ccnt1;
      var G__20610 = c2;
      var G__20611 = ccnt2;
      var G__20612 = next_transferred_leaves;
      return clojure.core.rrb_vector.rrbt.zippath.cljs$core$IFn$_invoke$arity$6 ? clojure.core.rrb_vector.rrbt.zippath.cljs$core$IFn$_invoke$arity$6(G__20607, G__20608, G__20609, G__20610, G__20611, G__20612) : clojure.core.rrb_vector.rrbt.zippath.call(null, G__20607, G__20608, G__20609, G__20610, G__20611, G__20612);
    }();
    var new_c1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20598, 0, null);
    var new_c2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20598, 1, null);
    var d = next_transferred_leaves.val;
    transferred_leaves.val = transferred_leaves.val + d;
    return clojure.core.rrb_vector.rrbt.rebalance(shift, c1 === new_c1 ? n1 : clojure.core.rrb_vector.nodes.replace_rightmost_child(shift, n1, new_c1, d), cnt1 + d, cljs.core.truth_(new_c2) ? c2 === new_c2 ? n2 : clojure.core.rrb_vector.nodes.replace_leftmost_child(shift, n2, cnt2, new_c2, d) : clojure.core.rrb_vector.nodes.remove_leftmost_child(shift, n2), cnt2 - d, transferred_leaves);
  }
};
clojure.core.rrb_vector.rrbt.squash_nodes = function clojure$core$rrb_vector$rrbt$squash_nodes(shift, n1, cnt1, n2, cnt2) {
  var arr1 = n1.arr;
  var arr2 = n2.arr;
  var li1 = clojure.core.rrb_vector.nodes.index_of_nil(arr1);
  var li2 = clojure.core.rrb_vector.nodes.index_of_nil(arr2);
  var slots = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.take.cljs$core$IFn$_invoke$arity$2(li1, arr1), cljs.core.take.cljs$core$IFn$_invoke$arity$2(li2, arr2));
  if (cljs.core.count(slots) > 32) {
    return [n1, n2];
  } else {
    var new_rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
    var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
    var rngs1 = cljs.core.take.cljs$core$IFn$_invoke$arity$2(li1, clojure.core.rrb_vector.nodes.regular_QMARK_(n1) ? clojure.core.rrb_vector.nodes.regular_ranges(shift, cnt1) : clojure.core.rrb_vector.nodes.node_ranges(n1));
    var rngs2 = cljs.core.take.cljs$core$IFn$_invoke$arity$2(li2, clojure.core.rrb_vector.nodes.regular_QMARK_(n2) ? clojure.core.rrb_vector.nodes.regular_ranges(shift, cnt2) : clojure.core.rrb_vector.nodes.node_ranges(n2));
    var rngs2__$1 = function() {
      var r = cljs.core.last(rngs1);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__20618_SHARP_) {
        return p1__20618_SHARP_ + r;
      }, rngs2);
    }();
    var rngs = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(rngs1, rngs2__$1);
    new_arr[32] = new_rngs;
    var i_21092 = 0;
    var cs_21093 = cljs.core.seq(slots);
    while (true) {
      if (cs_21093) {
        new_arr[i_21092] = cljs.core.first(cs_21093);
        var G__21094 = i_21092 + 1;
        var G__21095 = cljs.core.next(cs_21093);
        i_21092 = G__21094;
        cs_21093 = G__21095;
        continue;
      } else {
      }
      break;
    }
    var i_21096 = 0;
    var rngs_21097__$1 = cljs.core.seq(rngs);
    while (true) {
      if (rngs_21097__$1) {
        new_rngs[i_21096] = cljs.core.first(rngs_21097__$1);
        var G__21101 = i_21096 + 1;
        var G__21102 = cljs.core.next(rngs_21097__$1);
        i_21096 = G__21101;
        rngs_21097__$1 = G__21102;
        continue;
      } else {
        new_rngs[32] = i_21096;
      }
      break;
    }
    return [cljs.core.__GT_VectorNode(null, new_arr), null];
  }
};
clojure.core.rrb_vector.rrbt.peephole_optimization_config = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$debug_DASH_fn, null], null));
clojure.core.rrb_vector.rrbt.peephole_optimization_count = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0);
clojure.core.rrb_vector.rrbt.child_nodes = function clojure$core$rrb_vector$rrbt$child_nodes(node) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(32, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(cljs.core.nil_QMARK_), node.arr));
};
clojure.core.rrb_vector.rrbt.bounded_grandchildren = function clojure$core$rrb_vector$rrbt$bounded_grandchildren(children) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(33, cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(clojure.core.rrb_vector.rrbt.child_nodes, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([children], 0)));
};
clojure.core.rrb_vector.rrbt.last_non_nil_idx = function clojure$core$rrb_vector$rrbt$last_non_nil_idx(arr) {
  var i = arr.length - 1;
  while (true) {
    if (i < 0) {
      return i;
    } else {
      if (arr[i] == null) {
        var G__21106 = i - 1;
        i = G__21106;
        continue;
      } else {
        return i;
      }
    }
    break;
  }
};
clojure.core.rrb_vector.rrbt.count_vector_elements_beneath = function clojure$core$rrb_vector$rrbt$count_vector_elements_beneath(node, shift) {
  if (clojure.core.rrb_vector.nodes.regular_QMARK_(node)) {
    var node__$1 = node;
    var shift__$1 = shift;
    var acc = 0;
    while (true) {
      if (shift__$1 === 0) {
        if (node__$1 == null) {
          return acc;
        } else {
          return acc + 32;
        }
      } else {
        var arr = node__$1.arr;
        var max_child_idx = clojure.core.rrb_vector.rrbt.last_non_nil_idx(arr);
        var num_elems_in_full_child = 1 << shift__$1;
        if (max_child_idx < 0) {
          return acc;
        } else {
          var G__21108 = arr[max_child_idx];
          var G__21109 = shift__$1 - 5;
          var G__21110 = acc + max_child_idx * num_elems_in_full_child;
          node__$1 = G__21108;
          shift__$1 = G__21109;
          acc = G__21110;
          continue;
        }
      }
      break;
    }
  } else {
    var rngs = clojure.core.rrb_vector.nodes.node_ranges(node);
    return rngs[rngs[32] - 1];
  }
};
clojure.core.rrb_vector.rrbt.peephole_optimize_root = function clojure$core$rrb_vector$rrbt$peephole_optimize_root(v) {
  var config = cljs.core.deref(clojure.core.rrb_vector.rrbt.peephole_optimization_config);
  if (v.shift <= 10) {
    return v;
  } else {
    var root = v.root;
    var children = clojure.core.rrb_vector.rrbt.child_nodes(root);
    var grandchildren = clojure.core.rrb_vector.rrbt.bounded_grandchildren(children);
    var num_granchildren_bounded = cljs.core.count(grandchildren);
    var many_grandchildren_QMARK_ = num_granchildren_bounded > 32;
    if (many_grandchildren_QMARK_) {
      return v;
    } else {
      var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var new_rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var new_root = cljs.core.__GT_VectorNode(root.edit, new_arr);
      var shift = v.shift;
      var grandchild_shift = shift - 2 * 5;
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(clojure.core.rrb_vector.rrbt.peephole_optimization_count, cljs.core.inc);
      var idx_21113 = 0;
      var remaining_gc_21114 = grandchildren;
      var elem_sum_21115 = 0;
      while (true) {
        var temp__5751__auto___21116 = cljs.core.seq(remaining_gc_21114);
        if (temp__5751__auto___21116) {
          var remaining_gc_21117__$1 = temp__5751__auto___21116;
          var grandchild_21118 = cljs.core.first(remaining_gc_21117__$1);
          var num_elems_this_grandchild_21119 = clojure.core.rrb_vector.rrbt.count_vector_elements_beneath(grandchild_21118, grandchild_shift);
          var next_elem_sum_21120 = elem_sum_21115 + num_elems_this_grandchild_21119;
          new_arr[idx_21113] = grandchild_21118;
          new_rngs[idx_21113] = next_elem_sum_21120;
          var G__21121 = idx_21113 + 1;
          var G__21122 = cljs.core.rest(remaining_gc_21117__$1);
          var G__21123 = next_elem_sum_21120;
          idx_21113 = G__21121;
          remaining_gc_21114 = G__21122;
          elem_sum_21115 = G__21123;
          continue;
        } else {
        }
        break;
      }
      new_rngs[32] = num_granchildren_bounded;
      new_arr[32] = new_rngs;
      var new_v = new clojure.core.rrb_vector.rrbt.Vector(v.cnt, shift - 5, new_root, v.tail, v.meta, null);
      if (cljs.core.truth_(cljs$cst$keyword$debug_DASH_fn.cljs$core$IFn$_invoke$arity$1(config))) {
        var fexpr__20648_21126 = cljs$cst$keyword$debug_DASH_fn.cljs$core$IFn$_invoke$arity$1(config);
        fexpr__20648_21126.cljs$core$IFn$_invoke$arity$2 ? fexpr__20648_21126.cljs$core$IFn$_invoke$arity$2(v, new_v) : fexpr__20648_21126.call(null, v, new_v);
      } else {
      }
      return new_v;
    }
  }
};
clojure.core.rrb_vector.rrbt.max_vector_elements = 2147483647;
clojure.core.rrb_vector.rrbt.shift_too_large_QMARK_ = function clojure$core$rrb_vector$rrbt$shift_too_large_QMARK_(v) {
  return v.shift > 30;
};
clojure.core.rrb_vector.rrbt.poor_branching_QMARK_ = function clojure$core$rrb_vector$rrbt$poor_branching_QMARK_(v) {
  var tail_off = clojure.core.rrb_vector.rrbt._tail_offset(v);
  if (tail_off === 0) {
    return false;
  } else {
    var shift_amount = v.shift - 5;
    var max_capacity_divided_by_1024 = 1 << shift_amount;
    return tail_off < max_capacity_divided_by_1024;
  }
};
clojure.core.rrb_vector.rrbt.fallback_config = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$debug_DASH_fn, null], null));
clojure.core.rrb_vector.rrbt.fallback_to_slow_splice_count1 = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0);
clojure.core.rrb_vector.rrbt.fallback_to_slow_splice_count2 = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0);
clojure.core.rrb_vector.rrbt.fallback_to_slow_splice_if_needed = function clojure$core$rrb_vector$rrbt$fallback_to_slow_splice_if_needed(v1, v2, splice_result) {
  var config = cljs.core.deref(clojure.core.rrb_vector.rrbt.fallback_config);
  if (clojure.core.rrb_vector.rrbt.shift_too_large_QMARK_(splice_result) || clojure.core.rrb_vector.rrbt.poor_branching_QMARK_(splice_result)) {
    if (clojure.core.rrb_vector.rrbt.poor_branching_QMARK_(v1)) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(clojure.core.rrb_vector.rrbt.fallback_to_slow_splice_count1, cljs.core.inc);
      var new_splice_result = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(v1), v1), v2);
      if (cljs.core.truth_(cljs$cst$keyword$debug_DASH_fn.cljs$core$IFn$_invoke$arity$1(config))) {
        var fexpr__20654_21127 = cljs$cst$keyword$debug_DASH_fn.cljs$core$IFn$_invoke$arity$1(config);
        fexpr__20654_21127.cljs$core$IFn$_invoke$arity$2 ? fexpr__20654_21127.cljs$core$IFn$_invoke$arity$2(splice_result, new_splice_result) : fexpr__20654_21127.call(null, splice_result, new_splice_result);
      } else {
      }
      return new_splice_result;
    } else {
      var new_splice_result = cljs.core.into.cljs$core$IFn$_invoke$arity$2(v1, v2);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(clojure.core.rrb_vector.rrbt.fallback_to_slow_splice_count2, cljs.core.inc);
      if (cljs.core.truth_(cljs$cst$keyword$debug_DASH_fn.cljs$core$IFn$_invoke$arity$1(config))) {
        var fexpr__20655_21130 = cljs$cst$keyword$debug_DASH_fn.cljs$core$IFn$_invoke$arity$1(config);
        fexpr__20655_21130.cljs$core$IFn$_invoke$arity$2 ? fexpr__20655_21130.cljs$core$IFn$_invoke$arity$2(splice_result, new_splice_result) : fexpr__20655_21130.call(null, splice_result, new_splice_result);
      } else {
      }
      return new_splice_result;
    }
  } else {
    return splice_result;
  }
};
clojure.core.rrb_vector.rrbt.splice_rrbts_main = function clojure$core$rrb_vector$rrbt$splice_rrbts_main(v1, v2) {
  if (cljs.core.count(v1) === 0) {
    return v2;
  } else {
    if (cljs.core.count(v1) + cljs.core.count(v2) > clojure.core.rrb_vector.rrbt.max_vector_elements) {
      var c1 = cljs.core.count(v1);
      var c2 = cljs.core.count(v2);
      throw new Error(["Attempted to concatenate two vectors whose total", " number of elements is ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c1 + c2), ", which is", " larger than the maximum number of elements ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.core.rrb_vector.rrbt.max_vector_elements), " supported in a vector "].join(""));
    } else {
      if (cljs.core.count(v2) < 33) {
        return cljs.core.into.cljs$core$IFn$_invoke$arity$2(v1, v2);
      } else {
        var s1 = v1.shift;
        var s2 = v2.shift;
        var r1 = v1.root;
        var o_QMARK_ = clojure.core.rrb_vector.nodes.overflow_QMARK_(r1, s1, cljs.core.count(v1) + (32 - v1.tail.length));
        var r1__$1 = o_QMARK_ ? function() {
          var tail = v1.tail;
          var tail_node = cljs.core.__GT_VectorNode(null, tail);
          var reg_QMARK_ = clojure.core.rrb_vector.nodes.regular_QMARK_(r1) && tail.length === 32;
          var arr = new Array(reg_QMARK_ ? 32 : 33);
          arr[0] = r1;
          arr[1] = clojure.core.rrb_vector.nodes.new_path_STAR_(s1, tail_node);
          if (!reg_QMARK_) {
            var rngs_21133 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            rngs_21133[32] = 2;
            rngs_21133[0] = cljs.core.count(v1) - tail.length;
            rngs_21133[1] = cljs.core.count(v1);
            arr[32] = rngs_21133;
          } else {
          }
          return cljs.core.__GT_VectorNode(null, arr);
        }() : clojure.core.rrb_vector.nodes.fold_tail(r1, s1, clojure.core.rrb_vector.rrbt._tail_offset(v1), v1.tail);
        var s1__$1 = o_QMARK_ ? s1 + 5 : s1;
        var r2 = v2.root;
        var s = function() {
          var x__4336__auto__ = s1__$1;
          var y__4337__auto__ = s2;
          return x__4336__auto__ > y__4337__auto__ ? x__4336__auto__ : y__4337__auto__;
        }();
        var r1__$2 = clojure.core.rrb_vector.rrbt.shift_from_to(r1__$1, s1__$1, s);
        var r2__$1 = clojure.core.rrb_vector.rrbt.shift_from_to(r2, s2, s);
        var transferred_leaves = new cljs.core.Box(0);
        var vec__20664 = clojure.core.rrb_vector.rrbt.zippath(s, r1__$2, cljs.core.count(v1), r2__$1, cljs.core.count(v2) - v2.tail.length, transferred_leaves);
        var n1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20664, 0, null);
        var n2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20664, 1, null);
        var d = transferred_leaves.val;
        var ncnt1 = cljs.core.count(v1) + d;
        var ncnt2 = cljs.core.count(v2) - v2.tail.length - d;
        var vec__20667 = n2 === r2__$1 ? clojure.core.rrb_vector.rrbt.squash_nodes(s, n1, ncnt1, n2, ncnt2) : [n1, n2];
        var n1__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20667, 0, null);
        var n2__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20667, 1, null);
        var ncnt1__$1 = cljs.core.truth_(n2__$1) ? ncnt1 : ncnt1 + ncnt2;
        var ncnt2__$1 = cljs.core.truth_(n2__$1) ? ncnt2 : 0;
        if (cljs.core.truth_(n2__$1)) {
          var arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
          var new_root = cljs.core.__GT_VectorNode(null, arr);
          arr[0] = n1__$1;
          arr[1] = n2__$1;
          arr[32] = function() {
            var G__20678 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            G__20678[0] = ncnt1__$1;
            G__20678[1] = ncnt1__$1 + ncnt2__$1;
            G__20678[32] = 2;
            return G__20678;
          }();
          return new clojure.core.rrb_vector.rrbt.Vector(cljs.core.count(v1) + cljs.core.count(v2), s + 5, new_root, v2.tail, null, null);
        } else {
          var r = n1__$1;
          var s__$1 = s;
          while (true) {
            if (s__$1 > 5 && r.arr[1] == null) {
              var G__21155 = r.arr[0];
              var G__21156 = s__$1 - 5;
              r = G__21155;
              s__$1 = G__21156;
              continue;
            } else {
              return new clojure.core.rrb_vector.rrbt.Vector(cljs.core.count(v1) + cljs.core.count(v2), s__$1, r, v2.tail, null, null);
            }
            break;
          }
        }
      }
    }
  }
};
clojure.core.rrb_vector.rrbt.splice_rrbts = function clojure$core$rrb_vector$rrbt$splice_rrbts(v1, v2) {
  var r1 = clojure.core.rrb_vector.rrbt.splice_rrbts_main(v1, v2);
  var r2 = clojure.core.rrb_vector.rrbt.peephole_optimize_root(r1);
  return clojure.core.rrb_vector.rrbt.fallback_to_slow_splice_if_needed(v1, v2, r2);
};
clojure.core.rrb_vector.rrbt.Transient = function(cnt, shift, root, tail, tidx) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.tidx = tidx;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
clojure.core.rrb_vector.rrbt.Transient.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.root.edit) {
    if (self__.tidx < 32) {
      self__.tail[self__.tidx] = o;
      self__.cnt = self__.cnt + 1;
      self__.tidx = self__.tidx + 1;
      return this$__$1;
    } else {
      var tail_node = cljs.core.__GT_VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      self__.tidx = 1;
      if (clojure.core.rrb_vector.nodes.overflow_QMARK_(self__.root, self__.shift, self__.cnt)) {
        if (clojure.core.rrb_vector.nodes.regular_QMARK_(self__.root)) {
          var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
          var G__20700_21167 = new_arr;
          G__20700_21167[0] = self__.root;
          G__20700_21167[1] = clojure.core.rrb_vector.trees.new_path(self__.tail, self__.root.edit, self__.shift, tail_node);
          self__.root = cljs.core.__GT_VectorNode(self__.root.edit, new_arr);
          self__.shift = self__.shift + 5;
          self__.cnt = self__.cnt + 1;
          return this$__$1;
        } else {
          var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
          var new_rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
          var new_root = cljs.core.__GT_VectorNode(self__.root.edit, new_arr);
          var root_total_range = clojure.core.rrb_vector.nodes.node_ranges(self__.root)[31];
          var G__20701_21171 = new_arr;
          G__20701_21171[0] = self__.root;
          G__20701_21171[1] = clojure.core.rrb_vector.trees.new_path(self__.tail, self__.root.edit, self__.shift, tail_node);
          G__20701_21171[32] = new_rngs;
          var G__20702_21172 = new_rngs;
          G__20702_21172[0] = root_total_range;
          G__20702_21172[1] = root_total_range + 32;
          G__20702_21172[32] = 2;
          self__.root = new_root;
          self__.shift = self__.shift + 5;
          self__.cnt = self__.cnt + 1;
          return this$__$1;
        }
      } else {
        var new_root = clojure.core.rrb_vector.transients.push_tail_BANG_(self__.shift, self__.cnt, self__.root.edit, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return this$__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
clojure.core.rrb_vector.rrbt.Transient.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var trimmed_tail = new Array(self__.tidx);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, self__.tidx);
    return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt, self__.shift, self__.root, trimmed_tail, null, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
clojure.core.rrb_vector.rrbt.Transient.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(this$, key, val) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(null, key, val);
};
clojure.core.rrb_vector.rrbt.Transient.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(this$, i, val) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.root.edit) {
    if (0 <= i && i < self__.cnt) {
      var tail_off = self__.cnt - self__.tidx;
      if (tail_off <= i) {
        self__.tail[i - tail_off] = val;
      } else {
        self__.root = clojure.core.rrb_vector.transients.do_assoc_BANG_(self__.shift, self__.root.edit, self__.root, i, val);
      }
      return this$__$1;
    } else {
      if (i === self__.cnt) {
        return this$__$1.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, val);
      } else {
        return cljs.core.vector_index_out_of_bounds(i, self__.cnt);
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
clojure.core.rrb_vector.rrbt.Transient.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        self__.tidx = 0;
        self__.tail[0] = null;
        return this$__$1;
      } else {
        if (self__.tidx > 1) {
          self__.cnt = self__.cnt - 1;
          self__.tidx = self__.tidx - 1;
          self__.tail[self__.tidx] = null;
          return this$__$1;
        } else {
          var new_tail_base = this$__$1.clojure$core$rrb_vector$rrbt$IVecImpl$_array_for$arity$2(null, self__.cnt - 2);
          var new_tail = clojure.core.rrb_vector.transients.editable_tail(new_tail_base);
          var new_tidx = new_tail_base.length;
          var new_root = clojure.core.rrb_vector.transients.pop_tail_BANG_(self__.shift, self__.cnt, self__.root.edit, self__.root);
          if (new_root == null) {
            self__.cnt = self__.cnt - 1;
            self__.root = clojure.core.rrb_vector.transients.ensure_editable(self__.root.edit, clojure.core.rrb_vector.nodes.empty_node);
            self__.tail = new_tail;
            self__.tidx = new_tidx;
            return this$__$1;
          } else {
            if (self__.shift > 5 && new_root.arr[1] == null) {
              self__.cnt = self__.cnt - 1;
              self__.shift = self__.shift - 5;
              self__.root = clojure.core.rrb_vector.transients.ensure_editable(self__.root.edit, new_root.arr[0]);
              self__.tail = new_tail;
              self__.tidx = new_tidx;
              return this$__$1;
            } else {
              self__.cnt = self__.cnt - 1;
              self__.root = new_root;
              self__.tail = new_tail;
              self__.tidx = new_tidx;
              return this$__$1;
            }
          }
        }
      }
    }
  } else {
    throw new Error("count after persistent!");
  }
};
clojure.core.rrb_vector.rrbt.Transient.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
clojure.core.rrb_vector.rrbt.Transient.prototype.clojure$core$rrb_vector$rrbt$IVecImpl$ = cljs.core.PROTOCOL_SENTINEL;
clojure.core.rrb_vector.rrbt.Transient.prototype.clojure$core$rrb_vector$rrbt$IVecImpl$_tail_offset$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.cnt - self__.tidx;
};
clojure.core.rrb_vector.rrbt.Transient.prototype.clojure$core$rrb_vector$rrbt$IVecImpl$_array_for$arity$2 = function(this$, i) {
  var self__ = this;
  var this$__$1 = this;
  if (0 <= i && i < self__.cnt) {
    if (i >= this$__$1.clojure$core$rrb_vector$rrbt$IVecImpl$_tail_offset$arity$1(null)) {
      return self__.tail;
    } else {
      var i__$1 = i;
      var node = self__.root;
      var shift__$1 = self__.shift;
      while (true) {
        if (shift__$1 === 0) {
          return node.arr;
        } else {
          if (clojure.core.rrb_vector.nodes.regular_QMARK_(node)) {
            var node__$1 = node.arr[i__$1 >> shift__$1 & 31];
            var shift__$2 = shift__$1 - 5;
            while (true) {
              if (shift__$2 === 0) {
                return node__$1.arr;
              } else {
                var G__21194 = node__$1.arr[i__$1 >> shift__$2 & 31];
                var G__21195 = shift__$2 - 5;
                node__$1 = G__21194;
                shift__$2 = G__21195;
                continue;
              }
              break;
            }
          } else {
            var rngs = clojure.core.rrb_vector.nodes.node_ranges(node);
            var j = function() {
              var j = i__$1 >> shift__$1 & 31;
              while (true) {
                if (i__$1 < rngs[j]) {
                  return j;
                } else {
                  var G__21197 = j + 1;
                  j = G__21197;
                  continue;
                }
                break;
              }
            }();
            var i__$2 = j > 0 ? i__$1 - rngs[j - 1] : i__$1;
            var G__21198 = i__$2;
            var G__21199 = node.arr[j];
            var G__21200 = shift__$1 - 5;
            i__$1 = G__21198;
            node = G__21199;
            shift__$1 = G__21200;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return cljs.core.vector_index_out_of_bounds(i, self__.cnt);
  }
};
clojure.core.rrb_vector.rrbt.Transient.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs$cst$symbol$cnt, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$shift, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$root, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$tail, 
  new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null)), cljs.core.with_meta(cljs$cst$symbol$tidx, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$mutable, true], null))], null);
};
clojure.core.rrb_vector.rrbt.Transient.cljs$lang$type = true;
clojure.core.rrb_vector.rrbt.Transient.cljs$lang$ctorStr = "clojure.core.rrb-vector.rrbt/Transient";
clojure.core.rrb_vector.rrbt.Transient.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
  return cljs.core._write(writer__4492__auto__, "clojure.core.rrb-vector.rrbt/Transient");
};
clojure.core.rrb_vector.rrbt.__GT_Transient = function clojure$core$rrb_vector$rrbt$__GT_Transient(cnt, shift, root, tail, tidx) {
  return new clojure.core.rrb_vector.rrbt.Transient(cnt, shift, root, tail, tidx);
};
goog.provide("clojure.core.rrb_vector.interop");
cljs.core.PersistentVector.prototype.clojure$core$rrb_vector$protocols$PSliceableVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.clojure$core$rrb_vector$protocols$PSliceableVector$_slicev$arity$3 = function(v, start, end) {
  var v__$1 = this;
  return clojure.core.rrb_vector.protocols._slicev(clojure.core.rrb_vector.rrbt._as_rrbt(v__$1), start, end);
};
cljs.core.Subvec.prototype.clojure$core$rrb_vector$protocols$PSliceableVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.clojure$core$rrb_vector$protocols$PSliceableVector$_slicev$arity$3 = function(v, start, end) {
  var v__$1 = this;
  return clojure.core.rrb_vector.protocols._slicev(clojure.core.rrb_vector.rrbt._as_rrbt(v__$1), start, end);
};
cljs.core.PersistentVector.prototype.clojure$core$rrb_vector$protocols$PSpliceableVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.clojure$core$rrb_vector$protocols$PSpliceableVector$_splicev$arity$2 = function(v1, v2) {
  var v1__$1 = this;
  return clojure.core.rrb_vector.protocols._splicev(clojure.core.rrb_vector.rrbt._as_rrbt(v1__$1), v2);
};
cljs.core.Subvec.prototype.clojure$core$rrb_vector$protocols$PSpliceableVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.clojure$core$rrb_vector$protocols$PSpliceableVector$_splicev$arity$2 = function(v1, v2) {
  var v1__$1 = this;
  return clojure.core.rrb_vector.protocols._splicev(clojure.core.rrb_vector.rrbt._as_rrbt(v1__$1), v2);
};
goog.provide("clojure.core.rrb_vector");
clojure.core.rrb_vector.catvec = function clojure$core$rrb_vector$catvec(var_args) {
  var G__20768 = arguments.length;
  switch(G__20768) {
    case 0:
      return clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20897 = arguments.length;
      var i__4865__auto___20901 = 0;
      while (true) {
        if (i__4865__auto___20901 < len__4864__auto___20897) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20901]);
          var G__20902 = i__4865__auto___20901 + 1;
          i__4865__auto___20901 = G__20902;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(4), 0, null);
      return clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4886__auto__);
  }
};
clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$1 = function(v1) {
  return v1;
};
clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$2 = function(v1, v2) {
  return clojure.core.rrb_vector.protocols._splicev(v1, v2);
};
clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$3 = function(v1, v2, v3) {
  return clojure.core.rrb_vector.protocols._splicev(clojure.core.rrb_vector.protocols._splicev(v1, v2), v3);
};
clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$4 = function(v1, v2, v3, v4) {
  return clojure.core.rrb_vector.protocols._splicev(clojure.core.rrb_vector.protocols._splicev(v1, v2), clojure.core.rrb_vector.protocols._splicev(v3, v4));
};
clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$variadic = function(v1, v2, v3, v4, vn) {
  return clojure.core.rrb_vector.protocols._splicev(clojure.core.rrb_vector.protocols._splicev(clojure.core.rrb_vector.protocols._splicev(v1, v2), clojure.core.rrb_vector.protocols._splicev(v3, v4)), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(clojure.core.rrb_vector.catvec, vn));
};
clojure.core.rrb_vector.catvec.cljs$lang$applyTo = function(seq20763) {
  var G__20764 = cljs.core.first(seq20763);
  var seq20763__$1 = cljs.core.next(seq20763);
  var G__20765 = cljs.core.first(seq20763__$1);
  var seq20763__$2 = cljs.core.next(seq20763__$1);
  var G__20766 = cljs.core.first(seq20763__$2);
  var seq20763__$3 = cljs.core.next(seq20763__$2);
  var G__20767 = cljs.core.first(seq20763__$3);
  var seq20763__$4 = cljs.core.next(seq20763__$3);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__20764, G__20765, G__20766, G__20767, seq20763__$4);
};
clojure.core.rrb_vector.catvec.cljs$lang$maxFixedArity = 4;
clojure.core.rrb_vector.subvec = function clojure$core$rrb_vector$subvec(var_args) {
  var G__20797 = arguments.length;
  switch(G__20797) {
    case 2:
      return clojure.core.rrb_vector.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.core.rrb_vector.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.core.rrb_vector.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return clojure.core.rrb_vector.protocols._slicev(v, start, cljs.core.count(v));
};
clojure.core.rrb_vector.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return clojure.core.rrb_vector.protocols._slicev(v, start, end);
};
clojure.core.rrb_vector.subvec.cljs$lang$maxFixedArity = 3;
clojure.core.rrb_vector.vector = function clojure$core$rrb_vector$vector(var_args) {
  var G__20813 = arguments.length;
  switch(G__20813) {
    case 0:
      return clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4885__auto__ = [];
      var len__4864__auto___20917 = arguments.length;
      var i__4865__auto___20918 = 0;
      while (true) {
        if (i__4865__auto___20918 < len__4864__auto___20917) {
          args_arr__4885__auto__.push(arguments[i__4865__auto___20918]);
          var G__20919 = i__4865__auto___20918 + 1;
          i__4865__auto___20918 = G__20919;
          continue;
        } else {
        }
        break;
      }
      var argseq__4886__auto__ = new cljs.core.IndexedSeq(args_arr__4885__auto__.slice(4), 0, null);
      return clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4886__auto__);
  }
};
clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$0 = function() {
  var arr__20837 = [];
  return new clojure.core.rrb_vector.rrbt.Vector(0, 5, cljs.core.PersistentVector.EMPTY_NODE, arr__20837, null, null);
};
clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$1 = function(x1) {
  var arr__20845 = [null];
  arr__20845[0] = x1;
  return new clojure.core.rrb_vector.rrbt.Vector(1, 5, cljs.core.PersistentVector.EMPTY_NODE, arr__20845, null, null);
};
clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$2 = function(x1, x2) {
  var arr__20853 = [null, null];
  arr__20853[0] = x1;
  arr__20853[1] = x2;
  return new clojure.core.rrb_vector.rrbt.Vector(2, 5, cljs.core.PersistentVector.EMPTY_NODE, arr__20853, null, null);
};
clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$3 = function(x1, x2, x3) {
  var arr__20861 = [null, null, null];
  arr__20861[0] = x1;
  arr__20861[1] = x2;
  arr__20861[2] = x3;
  return new clojure.core.rrb_vector.rrbt.Vector(3, 5, cljs.core.PersistentVector.EMPTY_NODE, arr__20861, null, null);
};
clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$4 = function(x1, x2, x3, x4) {
  var arr__20868 = [null, null, null, null];
  arr__20868[0] = x1;
  arr__20868[1] = x2;
  arr__20868[2] = x3;
  arr__20868[3] = x4;
  return new clojure.core.rrb_vector.rrbt.Vector(4, 5, cljs.core.PersistentVector.EMPTY_NODE, arr__20868, null, null);
};
clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$variadic = function(x1, x2, x3, x4, xn) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$4(x1, x2, x3, x4), xn);
};
clojure.core.rrb_vector.vector.cljs$lang$applyTo = function(seq20808) {
  var G__20809 = cljs.core.first(seq20808);
  var seq20808__$1 = cljs.core.next(seq20808);
  var G__20810 = cljs.core.first(seq20808__$1);
  var seq20808__$2 = cljs.core.next(seq20808__$1);
  var G__20811 = cljs.core.first(seq20808__$2);
  var seq20808__$3 = cljs.core.next(seq20808__$2);
  var G__20812 = cljs.core.first(seq20808__$3);
  var seq20808__$4 = cljs.core.next(seq20808__$3);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__20809, G__20810, G__20811, G__20812, seq20808__$4);
};
clojure.core.rrb_vector.vector.cljs$lang$maxFixedArity = 4;
clojure.core.rrb_vector.vec = function clojure$core$rrb_vector$vec(coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    return clojure.core.rrb_vector.rrbt._as_rrbt(coll);
  } else {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(clojure.core.rrb_vector.vector, coll);
  }
};
goog.provide("fipp.deque");
fipp.deque.create = cljs.core.vector;
fipp.deque.empty = cljs.core.PersistentVector.EMPTY;
fipp.deque.popl = function fipp$deque$popl(v) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(v, 1);
};
fipp.deque.conjr = cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj, fipp.deque.empty);
fipp.deque.conjlr = function fipp$deque$conjlr(l, deque, r) {
  return clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [l], null), deque, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [r], null));
};
fipp.deque.concat = clojure.core.rrb_vector.catvec;
goog.provide("fipp.engine");
fipp.engine.serialize_node = function() {
  var method_table__4747__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4748__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4749__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4750__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4751__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY, cljs$cst$keyword$hierarchy, function() {
    var fexpr__20934 = cljs.core.get_global_hierarchy;
    return fexpr__20934.cljs$core$IFn$_invoke$arity$0 ? fexpr__20934.cljs$core$IFn$_invoke$arity$0() : fexpr__20934.call(null);
  }());
  return new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("fipp.engine", "serialize-node"), cljs.core.first, cljs$cst$keyword$default, hierarchy__4751__auto__, method_table__4747__auto__, prefer_table__4748__auto__, method_cache__4749__auto__, cached_hierarchy__4750__auto__);
}();
fipp.engine.serialize = function fipp$engine$serialize(doc) {
  if (doc == null) {
    return null;
  } else {
    if (cljs.core.seq_QMARK_(doc)) {
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(fipp.engine.serialize, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([doc], 0));
    } else {
      if (typeof doc === "string") {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$op, cljs$cst$keyword$text, cljs$cst$keyword$text, doc], null)], null);
      } else {
        if (doc instanceof cljs.core.Keyword) {
          return fipp.engine.serialize_node.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [doc], null));
        } else {
          if (cljs.core.vector_QMARK_(doc)) {
            return fipp.engine.serialize_node.cljs$core$IFn$_invoke$arity$1(doc);
          } else {
            throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Unexpected class for doc node", new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$node, doc], null));
          }
        }
      }
    }
  }
};
fipp.engine.serialize_node.cljs$core$IMultiFn$_add_method$arity$3(null, cljs$cst$keyword$text, function(p__20942) {
  var vec__20943 = p__20942;
  var seq__20944 = cljs.core.seq(vec__20943);
  var first__20945 = cljs.core.first(seq__20944);
  var seq__20944__$1 = cljs.core.next(seq__20944);
  var _ = first__20945;
  var text = seq__20944__$1;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$op, cljs$cst$keyword$text, cljs$cst$keyword$text, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, text)], null)], null);
});
fipp.engine.serialize_node.cljs$core$IMultiFn$_add_method$arity$3(null, cljs$cst$keyword$pass, function(p__20948) {
  var vec__20950 = p__20948;
  var seq__20951 = cljs.core.seq(vec__20950);
  var first__20952 = cljs.core.first(seq__20951);
  var seq__20951__$1 = cljs.core.next(seq__20951);
  var _ = first__20952;
  var text = seq__20951__$1;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$op, cljs$cst$keyword$pass, cljs$cst$keyword$text, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, text)], null)], null);
});
fipp.engine.serialize_node.cljs$core$IMultiFn$_add_method$arity$3(null, cljs$cst$keyword$escaped, function(p__20962) {
  var vec__20964 = p__20962;
  var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20964, 0, null);
  var text = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20964, 1, null);
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$op, cljs$cst$keyword$escaped, cljs$cst$keyword$text, text], null)], null);
});
fipp.engine.serialize_node.cljs$core$IMultiFn$_add_method$arity$3(null, cljs$cst$keyword$span, function(p__20971) {
  var vec__20972 = p__20971;
  var seq__20973 = cljs.core.seq(vec__20972);
  var first__20974 = cljs.core.first(seq__20973);
  var seq__20973__$1 = cljs.core.next(seq__20973);
  var _ = first__20974;
  var children = seq__20973__$1;
  return fipp.engine.serialize(children);
});
fipp.engine.serialize_node.cljs$core$IMultiFn$_add_method$arity$3(null, cljs$cst$keyword$line, function(p__20977) {
  var vec__20978 = p__20977;
  var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20978, 0, null);
  var inline = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20978, 1, null);
  var terminate = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20978, 2, null);
  var inline__$1 = function() {
    var or__4253__auto__ = inline;
    if (cljs.core.truth_(or__4253__auto__)) {
      return or__4253__auto__;
    } else {
      return " ";
    }
  }();
  var terminate__$1 = function() {
    var or__4253__auto__ = terminate;
    if (cljs.core.truth_(or__4253__auto__)) {
      return or__4253__auto__;
    } else {
      return "";
    }
  }();
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [cljs$cst$keyword$op, cljs$cst$keyword$line, cljs$cst$keyword$inline, inline__$1, cljs$cst$keyword$terminate, terminate__$1], null)], null);
});
fipp.engine.serialize_node.cljs$core$IMultiFn$_add_method$arity$3(null, cljs$cst$keyword$break, function() {
  var G__21222__delegate = function(_) {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$op, cljs$cst$keyword$break], null)], null);
  };
  var G__21222 = function(var_args) {
    var _ = null;
    if (arguments.length > 0) {
      var G__21225__i = 0, G__21225__a = new Array(arguments.length - 0);
      while (G__21225__i < G__21225__a.length) {
        G__21225__a[G__21225__i] = arguments[G__21225__i + 0];
        ++G__21225__i;
      }
      _ = new cljs.core.IndexedSeq(G__21225__a, 0, null);
    }
    return G__21222__delegate.call(this, _);
  };
  G__21222.cljs$lang$maxFixedArity = 0;
  G__21222.cljs$lang$applyTo = function(arglist__21227) {
    var _ = cljs.core.seq(arglist__21227);
    return G__21222__delegate(_);
  };
  G__21222.cljs$core$IFn$_invoke$arity$variadic = G__21222__delegate;
  return G__21222;
}());
fipp.engine.serialize_node.cljs$core$IMultiFn$_add_method$arity$3(null, cljs$cst$keyword$group, function(p__20999) {
  var vec__21002 = p__20999;
  var seq__21003 = cljs.core.seq(vec__21002);
  var first__21004 = cljs.core.first(seq__21003);
  var seq__21003__$1 = cljs.core.next(seq__21003);
  var _ = first__21004;
  var children = seq__21003__$1;
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$op, cljs$cst$keyword$begin], null)], null), fipp.engine.serialize(children), cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$op, cljs$cst$keyword$end], 
  null)], null)], 0));
});
fipp.engine.serialize_node.cljs$core$IMultiFn$_add_method$arity$3(null, cljs$cst$keyword$nest, function(p__21015) {
  var vec__21017 = p__21015;
  var seq__21018 = cljs.core.seq(vec__21017);
  var first__21019 = cljs.core.first(seq__21018);
  var seq__21018__$1 = cljs.core.next(seq__21018);
  var _ = first__21019;
  var args = seq__21018__$1;
  var vec__21021 = typeof cljs.core.first(args) === "number" ? args : cljs.core.cons(2, args);
  var seq__21022 = cljs.core.seq(vec__21021);
  var first__21023 = cljs.core.first(seq__21022);
  var seq__21022__$1 = cljs.core.next(seq__21022);
  var offset = first__21023;
  var children = seq__21022__$1;
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$op, cljs$cst$keyword$nest, cljs$cst$keyword$offset, offset], null)], null), fipp.engine.serialize(children), cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$op, 
  cljs$cst$keyword$outdent], null)], null)], 0));
});
fipp.engine.serialize_node.cljs$core$IMultiFn$_add_method$arity$3(null, cljs$cst$keyword$align, function(p__21025) {
  var vec__21026 = p__21025;
  var seq__21027 = cljs.core.seq(vec__21026);
  var first__21028 = cljs.core.first(seq__21027);
  var seq__21027__$1 = cljs.core.next(seq__21027);
  var _ = first__21028;
  var args = seq__21027__$1;
  var vec__21032 = typeof cljs.core.first(args) === "number" ? args : cljs.core.cons(0, args);
  var seq__21033 = cljs.core.seq(vec__21032);
  var first__21034 = cljs.core.first(seq__21033);
  var seq__21033__$1 = cljs.core.next(seq__21033);
  var offset = first__21034;
  var children = seq__21033__$1;
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$op, cljs$cst$keyword$align, cljs$cst$keyword$offset, offset], null)], null), fipp.engine.serialize(children), cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$op, 
  cljs$cst$keyword$outdent], null)], null)], 0));
});
fipp.engine.annotate_rights = function fipp$engine$annotate_rights(rf) {
  var pos = cljs.core.volatile_BANG_(0);
  return function() {
    var G__21243 = null;
    var G__21243__0 = function() {
      return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
    };
    var G__21243__1 = function(res) {
      return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(res) : rf.call(null, res);
    };
    var G__21243__2 = function(res, node) {
      var delta = function() {
        var G__21052 = cljs$cst$keyword$op.cljs$core$IFn$_invoke$arity$1(node);
        var G__21052__$1 = G__21052 instanceof cljs.core.Keyword ? G__21052.fqn : null;
        switch(G__21052__$1) {
          case "text":
            return cljs.core.count(cljs$cst$keyword$text.cljs$core$IFn$_invoke$arity$1(node));
            break;
          case "line":
            return cljs.core.count(cljs$cst$keyword$inline.cljs$core$IFn$_invoke$arity$1(node));
            break;
          case "escaped":
            return 1;
            break;
          default:
            return 0;
        }
      }();
      var p = pos.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, pos.cljs$core$IDeref$_deref$arity$1(null) + delta);
      var G__21061 = res;
      var G__21062 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(node, cljs$cst$keyword$right, p);
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21061, G__21062) : rf.call(null, G__21061, G__21062);
    };
    G__21243 = function(res, node) {
      switch(arguments.length) {
        case 0:
          return G__21243__0.call(this);
        case 1:
          return G__21243__1.call(this, res);
        case 2:
          return G__21243__2.call(this, res, node);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__21243.cljs$core$IFn$_invoke$arity$0 = G__21243__0;
    G__21243.cljs$core$IFn$_invoke$arity$1 = G__21243__1;
    G__21243.cljs$core$IFn$_invoke$arity$2 = G__21243__2;
    return G__21243;
  }();
};
fipp.engine.update_right = function fipp$engine$update_right(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___21246 = arguments.length;
  var i__4865__auto___21247 = 0;
  while (true) {
    if (i__4865__auto___21247 < len__4864__auto___21246) {
      args__4870__auto__.push(arguments[i__4865__auto___21247]);
      var G__21248 = i__4865__auto___21247 + 1;
      i__4865__auto___21247 = G__21248;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 2 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(2), 0, null) : null;
  return fipp.engine.update_right.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4871__auto__);
};
fipp.engine.update_right.cljs$core$IFn$_invoke$arity$variadic = function(deque, f, args) {
  return fipp.deque.conjr(cljs.core.pop(deque), cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, cljs.core.peek(deque), args));
};
fipp.engine.update_right.cljs$lang$maxFixedArity = 2;
fipp.engine.update_right.cljs$lang$applyTo = function(seq21072) {
  var G__21073 = cljs.core.first(seq21072);
  var seq21072__$1 = cljs.core.next(seq21072);
  var G__21074 = cljs.core.first(seq21072__$1);
  var seq21072__$2 = cljs.core.next(seq21072__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__21073, G__21074, seq21072__$2);
};
fipp.engine.annotate_begins = function fipp$engine$annotate_begins(p__21090) {
  var map__21091 = p__21090;
  var map__21091__$1 = cljs.core.__destructure_map(map__21091);
  var options = map__21091__$1;
  var width = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21091__$1, cljs$cst$keyword$width);
  return function(rf) {
    var pos = cljs.core.volatile_BANG_(0);
    var bufs = cljs.core.volatile_BANG_(fipp.deque.empty);
    return function() {
      var G__21255 = null;
      var G__21255__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__21255__1 = function(res) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(res) : rf.call(null, res);
      };
      var G__21255__2 = function(res, p__21103) {
        var map__21105 = p__21103;
        var map__21105__$1 = cljs.core.__destructure_map(map__21105);
        var node = map__21105__$1;
        var op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21105__$1, cljs$cst$keyword$op);
        var right = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21105__$1, cljs$cst$keyword$right);
        var buffers = cljs.core.deref(bufs);
        if (cljs.core.empty_QMARK_(buffers)) {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(op, cljs$cst$keyword$begin)) {
            var position_STAR_ = right + width;
            var buffer = new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$position, position_STAR_, cljs$cst$keyword$nodes, fipp.deque.empty], null);
            cljs.core.vreset_BANG_(pos, position_STAR_);
            cljs.core.vreset_BANG_(bufs, fipp.deque.create.cljs$core$IFn$_invoke$arity$1 ? fipp.deque.create.cljs$core$IFn$_invoke$arity$1(buffer) : fipp.deque.create.call(null, buffer));
            return res;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(res, node) : rf.call(null, res, node);
          }
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(op, cljs$cst$keyword$end)) {
            var buffer = cljs.core.peek(buffers);
            var buffers_STAR_ = cljs.core.pop(buffers);
            var begin = new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$op, cljs$cst$keyword$begin, cljs$cst$keyword$right, right], null);
            var nodes = fipp.deque.conjlr(begin, cljs$cst$keyword$nodes.cljs$core$IFn$_invoke$arity$1(buffer), node);
            if (cljs.core.empty_QMARK_(buffers_STAR_)) {
              cljs.core.vreset_BANG_(pos, 0);
              cljs.core.vreset_BANG_(bufs, fipp.deque.empty);
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf, res, nodes);
            } else {
              cljs.core.vreset_BANG_(bufs, fipp.engine.update_right.cljs$core$IFn$_invoke$arity$variadic(buffers_STAR_, cljs.core.update_in, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$nodes], null), fipp.deque.concat, nodes], 0)));
              return res;
            }
          } else {
            var buffers_STAR_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(op, cljs$cst$keyword$begin) ? fipp.deque.conjr(buffers, new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$position, right + width, cljs$cst$keyword$nodes, fipp.deque.empty], null)) : fipp.engine.update_right.cljs$core$IFn$_invoke$arity$variadic(buffers, cljs.core.update_in, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$nodes], 
            null), fipp.deque.conjr, node], 0));
            var res__$1 = res;
            while (true) {
              if (right <= cljs.core.deref(pos) && cljs.core.count(buffers_STAR_) <= width) {
                cljs.core.vreset_BANG_(bufs, buffers_STAR_);
                return res__$1;
              } else {
                var buffer = cljs.core.first(buffers_STAR_);
                var buffers_STAR__STAR_ = fipp.deque.popl(buffers_STAR_);
                var begin = new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$op, cljs$cst$keyword$begin, cljs$cst$keyword$right, cljs$cst$keyword$too_DASH_far], null);
                var res_STAR_ = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(res__$1, begin) : rf.call(null, res__$1, begin);
                var res_STAR___$1 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf, res_STAR_, cljs$cst$keyword$nodes.cljs$core$IFn$_invoke$arity$1(buffer));
                if (cljs.core.empty_QMARK_(buffers_STAR__STAR_)) {
                  cljs.core.vreset_BANG_(pos, 0);
                  cljs.core.vreset_BANG_(bufs, fipp.deque.empty);
                  return res_STAR___$1;
                } else {
                  cljs.core.vreset_BANG_(pos, cljs$cst$keyword$position.cljs$core$IFn$_invoke$arity$1(cljs.core.first(buffers_STAR__STAR_)));
                  var G__21257 = buffers_STAR__STAR_;
                  var G__21258 = res_STAR___$1;
                  buffers_STAR_ = G__21257;
                  res__$1 = G__21258;
                  continue;
                }
              }
              break;
            }
          }
        }
      };
      G__21255 = function(res, p__21103) {
        switch(arguments.length) {
          case 0:
            return G__21255__0.call(this);
          case 1:
            return G__21255__1.call(this, res);
          case 2:
            return G__21255__2.call(this, res, p__21103);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21255.cljs$core$IFn$_invoke$arity$0 = G__21255__0;
      G__21255.cljs$core$IFn$_invoke$arity$1 = G__21255__1;
      G__21255.cljs$core$IFn$_invoke$arity$2 = G__21255__2;
      return G__21255;
    }();
  };
};
fipp.engine.format_nodes = function fipp$engine$format_nodes(p__21128) {
  var map__21129 = p__21128;
  var map__21129__$1 = cljs.core.__destructure_map(map__21129);
  var options = map__21129__$1;
  var width = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21129__$1, cljs$cst$keyword$width);
  return function(rf) {
    var fits = cljs.core.volatile_BANG_(0);
    var length = cljs.core.volatile_BANG_(width);
    var tab_stops = cljs.core.volatile_BANG_(cljs.core.list(0));
    var column = cljs.core.volatile_BANG_(0);
    return function() {
      var G__21260 = null;
      var G__21260__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__21260__1 = function(res) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(res) : rf.call(null, res);
      };
      var G__21260__2 = function(res, p__21131) {
        var map__21132 = p__21131;
        var map__21132__$1 = cljs.core.__destructure_map(map__21132);
        var node = map__21132__$1;
        var op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21132__$1, cljs$cst$keyword$op);
        var right = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21132__$1, cljs$cst$keyword$right);
        var indent = cljs.core.peek(cljs.core.deref(tab_stops));
        var format_text = function(text, width__$1) {
          var res_STAR_ = cljs.core.deref(column) === 0 ? function() {
            column.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, column.cljs$core$IDeref$_deref$arity$1(null) + indent);
            var G__21135 = res;
            var G__21136 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(indent, " "));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21135, G__21136) : rf.call(null, G__21135, G__21136);
          }() : res;
          column.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, column.cljs$core$IDeref$_deref$arity$1(null) + width__$1);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(res_STAR_, text) : rf.call(null, res_STAR_, text);
        };
        var G__21142 = op;
        var G__21142__$1 = G__21142 instanceof cljs.core.Keyword ? G__21142.fqn : null;
        switch(G__21142__$1) {
          case "text":
            var text = cljs$cst$keyword$text.cljs$core$IFn$_invoke$arity$1(node);
            return format_text(text, cljs.core.count(text));
            break;
          case "escaped":
            return format_text(cljs$cst$keyword$text.cljs$core$IFn$_invoke$arity$1(node), 1);
            break;
          case "pass":
            return format_text(cljs$cst$keyword$text.cljs$core$IFn$_invoke$arity$1(node), 0);
            break;
          case "line":
            if (cljs.core.deref(fits) === 0) {
              cljs.core.vreset_BANG_(length, right + width - indent);
              cljs.core.vreset_BANG_(column, 0);
              var G__21151 = res;
              var G__21152 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs$cst$keyword$terminate.cljs$core$IFn$_invoke$arity$1(node)), "\n"].join("");
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21151, G__21152) : rf.call(null, G__21151, G__21152);
            } else {
              var inline = cljs$cst$keyword$inline.cljs$core$IFn$_invoke$arity$1(node);
              column.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, column.cljs$core$IDeref$_deref$arity$1(null) + cljs.core.count(inline));
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(res, inline) : rf.call(null, res, inline);
            }
            break;
          case "break":
            cljs.core.vreset_BANG_(length, right + width - indent);
            cljs.core.vreset_BANG_(column, 0);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(res, "\n") : rf.call(null, res, "\n");
            break;
          case "nest":
            tab_stops.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(tab_stops.cljs$core$IDeref$_deref$arity$1(null), indent + cljs$cst$keyword$offset.cljs$core$IFn$_invoke$arity$1(node)));
            return res;
            break;
          case "align":
            tab_stops.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(tab_stops.cljs$core$IDeref$_deref$arity$1(null), cljs.core.deref(column) + cljs$cst$keyword$offset.cljs$core$IFn$_invoke$arity$1(node)));
            return res;
            break;
          case "outdent":
            tab_stops.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.pop(tab_stops.cljs$core$IDeref$_deref$arity$1(null)));
            return res;
            break;
          case "begin":
            cljs.core.vreset_BANG_(fits, cljs.core.deref(fits) > 0 ? cljs.core.deref(fits) + 1 : cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(right, cljs$cst$keyword$too_DASH_far) ? 0 : right <= cljs.core.deref(length) ? 1 : 0);
            return res;
            break;
          case "end":
            cljs.core.vreset_BANG_(fits, function() {
              var x__4336__auto__ = 0;
              var y__4337__auto__ = cljs.core.deref(fits) - 1;
              return x__4336__auto__ > y__4337__auto__ ? x__4336__auto__ : y__4337__auto__;
            }());
            return res;
            break;
          default:
            throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Unexpected node op", new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$node, node], null));
        }
      };
      G__21260 = function(res, p__21131) {
        switch(arguments.length) {
          case 0:
            return G__21260__0.call(this);
          case 1:
            return G__21260__1.call(this, res);
          case 2:
            return G__21260__2.call(this, res, p__21131);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21260.cljs$core$IFn$_invoke$arity$0 = G__21260__0;
      G__21260.cljs$core$IFn$_invoke$arity$1 = G__21260__1;
      G__21260.cljs$core$IFn$_invoke$arity$2 = G__21260__2;
      return G__21260;
    }();
  };
};
fipp.engine.print_fns = function fipp$engine$print_fns(options) {
  var map__21177 = options;
  var map__21177__$1 = cljs.core.__destructure_map(map__21177);
  var print_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__21177__$1, cljs$cst$keyword$print_DASH_fn, cljs.core._STAR_print_fn_STAR_);
  return new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$print, print_fn, cljs$cst$keyword$println, function() {
    var _STAR_print_fn_STAR__orig_val__21181 = cljs.core._STAR_print_fn_STAR_;
    var _STAR_print_fn_STAR__temp_val__21182 = print_fn;
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__21182;
    try {
      return cljs.core.println();
    } finally {
      cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__21181;
    }
  }], null);
};
fipp.engine.pprint_document = function fipp$engine$pprint_document(var_args) {
  var G__21188 = arguments.length;
  switch(G__21188) {
    case 1:
      return fipp.engine.pprint_document.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return fipp.engine.pprint_document.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
fipp.engine.pprint_document.cljs$core$IFn$_invoke$arity$1 = function(document) {
  return fipp.engine.pprint_document.cljs$core$IFn$_invoke$arity$2(document, cljs.core.PersistentArrayMap.EMPTY);
};
fipp.engine.pprint_document.cljs$core$IFn$_invoke$arity$2 = function(document, options) {
  var options__$1 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$width, 70], null), options], 0));
  var map__21189 = fipp.engine.print_fns(options__$1);
  var map__21189__$1 = cljs.core.__destructure_map(map__21189);
  var print = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21189__$1, cljs$cst$keyword$print);
  var println = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21189__$1, cljs$cst$keyword$println);
  cljs.core.run_BANG_(print, cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fipp.engine.annotate_rights, fipp.engine.annotate_begins(options__$1), fipp.engine.format_nodes(options__$1), fipp.engine.serialize(document)], 0)));
  return println.cljs$core$IFn$_invoke$arity$0 ? println.cljs$core$IFn$_invoke$arity$0() : println.call(null);
};
fipp.engine.pprint_document.cljs$lang$maxFixedArity = 2;
goog.provide("fipp.edn");
fipp.edn.pretty_coll = function fipp$edn$pretty_coll(p__21209, open, xs, sep, close, f) {
  var map__21210 = p__21209;
  var map__21210__$1 = cljs.core.__destructure_map(map__21210);
  var printer = map__21210__$1;
  var print_level = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21210__$1, cljs$cst$keyword$print_DASH_level);
  var print_length = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21210__$1, cljs$cst$keyword$print_DASH_length);
  var printer__$1 = function() {
    var G__21214 = printer;
    if (cljs.core.truth_(print_level)) {
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(G__21214, cljs$cst$keyword$print_DASH_level, cljs.core.dec);
    } else {
      return G__21214;
    }
  }();
  var xform = cljs.core.comp.cljs$core$IFn$_invoke$arity$3(cljs.core.truth_(print_length) ? cljs.core.take.cljs$core$IFn$_invoke$arity$1(print_length) : cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__21205_SHARP_) {
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(printer__$1, p1__21205_SHARP_) : f.call(null, printer__$1, p1__21205_SHARP_);
  }), cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(sep));
  var ys = function() {
    var or__4253__auto__ = print_level;
    if (cljs.core.truth_(or__4253__auto__)) {
      return or__4253__auto__;
    } else {
      return 1;
    }
  }() > 0 ? cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(xform, xs) : "#";
  var ellipsis = cljs.core.truth_(function() {
    var and__4251__auto__ = print_length;
    if (cljs.core.truth_(and__4251__auto__)) {
      return cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(print_length, xs));
    } else {
      return and__4251__auto__;
    }
  }()) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$span, sep, "..."], null) : null;
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$group, open, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$align, ys, ellipsis], null), close], null);
};
fipp.edn.EdnPrinter = function(symbols, print_meta, print_length, print_level, __meta, __extmap, __hash) {
  this.symbols = symbols;
  this.print_meta = print_meta;
  this.print_length = print_length;
  this.print_level = print_level;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
fipp.edn.EdnPrinter.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4502__auto__, k__4503__auto__) {
  var self__ = this;
  var this__4502__auto____$1 = this;
  return this__4502__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4503__auto__, null);
};
fipp.edn.EdnPrinter.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4504__auto__, k21232, else__4505__auto__) {
  var self__ = this;
  var this__4504__auto____$1 = this;
  var G__21245 = k21232;
  var G__21245__$1 = G__21245 instanceof cljs.core.Keyword ? G__21245.fqn : null;
  switch(G__21245__$1) {
    case "symbols":
      return self__.symbols;
      break;
    case "print-meta":
      return self__.print_meta;
      break;
    case "print-length":
      return self__.print_length;
      break;
    case "print-level":
      return self__.print_level;
      break;
    default:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k21232, else__4505__auto__);
  }
};
fipp.edn.EdnPrinter.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4522__auto__, f__4523__auto__, init__4524__auto__) {
  var self__ = this;
  var this__4522__auto____$1 = this;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret__4525__auto__, p__21250) {
    var vec__21251 = p__21250;
    var k__4526__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21251, 0, null);
    var v__4527__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21251, 1, null);
    return f__4523__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4523__auto__.cljs$core$IFn$_invoke$arity$3(ret__4525__auto__, k__4526__auto__, v__4527__auto__) : f__4523__auto__.call(null, ret__4525__auto__, k__4526__auto__, v__4527__auto__);
  }, init__4524__auto__, this__4522__auto____$1);
};
fipp.edn.EdnPrinter.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4517__auto__, writer__4518__auto__, opts__4519__auto__) {
  var self__ = this;
  var this__4517__auto____$1 = this;
  var pr_pair__4520__auto__ = function(keyval__4521__auto__) {
    return cljs.core.pr_sequential_writer(writer__4518__auto__, cljs.core.pr_writer, "", " ", "", opts__4519__auto__, keyval__4521__auto__);
  };
  return cljs.core.pr_sequential_writer(writer__4518__auto__, pr_pair__4520__auto__, "#fipp.edn.EdnPrinter{", ", ", "}", opts__4519__auto__, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$symbols, self__.symbols], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$print_DASH_meta, 
  self__.print_meta], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$print_DASH_length, self__.print_length], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$print_DASH_level, self__.print_level], null)], null), self__.__extmap));
};
fipp.edn.EdnPrinter.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__21231) {
  var self__ = this;
  var G__21231__$1 = this;
  return new cljs.core.RecordIter(0, G__21231__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$symbols, cljs$cst$keyword$print_DASH_meta, cljs$cst$keyword$print_DASH_length, cljs$cst$keyword$print_DASH_level], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator(self__.__extmap) : cljs.core.nil_iter());
};
fipp.edn.EdnPrinter.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4500__auto__) {
  var self__ = this;
  var this__4500__auto____$1 = this;
  return self__.__meta;
};
fipp.edn.EdnPrinter.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4497__auto__) {
  var self__ = this;
  var this__4497__auto____$1 = this;
  return new fipp.edn.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, self__.print_level, self__.__meta, self__.__extmap, self__.__hash);
};
fipp.edn.EdnPrinter.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4506__auto__) {
  var self__ = this;
  var this__4506__auto____$1 = this;
  return 4 + cljs.core.count(self__.__extmap);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$ = cljs.core.PROTOCOL_SENTINEL;
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_record$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return fipp.visit.visit(this$__$1, fipp.ednize.record__GT_tagged(x));
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_meta$arity$3 = function(this$, m, x) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(self__.print_meta)) {
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$align, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$span, "^", fipp.visit.visit(this$__$1, m)], null), cljs$cst$keyword$line, fipp.visit.visit_STAR_(this$__$1, x)], null);
  } else {
    return fipp.visit.visit_STAR_(this$__$1, x);
  }
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_number$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  var _STAR_print_dup_STAR__orig_val__21270 = cljs.core._STAR_print_dup_STAR_;
  var _STAR_print_dup_STAR__temp_val__21271 = false;
  cljs.core._STAR_print_dup_STAR_ = _STAR_print_dup_STAR__temp_val__21271;
  try {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$text, cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x], 0))], null);
  } finally {
    cljs.core._STAR_print_dup_STAR_ = _STAR_print_dup_STAR__orig_val__21270;
  }
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_pattern$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$text, cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x], 0))], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_unknown$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return fipp.visit.visit(this$__$1, fipp.ednize.edn(x));
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_symbol$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$text, cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_seq$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  var temp__5751__auto__ = function() {
    var G__21272 = cljs.core.first(x);
    return self__.symbols.cljs$core$IFn$_invoke$arity$1 ? self__.symbols.cljs$core$IFn$_invoke$arity$1(G__21272) : self__.symbols.call(null, G__21272);
  }();
  if (cljs.core.truth_(temp__5751__auto__)) {
    var pretty = temp__5751__auto__;
    return pretty.cljs$core$IFn$_invoke$arity$2 ? pretty.cljs$core$IFn$_invoke$arity$2(this$__$1, x) : pretty.call(null, this$__$1, x);
  } else {
    return fipp.edn.pretty_coll(this$__$1, "(", x, cljs$cst$keyword$line, ")", fipp.visit.visit);
  }
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_boolean$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$text, cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_tagged$arity$2 = function(this$, p__21274) {
  var self__ = this;
  var map__21275 = p__21274;
  var map__21275__$1 = cljs.core.__destructure_map(map__21275);
  var tag = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21275__$1, cljs$cst$keyword$tag);
  var form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21275__$1, cljs$cst$keyword$form);
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$group, "#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), cljs.core.truth_(function() {
    var or__4253__auto__ = function() {
      var and__4251__auto__ = self__.print_meta;
      if (cljs.core.truth_(and__4251__auto__)) {
        return cljs.core.meta(form);
      } else {
        return and__4251__auto__;
      }
    }();
    if (cljs.core.truth_(or__4253__auto__)) {
      return or__4253__auto__;
    } else {
      return !cljs.core.coll_QMARK_(form);
    }
  }()) ? " " : null, fipp.visit.visit(this$__$1, form)], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_keyword$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$text, cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_map$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return fipp.edn.pretty_coll(this$__$1, "{", x, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$span, ",", cljs$cst$keyword$line], null), "}", function(printer, p__21283) {
    var vec__21284 = p__21283;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21284, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21284, 1, null);
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$span, fipp.visit.visit(printer, k), " ", fipp.visit.visit(printer, v)], null);
  });
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_nil$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$text, "nil"], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_character$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$text, function() {
    var _STAR_print_readably_STAR__orig_val__21287 = cljs.core._STAR_print_readably_STAR_;
    var _STAR_print_readably_STAR__temp_val__21288 = true;
    cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR__temp_val__21288;
    try {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x], 0));
    } finally {
      cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR__orig_val__21287;
    }
  }()], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_string$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$text, function() {
    var _STAR_print_readably_STAR__orig_val__21289 = cljs.core._STAR_print_readably_STAR_;
    var _STAR_print_readably_STAR__temp_val__21290 = true;
    cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR__temp_val__21290;
    try {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x], 0));
    } finally {
      cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR__orig_val__21289;
    }
  }()], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_var$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$text, cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_set$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return fipp.edn.pretty_coll(this$__$1, "#{", x, cljs$cst$keyword$line, "}", fipp.visit.visit);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_vector$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return fipp.edn.pretty_coll(this$__$1, "[", x, cljs$cst$keyword$line, "]", fipp.visit.visit);
};
fipp.edn.EdnPrinter.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4498__auto__) {
  var self__ = this;
  var this__4498__auto____$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = function(coll__4499__auto__) {
      return 222486956 ^ cljs.core.hash_unordered_coll(coll__4499__auto__);
    }(this__4498__auto____$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
fipp.edn.EdnPrinter.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this21233, other21234) {
  var self__ = this;
  var this21233__$1 = this;
  return !(other21234 == null) && (this21233__$1.constructor === other21234.constructor && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21233__$1.symbols, other21234.symbols) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21233__$1.print_meta, other21234.print_meta) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21233__$1.print_length, other21234.print_length) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21233__$1.print_level, other21234.print_level) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21233__$1.__extmap, 
  other21234.__extmap))))));
};
fipp.edn.EdnPrinter.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4512__auto__, k__4513__auto__) {
  var self__ = this;
  var this__4512__auto____$1 = this;
  if (cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs$cst$keyword$print_DASH_meta, null, cljs$cst$keyword$print_DASH_level, null, cljs$cst$keyword$print_DASH_length, null, cljs$cst$keyword$symbols, null], null), null), k__4513__auto__)) {
    return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, this__4512__auto____$1), self__.__meta), k__4513__auto__);
  } else {
    return new fipp.edn.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, self__.print_level, self__.__meta, cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap, k__4513__auto__)), null);
  }
};
fipp.edn.EdnPrinter.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(this__4509__auto__, k21232) {
  var self__ = this;
  var this__4509__auto____$1 = this;
  var G__21309 = k21232;
  var G__21309__$1 = G__21309 instanceof cljs.core.Keyword ? G__21309.fqn : null;
  switch(G__21309__$1) {
    case "symbols":
    case "print-meta":
    case "print-length":
    case "print-level":
      return true;
      break;
    default:
      return cljs.core.contains_QMARK_(self__.__extmap, k21232);
  }
};
fipp.edn.EdnPrinter.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4510__auto__, k__4511__auto__, G__21231) {
  var self__ = this;
  var this__4510__auto____$1 = this;
  var pred__21310 = cljs.core.keyword_identical_QMARK_;
  var expr__21311 = k__4511__auto__;
  if (cljs.core.truth_(pred__21310.cljs$core$IFn$_invoke$arity$2 ? pred__21310.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$symbols, expr__21311) : pred__21310.call(null, cljs$cst$keyword$symbols, expr__21311))) {
    return new fipp.edn.EdnPrinter(G__21231, self__.print_meta, self__.print_length, self__.print_level, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__21310.cljs$core$IFn$_invoke$arity$2 ? pred__21310.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$print_DASH_meta, expr__21311) : pred__21310.call(null, cljs$cst$keyword$print_DASH_meta, expr__21311))) {
      return new fipp.edn.EdnPrinter(self__.symbols, G__21231, self__.print_length, self__.print_level, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__21310.cljs$core$IFn$_invoke$arity$2 ? pred__21310.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$print_DASH_length, expr__21311) : pred__21310.call(null, cljs$cst$keyword$print_DASH_length, expr__21311))) {
        return new fipp.edn.EdnPrinter(self__.symbols, self__.print_meta, G__21231, self__.print_level, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__21310.cljs$core$IFn$_invoke$arity$2 ? pred__21310.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$print_DASH_level, expr__21311) : pred__21310.call(null, cljs$cst$keyword$print_DASH_level, expr__21311))) {
          return new fipp.edn.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, G__21231, self__.__meta, self__.__extmap, null);
        } else {
          return new fipp.edn.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, self__.print_level, self__.__meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k__4511__auto__, G__21231), null);
        }
      }
    }
  }
};
fipp.edn.EdnPrinter.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4515__auto__) {
  var self__ = this;
  var this__4515__auto____$1 = this;
  return cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(cljs$cst$keyword$symbols, self__.symbols, null), new cljs.core.MapEntry(cljs$cst$keyword$print_DASH_meta, self__.print_meta, null), new cljs.core.MapEntry(cljs$cst$keyword$print_DASH_length, self__.print_length, null), new cljs.core.MapEntry(cljs$cst$keyword$print_DASH_level, self__.print_level, null)], null), self__.__extmap));
};
fipp.edn.EdnPrinter.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4501__auto__, G__21231) {
  var self__ = this;
  var this__4501__auto____$1 = this;
  return new fipp.edn.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, self__.print_level, G__21231, self__.__extmap, self__.__hash);
};
fipp.edn.EdnPrinter.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4507__auto__, entry__4508__auto__) {
  var self__ = this;
  var this__4507__auto____$1 = this;
  if (cljs.core.vector_QMARK_(entry__4508__auto__)) {
    return this__4507__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth(entry__4508__auto__, 0), cljs.core._nth(entry__4508__auto__, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, this__4507__auto____$1, entry__4508__auto__);
  }
};
fipp.edn.EdnPrinter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$symbols, cljs$cst$symbol$print_DASH_meta, cljs$cst$symbol$print_DASH_length, cljs$cst$symbol$print_DASH_level], null);
};
fipp.edn.EdnPrinter.cljs$lang$type = true;
fipp.edn.EdnPrinter.cljs$lang$ctorPrSeq = function(this__4546__auto__) {
  return new cljs.core.List(null, "fipp.edn/EdnPrinter", null, 1, null);
};
fipp.edn.EdnPrinter.cljs$lang$ctorPrWriter = function(this__4546__auto__, writer__4547__auto__) {
  return cljs.core._write(writer__4547__auto__, "fipp.edn/EdnPrinter");
};
fipp.edn.__GT_EdnPrinter = function fipp$edn$__GT_EdnPrinter(symbols, print_meta, print_length, print_level) {
  return new fipp.edn.EdnPrinter(symbols, print_meta, print_length, print_level, null, null, null);
};
fipp.edn.map__GT_EdnPrinter = function fipp$edn$map__GT_EdnPrinter(G__21238) {
  var extmap__4542__auto__ = function() {
    var G__21321 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__21238, cljs$cst$keyword$symbols, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs$cst$keyword$print_DASH_meta, cljs$cst$keyword$print_DASH_length, cljs$cst$keyword$print_DASH_level], 0));
    if (cljs.core.record_QMARK_(G__21238)) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, G__21321);
    } else {
      return G__21321;
    }
  }();
  return new fipp.edn.EdnPrinter(cljs$cst$keyword$symbols.cljs$core$IFn$_invoke$arity$1(G__21238), cljs$cst$keyword$print_DASH_meta.cljs$core$IFn$_invoke$arity$1(G__21238), cljs$cst$keyword$print_DASH_length.cljs$core$IFn$_invoke$arity$1(G__21238), cljs$cst$keyword$print_DASH_level.cljs$core$IFn$_invoke$arity$1(G__21238), null, cljs.core.not_empty(extmap__4542__auto__), null);
};
fipp.edn.pretty = function fipp$edn$pretty(var_args) {
  var G__21328 = arguments.length;
  switch(G__21328) {
    case 1:
      return fipp.edn.pretty.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return fipp.edn.pretty.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
fipp.edn.pretty.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return fipp.edn.pretty.cljs$core$IFn$_invoke$arity$2(x, cljs.core.PersistentArrayMap.EMPTY);
};
fipp.edn.pretty.cljs$core$IFn$_invoke$arity$2 = function(x, options) {
  var defaults = new cljs.core.PersistentArrayMap(null, 4, [cljs$cst$keyword$symbols, cljs.core.PersistentArrayMap.EMPTY, cljs$cst$keyword$print_DASH_length, cljs.core._STAR_print_length_STAR_, cljs$cst$keyword$print_DASH_level, cljs.core._STAR_print_level_STAR_, cljs$cst$keyword$print_DASH_meta, cljs.core._STAR_print_meta_STAR_], null);
  var printer = fipp.edn.map__GT_EdnPrinter(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([defaults, options], 0)));
  var _STAR_print_meta_STAR__orig_val__21332 = cljs.core._STAR_print_meta_STAR_;
  var _STAR_print_meta_STAR__temp_val__21333 = false;
  cljs.core._STAR_print_meta_STAR_ = _STAR_print_meta_STAR__temp_val__21333;
  try {
    return fipp.visit.visit(printer, x);
  } finally {
    cljs.core._STAR_print_meta_STAR_ = _STAR_print_meta_STAR__orig_val__21332;
  }
};
fipp.edn.pretty.cljs$lang$maxFixedArity = 2;
fipp.edn.pprint = function fipp$edn$pprint(var_args) {
  var G__21337 = arguments.length;
  switch(G__21337) {
    case 1:
      return fipp.edn.pprint.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return fipp.edn.pprint.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
fipp.edn.pprint.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return fipp.edn.pprint.cljs$core$IFn$_invoke$arity$2(x, cljs.core.PersistentArrayMap.EMPTY);
};
fipp.edn.pprint.cljs$core$IFn$_invoke$arity$2 = function(x, options) {
  return fipp.engine.pprint_document.cljs$core$IFn$_invoke$arity$2(fipp.edn.pretty.cljs$core$IFn$_invoke$arity$2(x, options), options);
};
fipp.edn.pprint.cljs$lang$maxFixedArity = 2;
goog.provide("malli.dev.virhe");
malli.dev.virhe._dark_colors = new cljs.core.PersistentArrayMap(null, 8, [cljs$cst$keyword$title, 45, cljs$cst$keyword$title_DASH_dark, 32, cljs$cst$keyword$text, 253, cljs$cst$keyword$link, 255, cljs$cst$keyword$string, 180, cljs$cst$keyword$constant, 149, cljs$cst$keyword$type, 123, cljs$cst$keyword$error, 196], null);
malli.dev.virhe._color = function malli$dev$virhe$_color(color, body, printer) {
  var colors = cljs$cst$keyword$colors.cljs$core$IFn$_invoke$arity$2(printer, malli.dev.virhe._dark_colors);
  var color__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(colors, color, cljs$cst$keyword$error.cljs$core$IFn$_invoke$arity$1(colors));
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$span, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$pass, ["[38;5;", cljs.core.str.cljs$core$IFn$_invoke$arity$1(color__$1), "m"].join("")], null), body, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$pass, "[0m"], null)], null);
};
malli.dev.virhe.EdnPrinter = function(symbols, print_meta, print_length, print_level, unknown, __meta, __extmap, __hash) {
  this.symbols = symbols;
  this.print_meta = print_meta;
  this.print_length = print_length;
  this.print_level = print_level;
  this.unknown = unknown;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4502__auto__, k__4503__auto__) {
  var self__ = this;
  var this__4502__auto____$1 = this;
  return this__4502__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4503__auto__, null);
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4504__auto__, k21359, else__4505__auto__) {
  var self__ = this;
  var this__4504__auto____$1 = this;
  var G__21372 = k21359;
  var G__21372__$1 = G__21372 instanceof cljs.core.Keyword ? G__21372.fqn : null;
  switch(G__21372__$1) {
    case "symbols":
      return self__.symbols;
      break;
    case "print-meta":
      return self__.print_meta;
      break;
    case "print-length":
      return self__.print_length;
      break;
    case "print-level":
      return self__.print_level;
      break;
    case "unknown":
      return self__.unknown;
      break;
    default:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k21359, else__4505__auto__);
  }
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4522__auto__, f__4523__auto__, init__4524__auto__) {
  var self__ = this;
  var this__4522__auto____$1 = this;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret__4525__auto__, p__21379) {
    var vec__21380 = p__21379;
    var k__4526__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21380, 0, null);
    var v__4527__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21380, 1, null);
    return f__4523__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4523__auto__.cljs$core$IFn$_invoke$arity$3(ret__4525__auto__, k__4526__auto__, v__4527__auto__) : f__4523__auto__.call(null, ret__4525__auto__, k__4526__auto__, v__4527__auto__);
  }, init__4524__auto__, this__4522__auto____$1);
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4517__auto__, writer__4518__auto__, opts__4519__auto__) {
  var self__ = this;
  var this__4517__auto____$1 = this;
  var pr_pair__4520__auto__ = function(keyval__4521__auto__) {
    return cljs.core.pr_sequential_writer(writer__4518__auto__, cljs.core.pr_writer, "", " ", "", opts__4519__auto__, keyval__4521__auto__);
  };
  return cljs.core.pr_sequential_writer(writer__4518__auto__, pr_pair__4520__auto__, "#malli.dev.virhe.EdnPrinter{", ", ", "}", opts__4519__auto__, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$symbols, self__.symbols], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$print_DASH_meta, 
  self__.print_meta], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$print_DASH_length, self__.print_length], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$print_DASH_level, self__.print_level], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$unknown, self__.unknown], null)], null), self__.__extmap));
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__21358) {
  var self__ = this;
  var G__21358__$1 = this;
  return new cljs.core.RecordIter(0, G__21358__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$symbols, cljs$cst$keyword$print_DASH_meta, cljs$cst$keyword$print_DASH_length, cljs$cst$keyword$print_DASH_level, cljs$cst$keyword$unknown], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator(self__.__extmap) : cljs.core.nil_iter());
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4500__auto__) {
  var self__ = this;
  var this__4500__auto____$1 = this;
  return self__.__meta;
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4497__auto__) {
  var self__ = this;
  var this__4497__auto____$1 = this;
  return new malli.dev.virhe.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, self__.print_level, self__.unknown, self__.__meta, self__.__extmap, self__.__hash);
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4506__auto__) {
  var self__ = this;
  var this__4506__auto____$1 = this;
  return 5 + cljs.core.count(self__.__extmap);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$ = cljs.core.PROTOCOL_SENTINEL;
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_record$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return fipp.visit.visit(this$__$1, fipp.ednize.record__GT_tagged(x));
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_meta$arity$3 = function(this$, m, x) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(self__.print_meta)) {
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$align, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$span, "^", fipp.visit.visit(this$__$1, m)], null), cljs$cst$keyword$line, fipp.visit.visit_STAR_(this$__$1, x)], null);
  } else {
    return fipp.visit.visit_STAR_(this$__$1, x);
  }
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_number$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return malli.dev.virhe._color(cljs$cst$keyword$text, cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x], 0)), this$__$1);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_pattern$arity$2 = function(_, x) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$text, cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x], 0))], null);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_unknown$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  var or__4253__auto__ = function() {
    var and__4251__auto__ = self__.unknown;
    if (cljs.core.truth_(and__4251__auto__)) {
      try {
        var G__21416 = self__.unknown.cljs$core$IFn$_invoke$arity$1 ? self__.unknown.cljs$core$IFn$_invoke$arity$1(x) : self__.unknown.call(null, x);
        if (G__21416 == null) {
          return null;
        } else {
          return fipp.visit.visit(this$__$1, G__21416);
        }
      } catch (e21414) {
        if (e21414 instanceof Error) {
          var _ = e21414;
          return null;
        } else {
          throw e21414;
        }
      }
    } else {
      return and__4251__auto__;
    }
  }();
  if (cljs.core.truth_(or__4253__auto__)) {
    return or__4253__auto__;
  } else {
    return fipp.visit.visit(this$__$1, fipp.ednize.edn(x));
  }
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_symbol$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return malli.dev.virhe._color(cljs$cst$keyword$text, cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), this$__$1);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_seq$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  var temp__5751__auto__ = function() {
    var G__21426 = cljs.core.first(x);
    return self__.symbols.cljs$core$IFn$_invoke$arity$1 ? self__.symbols.cljs$core$IFn$_invoke$arity$1(G__21426) : self__.symbols.call(null, G__21426);
  }();
  if (cljs.core.truth_(temp__5751__auto__)) {
    var pretty = temp__5751__auto__;
    return pretty.cljs$core$IFn$_invoke$arity$2 ? pretty.cljs$core$IFn$_invoke$arity$2(this$__$1, x) : pretty.call(null, this$__$1, x);
  } else {
    return fipp.edn.pretty_coll(this$__$1, malli.dev.virhe._color(cljs$cst$keyword$text, "(", this$__$1), x, cljs$cst$keyword$line, malli.dev.virhe._color(cljs$cst$keyword$text, ")", this$__$1), fipp.visit.visit);
  }
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_boolean$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return malli.dev.virhe._color(cljs$cst$keyword$text, cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), this$__$1);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_tagged$arity$2 = function(this$, p__21431) {
  var self__ = this;
  var map__21432 = p__21431;
  var map__21432__$1 = cljs.core.__destructure_map(map__21432);
  var tag = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21432__$1, cljs$cst$keyword$tag);
  var form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21432__$1, cljs$cst$keyword$form);
  var this$__$1 = this;
  var object_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$symbol$object, tag);
  var tag_f = cljs.core.map_QMARK_(form) ? function(p1__21356_SHARP_) {
    return malli.dev.virhe._color(cljs$cst$keyword$type, p1__21356_SHARP_, this$__$1);
  } : cljs.core.identity;
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$group, "#", function() {
    var G__21437 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag], 0));
    return tag_f.cljs$core$IFn$_invoke$arity$1 ? tag_f.cljs$core$IFn$_invoke$arity$1(G__21437) : tag_f.call(null, G__21437);
  }(), cljs.core.truth_(function() {
    var or__4253__auto__ = function() {
      var and__4251__auto__ = self__.print_meta;
      if (cljs.core.truth_(and__4251__auto__)) {
        return cljs.core.meta(form);
      } else {
        return and__4251__auto__;
      }
    }();
    if (cljs.core.truth_(or__4253__auto__)) {
      return or__4253__auto__;
    } else {
      return !cljs.core.coll_QMARK_(form);
    }
  }()) ? " " : null, object_QMARK_ ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$group, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$align, "[", fipp.visit.visit(this$__$1, cljs.core.last(form))], null), "]"], null) : fipp.visit.visit(this$__$1, form)], null);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_keyword$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return malli.dev.virhe._color(cljs$cst$keyword$constant, cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x], 0)), this$__$1);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_map$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  var xs = cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(cljs.core.identity, function(a, b) {
    return arrangement.core.rank(cljs.core.first(a), cljs.core.first(b));
  }, x);
  return fipp.edn.pretty_coll(this$__$1, malli.dev.virhe._color(cljs$cst$keyword$text, "{", this$__$1), xs, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$span, malli.dev.virhe._color(cljs$cst$keyword$text, ",", this$__$1), cljs$cst$keyword$line], null), malli.dev.virhe._color(cljs$cst$keyword$text, "}", this$__$1), function(printer, p__21451) {
    var vec__21452 = p__21451;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21452, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21452, 1, null);
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$span, fipp.visit.visit(printer, k), " ", fipp.visit.visit(printer, v)], null);
  });
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_nil$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return malli.dev.virhe._color(cljs$cst$keyword$text, "nil", this$__$1);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_character$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return malli.dev.virhe._color(cljs$cst$keyword$text, cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x], 0)), this$__$1);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_string$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return malli.dev.virhe._color(cljs$cst$keyword$string, cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x], 0)), this$__$1);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_var$arity$2 = function(_, x) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$text, cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)], null);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_set$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  var xs = cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(cljs.core.identity, function(a, b) {
    return arrangement.core.rank(a, b);
  }, cljs.core.seq(x));
  return fipp.edn.pretty_coll(this$__$1, "#{", xs, cljs$cst$keyword$line, "}", fipp.visit.visit);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_vector$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return fipp.edn.pretty_coll(this$__$1, malli.dev.virhe._color(cljs$cst$keyword$text, "[", this$__$1), x, cljs$cst$keyword$line, malli.dev.virhe._color(cljs$cst$keyword$text, "]", this$__$1), fipp.visit.visit);
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4498__auto__) {
  var self__ = this;
  var this__4498__auto____$1 = this;
  var h__4360__auto__ = self__.__hash;
  if (!(h__4360__auto__ == null)) {
    return h__4360__auto__;
  } else {
    var h__4360__auto____$1 = function(coll__4499__auto__) {
      return -1062596876 ^ cljs.core.hash_unordered_coll(coll__4499__auto__);
    }(this__4498__auto____$1);
    self__.__hash = h__4360__auto____$1;
    return h__4360__auto____$1;
  }
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this21360, other21361) {
  var self__ = this;
  var this21360__$1 = this;
  return !(other21361 == null) && (this21360__$1.constructor === other21361.constructor && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21360__$1.symbols, other21361.symbols) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21360__$1.print_meta, other21361.print_meta) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21360__$1.print_length, other21361.print_length) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21360__$1.print_level, other21361.print_level) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21360__$1.unknown, 
  other21361.unknown) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21360__$1.__extmap, other21361.__extmap)))))));
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4512__auto__, k__4513__auto__) {
  var self__ = this;
  var this__4512__auto____$1 = this;
  if (cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [cljs$cst$keyword$print_DASH_meta, null, cljs$cst$keyword$unknown, null, cljs$cst$keyword$print_DASH_level, null, cljs$cst$keyword$print_DASH_length, null, cljs$cst$keyword$symbols, null], null), null), k__4513__auto__)) {
    return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, this__4512__auto____$1), self__.__meta), k__4513__auto__);
  } else {
    return new malli.dev.virhe.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, self__.print_level, self__.unknown, self__.__meta, cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap, k__4513__auto__)), null);
  }
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(this__4509__auto__, k21359) {
  var self__ = this;
  var this__4509__auto____$1 = this;
  var G__21503 = k21359;
  var G__21503__$1 = G__21503 instanceof cljs.core.Keyword ? G__21503.fqn : null;
  switch(G__21503__$1) {
    case "symbols":
    case "print-meta":
    case "print-length":
    case "print-level":
    case "unknown":
      return true;
      break;
    default:
      return cljs.core.contains_QMARK_(self__.__extmap, k21359);
  }
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4510__auto__, k__4511__auto__, G__21358) {
  var self__ = this;
  var this__4510__auto____$1 = this;
  var pred__21508 = cljs.core.keyword_identical_QMARK_;
  var expr__21509 = k__4511__auto__;
  if (cljs.core.truth_(pred__21508.cljs$core$IFn$_invoke$arity$2 ? pred__21508.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$symbols, expr__21509) : pred__21508.call(null, cljs$cst$keyword$symbols, expr__21509))) {
    return new malli.dev.virhe.EdnPrinter(G__21358, self__.print_meta, self__.print_length, self__.print_level, self__.unknown, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__21508.cljs$core$IFn$_invoke$arity$2 ? pred__21508.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$print_DASH_meta, expr__21509) : pred__21508.call(null, cljs$cst$keyword$print_DASH_meta, expr__21509))) {
      return new malli.dev.virhe.EdnPrinter(self__.symbols, G__21358, self__.print_length, self__.print_level, self__.unknown, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__21508.cljs$core$IFn$_invoke$arity$2 ? pred__21508.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$print_DASH_length, expr__21509) : pred__21508.call(null, cljs$cst$keyword$print_DASH_length, expr__21509))) {
        return new malli.dev.virhe.EdnPrinter(self__.symbols, self__.print_meta, G__21358, self__.print_level, self__.unknown, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__21508.cljs$core$IFn$_invoke$arity$2 ? pred__21508.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$print_DASH_level, expr__21509) : pred__21508.call(null, cljs$cst$keyword$print_DASH_level, expr__21509))) {
          return new malli.dev.virhe.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, G__21358, self__.unknown, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__21508.cljs$core$IFn$_invoke$arity$2 ? pred__21508.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$unknown, expr__21509) : pred__21508.call(null, cljs$cst$keyword$unknown, expr__21509))) {
            return new malli.dev.virhe.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, self__.print_level, G__21358, self__.__meta, self__.__extmap, null);
          } else {
            return new malli.dev.virhe.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, self__.print_level, self__.unknown, self__.__meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k__4511__auto__, G__21358), null);
          }
        }
      }
    }
  }
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4515__auto__) {
  var self__ = this;
  var this__4515__auto____$1 = this;
  return cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(cljs$cst$keyword$symbols, self__.symbols, null), new cljs.core.MapEntry(cljs$cst$keyword$print_DASH_meta, self__.print_meta, null), new cljs.core.MapEntry(cljs$cst$keyword$print_DASH_length, self__.print_length, null), new cljs.core.MapEntry(cljs$cst$keyword$print_DASH_level, self__.print_level, null), new cljs.core.MapEntry(cljs$cst$keyword$unknown, 
  self__.unknown, null)], null), self__.__extmap));
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4501__auto__, G__21358) {
  var self__ = this;
  var this__4501__auto____$1 = this;
  return new malli.dev.virhe.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, self__.print_level, self__.unknown, G__21358, self__.__extmap, self__.__hash);
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4507__auto__, entry__4508__auto__) {
  var self__ = this;
  var this__4507__auto____$1 = this;
  if (cljs.core.vector_QMARK_(entry__4508__auto__)) {
    return this__4507__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth(entry__4508__auto__, 0), cljs.core._nth(entry__4508__auto__, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, this__4507__auto____$1, entry__4508__auto__);
  }
};
malli.dev.virhe.EdnPrinter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$symbols, cljs$cst$symbol$print_DASH_meta, cljs$cst$symbol$print_DASH_length, cljs$cst$symbol$print_DASH_level, cljs$cst$symbol$unknown], null);
};
malli.dev.virhe.EdnPrinter.cljs$lang$type = true;
malli.dev.virhe.EdnPrinter.cljs$lang$ctorPrSeq = function(this__4546__auto__) {
  return new cljs.core.List(null, "malli.dev.virhe/EdnPrinter", null, 1, null);
};
malli.dev.virhe.EdnPrinter.cljs$lang$ctorPrWriter = function(this__4546__auto__, writer__4547__auto__) {
  return cljs.core._write(writer__4547__auto__, "malli.dev.virhe/EdnPrinter");
};
malli.dev.virhe.__GT_EdnPrinter = function malli$dev$virhe$__GT_EdnPrinter(symbols, print_meta, print_length, print_level, unknown) {
  return new malli.dev.virhe.EdnPrinter(symbols, print_meta, print_length, print_level, unknown, null, null, null);
};
malli.dev.virhe.map__GT_EdnPrinter = function malli$dev$virhe$map__GT_EdnPrinter(G__21362) {
  var extmap__4542__auto__ = function() {
    var G__21527 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__21362, cljs$cst$keyword$symbols, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs$cst$keyword$print_DASH_meta, cljs$cst$keyword$print_DASH_length, cljs$cst$keyword$print_DASH_level, cljs$cst$keyword$unknown], 0));
    if (cljs.core.record_QMARK_(G__21362)) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, G__21527);
    } else {
      return G__21527;
    }
  }();
  return new malli.dev.virhe.EdnPrinter(cljs$cst$keyword$symbols.cljs$core$IFn$_invoke$arity$1(G__21362), cljs$cst$keyword$print_DASH_meta.cljs$core$IFn$_invoke$arity$1(G__21362), cljs$cst$keyword$print_DASH_length.cljs$core$IFn$_invoke$arity$1(G__21362), cljs$cst$keyword$print_DASH_level.cljs$core$IFn$_invoke$arity$1(G__21362), cljs$cst$keyword$unknown.cljs$core$IFn$_invoke$arity$1(G__21362), null, cljs.core.not_empty(extmap__4542__auto__), null);
};
malli.dev.virhe._printer = function malli$dev$virhe$_printer(var_args) {
  var G__21531 = arguments.length;
  switch(G__21531) {
    case 0:
      return malli.dev.virhe._printer.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.dev.virhe._printer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.dev.virhe._printer.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.dev.virhe._printer.cljs$core$IFn$_invoke$arity$1(null);
};
malli.dev.virhe._printer.cljs$core$IFn$_invoke$arity$1 = function(options) {
  var defaults = new cljs.core.PersistentArrayMap(null, 6, [cljs$cst$keyword$width, 80, cljs$cst$keyword$symbols, cljs.core.PersistentArrayMap.EMPTY, cljs$cst$keyword$colors, malli.dev.virhe._dark_colors, cljs$cst$keyword$print_DASH_length, cljs.core._STAR_print_length_STAR_, cljs$cst$keyword$print_DASH_level, cljs.core._STAR_print_level_STAR_, cljs$cst$keyword$print_DASH_meta, cljs.core._STAR_print_meta_STAR_], null);
  return malli.dev.virhe.map__GT_EdnPrinter(function() {
    var G__21537 = options;
    if (cljs.core.truth_(defaults)) {
      return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([defaults, G__21537], 0));
    } else {
      return G__21537;
    }
  }());
};
malli.dev.virhe._printer.cljs$lang$maxFixedArity = 1;
malli.dev.virhe._pprint = function malli$dev$virhe$_pprint(var_args) {
  var G__21539 = arguments.length;
  switch(G__21539) {
    case 1:
      return malli.dev.virhe._pprint.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.dev.virhe._pprint.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.dev.virhe._pprint.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return malli.dev.virhe._pprint.cljs$core$IFn$_invoke$arity$2(x, malli.dev.virhe._printer.cljs$core$IFn$_invoke$arity$0());
};
malli.dev.virhe._pprint.cljs$core$IFn$_invoke$arity$2 = function(x, printer) {
  var printer__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(printer, cljs$cst$keyword$margin);
  var margin = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.take.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$margin.cljs$core$IFn$_invoke$arity$2(printer__$1, 0), cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(" ")));
  var _STAR_print_meta_STAR__orig_val__21545 = cljs.core._STAR_print_meta_STAR_;
  var _STAR_print_meta_STAR__temp_val__21546 = false;
  cljs.core._STAR_print_meta_STAR_ = _STAR_print_meta_STAR__temp_val__21546;
  try {
    return fipp.engine.pprint_document.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$group, margin, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$group, fipp.visit.visit(printer__$1, x)], null)], null), printer__$1);
  } finally {
    cljs.core._STAR_print_meta_STAR_ = _STAR_print_meta_STAR__orig_val__21545;
  }
};
malli.dev.virhe._pprint.cljs$lang$maxFixedArity = 2;
malli.dev.virhe._print_doc = function malli$dev$virhe$_print_doc(doc, printer) {
  return fipp.engine.pprint_document.cljs$core$IFn$_invoke$arity$2(doc, printer);
};
malli.dev.virhe._visit = function malli$dev$virhe$_visit(x, printer) {
  return fipp.visit.visit(printer, x);
};
malli.dev.virhe._title = function malli$dev$virhe$_title(message, source, p__21555) {
  var map__21556 = p__21555;
  var map__21556__$1 = cljs.core.__destructure_map(map__21556);
  var printer = map__21556__$1;
  var width = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21556__$1, cljs$cst$keyword$width);
  var between = width - cljs.core.count(message) - 8 - cljs.core.count(source);
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$group, malli.dev.virhe._color(cljs$cst$keyword$title_DASH_dark, "-- ", printer), malli.dev.virhe._color(cljs$cst$keyword$title, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$span, message, " "], null), printer), malli.dev.virhe._color(cljs$cst$keyword$title_DASH_dark, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.take.cljs$core$IFn$_invoke$arity$2(between, 
  cljs.core.repeat.cljs$core$IFn$_invoke$arity$1("-"))), printer), cljs.core.truth_(source) ? malli.dev.virhe._color(cljs$cst$keyword$title, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$span, " ", source, " "], null), printer) : malli.dev.virhe._color(cljs$cst$keyword$title_DASH_dark, "--", printer), malli.dev.virhe._color(cljs$cst$keyword$title_DASH_dark, "--", printer)], null);
};
malli.dev.virhe._footer = function malli$dev$virhe$_footer(p__21564) {
  var map__21565 = p__21564;
  var map__21565__$1 = cljs.core.__destructure_map(map__21565);
  var printer = map__21565__$1;
  var width = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21565__$1, cljs$cst$keyword$width);
  return malli.dev.virhe._color(cljs$cst$keyword$title_DASH_dark, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.take.cljs$core$IFn$_invoke$arity$2(width, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1("-"))), printer);
};
malli.dev.virhe._text = function malli$dev$virhe$_text(body, printer) {
  return malli.dev.virhe._color(cljs$cst$keyword$text, body, printer);
};
malli.dev.virhe._section = function malli$dev$virhe$_section(title, location, body, printer) {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$group, malli.dev.virhe._title(title, location, printer), cljs$cst$keyword$break, cljs$cst$keyword$break, body, cljs$cst$keyword$break, cljs$cst$keyword$break, malli.dev.virhe._footer(printer)], null);
};
malli.dev.virhe._format = function() {
  var method_table__4747__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4748__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4749__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4750__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4751__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$default, cljs$cst$keyword$malli_DOT_dev_DOT_virhe_SLASH_default], null), cljs$cst$keyword$hierarchy, function() {
    var fexpr__21571 = cljs.core.get_global_hierarchy;
    return fexpr__21571.cljs$core$IFn$_invoke$arity$0 ? fexpr__21571.cljs$core$IFn$_invoke$arity$0() : fexpr__21571.call(null);
  }());
  return new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("malli.dev.virhe", "-format"), function(type, _, ___$1, ___$2) {
    return type;
  }, cljs$cst$keyword$malli_DOT_dev_DOT_virhe_SLASH_default, hierarchy__4751__auto__, method_table__4747__auto__, prefer_table__4748__auto__, method_cache__4749__auto__, cached_hierarchy__4750__auto__);
}();
malli.dev.virhe._format.cljs$core$IMultiFn$_add_method$arity$3(null, cljs$cst$keyword$malli_DOT_dev_DOT_virhe_SLASH_default, function(_, message, data, printer) {
  return new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$body, cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$group, malli.dev.virhe._text(function() {
    var or__4253__auto__ = cljs$cst$keyword$message.cljs$core$IFn$_invoke$arity$1(data);
    if (cljs.core.truth_(or__4253__auto__)) {
      return or__4253__auto__;
    } else {
      return message;
    }
  }(), printer)], null), cljs.core.truth_(data) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$break, cljs$cst$keyword$break, malli.dev.virhe._visit(data, printer)], null) : null)], null);
});
malli.dev.virhe._exception_doc = function malli$dev$virhe$_exception_doc(e, printer) {
  var map__21578 = cljs.core.ex_data(e);
  var map__21578__$1 = cljs.core.__destructure_map(map__21578);
  var type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21578__$1, cljs$cst$keyword$type);
  var data = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21578__$1, cljs$cst$keyword$data);
  var map__21579 = malli.dev.virhe._format.cljs$core$IFn$_invoke$arity$4(type, cljs.core.ex_message(e), data, printer);
  var map__21579__$1 = cljs.core.__destructure_map(map__21579);
  var title = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__21579__$1, cljs$cst$keyword$title, cljs$cst$keyword$title.cljs$core$IFn$_invoke$arity$1(printer));
  var body = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21579__$1, cljs$cst$keyword$body);
  var location = null;
  return malli.dev.virhe._section(title, location, body, printer);
};
goog.provide("malli.util");
malli.util.equals = function malli$util$equals(var_args) {
  var G__22930 = arguments.length;
  switch(G__22930) {
    case 2:
      return malli.util.equals.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.equals.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.equals.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema1, _QMARK_schema2) {
  return malli.util.equals.cljs$core$IFn$_invoke$arity$3(_QMARK_schema1, _QMARK_schema2, null);
};
malli.util.equals.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema1, _QMARK_schema2, options) {
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(malli.core.form.cljs$core$IFn$_invoke$arity$2(_QMARK_schema1, options), malli.core.form.cljs$core$IFn$_invoke$arity$2(_QMARK_schema2, options));
};
malli.util.equals.cljs$lang$maxFixedArity = 3;
malli.util._simplify_map_entry = function malli$util$_simplify_map_entry(p__22931) {
  var vec__22932 = p__22931;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22932, 0, null);
  var _QMARK_p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22932, 1, null);
  var s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22932, 2, null);
  if (cljs.core.not(s)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, _QMARK_p], null);
  } else {
    if (cljs.core.truth_(function() {
      var and__4251__auto__ = _QMARK_p;
      if (cljs.core.truth_(and__4251__auto__)) {
        return cljs$cst$keyword$optional.cljs$core$IFn$_invoke$arity$1(_QMARK_p) === false && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, cljs.core.count(_QMARK_p));
      } else {
        return and__4251__auto__;
      }
    }())) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, s], null);
    } else {
      if (cljs.core.not(cljs.core.seq(_QMARK_p))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, s], null);
      } else {
        if (cljs$cst$keyword$optional.cljs$core$IFn$_invoke$arity$1(_QMARK_p) === false) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(_QMARK_p, cljs$cst$keyword$optional), s], null);
        } else {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, _QMARK_p, s], null);
        }
      }
    }
  }
};
malli.util._required_map_entry_QMARK_ = function malli$util$_required_map_entry_QMARK_(p__22935) {
  var vec__22936 = p__22935;
  var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22936, 0, null);
  var _QMARK_p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22936, 1, null);
  return !(cljs.core.map_QMARK_(_QMARK_p) && cljs$cst$keyword$optional.cljs$core$IFn$_invoke$arity$1(_QMARK_p) === true);
};
malli.util._entry = function malli$util$_entry(p__22939, p__22940, merge_required, merge, options) {
  var vec__22941 = p__22939;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22941, 0, null);
  var _QMARK_p1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22941, 1, null);
  var s1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22941, 2, null);
  var e1 = vec__22941;
  var vec__22944 = p__22940;
  var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22944, 0, null);
  var _QMARK_p2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22944, 1, null);
  var s2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22944, 2, null);
  var e2 = vec__22944;
  var required = function() {
    var G__22947 = malli.util._required_map_entry_QMARK_(e1);
    var G__22948 = malli.util._required_map_entry_QMARK_(e2);
    return merge_required.cljs$core$IFn$_invoke$arity$2 ? merge_required.cljs$core$IFn$_invoke$arity$2(G__22947, G__22948) : merge_required.call(null, G__22947, G__22948);
  }();
  var p = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([_QMARK_p1, _QMARK_p2], 0));
  return malli.util._simplify_map_entry(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p, cljs$cst$keyword$optional, cljs.core.not(required)), merge.cljs$core$IFn$_invoke$arity$3 ? merge.cljs$core$IFn$_invoke$arity$3(s1, s2, options) : merge.call(null, s1, s2, options)], null));
};
malli.util._open_map_QMARK_ = function malli$util$_open_map_QMARK_(schema, options) {
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$map, malli.core.type.cljs$core$IFn$_invoke$arity$2(schema, options)) && !(cljs$cst$keyword$closed.cljs$core$IFn$_invoke$arity$1(malli.core.properties.cljs$core$IFn$_invoke$arity$1(schema)) === false);
};
malli.util.find_first = function malli$util$find_first(var_args) {
  var G__22950 = arguments.length;
  switch(G__22950) {
    case 2:
      return malli.util.find_first.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.find_first.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.find_first.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, f) {
  return malli.util.find_first.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, f, null);
};
malli.util.find_first.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, f, options) {
  var result = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);
  malli.core._walk(malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options), function() {
    if (typeof malli !== "undefined" && typeof malli.util !== "undefined" && typeof malli.util.t_malli$util22951 !== "undefined") {
    } else {
      malli.util.t_malli$util22951 = function(_QMARK_schema, f, options, result, meta22952) {
        this._QMARK_schema = _QMARK_schema;
        this.f = f;
        this.options = options;
        this.result = result;
        this.meta22952 = meta22952;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      malli.util.t_malli$util22951.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22953, meta22952__$1) {
        var self__ = this;
        var _22953__$1 = this;
        return new malli.util.t_malli$util22951(self__._QMARK_schema, self__.f, self__.options, self__.result, meta22952__$1);
      };
      malli.util.t_malli$util22951.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22953) {
        var self__ = this;
        var _22953__$1 = this;
        return self__.meta22952;
      };
      malli.util.t_malli$util22951.prototype.malli$core$Walker$ = cljs.core.PROTOCOL_SENTINEL;
      malli.util.t_malli$util22951.prototype.malli$core$Walker$_accept$arity$4 = function(_, s, path, options__$1) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.not(function() {
          var or__4253__auto__ = cljs.core.deref(self__.result);
          if (cljs.core.truth_(or__4253__auto__)) {
            return or__4253__auto__;
          } else {
            return cljs.core.reset_BANG_(self__.result, self__.f.cljs$core$IFn$_invoke$arity$3 ? self__.f.cljs$core$IFn$_invoke$arity$3(s, path, options__$1) : self__.f.call(null, s, path, options__$1));
          }
        }());
      };
      malli.util.t_malli$util22951.prototype.malli$core$Walker$_inner$arity$4 = function(this$, s, path, options__$1) {
        var self__ = this;
        var this$__$1 = this;
        if (cljs.core.truth_(cljs.core.deref(self__.result))) {
          return null;
        } else {
          return malli.core._walk(s, this$__$1, path, options__$1);
        }
      };
      malli.util.t_malli$util22951.prototype.malli$core$Walker$_outer$arity$5 = function(_, ___$1, ___$2, ___$3, ___$4) {
        var self__ = this;
        var ___$5 = this;
        return null;
      };
      malli.util.t_malli$util22951.getBasis = function() {
        return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$_QMARK_schema, cljs$cst$symbol$f, cljs$cst$symbol$options, cljs$cst$symbol$result, cljs$cst$symbol$meta22952], null);
      };
      malli.util.t_malli$util22951.cljs$lang$type = true;
      malli.util.t_malli$util22951.cljs$lang$ctorStr = "malli.util/t_malli$util22951";
      malli.util.t_malli$util22951.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
        return cljs.core._write(writer__4492__auto__, "malli.util/t_malli$util22951");
      };
      malli.util.__GT_t_malli$util22951 = function malli$util$__GT_t_malli$util22951(_QMARK_schema__$1, f__$1, options__$1, result__$1, meta22952) {
        return new malli.util.t_malli$util22951(_QMARK_schema__$1, f__$1, options__$1, result__$1, meta22952);
      };
    }
    return new malli.util.t_malli$util22951(_QMARK_schema, f, options, result, cljs.core.PersistentArrayMap.EMPTY);
  }(), cljs.core.PersistentVector.EMPTY, options);
  return cljs.core.deref(result);
};
malli.util.find_first.cljs$lang$maxFixedArity = 3;
malli.util.merge = function malli$util$merge(var_args) {
  var G__22962 = arguments.length;
  switch(G__22962) {
    case 2:
      return malli.util.merge.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.merge.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.merge.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema1, _QMARK_schema2) {
  return malli.util.merge.cljs$core$IFn$_invoke$arity$3(_QMARK_schema1, _QMARK_schema2, null);
};
malli.util.merge.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema1, _QMARK_schema2, options) {
  var s1 = cljs.core.truth_(_QMARK_schema1) ? malli.core.deref_all.cljs$core$IFn$_invoke$arity$1(malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema1, options)) : null;
  var s2 = cljs.core.truth_(_QMARK_schema2) ? malli.core.deref_all.cljs$core$IFn$_invoke$arity$1(malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema2, options)) : null;
  var t1 = cljs.core.truth_(s1) ? malli.core.type.cljs$core$IFn$_invoke$arity$1(s1) : null;
  var t2 = cljs.core.truth_(s2) ? malli.core.type.cljs$core$IFn$_invoke$arity$1(s2) : null;
  var map__22966 = options;
  var map__22966__$1 = cljs.core.__destructure_map(map__22966);
  var merge_default = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22966__$1, cljs$cst$keyword$merge_DASH_default, function(_, s2__$1, ___$1) {
    return s2__$1;
  });
  var merge_required = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22966__$1, cljs$cst$keyword$merge_DASH_required, function(_, r2) {
    return r2;
  });
  var bear = function(p1, p2) {
    if (cljs.core.truth_(function() {
      var and__4251__auto__ = p1;
      if (cljs.core.truth_(and__4251__auto__)) {
        return p2;
      } else {
        return and__4251__auto__;
      }
    }())) {
      return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1, p2], 0));
    } else {
      var or__4253__auto__ = p1;
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        return p2;
      }
    }
  };
  var tear = function(t, s) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$map, t)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, s], null);
    } else {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [malli.core.properties.cljs$core$IFn$_invoke$arity$1(s)], null), malli.core.children.cljs$core$IFn$_invoke$arity$1(s));
    }
  };
  var join = function(p__22972, p__22973) {
    var vec__22974 = p__22972;
    var seq__22975 = cljs.core.seq(vec__22974);
    var first__22976 = cljs.core.first(seq__22975);
    var seq__22975__$1 = cljs.core.next(seq__22975);
    var p1 = first__22976;
    var first__22976__$1 = cljs.core.first(seq__22975__$1);
    var seq__22975__$2 = cljs.core.next(seq__22975__$1);
    var c1 = first__22976__$1;
    var cs1 = seq__22975__$2;
    var vec__22977 = p__22973;
    var seq__22978 = cljs.core.seq(vec__22977);
    var first__22979 = cljs.core.first(seq__22978);
    var seq__22978__$1 = cljs.core.next(seq__22978);
    var p2 = first__22979;
    var first__22979__$1 = cljs.core.first(seq__22978__$1);
    var seq__22978__$2 = cljs.core.next(seq__22978__$1);
    var c2 = first__22979__$1;
    var cs2 = seq__22978__$2;
    return malli.core.into_schema.cljs$core$IFn$_invoke$arity$4(cljs$cst$keyword$and, bear(p1, p2), cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [malli.util.merge.cljs$core$IFn$_invoke$arity$3(c1, c2, options)], null), cs1, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cs2], 0)), options);
  };
  if (s1 == null) {
    return s2;
  } else {
    if (s2 == null) {
      return s1;
    } else {
      if (cljs.core.not(function() {
        var and__4251__auto__ = function() {
          var fexpr__22981 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$and, null, cljs$cst$keyword$map, null], null), null);
          return fexpr__22981.cljs$core$IFn$_invoke$arity$1 ? fexpr__22981.cljs$core$IFn$_invoke$arity$1(t1) : fexpr__22981.call(null, t1);
        }();
        if (cljs.core.truth_(and__4251__auto__)) {
          var fexpr__22983 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$and, null, cljs$cst$keyword$map, null], null), null);
          return fexpr__22983.cljs$core$IFn$_invoke$arity$1 ? fexpr__22983.cljs$core$IFn$_invoke$arity$1(t2) : fexpr__22983.call(null, t2);
        } else {
          return and__4251__auto__;
        }
      }())) {
        return merge_default.cljs$core$IFn$_invoke$arity$3 ? merge_default.cljs$core$IFn$_invoke$arity$3(s1, s2, options) : merge_default.call(null, s1, s2, options);
      } else {
        if (!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(t1, cljs$cst$keyword$map) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(t2, cljs$cst$keyword$map))) {
          return join(tear(t1, s1), tear(t2, s2));
        } else {
          var p = bear(malli.core._properties(s1), malli.core._properties(s2));
          var ks = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashSet.EMPTY);
          var children = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(form, p__22985) {
            var vec__22989 = p__22985;
            var k2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22989, 0, null);
            var e2 = vec__22989;
            if (cljs.core.truth_(function() {
              var fexpr__22992 = cljs.core.deref(ks);
              return fexpr__22992.cljs$core$IFn$_invoke$arity$1 ? fexpr__22992.cljs$core$IFn$_invoke$arity$1(k2) : fexpr__22992.call(null, k2);
            }())) {
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(acc_SINGLEQUOTE_, p__22994) {
                var vec__22995 = p__22994;
                var k1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22995, 0, null);
                var e1 = vec__22995;
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc_SINGLEQUOTE_, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k1, k2) ? malli.util._entry(e1, e2, merge_required, malli.util.merge, options) : e1);
              }, cljs.core.PersistentVector.EMPTY, form);
            } else {
              cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(ks, cljs.core.conj, k2);
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(form, e2);
            }
          }, cljs.core.PersistentVector.EMPTY, cljs.core.into.cljs$core$IFn$_invoke$arity$2(malli.core._children(s1), malli.core._children(s2)));
          return malli.core.into_schema.cljs$core$IFn$_invoke$arity$4(cljs$cst$keyword$map, p, children, options);
        }
      }
    }
  }
};
malli.util.merge.cljs$lang$maxFixedArity = 3;
malli.util.union = function malli$util$union(var_args) {
  var G__23003 = arguments.length;
  switch(G__23003) {
    case 2:
      return malli.util.union.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.union.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.union.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema1, _QMARK_schema2) {
  return malli.util.union.cljs$core$IFn$_invoke$arity$3(_QMARK_schema1, _QMARK_schema2, null);
};
malli.util.union.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema1, _QMARK_schema2, options) {
  var merge_default = function(s1, s2, options__$1) {
    if (cljs.core.truth_(malli.util.equals.cljs$core$IFn$_invoke$arity$2(s1, s2))) {
      return s1;
    } else {
      return malli.core.schema.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$or, s1, s2], null), options__$1);
    }
  };
  var merge_required = function(r1, r2) {
    var and__4251__auto__ = r1;
    if (cljs.core.truth_(and__4251__auto__)) {
      return r2;
    } else {
      return and__4251__auto__;
    }
  };
  return malli.util.merge.cljs$core$IFn$_invoke$arity$3(_QMARK_schema1, _QMARK_schema2, cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$3(options, cljs$cst$keyword$merge_DASH_default, cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.identity, merge_default)), cljs$cst$keyword$merge_DASH_required, cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.identity, merge_required)));
};
malli.util.union.cljs$lang$maxFixedArity = 3;
malli.util.update_properties = function malli$util$update_properties(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___23197 = arguments.length;
  var i__4865__auto___23198 = 0;
  while (true) {
    if (i__4865__auto___23198 < len__4864__auto___23197) {
      args__4870__auto__.push(arguments[i__4865__auto___23198]);
      var G__23199 = i__4865__auto___23198 + 1;
      i__4865__auto___23198 = G__23199;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 2 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(2), 0, null) : null;
  return malli.util.update_properties.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4871__auto__);
};
malli.util.update_properties.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_schema, f, args) {
  var schema = malli.core.schema.cljs$core$IFn$_invoke$arity$1(_QMARK_schema);
  return malli.core._set_properties(schema, cljs.core.not_empty(cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, malli.core._properties(schema), args)));
};
malli.util.update_properties.cljs$lang$maxFixedArity = 2;
malli.util.update_properties.cljs$lang$applyTo = function(seq23009) {
  var G__23010 = cljs.core.first(seq23009);
  var seq23009__$1 = cljs.core.next(seq23009);
  var G__23011 = cljs.core.first(seq23009__$1);
  var seq23009__$2 = cljs.core.next(seq23009__$1);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23010, G__23011, seq23009__$2);
};
malli.util.closed_schema = function malli$util$closed_schema(var_args) {
  var G__23024 = arguments.length;
  switch(G__23024) {
    case 1:
      return malli.util.closed_schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.util.closed_schema.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.closed_schema.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.util.closed_schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, null);
};
malli.util.closed_schema.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core.walk.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, malli.core.schema_walker(function(schema) {
    if (malli.util._open_map_QMARK_(schema, options)) {
      return malli.util.update_properties.cljs$core$IFn$_invoke$arity$variadic(schema, cljs.core.assoc, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs$cst$keyword$closed, true], 0));
    } else {
      return schema;
    }
  }), options);
};
malli.util.closed_schema.cljs$lang$maxFixedArity = 2;
malli.util.open_schema = function malli$util$open_schema(var_args) {
  var G__23028 = arguments.length;
  switch(G__23028) {
    case 1:
      return malli.util.open_schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.util.open_schema.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.open_schema.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.util.open_schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, null);
};
malli.util.open_schema.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core.walk.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, malli.core.schema_walker(function(schema) {
    if (malli.util._open_map_QMARK_(schema, options)) {
      return malli.util.update_properties.cljs$core$IFn$_invoke$arity$variadic(schema, cljs.core.dissoc, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs$cst$keyword$closed], 0));
    } else {
      return schema;
    }
  }), options);
};
malli.util.open_schema.cljs$lang$maxFixedArity = 2;
malli.util.subschemas = function malli$util$subschemas(var_args) {
  var G__23036 = arguments.length;
  switch(G__23036) {
    case 1:
      return malli.util.subschemas.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.util.subschemas.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.subschemas.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.util.subschemas.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, null);
};
malli.util.subschemas.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  var schema = malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options);
  var options__$1 = function() {
    var ref = function() {
      var and__4251__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$ref, malli.core.type.cljs$core$IFn$_invoke$arity$1(schema));
      if (and__4251__auto__) {
        return malli.core._ref(schema);
      } else {
        return and__4251__auto__;
      }
    }();
    return cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$3(options, cljs$cst$keyword$malli_DOT_core_SLASH_walk_DASH_schema_DASH_refs, cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.identity, true)), cljs$cst$keyword$malli_DOT_core_SLASH_walk_DASH_refs, function(f) {
      return function(p1__23034_SHARP_) {
        var or__4253__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ref, p1__23034_SHARP_);
        if (or__4253__auto__) {
          return or__4253__auto__;
        } else {
          var fexpr__23038 = malli.core._boolean_fn(f);
          return fexpr__23038.cljs$core$IFn$_invoke$arity$1 ? fexpr__23038.cljs$core$IFn$_invoke$arity$1(p1__23034_SHARP_) : fexpr__23038.call(null, p1__23034_SHARP_);
        }
      };
    });
  }();
  var state = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);
  malli.util.find_first.cljs$core$IFn$_invoke$arity$3(schema, function(s, p, _) {
    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(state, cljs.core.conj, new cljs.core.PersistentArrayMap(null, 3, [cljs$cst$keyword$path, p, cljs$cst$keyword$in, malli.util.path__GT_in.cljs$core$IFn$_invoke$arity$2 ? malli.util.path__GT_in.cljs$core$IFn$_invoke$arity$2(schema, p) : malli.util.path__GT_in.call(null, schema, p), cljs$cst$keyword$schema, s], null));
    return null;
  }, options__$1);
  return cljs.core.deref(state);
};
malli.util.subschemas.cljs$lang$maxFixedArity = 2;
malli.util.distinct_by = function malli$util$distinct_by(f, coll) {
  var seen = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashSet.EMPTY);
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(x) {
    var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    if (cljs.core.truth_(function() {
      var fexpr__23039 = cljs.core.deref(seen);
      return fexpr__23039.cljs$core$IFn$_invoke$arity$1 ? fexpr__23039.cljs$core$IFn$_invoke$arity$1(v) : fexpr__23039.call(null, v);
    }())) {
      return null;
    } else {
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(seen, cljs.core.conj, v);
    }
  }, coll);
};
malli.util.path__GT_in = function malli$util$path__GT_in(schema, path) {
  var i = 0;
  var s = schema;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var or__4253__auto__ = function() {
      var and__4251__auto__ = i >= cljs.core.count(path);
      if (and__4251__auto__) {
        return acc;
      } else {
        return and__4251__auto__;
      }
    }();
    if (cljs.core.truth_(or__4253__auto__)) {
      return or__4253__auto__;
    } else {
      var G__23212 = i + 1;
      var G__23213 = malli.core._get(s, path.cljs$core$IFn$_invoke$arity$1 ? path.cljs$core$IFn$_invoke$arity$1(i) : path.call(null, i), null);
      var G__23214 = function() {
        var G__23041 = acc;
        if (cljs.core.truth_(malli.core._keep(s))) {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(G__23041, path.cljs$core$IFn$_invoke$arity$1 ? path.cljs$core$IFn$_invoke$arity$1(i) : path.call(null, i));
        } else {
          return G__23041;
        }
      }();
      i = G__23212;
      s = G__23213;
      acc = G__23214;
      continue;
    }
    break;
  }
};
malli.util.in__GT_paths = function malli$util$in__GT_paths(schema, in$) {
  var state = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);
  var in_equals = function(p__23043, p__23044) {
    while (true) {
      var vec__23045 = p__23043;
      var seq__23046 = cljs.core.seq(vec__23045);
      var first__23047 = cljs.core.first(seq__23046);
      var seq__23046__$1 = cljs.core.next(seq__23046);
      var x = first__23047;
      var xs = seq__23046__$1;
      var vec__23048 = p__23044;
      var seq__23049 = cljs.core.seq(vec__23048);
      var first__23050 = cljs.core.first(seq__23049);
      var seq__23049__$1 = cljs.core.next(seq__23049);
      var y = first__23050;
      var ys = seq__23049__$1;
      if (cljs.core.truth_(function() {
        var and__4251__auto__ = x;
        if (cljs.core.truth_(and__4251__auto__)) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
        } else {
          return and__4251__auto__;
        }
      }())) {
        var G__23217 = xs;
        var G__23218 = ys;
        p__23043 = G__23217;
        p__23044 = G__23218;
        continue;
      } else {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          return true;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$malli_DOT_core_SLASH_in, x)) {
            var G__23219 = xs;
            var G__23220 = ys;
            p__23043 = G__23219;
            p__23044 = G__23220;
            continue;
          } else {
            return null;
          }
        }
      }
      break;
    }
  };
  var parent_exists = function(v1, v2) {
    var i = function() {
      var x__4339__auto__ = cljs.core.count(v1);
      var y__4340__auto__ = cljs.core.count(v2);
      return x__4339__auto__ < y__4340__auto__ ? x__4339__auto__ : y__4340__auto__;
    }();
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v1, 0, i), cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v2, 0, i));
  };
  malli.util.find_first.cljs$core$IFn$_invoke$arity$2(schema, function(_, path, ___$1) {
    if (cljs.core.truth_(function() {
      var and__4251__auto__ = in_equals(malli.util.path__GT_in(schema, path), in$);
      if (cljs.core.truth_(and__4251__auto__)) {
        return cljs.core.not(cljs.core.some(function(p1__23042_SHARP_) {
          return parent_exists(path, p1__23042_SHARP_);
        }, cljs.core.deref(state)));
      } else {
        return and__4251__auto__;
      }
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(state, cljs.core.conj, path);
      return null;
    } else {
      return null;
    }
  });
  return cljs.core.deref(state);
};
malli.util.transform_entries = function malli$util$transform_entries(var_args) {
  var G__23052 = arguments.length;
  switch(G__23052) {
    case 2:
      return malli.util.transform_entries.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.transform_entries.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.transform_entries.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, f) {
  return malli.util.transform_entries.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, f, null);
};
malli.util.transform_entries.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, f, options) {
  var schema = malli.core.deref_all.cljs$core$IFn$_invoke$arity$1(malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options));
  return malli.core.into_schema.cljs$core$IFn$_invoke$arity$4(malli.core._parent(schema), malli.core._properties(schema), function() {
    var G__23053 = malli.core._children(schema);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23053) : f.call(null, G__23053);
  }(), function() {
    var or__4253__auto__ = malli.core.options.cljs$core$IFn$_invoke$arity$1(schema);
    if (cljs.core.truth_(or__4253__auto__)) {
      return or__4253__auto__;
    } else {
      return options;
    }
  }());
};
malli.util.transform_entries.cljs$lang$maxFixedArity = 3;
malli.util.optional_keys = function malli$util$optional_keys(var_args) {
  var G__23056 = arguments.length;
  switch(G__23056) {
    case 1:
      return malli.util.optional_keys.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.util.optional_keys.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.optional_keys.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.optional_keys.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.util.optional_keys.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, null, null);
};
malli.util.optional_keys.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, _QMARK_keys) {
  var vec__23059 = cljs.core.map_QMARK_(_QMARK_keys) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, _QMARK_keys], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_keys, null], null);
  var keys = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23059, 0, null);
  var options = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23059, 1, null);
  return malli.util.optional_keys.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, keys, options);
};
malli.util.optional_keys.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, keys, options) {
  var accept = cljs.core.truth_(keys) ? cljs.core.set(keys) : cljs.core.constantly(true);
  var mapper = function(p__23063) {
    var vec__23064 = p__23063;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23064, 0, null);
    var e = vec__23064;
    if (cljs.core.truth_(accept.cljs$core$IFn$_invoke$arity$1 ? accept.cljs$core$IFn$_invoke$arity$1(k) : accept.call(null, k))) {
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(e, 1, cljs.core.assoc, cljs$cst$keyword$optional, true);
    } else {
      return e;
    }
  };
  return malli.util.transform_entries.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, function(p1__23054_SHARP_) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(mapper, p1__23054_SHARP_);
  }, options);
};
malli.util.optional_keys.cljs$lang$maxFixedArity = 3;
malli.util.required_keys = function malli$util$required_keys(var_args) {
  var G__23069 = arguments.length;
  switch(G__23069) {
    case 1:
      return malli.util.required_keys.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.util.required_keys.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.required_keys.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.required_keys.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.util.required_keys.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, null, null);
};
malli.util.required_keys.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, _QMARK_keys) {
  var vec__23070 = cljs.core.map_QMARK_(_QMARK_keys) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, _QMARK_keys], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_keys, null], null);
  var keys = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23070, 0, null);
  var options = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23070, 1, null);
  return malli.util.required_keys.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, keys, options);
};
malli.util.required_keys.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, keys, options) {
  var accept = cljs.core.truth_(keys) ? cljs.core.set(keys) : cljs.core.constantly(true);
  var required = function(p) {
    var p_SINGLEQUOTE_ = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(p, cljs$cst$keyword$optional);
    if (cljs.core.seq(p_SINGLEQUOTE_)) {
      return p_SINGLEQUOTE_;
    } else {
      return null;
    }
  };
  var mapper = function(p__23073) {
    var vec__23074 = p__23073;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23074, 0, null);
    var e = vec__23074;
    if (cljs.core.truth_(accept.cljs$core$IFn$_invoke$arity$1 ? accept.cljs$core$IFn$_invoke$arity$1(k) : accept.call(null, k))) {
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(e, 1, required);
    } else {
      return e;
    }
  };
  return malli.util.transform_entries.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, function(p1__23067_SHARP_) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(mapper, p1__23067_SHARP_);
  }, options);
};
malli.util.required_keys.cljs$lang$maxFixedArity = 3;
malli.util.select_keys = function malli$util$select_keys(var_args) {
  var G__23079 = arguments.length;
  switch(G__23079) {
    case 2:
      return malli.util.select_keys.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.select_keys.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.select_keys.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, keys) {
  return malli.util.select_keys.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, keys, null);
};
malli.util.select_keys.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, keys, options) {
  var key_set = cljs.core.set(keys);
  return malli.util.transform_entries.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, function(p1__23077_SHARP_) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p__23080) {
      var vec__23081 = p__23080;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23081, 0, null);
      return key_set.cljs$core$IFn$_invoke$arity$1 ? key_set.cljs$core$IFn$_invoke$arity$1(k) : key_set.call(null, k);
    }, p1__23077_SHARP_);
  }, options);
};
malli.util.select_keys.cljs$lang$maxFixedArity = 3;
malli.util.rename_keys = function malli$util$rename_keys(var_args) {
  var G__23085 = arguments.length;
  switch(G__23085) {
    case 2:
      return malli.util.rename_keys.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.rename_keys.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.rename_keys.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, kmap) {
  return malli.util.rename_keys.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, kmap, null);
};
malli.util.rename_keys.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, kmap, options) {
  return malli.util.transform_entries.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, function(entries) {
    var source_keys = cljs.core.set(cljs.core.keys(kmap));
    var target_keys = cljs.core.set(cljs.core.vals(kmap));
    var remove_conflicts = function(p__23086) {
      var vec__23087 = p__23086;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23087, 0, null);
      var or__4253__auto__ = source_keys.cljs$core$IFn$_invoke$arity$1 ? source_keys.cljs$core$IFn$_invoke$arity$1(k) : source_keys.call(null, k);
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        return cljs.core.not(target_keys.cljs$core$IFn$_invoke$arity$1 ? target_keys.cljs$core$IFn$_invoke$arity$1(k) : target_keys.call(null, k));
      }
    };
    var alter_keys = function(p__23090) {
      var vec__23091 = p__23090;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23091, 0, null);
      var m = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23091, 1, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23091, 2, null);
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.get.cljs$core$IFn$_invoke$arity$3(kmap, k, k), m, v], null);
    };
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(alter_keys, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(remove_conflicts, entries));
  }, options);
};
malli.util.rename_keys.cljs$lang$maxFixedArity = 3;
malli.util.dissoc = function malli$util$dissoc(var_args) {
  var G__23096 = arguments.length;
  switch(G__23096) {
    case 2:
      return malli.util.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.dissoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.dissoc.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, key) {
  return malli.util.dissoc.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, key, null);
};
malli.util.dissoc.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, key, options) {
  return malli.util.transform_entries.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, function(p1__23094_SHARP_) {
    return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(function(p__23097) {
      var vec__23098 = p__23097;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23098, 0, null);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, k);
    }, p1__23094_SHARP_);
  }, options);
};
malli.util.dissoc.cljs$lang$maxFixedArity = 3;
malli.util.find = function malli$util$find(var_args) {
  var G__23102 = arguments.length;
  switch(G__23102) {
    case 2:
      return malli.util.find.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.find.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.find.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, k) {
  return malli.util.find.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, k, null);
};
malli.util.find.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, k, options) {
  var schema = malli.core.schema.cljs$core$IFn$_invoke$arity$2(function() {
    var or__4253__auto__ = _QMARK_schema;
    if (cljs.core.truth_(or__4253__auto__)) {
      return or__4253__auto__;
    } else {
      return cljs$cst$keyword$map;
    }
  }(), options);
  if (cljs.core.truth_(schema)) {
    return malli.core._get(schema, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$malli_DOT_core_SLASH_find, k], null), null);
  } else {
    return null;
  }
};
malli.util.find.cljs$lang$maxFixedArity = 3;
malli.util.get = function malli$util$get(var_args) {
  var G__23104 = arguments.length;
  switch(G__23104) {
    case 2:
      return malli.util.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return malli.util.get.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.get.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, k) {
  return malli.util.get.cljs$core$IFn$_invoke$arity$4(_QMARK_schema, k, null, null);
};
malli.util.get.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, k, default$) {
  return malli.util.get.cljs$core$IFn$_invoke$arity$4(_QMARK_schema, k, default$, null);
};
malli.util.get.cljs$core$IFn$_invoke$arity$4 = function(_QMARK_schema, k, default$, options) {
  var schema = malli.core.schema.cljs$core$IFn$_invoke$arity$2(function() {
    var or__4253__auto__ = _QMARK_schema;
    if (cljs.core.truth_(or__4253__auto__)) {
      return or__4253__auto__;
    } else {
      return cljs$cst$keyword$map;
    }
  }(), options);
  if (cljs.core.truth_(schema)) {
    return malli.core._get(schema, k, default$);
  } else {
    return null;
  }
};
malli.util.get.cljs$lang$maxFixedArity = 4;
malli.util.assoc = function malli$util$assoc(var_args) {
  var G__23106 = arguments.length;
  switch(G__23106) {
    case 3:
      return malli.util.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return malli.util.assoc.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.assoc.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, key, value) {
  return malli.util.assoc.cljs$core$IFn$_invoke$arity$4(_QMARK_schema, key, value, null);
};
malli.util.assoc.cljs$core$IFn$_invoke$arity$4 = function(_QMARK_schema, key, value, options) {
  return malli.core._set(malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options), key, value);
};
malli.util.assoc.cljs$lang$maxFixedArity = 4;
malli.util.update = function malli$util$update(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___23234 = arguments.length;
  var i__4865__auto___23235 = 0;
  while (true) {
    if (i__4865__auto___23235 < len__4864__auto___23234) {
      args__4870__auto__.push(arguments[i__4865__auto___23235]);
      var G__23239 = i__4865__auto___23235 + 1;
      i__4865__auto___23235 = G__23239;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 3 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(3), 0, null) : null;
  return malli.util.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4871__auto__);
};
malli.util.update.cljs$core$IFn$_invoke$arity$variadic = function(schema, key, f, args) {
  return malli.core._set(malli.core.schema.cljs$core$IFn$_invoke$arity$1(schema), key, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, malli.util.get.cljs$core$IFn$_invoke$arity$2(schema, key), args));
};
malli.util.update.cljs$lang$maxFixedArity = 3;
malli.util.update.cljs$lang$applyTo = function(seq23107) {
  var G__23108 = cljs.core.first(seq23107);
  var seq23107__$1 = cljs.core.next(seq23107);
  var G__23109 = cljs.core.first(seq23107__$1);
  var seq23107__$2 = cljs.core.next(seq23107__$1);
  var G__23110 = cljs.core.first(seq23107__$2);
  var seq23107__$3 = cljs.core.next(seq23107__$2);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23108, G__23109, G__23110, seq23107__$3);
};
malli.util.get_in = function malli$util$get_in(var_args) {
  var G__23112 = arguments.length;
  switch(G__23112) {
    case 2:
      return malli.util.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return malli.util.get_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.get_in.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, ks) {
  return malli.util.get_in.cljs$core$IFn$_invoke$arity$4(_QMARK_schema, ks, null, null);
};
malli.util.get_in.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, ks, default$) {
  return malli.util.get_in.cljs$core$IFn$_invoke$arity$4(_QMARK_schema, ks, default$, null);
};
malli.util.get_in.cljs$core$IFn$_invoke$arity$4 = function(_QMARK_schema, p__23113, default$, options) {
  var vec__23114 = p__23113;
  var seq__23115 = cljs.core.seq(vec__23114);
  var first__23116 = cljs.core.first(seq__23115);
  var seq__23115__$1 = cljs.core.next(seq__23115);
  var k = first__23116;
  var ks = seq__23115__$1;
  var schema = malli.core.schema.cljs$core$IFn$_invoke$arity$2(function() {
    var or__4253__auto__ = _QMARK_schema;
    if (cljs.core.truth_(or__4253__auto__)) {
      return or__4253__auto__;
    } else {
      return cljs$cst$keyword$map;
    }
  }(), options);
  if (cljs.core.not(k)) {
    return schema;
  } else {
    var sentinel = {};
    var schema__$1 = malli.util.get.cljs$core$IFn$_invoke$arity$3(schema, k, sentinel);
    if (schema__$1 === sentinel) {
      return default$;
    } else {
      if (ks) {
        return malli.util.get_in.cljs$core$IFn$_invoke$arity$3(schema__$1, ks, default$);
      } else {
        return schema__$1;
      }
    }
  }
};
malli.util.get_in.cljs$lang$maxFixedArity = 4;
malli.util.assoc_in = function malli$util$assoc_in(var_args) {
  var G__23120 = arguments.length;
  switch(G__23120) {
    case 3:
      return malli.util.assoc_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return malli.util.assoc_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.assoc_in.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, ks, value) {
  return malli.util.assoc_in.cljs$core$IFn$_invoke$arity$4(_QMARK_schema, ks, value, null);
};
malli.util.assoc_in.cljs$core$IFn$_invoke$arity$4 = function(_QMARK_schema, p__23121, value, options) {
  var vec__23122 = p__23121;
  var seq__23123 = cljs.core.seq(vec__23122);
  var first__23124 = cljs.core.first(seq__23123);
  var seq__23123__$1 = cljs.core.next(seq__23123);
  var k = first__23124;
  var ks = seq__23123__$1;
  var schema = malli.core.schema.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, options);
  return malli.util.assoc.cljs$core$IFn$_invoke$arity$3(schema, k, ks ? malli.util.assoc_in.cljs$core$IFn$_invoke$arity$3(malli.util.get.cljs$core$IFn$_invoke$arity$3(schema, k, malli.core.schema.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$map, malli.core.options.cljs$core$IFn$_invoke$arity$1(schema))), ks, value) : value);
};
malli.util.assoc_in.cljs$lang$maxFixedArity = 4;
malli.util.update_in = function malli$util$update_in(var_args) {
  var args__4870__auto__ = [];
  var len__4864__auto___23254 = arguments.length;
  var i__4865__auto___23255 = 0;
  while (true) {
    if (i__4865__auto___23255 < len__4864__auto___23254) {
      args__4870__auto__.push(arguments[i__4865__auto___23255]);
      var G__23256 = i__4865__auto___23255 + 1;
      i__4865__auto___23255 = G__23256;
      continue;
    } else {
    }
    break;
  }
  var argseq__4871__auto__ = 3 < args__4870__auto__.length ? new cljs.core.IndexedSeq(args__4870__auto__.slice(3), 0, null) : null;
  return malli.util.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4871__auto__);
};
malli.util.update_in.cljs$core$IFn$_invoke$arity$variadic = function(schema, ks, f, args) {
  var up = function malli$util$up(s, p__23133, f__$1, args__$1) {
    var vec__23134 = p__23133;
    var seq__23135 = cljs.core.seq(vec__23134);
    var first__23136 = cljs.core.first(seq__23135);
    var seq__23135__$1 = cljs.core.next(seq__23135);
    var k = first__23136;
    var ks__$1 = seq__23135__$1;
    return malli.util.assoc.cljs$core$IFn$_invoke$arity$3(s, k, ks__$1 ? malli$util$up(malli.util.get.cljs$core$IFn$_invoke$arity$3(s, k, malli.core.schema.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$map, malli.core.options.cljs$core$IFn$_invoke$arity$1(schema))), ks__$1, f__$1, args__$1) : cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f__$1, malli.util.get.cljs$core$IFn$_invoke$arity$2(s, k), args__$1));
  };
  return up(schema, ks, f, args);
};
malli.util.update_in.cljs$lang$maxFixedArity = 3;
malli.util.update_in.cljs$lang$applyTo = function(seq23125) {
  var G__23126 = cljs.core.first(seq23125);
  var seq23125__$1 = cljs.core.next(seq23125);
  var G__23127 = cljs.core.first(seq23125__$1);
  var seq23125__$2 = cljs.core.next(seq23125__$1);
  var G__23128 = cljs.core.first(seq23125__$2);
  var seq23125__$3 = cljs.core.next(seq23125__$2);
  var self__4851__auto__ = this;
  return self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23126, G__23127, G__23128, seq23125__$3);
};
malli.util._map_syntax_walker = function malli$util$_map_syntax_walker(schema, _, children, ___$1) {
  var properties = malli.core.properties.cljs$core$IFn$_invoke$arity$1(schema);
  var options = malli.core.options.cljs$core$IFn$_invoke$arity$1(schema);
  var r = cljs.core.truth_(properties) ? properties.cljs$core$IFn$_invoke$arity$1 ? properties.cljs$core$IFn$_invoke$arity$1(cljs$cst$keyword$registry) : properties.call(null, cljs$cst$keyword$registry) : null;
  var properties__$1 = cljs.core.truth_(r) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(properties, cljs$cst$keyword$registry, malli.core._property_registry(r, options, malli.core._form)) : properties;
  var G__23137 = new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, malli.core.type.cljs$core$IFn$_invoke$arity$1(schema)], null);
  var G__23137__$1 = cljs.core.seq(properties__$1) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23137, cljs$cst$keyword$properties, properties__$1) : G__23137;
  if (cljs.core.seq(children)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23137__$1, cljs$cst$keyword$children, children);
  } else {
    return G__23137__$1;
  }
};
malli.util.to_map_syntax = function malli$util$to_map_syntax(var_args) {
  var G__23139 = arguments.length;
  switch(G__23139) {
    case 1:
      return malli.util.to_map_syntax.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.util.to_map_syntax.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.to_map_syntax.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.util.to_map_syntax.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, null);
};
malli.util.to_map_syntax.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core.walk.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, malli.util._map_syntax_walker, options);
};
malli.util.to_map_syntax.cljs$lang$maxFixedArity = 2;
malli.util.from_map_syntax = function malli$util$from_map_syntax(var_args) {
  var G__23143 = arguments.length;
  switch(G__23143) {
    case 1:
      return malli.util.from_map_syntax.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.util.from_map_syntax.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.from_map_syntax.cljs$core$IFn$_invoke$arity$1 = function(m) {
  return malli.util.from_map_syntax.cljs$core$IFn$_invoke$arity$2(m, null);
};
malli.util.from_map_syntax.cljs$core$IFn$_invoke$arity$2 = function(p__23144, options) {
  var map__23145 = p__23144;
  var map__23145__$1 = cljs.core.__destructure_map(map__23145);
  var m = map__23145__$1;
  var type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23145__$1, cljs$cst$keyword$type);
  var properties = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23145__$1, cljs$cst$keyword$properties);
  var children = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23145__$1, cljs$cst$keyword$children);
  if (cljs.core.map_QMARK_(m)) {
    var _LT__child = cljs.core.vector_QMARK_(cljs.core.first(children)) ? function(f) {
      return function(p1__23140_SHARP_) {
        return cljs.core.update.cljs$core$IFn$_invoke$arity$3(p1__23140_SHARP_, 2, f);
      };
    } : cljs.core.identity;
    var vec__23146 = malli.core._properties_and_options(properties, options, malli.core._form);
    var properties__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23146, 0, null);
    var options__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23146, 1, null);
    return malli.core.into_schema.cljs$core$IFn$_invoke$arity$4(type, properties__$1, cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function() {
      var G__23149 = function(p1__23141_SHARP_) {
        return malli.util.from_map_syntax.cljs$core$IFn$_invoke$arity$2(p1__23141_SHARP_, options__$1);
      };
      return _LT__child.cljs$core$IFn$_invoke$arity$1 ? _LT__child.cljs$core$IFn$_invoke$arity$1(G__23149) : _LT__child.call(null, G__23149);
    }(), children), options__$1);
  } else {
    return m;
  }
};
malli.util.from_map_syntax.cljs$lang$maxFixedArity = 2;
malli.util._reducing = function malli$util$_reducing(f) {
  return function(_, p__23153, options) {
    var vec__23154 = p__23153;
    var seq__23155 = cljs.core.seq(vec__23154);
    var first__23156 = cljs.core.first(seq__23155);
    var seq__23155__$1 = cljs.core.next(seq__23155);
    var first = first__23156;
    var rest = seq__23155__$1;
    var children = vec__23154;
    var children__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function(p1__23150_SHARP_) {
      return malli.core.schema.cljs$core$IFn$_invoke$arity$2(p1__23150_SHARP_, options);
    }, children);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [children__$1, cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(malli.core.form, children__$1), cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23151_SHARP_, p2__23152_SHARP_) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(p1__23151_SHARP_, p2__23152_SHARP_, options) : f.call(null, p1__23151_SHARP_, p2__23152_SHARP_, options);
    }, first, rest)], null);
  };
};
malli.util._applying = function malli$util$_applying(f) {
  return function(_, children, options) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.update.cljs$core$IFn$_invoke$arity$3(children, 0, function(p1__23157_SHARP_) {
      return malli.core.schema.cljs$core$IFn$_invoke$arity$2(p1__23157_SHARP_, options);
    }), cljs.core.update.cljs$core$IFn$_invoke$arity$3(children, 0, function(p1__23158_SHARP_) {
      return malli.core.form.cljs$core$IFn$_invoke$arity$2(p1__23158_SHARP_, options);
    }), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(children, options))], null);
  };
};
malli.util._util_schema = function malli$util$_util_schema(p__23159) {
  var map__23160 = p__23159;
  var map__23160__$1 = cljs.core.__destructure_map(map__23160);
  var type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23160__$1, cljs$cst$keyword$type);
  var min = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23160__$1, cljs$cst$keyword$min);
  var max = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23160__$1, cljs$cst$keyword$max);
  var childs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23160__$1, cljs$cst$keyword$childs);
  var type_properties = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23160__$1, cljs$cst$keyword$type_DASH_properties);
  var fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23160__$1, cljs$cst$keyword$fn);
  if (typeof malli !== "undefined" && typeof malli.util !== "undefined" && typeof malli.util.t_malli$util23161 !== "undefined") {
  } else {
    malli.util.t_malli$util23161 = function(p__23159, map__23160, type, min, max, childs, type_properties, fn, meta23162) {
      this.p__23159 = p__23159;
      this.map__23160 = map__23160;
      this.type = type;
      this.min = min;
      this.max = max;
      this.childs = childs;
      this.type_properties = type_properties;
      this.fn = fn;
      this.meta23162 = meta23162;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.util.t_malli$util23161.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23163, meta23162__$1) {
      var self__ = this;
      var _23163__$1 = this;
      return new malli.util.t_malli$util23161(self__.p__23159, self__.map__23160, self__.type, self__.min, self__.max, self__.childs, self__.type_properties, self__.fn, meta23162__$1);
    };
    malli.util.t_malli$util23161.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23163) {
      var self__ = this;
      var _23163__$1 = this;
      return self__.meta23162;
    };
    malli.util.t_malli$util23161.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.util.t_malli$util23161.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.type;
    };
    malli.util.t_malli$util23161.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.type_properties;
    };
    malli.util.t_malli$util23161.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.util.t_malli$util23161.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.util.t_malli$util23161.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5(self__.type, properties, children, self__.min, self__.max);
      var vec__23164 = function() {
        var G__23167 = properties;
        var G__23168 = cljs.core.vec(children);
        var G__23169 = options;
        return self__.fn.cljs$core$IFn$_invoke$arity$3 ? self__.fn.cljs$core$IFn$_invoke$arity$3(G__23167, G__23168, G__23169) : self__.fn.call(null, G__23167, G__23168, G__23169);
      }();
      var children__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23164, 0, null);
      var forms = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23164, 1, null);
      var schema = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23164, 2, null);
      var form = new cljs.core.Delay(function() {
        return malli.core._create_form(self__.type, properties, forms, options);
      }, null);
      var cache = malli.core._create_cache(options);
      if (typeof malli !== "undefined" && typeof malli.util !== "undefined" && typeof malli.util.t_malli$util23170 !== "undefined") {
      } else {
        malli.util.t_malli$util23170 = function(form, options, map__23160, p__23159, forms, properties, childs, schema, children, min, type_properties, vec__23164, fn, parent, type, meta23162, cache, max, meta23171) {
          this.form = form;
          this.options = options;
          this.map__23160 = map__23160;
          this.p__23159 = p__23159;
          this.forms = forms;
          this.properties = properties;
          this.childs = childs;
          this.schema = schema;
          this.children = children;
          this.min = min;
          this.type_properties = type_properties;
          this.vec__23164 = vec__23164;
          this.fn = fn;
          this.parent = parent;
          this.type = type;
          this.meta23162 = meta23162;
          this.cache = cache;
          this.max = max;
          this.meta23171 = meta23171;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.util.t_malli$util23170.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23172, meta23171__$1) {
          var self__ = this;
          var _23172__$1 = this;
          return new malli.util.t_malli$util23170(self__.form, self__.options, self__.map__23160, self__.p__23159, self__.forms, self__.properties, self__.childs, self__.schema, self__.children, self__.min, self__.type_properties, self__.vec__23164, self__.fn, self__.parent, self__.type, self__.meta23162, self__.cache, self__.max, meta23171__$1);
        };
        malli.util.t_malli$util23170.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23172) {
          var self__ = this;
          var _23172__$1 = this;
          return self__.meta23171;
        };
        malli.util.t_malli$util23170.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.util.t_malli$util23170.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._validator(self__.schema);
        };
        malli.util.t_malli$util23170.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.util.t_malli$util23170.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._parent_children_transformer(this$__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.schema], null), transformer, method, options__$1);
        };
        malli.util.t_malli$util23170.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          var children__$1 = cljs.core.truth_(self__.childs) ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(self__.children, 0, self__.childs) : self__.children;
          if (cljs.core.truth_(malli.core._accept(walker, this$__$1, path, options__$1))) {
            return malli.core._outer(walker, this$__$1, path, malli.core._inner_indexed(walker, path, children__$1, options__$1), options__$1);
          } else {
            return null;
          }
        };
        malli.util.t_malli$util23170.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.util.t_malli$util23170.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.util.t_malli$util23170.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref(self__.form);
        };
        malli.util.t_malli$util23170.prototype.malli$core$Schema$_explainer$arity$2 = function(_, path) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._explainer(self__.schema, path);
        };
        malli.util.t_malli$util23170.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.util.t_malli$util23170.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.util.t_malli$util23170.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.util.t_malli$util23170.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.util.t_malli$util23170.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.util.t_malli$util23170.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.children, key, default$);
        };
        malli.util.t_malli$util23170.prototype.malli$core$LensSchema$_set$arity$3 = function(_, key, value) {
          var self__ = this;
          var ___$1 = this;
          return malli.core.into_schema.cljs$core$IFn$_invoke$arity$3(self__.type, self__.properties, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.children, key, value));
        };
        malli.util.t_malli$util23170.prototype.malli$core$RefSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.util.t_malli$util23170.prototype.malli$core$RefSchema$_ref$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.util.t_malli$util23170.prototype.malli$core$RefSchema$_deref$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.schema;
        };
        malli.util.t_malli$util23170.getBasis = function() {
          return new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$form, cljs$cst$symbol$options, cljs$cst$symbol$map__23160, cljs$cst$symbol$p__23159, cljs$cst$symbol$forms, cljs$cst$symbol$properties, cljs$cst$symbol$childs, cljs$cst$symbol$schema, cljs$cst$symbol$children, cljs$cst$symbol$min, cljs$cst$symbol$type_DASH_properties, cljs$cst$symbol$vec__23164, cljs$cst$symbol$fn, cljs.core.with_meta(cljs$cst$symbol$parent, new cljs.core.PersistentArrayMap(null, 
          1, [cljs$cst$keyword$tag, cljs$cst$symbol$malli_DOT_util_SLASH_t_malli$util23161], null)), cljs$cst$symbol$type, cljs$cst$symbol$meta23162, cljs$cst$symbol$cache, cljs$cst$symbol$max, cljs$cst$symbol$meta23171], null);
        };
        malli.util.t_malli$util23170.cljs$lang$type = true;
        malli.util.t_malli$util23170.cljs$lang$ctorStr = "malli.util/t_malli$util23170";
        malli.util.t_malli$util23170.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
          return cljs.core._write(writer__4492__auto__, "malli.util/t_malli$util23170");
        };
        malli.util.__GT_t_malli$util23170 = function malli$util$_util_schema_$___GT_t_malli$util23170(form__$1, options__$1, map__23160__$1, p__23159__$1, forms__$1, properties__$1, childs__$1, schema__$1, children__$2, min__$1, type_properties__$1, vec__23164__$1, fn__$1, parent__$2, type__$1, meta23162__$1, cache__$1, max__$1, meta23171) {
          return new malli.util.t_malli$util23170(form__$1, options__$1, map__23160__$1, p__23159__$1, forms__$1, properties__$1, childs__$1, schema__$1, children__$2, min__$1, type_properties__$1, vec__23164__$1, fn__$1, parent__$2, type__$1, meta23162__$1, cache__$1, max__$1, meta23171);
        };
      }
      return new malli.util.t_malli$util23170(form, options, self__.map__23160, self__.p__23159, forms, properties, self__.childs, schema, children__$1, self__.min, self__.type_properties, vec__23164, self__.fn, parent__$1, self__.type, self__.meta23162, cache, self__.max, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_schema], null));
    };
    malli.util.t_malli$util23161.getBasis = function() {
      return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$symbol$p__23159, cljs$cst$symbol$map__23160, cljs$cst$symbol$type, cljs$cst$symbol$min, cljs$cst$symbol$max, cljs$cst$symbol$childs, cljs$cst$symbol$type_DASH_properties, cljs$cst$symbol$fn, cljs$cst$symbol$meta23162], null);
    };
    malli.util.t_malli$util23161.cljs$lang$type = true;
    malli.util.t_malli$util23161.cljs$lang$ctorStr = "malli.util/t_malli$util23161";
    malli.util.t_malli$util23161.cljs$lang$ctorPrWriter = function(this__4491__auto__, writer__4492__auto__, opt__4493__auto__) {
      return cljs.core._write(writer__4492__auto__, "malli.util/t_malli$util23161");
    };
    malli.util.__GT_t_malli$util23161 = function malli$util$_util_schema_$___GT_t_malli$util23161(p__23159__$1, map__23160__$2, type__$1, min__$1, max__$1, childs__$1, type_properties__$1, fn__$1, meta23162) {
      return new malli.util.t_malli$util23161(p__23159__$1, map__23160__$2, type__$1, min__$1, max__$1, childs__$1, type_properties__$1, fn__$1, meta23162);
    };
  }
  return new malli.util.t_malli$util23161(p__23159, map__23160__$1, type, min, max, childs, type_properties, fn, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$type, cljs$cst$keyword$malli_DOT_core_SLASH_into_DASH_schema], null));
};
malli.util._merge = function malli$util$_merge() {
  return malli.util._util_schema(new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$type, cljs$cst$keyword$merge, cljs$cst$keyword$fn, malli.util._reducing(malli.util.merge)], null));
};
malli.util._union = function malli$util$_union() {
  return malli.util._util_schema(new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$type, cljs$cst$keyword$union, cljs$cst$keyword$fn, malli.util._reducing(malli.util.union)], null));
};
malli.util._select_keys = function malli$util$_select_keys() {
  return malli.util._util_schema(new cljs.core.PersistentArrayMap(null, 5, [cljs$cst$keyword$type, cljs$cst$keyword$select_DASH_keys, cljs$cst$keyword$childs, 1, cljs$cst$keyword$min, 2, cljs$cst$keyword$max, 2, cljs$cst$keyword$fn, malli.util._applying(malli.util.select_keys)], null));
};
malli.util.schemas = function malli$util$schemas() {
  return new cljs.core.PersistentArrayMap(null, 3, [cljs$cst$keyword$merge, malli.util._merge(), cljs$cst$keyword$union, malli.util._union(), cljs$cst$keyword$select_DASH_keys, malli.util._select_keys()], null);
};
goog.provide("malli.error");
malli.error._pred_min_max_error_fn = function malli$error$_pred_min_max_error_fn(p__23174) {
  var map__23175 = p__23174;
  var map__23175__$1 = cljs.core.__destructure_map(map__23175);
  var pred = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23175__$1, cljs$cst$keyword$pred);
  var message = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23175__$1, cljs$cst$keyword$message);
  return function(p__23177, _) {
    var map__23178 = p__23177;
    var map__23178__$1 = cljs.core.__destructure_map(map__23178);
    var schema = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23178__$1, cljs$cst$keyword$schema);
    var value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23178__$1, cljs$cst$keyword$value);
    var map__23179 = malli.core.properties.cljs$core$IFn$_invoke$arity$1(schema);
    var map__23179__$1 = cljs.core.__destructure_map(map__23179);
    var min = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23179__$1, cljs$cst$keyword$min);
    var max = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23179__$1, cljs$cst$keyword$max);
    if (cljs.core.not(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(value) : pred.call(null, value))) {
      return message;
    } else {
      if (cljs.core.truth_(function() {
        var and__4251__auto__ = min;
        if (cljs.core.truth_(and__4251__auto__)) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(min, max);
        } else {
          return and__4251__auto__;
        }
      }())) {
        return ["should be ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(min)].join("");
      } else {
        if (cljs.core.truth_(function() {
          var and__4251__auto__ = min;
          if (cljs.core.truth_(and__4251__auto__)) {
            return max;
          } else {
            return and__4251__auto__;
          }
        }())) {
          return ["should be between ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(min), " and ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(max)].join("");
        } else {
          if (cljs.core.truth_(min)) {
            return ["should be at least ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(min)].join("");
          } else {
            if (cljs.core.truth_(max)) {
              return ["should be at most ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(max)].join("");
            } else {
              return null;
            }
          }
        }
      }
    }
  };
};
malli.error.default_errors = cljs.core.PersistentHashMap.fromArrays([cljs$cst$keyword$malli_DOT_core_SLASH_extra_DASH_key, cljs$cst$symbol$true_QMARK_, cljs$cst$keyword$enum, cljs$cst$keyword$qualified_DASH_symbol, cljs$cst$symbol$uri_QMARK_, cljs$cst$symbol$simple_DASH_keyword_QMARK_, cljs$cst$keyword$_LT__EQ_, cljs$cst$keyword$double, cljs$cst$symbol$uuid_QMARK_, cljs$cst$symbol$inst_QMARK_, cljs$cst$symbol$simple_DASH_ident_QMARK_, cljs$cst$keyword$not_EQ_, cljs$cst$symbol$int_QMARK_, cljs$cst$symbol$nil_QMARK_, 
cljs$cst$keyword$int, cljs$cst$keyword$_GT_, cljs$cst$symbol$float_QMARK_, cljs$cst$symbol$ifn_QMARK_, cljs$cst$symbol$map_QMARK_, cljs$cst$symbol$vector_QMARK_, cljs$cst$symbol$any_QMARK_, cljs$cst$keyword$symbol, cljs$cst$symbol$false_QMARK_, cljs$cst$symbol$associative_QMARK_, cljs$cst$keyword$re, cljs$cst$symbol$ident_QMARK_, cljs$cst$keyword$qualified_DASH_keyword, cljs$cst$symbol$char_QMARK_, cljs$cst$symbol$neg_DASH_int_QMARK_, cljs$cst$keyword$string, cljs$cst$symbol$symbol_QMARK_, cljs$cst$keyword$_GT__EQ_, 
cljs$cst$symbol$list_QMARK_, cljs$cst$keyword$malli_DOT_error_SLASH_misspelled_DASH_value, cljs$cst$symbol$qualified_DASH_ident_QMARK_, cljs$cst$symbol$coll_QMARK_, cljs$cst$keyword$_EQ__GT_, cljs$cst$symbol$keyword_QMARK_, cljs$cst$keyword$malli_DOT_core_SLASH_limits, cljs$cst$symbol$simple_DASH_symbol_QMARK_, cljs$cst$symbol$empty_QMARK_, cljs$cst$symbol$integer_QMARK_, cljs$cst$keyword$malli_DOT_core_SLASH_missing_DASH_key, cljs$cst$keyword$malli_DOT_core_SLASH_tuple_DASH_size, cljs$cst$symbol$zero_QMARK_, 
cljs$cst$keyword$keyword, cljs$cst$keyword$nil, cljs$cst$symbol$qualified_DASH_keyword_QMARK_, cljs$cst$symbol$string_QMARK_, cljs$cst$keyword$malli_DOT_core_SLASH_end_DASH_of_DASH_input, cljs$cst$symbol$qualified_DASH_symbol_QMARK_, cljs$cst$keyword$malli_DOT_core_SLASH_input_DASH_remaining, cljs$cst$symbol$seq_QMARK_, cljs$cst$symbol$nat_DASH_int_QMARK_, cljs$cst$symbol$set_QMARK_, cljs$cst$symbol$some_QMARK_, cljs$cst$symbol$pos_QMARK_, cljs$cst$symbol$boolean_QMARK_, cljs$cst$symbol$fn_QMARK_, 
cljs$cst$symbol$sequential_QMARK_, cljs$cst$keyword$uuid, cljs$cst$keyword$malli_DOT_error_SLASH_unknown, cljs$cst$symbol$number_QMARK_, cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_dispatch_DASH_value, cljs$cst$symbol$double_QMARK_, cljs$cst$symbol$seqable_QMARK_, cljs$cst$keyword$_EQ_, cljs$cst$keyword$boolean, cljs$cst$keyword$_LT_, cljs$cst$symbol$neg_QMARK_, cljs$cst$keyword$malli_DOT_error_SLASH_misspelled_DASH_key, cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_type, cljs$cst$symbol$pos_DASH_int_QMARK_, 
cljs$cst$keyword$any, cljs$cst$symbol$indexed_QMARK_], [new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "disallowed key"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be true"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_fn, new cljs.core.PersistentArrayMap(null, 
1, [cljs$cst$keyword$en, function(p__23182, _) {
  var map__23183 = p__23182;
  var map__23183__$1 = cljs.core.__destructure_map(map__23183);
  var schema = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23183__$1, cljs$cst$keyword$schema);
  return ["should be ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, cljs.core.count(malli.core.children.cljs$core$IFn$_invoke$arity$1(schema))) ? cljs.core.first(malli.core.children.cljs$core$IFn$_invoke$arity$1(schema)) : ["either ", clojure.string.join.cljs$core$IFn$_invoke$arity$2(", ", cljs.core.butlast(malli.core.children.cljs$core$IFn$_invoke$arity$1(schema))), " or ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.last(malli.core.children.cljs$core$IFn$_invoke$arity$1(schema)))].join(""))].join("");
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a qualified symbol"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a uri"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 
1, [cljs$cst$keyword$en, "should be a simple keyword"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_fn, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, function(p__23185, _) {
  var map__23186 = p__23185;
  var map__23186__$1 = cljs.core.__destructure_map(map__23186);
  var schema = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23186__$1, cljs$cst$keyword$schema);
  var value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23186__$1, cljs$cst$keyword$value);
  if (typeof value === "number") {
    return ["should be at most ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(malli.core.children.cljs$core$IFn$_invoke$arity$1(schema)))].join("");
  } else {
    return "should be a number";
  }
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_fn, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, malli.error._pred_min_max_error_fn(new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$pred, cljs.core.double_QMARK_, cljs$cst$keyword$message, "should be a double"], null))], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, 
"should be a uuid"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be an inst"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a simple ident"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_fn, new cljs.core.PersistentArrayMap(null, 
1, [cljs$cst$keyword$en, function(p__23187, _) {
  var map__23188 = p__23187;
  var map__23188__$1 = cljs.core.__destructure_map(map__23188);
  var schema = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23188__$1, cljs$cst$keyword$schema);
  return ["should not be ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(malli.core.children.cljs$core$IFn$_invoke$arity$1(schema)))].join("");
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be an int"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be nil"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_fn, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, 
malli.error._pred_min_max_error_fn(new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$pred, cljs.core.int_QMARK_, cljs$cst$keyword$message, "should be an integer"], null))], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_fn, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, function(p__23189, _) {
  var map__23190 = p__23189;
  var map__23190__$1 = cljs.core.__destructure_map(map__23190);
  var schema = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23190__$1, cljs$cst$keyword$schema);
  var value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23190__$1, cljs$cst$keyword$value);
  if (typeof value === "number") {
    return ["should be larger than ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(malli.core.children.cljs$core$IFn$_invoke$arity$1(schema)))].join("");
  } else {
    return "should be a number";
  }
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a float"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be an ifn"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 
1, [cljs$cst$keyword$en, "should be a map"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a vector"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be any"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, 
new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a symbol"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be false"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be an associative"], null)], null), new cljs.core.PersistentArrayMap(null, 
1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should match regex"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be an ident"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a qualified keyword"], 
null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a char"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a negative int"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_fn, new cljs.core.PersistentArrayMap(null, 1, 
[cljs$cst$keyword$en, function(p__23191, _) {
  var map__23192 = p__23191;
  var map__23192__$1 = cljs.core.__destructure_map(map__23192);
  var schema = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23192__$1, cljs$cst$keyword$schema);
  var value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23192__$1, cljs$cst$keyword$value);
  var map__23193 = malli.core.properties.cljs$core$IFn$_invoke$arity$1(schema);
  var map__23193__$1 = cljs.core.__destructure_map(map__23193);
  var min = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23193__$1, cljs$cst$keyword$min);
  var max = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23193__$1, cljs$cst$keyword$max);
  if (!(typeof value === "string")) {
    return "should be a string";
  } else {
    if (cljs.core.truth_(function() {
      var and__4251__auto__ = min;
      if (cljs.core.truth_(and__4251__auto__)) {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(min, max);
      } else {
        return and__4251__auto__;
      }
    }())) {
      return ["should be ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(min), " characters"].join("");
    } else {
      if (cljs.core.truth_(function() {
        var and__4251__auto__ = min;
        if (cljs.core.truth_(and__4251__auto__)) {
          return max;
        } else {
          return and__4251__auto__;
        }
      }())) {
        return ["should be between ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(min), " and ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(max), " characters"].join("");
      } else {
        if (cljs.core.truth_(min)) {
          return ["should be at least ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(min), " characters"].join("");
        } else {
          if (cljs.core.truth_(max)) {
            return ["should be at most ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(max), " characters"].join("");
          } else {
            return null;
          }
        }
      }
    }
  }
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a symbol"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_fn, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, function(p__23195, _) {
  var map__23196 = p__23195;
  var map__23196__$1 = cljs.core.__destructure_map(map__23196);
  var schema = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23196__$1, cljs$cst$keyword$schema);
  var value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23196__$1, cljs$cst$keyword$value);
  if (typeof value === "number") {
    return ["should be at least ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(malli.core.children.cljs$core$IFn$_invoke$arity$1(schema)))].join("");
  } else {
    return "should be a number";
  }
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a list"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_fn, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, function(p__23200, _) {
  var map__23201 = p__23200;
  var map__23201__$1 = cljs.core.__destructure_map(map__23201);
  var likely_misspelling_of = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23201__$1, cljs$cst$keyword$malli_DOT_error_SLASH_likely_DASH_misspelling_DASH_of);
  return ["did you mean ", clojure.string.join.cljs$core$IFn$_invoke$arity$2(" or ", cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.last, likely_misspelling_of))].join("");
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a qualified ident"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a coll"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 
1, [cljs$cst$keyword$en, "invalid function"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a keyword"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_fn, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, function(p__23204, _) {
  var map__23205 = p__23204;
  var map__23205__$1 = cljs.core.__destructure_map(map__23205);
  var schema = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23205__$1, cljs$cst$keyword$schema);
  var _value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23205__$1, cljs$cst$keyword$_value);
  var map__23206 = malli.core.properties.cljs$core$IFn$_invoke$arity$1(schema);
  var map__23206__$1 = cljs.core.__destructure_map(map__23206);
  var min = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23206__$1, cljs$cst$keyword$min);
  var max = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23206__$1, cljs$cst$keyword$max);
  if (cljs.core.truth_(function() {
    var and__4251__auto__ = min;
    if (cljs.core.truth_(and__4251__auto__)) {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(min, max);
    } else {
      return and__4251__auto__;
    }
  }())) {
    return ["should have ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(min), " elements"].join("");
  } else {
    if (cljs.core.truth_(function() {
      var and__4251__auto__ = min;
      if (cljs.core.truth_(and__4251__auto__)) {
        return max;
      } else {
        return and__4251__auto__;
      }
    }())) {
      return ["should have between ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(min), " and ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(max), " elements"].join("");
    } else {
      if (cljs.core.truth_(min)) {
        return ["should have at least ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(min), " elements"].join("");
      } else {
        if (cljs.core.truth_(max)) {
          return ["should have at most ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(max), " elements"].join("");
        } else {
          return null;
        }
      }
    }
  }
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a simple symbol"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be empty"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 
1, [cljs$cst$keyword$en, "should be an integer"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "missing required key"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_fn, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, function(p__23208, _) {
  var map__23209 = p__23208;
  var map__23209__$1 = cljs.core.__destructure_map(map__23209);
  var schema = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23209__$1, cljs$cst$keyword$schema);
  var value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23209__$1, cljs$cst$keyword$value);
  var size = cljs.core.count(malli.core.children.cljs$core$IFn$_invoke$arity$1(schema));
  return ["invalid tuple size ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.count(value)), ", expected ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(size)].join("");
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be zero"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a keyword"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 
1, [cljs$cst$keyword$en, "should be nil"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a qualified keyword"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a string"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, 
new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "end of input"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a qualified symbol"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "input remaining"], null)], null), new cljs.core.PersistentArrayMap(null, 
1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a seq"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a non-negative int"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a set"], null)], 
null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be some"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be positive"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, 
"should be a boolean"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be an fn"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a sequential"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 
1, [cljs$cst$keyword$en, "should be a uuid"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "unknown error"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a number"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, 
new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "invalid dispatch value"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a double"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a seqable"], null)], null), new cljs.core.PersistentArrayMap(null, 
1, [cljs$cst$keyword$error_SLASH_fn, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, function(p__23210, _) {
  var map__23211 = p__23210;
  var map__23211__$1 = cljs.core.__destructure_map(map__23211);
  var schema = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23211__$1, cljs$cst$keyword$schema);
  return ["should be ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(malli.core.children.cljs$core$IFn$_invoke$arity$1(schema)))].join("");
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a boolean"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_fn, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, function(p__23215, _) {
  var map__23216 = p__23215;
  var map__23216__$1 = cljs.core.__destructure_map(map__23216);
  var schema = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23216__$1, cljs$cst$keyword$schema);
  var value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23216__$1, cljs$cst$keyword$value);
  if (typeof value === "number") {
    return ["should be smaller than ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(malli.core.children.cljs$core$IFn$_invoke$arity$1(schema)))].join("");
  } else {
    return "should be a number";
  }
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be negative"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_fn, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, function(p__23221, _) {
  var map__23222 = p__23221;
  var map__23222__$1 = cljs.core.__destructure_map(map__23222);
  var likely_misspelling_of = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23222__$1, cljs$cst$keyword$malli_DOT_error_SLASH_likely_DASH_misspelling_DASH_of);
  return ["should be spelled ", clojure.string.join.cljs$core$IFn$_invoke$arity$2(" or ", cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.last, likely_misspelling_of))].join("");
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "invalid type"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be a positive int"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 
1, [cljs$cst$keyword$en, "should be any"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$error_SLASH_message, new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$en, "should be an indexed"], null)], null)]);
malli.error._maybe_localized = function malli$error$_maybe_localized(x, locale) {
  if (cljs.core.map_QMARK_(x)) {
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(x, locale);
  } else {
    return x;
  }
};
malli.error._message = function malli$error$_message(error, props, locale, options) {
  var options__$1 = function() {
    var or__4253__auto__ = options;
    if (cljs.core.truth_(or__4253__auto__)) {
      return or__4253__auto__;
    } else {
      return malli.core.options.cljs$core$IFn$_invoke$arity$1(cljs$cst$keyword$schema.cljs$core$IFn$_invoke$arity$1(error));
    }
  }();
  if (cljs.core.truth_(props)) {
    var or__4253__auto__ = function() {
      var temp__5753__auto__ = malli.error._maybe_localized(cljs$cst$keyword$error_SLASH_fn.cljs$core$IFn$_invoke$arity$1(props), locale);
      if (cljs.core.truth_(temp__5753__auto__)) {
        var fn = temp__5753__auto__;
        var fexpr__23226 = malli.core.eval.cljs$core$IFn$_invoke$arity$2(fn, options__$1);
        return fexpr__23226.cljs$core$IFn$_invoke$arity$2 ? fexpr__23226.cljs$core$IFn$_invoke$arity$2(error, options__$1) : fexpr__23226.call(null, error, options__$1);
      } else {
        return null;
      }
    }();
    if (cljs.core.truth_(or__4253__auto__)) {
      return or__4253__auto__;
    } else {
      return malli.error._maybe_localized(cljs$cst$keyword$error_SLASH_message.cljs$core$IFn$_invoke$arity$1(props), locale);
    }
  } else {
    return null;
  }
};
malli.error._error = function malli$error$_error(e) {
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [e], null), new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$malli_DOT_error_SLASH_error, true], null));
};
malli.error._error_QMARK_ = function malli$error$_error_QMARK_(x) {
  return cljs$cst$keyword$malli_DOT_error_SLASH_error.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(x));
};
malli.error._get = function malli$error$_get(x, k) {
  if (cljs.core.set_QMARK_(x) || cljs.core.associative_QMARK_(x)) {
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(x, k);
  } else {
    return null;
  }
};
malli.error._push = function malli$error$_push(x, k, v) {
  var x_SINGLEQUOTE_ = function() {
    var temp__5751__auto__ = typeof k === "number" && (cljs.core.set_QMARK_(x) || cljs.core.sequential_QMARK_(x)) ? cljs.core.vec(x) : null;
    if (cljs.core.truth_(temp__5751__auto__)) {
      var x_SINGLEQUOTE_ = temp__5751__auto__;
      var size_SINGLEQUOTE_ = cljs.core.count(x_SINGLEQUOTE_);
      if (k > size_SINGLEQUOTE_) {
        return cljs.core.into.cljs$core$IFn$_invoke$arity$2(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(k + 1 - size_SINGLEQUOTE_, null));
      } else {
        return x;
      }
    } else {
      return x;
    }
  }();
  if (cljs.core.set_QMARK_(x_SINGLEQUOTE_)) {
    return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(x_SINGLEQUOTE_, v);
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(x_SINGLEQUOTE_, k, v);
  }
};
malli.error._assoc_in = function malli$error$_assoc_in(a, v, p__23233, e) {
  var vec__23236 = p__23233;
  var seq__23237 = cljs.core.seq(vec__23236);
  var first__23238 = cljs.core.first(seq__23237);
  var seq__23237__$1 = cljs.core.next(seq__23237);
  var p = first__23238;
  var ps = seq__23237__$1;
  var v_SINGLEQUOTE_ = malli.error._get(v, p);
  var a_SINGLEQUOTE_ = function() {
    var or__4253__auto__ = a;
    if (cljs.core.truth_(or__4253__auto__)) {
      return or__4253__auto__;
    } else {
      if (cljs.core.sequential_QMARK_(v)) {
        return cljs.core.PersistentVector.EMPTY;
      } else {
        if (cljs.core.record_QMARK_(v)) {
          return cljs.core.PersistentArrayMap.EMPTY;
        } else {
          return cljs.core.empty(v);
        }
      }
    }
  }();
  if (cljs.core.truth_(function() {
    var and__4251__auto__ = p;
    if (cljs.core.truth_(and__4251__auto__)) {
      return malli.error._error_QMARK_(a_SINGLEQUOTE_);
    } else {
      return and__4251__auto__;
    }
  }())) {
    return a;
  } else {
    if (cljs.core.truth_(p)) {
      return malli.error._push(a_SINGLEQUOTE_, p, function() {
        var G__23241 = malli.error._get(a_SINGLEQUOTE_, p);
        var G__23242 = v_SINGLEQUOTE_;
        var G__23243 = ps;
        var G__23244 = e;
        return malli.error._assoc_in.cljs$core$IFn$_invoke$arity$4 ? malli.error._assoc_in.cljs$core$IFn$_invoke$arity$4(G__23241, G__23242, G__23243, G__23244) : malli.error._assoc_in.call(null, G__23241, G__23242, G__23243, G__23244);
      }());
    } else {
      if (cljs.core.map_QMARK_(a)) {
        var G__23245 = a_SINGLEQUOTE_;
        var G__23246 = v;
        var G__23247 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$malli_SLASH_error], null);
        var G__23248 = e;
        return malli.error._assoc_in.cljs$core$IFn$_invoke$arity$4 ? malli.error._assoc_in.cljs$core$IFn$_invoke$arity$4(G__23245, G__23246, G__23247, G__23248) : malli.error._assoc_in.call(null, G__23245, G__23246, G__23247, G__23248);
      } else {
        if (cljs.core.truth_(malli.error._error_QMARK_(a_SINGLEQUOTE_))) {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a_SINGLEQUOTE_, e);
        } else {
          if (cljs.core.vector_QMARK_(cljs.core.not_empty(a_SINGLEQUOTE_))) {
            return a_SINGLEQUOTE_;
          } else {
            return malli.error._error(e);
          }
        }
      }
    }
  }
};
malli.error._path = function malli$error$_path(p__23250, p__23251) {
  var map__23252 = p__23250;
  var map__23252__$1 = cljs.core.__destructure_map(map__23252);
  var schema = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23252__$1, cljs$cst$keyword$schema);
  var map__23253 = p__23251;
  var map__23253__$1 = cljs.core.__destructure_map(map__23253);
  var locale = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23253__$1, cljs$cst$keyword$locale);
  var default_locale = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__23253__$1, cljs$cst$keyword$default_DASH_locale, cljs$cst$keyword$en);
  var properties = malli.core.properties.cljs$core$IFn$_invoke$arity$1(schema);
  var or__4253__auto__ = malli.error._maybe_localized(cljs$cst$keyword$error_SLASH_path.cljs$core$IFn$_invoke$arity$1(properties), locale);
  if (cljs.core.truth_(or__4253__auto__)) {
    return or__4253__auto__;
  } else {
    return malli.error._maybe_localized(cljs$cst$keyword$error_SLASH_path.cljs$core$IFn$_invoke$arity$1(properties), default_locale);
  }
};
malli.error._length__GT_threshold = function malli$error$_length__GT_threshold(len) {
  var pred__23259 = function(p1__23258_SHARP_, p2__23257_SHARP_) {
    return p2__23257_SHARP_ <= p1__23258_SHARP_;
  };
  var expr__23260 = len;
  if (pred__23259(4, expr__23260)) {
    return 0;
  } else {
    if (pred__23259(5, expr__23260)) {
      return 1;
    } else {
      if (pred__23259(6, expr__23260)) {
        return 2;
      } else {
        if (pred__23259(11, expr__23260)) {
          return 3;
        } else {
          if (pred__23259(20, expr__23260)) {
            return 4;
          } else {
            return 0.2 * len | 0;
          }
        }
      }
    }
  }
};
malli.error._next_row = function malli$error$_next_row(previous, current, other_seq) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(row, p__23263) {
    var vec__23265 = p__23263;
    var diagonal = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23265, 0, null);
    var above = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23265, 1, null);
    var other = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23265, 2, null);
    var update_val = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(other, current) ? diagonal : function() {
      var x__4339__auto__ = function() {
        var x__4339__auto__ = diagonal;
        var y__4340__auto__ = above;
        return x__4339__auto__ < y__4340__auto__ ? x__4339__auto__ : y__4340__auto__;
      }();
      var y__4340__auto__ = cljs.core.peek(row);
      return x__4339__auto__ < y__4340__auto__ ? x__4339__auto__ : y__4340__auto__;
    }() + 1;
    return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(row, update_val);
  }, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(previous) + 1], null), cljs.core.map.cljs$core$IFn$_invoke$arity$4(cljs.core.vector, previous, cljs.core.next(previous), other_seq));
};
malli.error._levenshtein = function malli$error$_levenshtein(sequence1, sequence2) {
  return cljs.core.peek(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(previous, current) {
    return malli.error._next_row(previous, current, sequence2);
  }, cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(p1__23269_SHARP_, p2__23268_SHARP_) {
    return cljs.core.identity(p2__23268_SHARP_);
  }, cljs.core.cons(null, sequence2), cljs.core.range.cljs$core$IFn$_invoke$arity$0()), sequence1));
};
malli.error._similar_key = function malli$error$_similar_key(ky, ky2) {
  var min_len = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.min, cljs.core.map.cljs$core$IFn$_invoke$arity$2(malli.core._comp.cljs$core$IFn$_invoke$arity$3(cljs.core.count, function(p1__23270_SHARP_) {
    if (clojure.string.starts_with_QMARK_(p1__23270_SHARP_, ":")) {
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(p1__23270_SHARP_, 1);
    } else {
      return p1__23270_SHARP_;
    }
  }, cljs.core.str), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ky, ky2], null)));
  var dist = malli.error._levenshtein(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ky), cljs.core.str.cljs$core$IFn$_invoke$arity$1(ky2));
  if (dist <= malli.error._length__GT_threshold(min_len)) {
    return dist;
  } else {
    return null;
  }
};
malli.error._likely_misspelled = function malli$error$_likely_misspelled(keys, known_keys, key) {
  if (cljs.core.truth_(known_keys.cljs$core$IFn$_invoke$arity$1 ? known_keys.cljs$core$IFn$_invoke$arity$1(key) : known_keys.call(null, key))) {
    return null;
  } else {
    return cljs.core.not_empty(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(keys, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__23271_SHARP_) {
      return malli.error._similar_key(p1__23271_SHARP_, key);
    }, known_keys)));
  }
};
malli.error._most_similar_to = function malli$error$_most_similar_to(keys, key, known_keys) {
  return cljs.core.not_empty(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.second, cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(cljs.core.first, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.first, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(function(p1__23272_SHARP_) {
    return malli.error._levenshtein(cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__23272_SHARP_), cljs.core.str.cljs$core$IFn$_invoke$arity$1(key));
  }, cljs.core.identity), malli.error._likely_misspelled(keys, known_keys, key))))));
};
malli.error.error_path = function malli$error$error_path(var_args) {
  var G__23274 = arguments.length;
  switch(G__23274) {
    case 1:
      return malli.error.error_path.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.error.error_path.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.error.error_path.cljs$core$IFn$_invoke$arity$1 = function(error) {
  return malli.error.error_path.cljs$core$IFn$_invoke$arity$2(error, null);
};
malli.error.error_path.cljs$core$IFn$_invoke$arity$2 = function(error, options) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$in.cljs$core$IFn$_invoke$arity$1(error), malli.error._path(error, options));
};
malli.error.error_path.cljs$lang$maxFixedArity = 2;
malli.error.error_message = function malli$error$error_message(var_args) {
  var G__23279 = arguments.length;
  switch(G__23279) {
    case 1:
      return malli.error.error_message.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.error.error_message.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.error.error_message.cljs$core$IFn$_invoke$arity$1 = function(error) {
  return malli.error.error_message.cljs$core$IFn$_invoke$arity$2(error, null);
};
malli.error.error_message.cljs$core$IFn$_invoke$arity$2 = function(p__23280, p__23281) {
  var map__23282 = p__23280;
  var map__23282__$1 = cljs.core.__destructure_map(map__23282);
  var error = map__23282__$1;
  var schema = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23282__$1, cljs$cst$keyword$schema);
  var type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23282__$1, cljs$cst$keyword$type);
  var map__23283 = p__23281;
  var map__23283__$1 = cljs.core.__destructure_map(map__23283);
  var options = map__23283__$1;
  var errors = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__23283__$1, cljs$cst$keyword$errors, malli.error.default_errors);
  var unknown = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__23283__$1, cljs$cst$keyword$unknown, true);
  var locale = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23283__$1, cljs$cst$keyword$locale);
  var default_locale = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__23283__$1, cljs$cst$keyword$default_DASH_locale, cljs$cst$keyword$en);
  var or__4253__auto__ = malli.error._message(error, malli.core.properties.cljs$core$IFn$_invoke$arity$1(schema), locale, options);
  if (cljs.core.truth_(or__4253__auto__)) {
    return or__4253__auto__;
  } else {
    var or__4253__auto____$1 = malli.error._message(error, malli.core.type_properties.cljs$core$IFn$_invoke$arity$1(schema), locale, options);
    if (cljs.core.truth_(or__4253__auto____$1)) {
      return or__4253__auto____$1;
    } else {
      var or__4253__auto____$2 = malli.error._message(error, errors.cljs$core$IFn$_invoke$arity$1 ? errors.cljs$core$IFn$_invoke$arity$1(type) : errors.call(null, type), locale, options);
      if (cljs.core.truth_(or__4253__auto____$2)) {
        return or__4253__auto____$2;
      } else {
        var or__4253__auto____$3 = malli.error._message(error, function() {
          var G__23284 = malli.core.type.cljs$core$IFn$_invoke$arity$1(schema);
          return errors.cljs$core$IFn$_invoke$arity$1 ? errors.cljs$core$IFn$_invoke$arity$1(G__23284) : errors.call(null, G__23284);
        }(), locale, options);
        if (cljs.core.truth_(or__4253__auto____$3)) {
          return or__4253__auto____$3;
        } else {
          var or__4253__auto____$4 = malli.error._message(error, malli.core.properties.cljs$core$IFn$_invoke$arity$1(schema), default_locale, options);
          if (cljs.core.truth_(or__4253__auto____$4)) {
            return or__4253__auto____$4;
          } else {
            var or__4253__auto____$5 = malli.error._message(error, malli.core.type_properties.cljs$core$IFn$_invoke$arity$1(schema), default_locale, options);
            if (cljs.core.truth_(or__4253__auto____$5)) {
              return or__4253__auto____$5;
            } else {
              var or__4253__auto____$6 = malli.error._message(error, errors.cljs$core$IFn$_invoke$arity$1 ? errors.cljs$core$IFn$_invoke$arity$1(type) : errors.call(null, type), default_locale, options);
              if (cljs.core.truth_(or__4253__auto____$6)) {
                return or__4253__auto____$6;
              } else {
                var or__4253__auto____$7 = malli.error._message(error, function() {
                  var G__23285 = malli.core.type.cljs$core$IFn$_invoke$arity$1(schema);
                  return errors.cljs$core$IFn$_invoke$arity$1 ? errors.cljs$core$IFn$_invoke$arity$1(G__23285) : errors.call(null, G__23285);
                }(), default_locale, options);
                if (cljs.core.truth_(or__4253__auto____$7)) {
                  return or__4253__auto____$7;
                } else {
                  var or__4253__auto____$8 = function() {
                    var and__4251__auto__ = unknown;
                    if (cljs.core.truth_(and__4251__auto__)) {
                      return malli.error._message(error, errors.cljs$core$IFn$_invoke$arity$1 ? errors.cljs$core$IFn$_invoke$arity$1(cljs$cst$keyword$malli_DOT_error_SLASH_unknown) : errors.call(null, cljs$cst$keyword$malli_DOT_error_SLASH_unknown), locale, options);
                    } else {
                      return and__4251__auto__;
                    }
                  }();
                  if (cljs.core.truth_(or__4253__auto____$8)) {
                    return or__4253__auto____$8;
                  } else {
                    var and__4251__auto__ = unknown;
                    if (cljs.core.truth_(and__4251__auto__)) {
                      return malli.error._message(error, errors.cljs$core$IFn$_invoke$arity$1 ? errors.cljs$core$IFn$_invoke$arity$1(cljs$cst$keyword$malli_DOT_error_SLASH_unknown) : errors.call(null, cljs$cst$keyword$malli_DOT_error_SLASH_unknown), default_locale, options);
                    } else {
                      return and__4251__auto__;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
malli.error.error_message.cljs$lang$maxFixedArity = 2;
malli.error._resolve_direct_error = function malli$error$_resolve_direct_error(_, error, options) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [malli.error.error_path.cljs$core$IFn$_invoke$arity$2(error, options), malli.error.error_message.cljs$core$IFn$_invoke$arity$2(error, options)], null);
};
malli.error._resolve_root_error = function malli$error$_resolve_root_error(p__23286, p__23287, options) {
  var map__23288 = p__23286;
  var map__23288__$1 = cljs.core.__destructure_map(map__23288);
  var schema = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23288__$1, cljs$cst$keyword$schema);
  var map__23289 = p__23287;
  var map__23289__$1 = cljs.core.__destructure_map(map__23289);
  var error = map__23289__$1;
  var path = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23289__$1, cljs$cst$keyword$path);
  var in$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23289__$1, cljs$cst$keyword$in);
  var options__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(options, cljs$cst$keyword$unknown, false);
  var path__$1 = path;
  var l = null;
  var mp = path__$1;
  var p = malli.core.properties.cljs$core$IFn$_invoke$arity$1(cljs$cst$keyword$schema.cljs$core$IFn$_invoke$arity$1(error));
  var m = malli.error.error_message.cljs$core$IFn$_invoke$arity$2(error, options__$1);
  while (true) {
    var vec__23296 = function() {
      var or__4253__auto__ = function() {
        var schema__$1 = malli.util.get_in.cljs$core$IFn$_invoke$arity$2(schema, path__$1);
        var temp__5753__auto__ = malli.error.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$schema, schema__$1], null), options__$1);
        if (cljs.core.truth_(temp__5753__auto__)) {
          var m_SINGLEQUOTE_ = temp__5753__auto__;
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [path__$1, m_SINGLEQUOTE_, malli.core.properties.cljs$core$IFn$_invoke$arity$1(schema__$1)], null);
        } else {
          return null;
        }
      }();
      if (cljs.core.truth_(or__4253__auto__)) {
        return or__4253__auto__;
      } else {
        var or__4253__auto____$1 = function() {
          var res = function() {
            var and__4251__auto__ = l;
            if (cljs.core.truth_(and__4251__auto__)) {
              return malli.util.find.cljs$core$IFn$_invoke$arity$2(malli.util.get_in.cljs$core$IFn$_invoke$arity$2(schema, path__$1), l);
            } else {
              return and__4251__auto__;
            }
          }();
          if (cljs.core.vector_QMARK_(res)) {
            var vec__23299 = res;
            var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23299, 0, null);
            var props = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23299, 1, null);
            var schema__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23299, 2, null);
            var schema__$2 = malli.util.update_properties.cljs$core$IFn$_invoke$arity$variadic(schema__$1, cljs.core.merge, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([props], 0));
            var message = malli.error.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$schema, schema__$2], null), options__$1);
            if (cljs.core.truth_(message)) {
              return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.cljs$core$IFn$_invoke$arity$2(path__$1, l), message, malli.core.properties.cljs$core$IFn$_invoke$arity$1(schema__$2)], null);
            } else {
              return null;
            }
          } else {
            return null;
          }
        }();
        if (cljs.core.truth_(or__4253__auto____$1)) {
          return or__4253__auto____$1;
        } else {
          if (cljs.core.truth_(m)) {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [mp, m, p], null);
          } else {
            return null;
          }
        }
      }
    }();
    var path_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23296, 0, null);
    var m_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23296, 1, null);
    var p_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23296, 2, null);
    if (cljs.core.seq(path__$1)) {
      var G__23366 = cljs.core.pop(path__$1);
      var G__23367 = cljs.core.last(path__$1);
      var G__23368 = path_SINGLEQUOTE_;
      var G__23369 = p_SINGLEQUOTE_;
      var G__23370 = m_SINGLEQUOTE_;
      path__$1 = G__23366;
      l = G__23367;
      mp = G__23368;
      p = G__23369;
      m = G__23370;
      continue;
    } else {
      if (cljs.core.truth_(m)) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq(in$) ? malli.util.path__GT_in(schema, path_SINGLEQUOTE_) : malli.error.error_path.cljs$core$IFn$_invoke$arity$2(error, options__$1), m_SINGLEQUOTE_, p_SINGLEQUOTE_], null);
      } else {
        return null;
      }
    }
    break;
  }
};
malli.error.with_error_message = function malli$error$with_error_message(var_args) {
  var G__23303 = arguments.length;
  switch(G__23303) {
    case 1:
      return malli.error.with_error_message.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.error.with_error_message.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.error.with_error_message.cljs$core$IFn$_invoke$arity$1 = function(error) {
  return malli.error.with_error_message.cljs$core$IFn$_invoke$arity$2(error, null);
};
malli.error.with_error_message.cljs$core$IFn$_invoke$arity$2 = function(error, options) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(error, cljs$cst$keyword$message, malli.error.error_message.cljs$core$IFn$_invoke$arity$2(error, options));
};
malli.error.with_error_message.cljs$lang$maxFixedArity = 2;
malli.error.with_error_messages = function malli$error$with_error_messages(var_args) {
  var G__23310 = arguments.length;
  switch(G__23310) {
    case 1:
      return malli.error.with_error_messages.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.error.with_error_messages.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.error.with_error_messages.cljs$core$IFn$_invoke$arity$1 = function(explanation) {
  return malli.error.with_error_messages.cljs$core$IFn$_invoke$arity$2(explanation, null);
};
malli.error.with_error_messages.cljs$core$IFn$_invoke$arity$2 = function(explanation, p__23311) {
  var map__23312 = p__23311;
  var map__23312__$1 = cljs.core.__destructure_map(map__23312);
  var options = map__23312__$1;
  var f = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__23312__$1, cljs$cst$keyword$wrap, cljs.core.identity);
  if (cljs.core.truth_(explanation)) {
    return cljs.core.update.cljs$core$IFn$_invoke$arity$3(explanation, cljs$cst$keyword$errors, function(errors) {
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__23308_SHARP_) {
        var G__23313 = malli.error.with_error_message.cljs$core$IFn$_invoke$arity$2(p1__23308_SHARP_, options);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23313) : f.call(null, G__23313);
      }, errors));
    });
  } else {
    return null;
  }
};
malli.error.with_error_messages.cljs$lang$maxFixedArity = 2;
malli.error.with_spell_checking = function malli$error$with_spell_checking(var_args) {
  var G__23316 = arguments.length;
  switch(G__23316) {
    case 1:
      return malli.error.with_spell_checking.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.error.with_spell_checking.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.error.with_spell_checking.cljs$core$IFn$_invoke$arity$1 = function(explanation) {
  return malli.error.with_spell_checking.cljs$core$IFn$_invoke$arity$2(explanation, null);
};
malli.error.with_spell_checking.cljs$core$IFn$_invoke$arity$2 = function(explanation, p__23317) {
  var map__23318 = p__23317;
  var map__23318__$1 = cljs.core.__destructure_map(map__23318);
  var keep_likely_misspelled_of = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23318__$1, cljs$cst$keyword$keep_DASH_likely_DASH_misspelled_DASH_of);
  if (cljs.core.truth_(explanation)) {
    var _BANG_likely_misspelling_of = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashSet.EMPTY);
    var handle_invalid_value = function(schema, _, value) {
      var dispatch = cljs$cst$keyword$dispatch.cljs$core$IFn$_invoke$arity$1(malli.core.properties.cljs$core$IFn$_invoke$arity$1(schema));
      if (dispatch instanceof cljs.core.Keyword) {
        var value__$1 = dispatch.cljs$core$IFn$_invoke$arity$1(value);
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$malli_DOT_error_SLASH_misspelled_DASH_value, value__$1, cljs.core.PersistentHashSet.createAsIfByAssoc([value__$1])], null);
      } else {
        return null;
      }
    };
    var types = new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$malli_DOT_core_SLASH_extra_DASH_key, function(_, path, value) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$malli_DOT_error_SLASH_misspelled_DASH_key, cljs.core.last(path), function() {
        var or__4253__auto__ = cljs.core.set(cljs.core.keys(value));
        if (cljs.core.truth_(or__4253__auto__)) {
          return or__4253__auto__;
        } else {
          return cljs.core.PersistentHashSet.EMPTY;
        }
      }()], null);
    }, cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_dispatch_DASH_value, handle_invalid_value], null);
    return cljs.core.update.cljs$core$IFn$_invoke$arity$3(explanation, cljs$cst$keyword$errors, function(errors) {
      var $ = errors;
      var $__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function(p__23319) {
        var map__23320 = p__23319;
        var map__23320__$1 = cljs.core.__destructure_map(map__23320);
        var error = map__23320__$1;
        var schema = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23320__$1, cljs$cst$keyword$schema);
        var path = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23320__$1, cljs$cst$keyword$path);
        var type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23320__$1, cljs$cst$keyword$type);
        var temp__5751__auto__ = types.cljs$core$IFn$_invoke$arity$1 ? types.cljs$core$IFn$_invoke$arity$1(type) : types.call(null, type);
        if (cljs.core.truth_(temp__5751__auto__)) {
          var get_keys = temp__5751__auto__;
          var known_keys = cljs.core.set(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, malli.core.entries.cljs$core$IFn$_invoke$arity$1(schema)));
          var value = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$value.cljs$core$IFn$_invoke$arity$1(explanation), cljs.core.butlast(path));
          var vec__23321 = get_keys.cljs$core$IFn$_invoke$arity$3 ? get_keys.cljs$core$IFn$_invoke$arity$3(schema, path, value) : get_keys.call(null, schema, path, value);
          var error_type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23321, 0, null);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23321, 1, null);
          var keys = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23321, 2, null);
          var similar = malli.error._most_similar_to(keys, key, known_keys);
          var likely_misspelling_of = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function(p1__23314_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.butlast(path)), p1__23314_SHARP_);
          }, cljs.core.vec(similar));
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(_BANG_likely_misspelling_of, cljs.core.into, likely_misspelling_of);
          var G__23324 = error;
          if (cljs.core.truth_(similar)) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__23324, cljs$cst$keyword$type, error_type, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs$cst$keyword$malli_DOT_error_SLASH_likely_DASH_misspelling_DASH_of, likely_misspelling_of], 0));
          } else {
            return G__23324;
          }
        } else {
          return error;
        }
      }, $);
      if (cljs.core.not(keep_likely_misspelled_of)) {
        return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(function(p__23325) {
          var map__23326 = p__23325;
          var map__23326__$1 = cljs.core.__destructure_map(map__23326);
          var path = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23326__$1, cljs$cst$keyword$path);
          var type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23326__$1, cljs$cst$keyword$type);
          var and__4251__auto__ = function() {
            var fexpr__23327 = cljs.core.deref(_BANG_likely_misspelling_of);
            return fexpr__23327.cljs$core$IFn$_invoke$arity$1 ? fexpr__23327.cljs$core$IFn$_invoke$arity$1(path) : fexpr__23327.call(null, path);
          }();
          if (cljs.core.truth_(and__4251__auto__)) {
            return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(type, cljs$cst$keyword$malli_DOT_core_SLASH_missing_DASH_key);
          } else {
            return and__4251__auto__;
          }
        }, $__$1);
      } else {
        return $__$1;
      }
    });
  } else {
    return null;
  }
};
malli.error.with_spell_checking.cljs$lang$maxFixedArity = 2;
malli.error.humanize = function malli$error$humanize(var_args) {
  var G__23329 = arguments.length;
  switch(G__23329) {
    case 1:
      return malli.error.humanize.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.error.humanize.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.error.humanize.cljs$core$IFn$_invoke$arity$1 = function(explanation) {
  return malli.error.humanize.cljs$core$IFn$_invoke$arity$2(explanation, null);
};
malli.error.humanize.cljs$core$IFn$_invoke$arity$2 = function(p__23330, p__23331) {
  var map__23332 = p__23330;
  var map__23332__$1 = cljs.core.__destructure_map(map__23332);
  var explanation = map__23332__$1;
  var value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23332__$1, cljs$cst$keyword$value);
  var errors = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23332__$1, cljs$cst$keyword$errors);
  var map__23333 = p__23331;
  var map__23333__$1 = cljs.core.__destructure_map(map__23333);
  var options = map__23333__$1;
  var wrap = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__23333__$1, cljs$cst$keyword$wrap, cljs$cst$keyword$message);
  var resolve = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__23333__$1, cljs$cst$keyword$resolve, malli.error._resolve_direct_error);
  if (cljs.core.truth_(errors)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(acc, error) {
      var vec__23334 = resolve.cljs$core$IFn$_invoke$arity$3 ? resolve.cljs$core$IFn$_invoke$arity$3(explanation, error, options) : resolve.call(null, explanation, error, options);
      var path = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23334, 0, null);
      var message = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23334, 1, null);
      return malli.error._assoc_in(acc, value, path, function() {
        var G__23337 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(error, cljs$cst$keyword$message, message);
        return wrap.cljs$core$IFn$_invoke$arity$1 ? wrap.cljs$core$IFn$_invoke$arity$1(G__23337) : wrap.call(null, G__23337);
      }());
    }, null, errors);
  } else {
    return null;
  }
};
malli.error.humanize.cljs$lang$maxFixedArity = 2;
goog.provide("malli.dev.pretty");
malli.dev.pretty._printer = function malli$dev$pretty$_printer(var_args) {
  var G__23339 = arguments.length;
  switch(G__23339) {
    case 0:
      return malli.dev.pretty._printer.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.dev.pretty._printer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.dev.pretty._printer.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.dev.pretty._printer.cljs$core$IFn$_invoke$arity$1(null);
};
malli.dev.pretty._printer.cljs$core$IFn$_invoke$arity$1 = function(options) {
  return malli.dev.virhe._printer.cljs$core$IFn$_invoke$arity$1(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 5, [cljs$cst$keyword$title, "Schema Error", cljs$cst$keyword$width, 100, cljs$cst$keyword$colors, malli.dev.virhe._dark_colors, cljs$cst$keyword$unknown, function(x) {
    if (malli.core.schema_QMARK_(x)) {
      return malli.core.form.cljs$core$IFn$_invoke$arity$1(x);
    } else {
      return null;
    }
  }, cljs$cst$keyword$throwing_DASH_fn_DASH_top_DASH_level_DASH_ns_DASH_names, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["malli", "clojure"], null)], null), options], 0)));
};
malli.dev.pretty._printer.cljs$lang$maxFixedArity = 1;
malli.dev.pretty._errors = function malli$dev$pretty$_errors(explanation, printer) {
  return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs$cst$keyword$break, function() {
    var iter__4652__auto__ = function malli$dev$pretty$_errors_$_iter__23340(s__23341) {
      return new cljs.core.LazySeq(null, function() {
        var s__23341__$1 = s__23341;
        while (true) {
          var temp__5753__auto__ = cljs.core.seq(s__23341__$1);
          if (temp__5753__auto__) {
            var s__23341__$2 = temp__5753__auto__;
            if (cljs.core.chunked_seq_QMARK_(s__23341__$2)) {
              var c__4650__auto__ = cljs.core.chunk_first(s__23341__$2);
              var size__4651__auto__ = cljs.core.count(c__4650__auto__);
              var b__23343 = cljs.core.chunk_buffer(size__4651__auto__);
              if (function() {
                var i__23342 = 0;
                while (true) {
                  if (i__23342 < size__4651__auto__) {
                    var error = cljs.core._nth(c__4650__auto__, i__23342);
                    cljs.core.chunk_append(b__23343, malli.dev.virhe._visit(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, error), printer));
                    var G__23371 = i__23342 + 1;
                    i__23342 = G__23371;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons(cljs.core.chunk(b__23343), malli$dev$pretty$_errors_$_iter__23340(cljs.core.chunk_rest(s__23341__$2)));
              } else {
                return cljs.core.chunk_cons(cljs.core.chunk(b__23343), null);
              }
            } else {
              var error = cljs.core.first(s__23341__$2);
              return cljs.core.cons(malli.dev.virhe._visit(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, error), printer), malli$dev$pretty$_errors_$_iter__23340(cljs.core.rest(s__23341__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4652__auto__(cljs$cst$keyword$errors.cljs$core$IFn$_invoke$arity$1(malli.error.with_error_messages.cljs$core$IFn$_invoke$arity$1(explanation)));
  }());
};
malli.dev.pretty._explain = function malli$dev$pretty$_explain(schema, value, printer) {
  return malli.dev.pretty._errors(malli.core.explain.cljs$core$IFn$_invoke$arity$2(schema, value), printer);
};
malli.dev.pretty._block = function malli$dev$pretty$_block(text, body, printer) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$group, malli.dev.virhe._text(text, printer), cljs$cst$keyword$break, cljs$cst$keyword$break, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$align, 2, body], null)], null);
};
malli.dev.pretty._link = function malli$dev$pretty$_link(link, printer) {
  return malli.dev.virhe._color(cljs$cst$keyword$link, link, printer);
};
malli.dev.virhe._format.cljs$core$IMultiFn$_add_method$arity$3(null, cljs$cst$keyword$malli_DOT_core_SLASH_explain, function(_, ___$1, explanation, printer) {
  var map__23344 = explanation;
  var map__23344__$1 = cljs.core.__destructure_map(map__23344);
  var schema = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23344__$1, cljs$cst$keyword$schema);
  var value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23344__$1, cljs$cst$keyword$value);
  return new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$body, new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$group, malli.dev.pretty._block("Value:", malli.dev.virhe._visit(value, printer), printer), cljs$cst$keyword$break, cljs$cst$keyword$break, malli.dev.pretty._block("Errors:", malli.dev.virhe._visit(malli.error.humanize.cljs$core$IFn$_invoke$arity$1(explanation), printer), printer), cljs$cst$keyword$break, cljs$cst$keyword$break, 
  malli.dev.pretty._block("Schema:", malli.dev.virhe._visit(schema, printer), printer), cljs$cst$keyword$break, cljs$cst$keyword$break, malli.dev.pretty._block("More information:", malli.dev.pretty._link("https://cljdoc.org/d/metosin/malli/CURRENT", printer), printer)], null)], null);
});
malli.dev.virhe._format.cljs$core$IMultiFn$_add_method$arity$3(null, cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_input, function(_, ___$1, p__23345, printer) {
  var map__23346 = p__23345;
  var map__23346__$1 = cljs.core.__destructure_map(map__23346);
  var args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23346__$1, cljs$cst$keyword$args);
  var input = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23346__$1, cljs$cst$keyword$input);
  return new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$body, new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$group, malli.dev.pretty._block("Invalid function arguments:", malli.dev.virhe._visit(args, printer), printer), cljs$cst$keyword$break, cljs$cst$keyword$break, malli.dev.pretty._block("Input Schema:", malli.dev.virhe._visit(input, printer), printer), cljs$cst$keyword$break, cljs$cst$keyword$break, malli.dev.pretty._block("Errors:", 
  malli.dev.pretty._explain(input, args, printer), printer), cljs$cst$keyword$break, cljs$cst$keyword$break, malli.dev.pretty._block("More information:", malli.dev.pretty._link("https://cljdoc.org/d/metosin/malli/CURRENT/doc/function-schemas", printer), printer)], null)], null);
});
malli.dev.virhe._format.cljs$core$IMultiFn$_add_method$arity$3(null, cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_output, function(_, ___$1, p__23347, printer) {
  var map__23348 = p__23347;
  var map__23348__$1 = cljs.core.__destructure_map(map__23348);
  var value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23348__$1, cljs$cst$keyword$value);
  var output = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23348__$1, cljs$cst$keyword$output);
  return new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$body, new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$group, malli.dev.pretty._block("Invalid function return value:", malli.dev.virhe._visit(value, printer), printer), cljs$cst$keyword$break, cljs$cst$keyword$break, malli.dev.pretty._block("Output Schema:", malli.dev.virhe._visit(output, printer), printer), cljs$cst$keyword$break, cljs$cst$keyword$break, malli.dev.pretty._block("Errors:", 
  malli.dev.pretty._explain(output, value, printer), printer), cljs$cst$keyword$break, cljs$cst$keyword$break, malli.dev.pretty._block("More information:", malli.dev.pretty._link("https://cljdoc.org/d/metosin/malli/CURRENT/doc/function-schemas", printer), printer)], null)], null);
});
malli.dev.virhe._format.cljs$core$IMultiFn$_add_method$arity$3(null, cljs$cst$keyword$malli_DOT_core_SLASH_invalid_DASH_arity, function(_, ___$1, p__23349, printer) {
  var map__23350 = p__23349;
  var map__23350__$1 = cljs.core.__destructure_map(map__23350);
  var args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23350__$1, cljs$cst$keyword$args);
  var arity = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23350__$1, cljs$cst$keyword$arity);
  var schema = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23350__$1, cljs$cst$keyword$schema);
  return new cljs.core.PersistentArrayMap(null, 1, [cljs$cst$keyword$body, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs$cst$keyword$group, malli.dev.pretty._block(["Invalid function arity (", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arity), "):"].join(""), malli.dev.virhe._visit(args, printer), printer), cljs$cst$keyword$break, cljs$cst$keyword$break, malli.dev.pretty._block("Function Schema:", malli.dev.virhe._visit(schema, printer), printer), cljs$cst$keyword$break, 
  cljs$cst$keyword$break, malli.dev.pretty._block("More information:", malli.dev.pretty._link("https://cljdoc.org/d/metosin/malli/CURRENT/doc/function-schemas", printer), printer)], null)], null);
});
malli.dev.pretty.reporter = function malli$dev$pretty$reporter(var_args) {
  var G__23352 = arguments.length;
  switch(G__23352) {
    case 0:
      return malli.dev.pretty.reporter.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.dev.pretty.reporter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.dev.pretty.reporter.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.dev.pretty.reporter.cljs$core$IFn$_invoke$arity$1(malli.dev.pretty._printer.cljs$core$IFn$_invoke$arity$0());
};
malli.dev.pretty.reporter.cljs$core$IFn$_invoke$arity$1 = function(printer) {
  return function(type, data) {
    return malli.dev.virhe._print_doc(malli.dev.virhe._exception_doc(cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(type), new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$type, type, cljs$cst$keyword$data, data], null)), printer), printer);
  };
};
malli.dev.pretty.reporter.cljs$lang$maxFixedArity = 1;
malli.dev.pretty.thrower = function malli$dev$pretty$thrower(var_args) {
  var G__23355 = arguments.length;
  switch(G__23355) {
    case 0:
      return malli.dev.pretty.thrower.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.dev.pretty.thrower.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.dev.pretty.thrower.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.dev.pretty.thrower.cljs$core$IFn$_invoke$arity$1(malli.dev.pretty._printer.cljs$core$IFn$_invoke$arity$0());
};
malli.dev.pretty.thrower.cljs$core$IFn$_invoke$arity$1 = function(printer) {
  var report = malli.dev.pretty.reporter.cljs$core$IFn$_invoke$arity$1(printer);
  return function(type, data) {
    var message = function() {
      var sb__4795__auto__ = new goog.string.StringBuffer();
      var _STAR_print_newline_STAR__orig_val__23356_23377 = cljs.core._STAR_print_newline_STAR_;
      var _STAR_print_fn_STAR__orig_val__23357_23378 = cljs.core._STAR_print_fn_STAR_;
      var _STAR_print_newline_STAR__temp_val__23358_23379 = true;
      var _STAR_print_fn_STAR__temp_val__23359_23380 = function(x__4796__auto__) {
        return sb__4795__auto__.append(x__4796__auto__);
      };
      cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__temp_val__23358_23379;
      cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__23359_23380;
      try {
        report(type, data);
      } finally {
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__23357_23378;
        cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__orig_val__23356_23377;
      }
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4795__auto__);
    }();
    throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(message, new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$type, type, cljs$cst$keyword$data, data], null));
  };
};
malli.dev.pretty.thrower.cljs$lang$maxFixedArity = 1;
malli.dev.pretty.explain = function malli$dev$pretty$explain(var_args) {
  var G__23361 = arguments.length;
  switch(G__23361) {
    case 2:
      return malli.dev.pretty.explain.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.dev.pretty.explain.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.dev.pretty.explain.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, value) {
  return malli.dev.pretty.explain.cljs$core$IFn$_invoke$arity$3(_QMARK_schema, value, null);
};
malli.dev.pretty.explain.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, value, options) {
  var printer = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(function() {
    var or__4253__auto__ = cljs$cst$keyword$malli_DOT_dev_DOT_pretty_SLASH_printer.cljs$core$IFn$_invoke$arity$1(options);
    if (cljs.core.truth_(or__4253__auto__)) {
      return or__4253__auto__;
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(malli.dev.pretty._printer.cljs$core$IFn$_invoke$arity$0(), cljs$cst$keyword$width, 60);
    }
  }(), cljs$cst$keyword$title, "Validation Error");
  var temp__5753__auto__ = malli.error.with_error_messages.cljs$core$IFn$_invoke$arity$1(malli.core.explain.cljs$core$IFn$_invoke$arity$2(_QMARK_schema, value));
  if (cljs.core.truth_(temp__5753__auto__)) {
    var e = temp__5753__auto__;
    malli.dev.pretty.reporter.cljs$core$IFn$_invoke$arity$1(printer)(cljs$cst$keyword$malli_DOT_core_SLASH_explain, e);
    return e;
  } else {
    return null;
  }
};
malli.dev.pretty.explain.cljs$lang$maxFixedArity = 3;
goog.provide("malli.dev.cljs");
goog.provide("autojournal.core");
autojournal.core.update_lifelog = function autojournal$core$update_lifelog() {
  cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, function() {
    var iter__4652__auto__ = function autojournal$core$update_lifelog_$_iter__13685(s__13686) {
      return new cljs.core.LazySeq(null, function() {
        var s__13686__$1 = s__13686;
        while (true) {
          var temp__5753__auto__ = cljs.core.seq(s__13686__$1);
          if (temp__5753__auto__) {
            var s__13686__$2 = temp__5753__auto__;
            if (cljs.core.chunked_seq_QMARK_(s__13686__$2)) {
              var c__4650__auto__ = cljs.core.chunk_first(s__13686__$2);
              var size__4651__auto__ = cljs.core.count(c__4650__auto__);
              var b__13688 = cljs.core.chunk_buffer(size__4651__auto__);
              if (function() {
                var i__13687 = 0;
                while (true) {
                  if (i__13687 < size__4651__auto__) {
                    var file = cljs.core._nth(c__4650__auto__, i__13687);
                    cljs.core.chunk_append(b__13688, file);
                    var G__13689 = i__13687 + 1;
                    i__13687 = G__13689;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons(cljs.core.chunk(b__13688), autojournal$core$update_lifelog_$_iter__13685(cljs.core.chunk_rest(s__13686__$2)));
              } else {
                return cljs.core.chunk_cons(cljs.core.chunk(b__13688), null);
              }
            } else {
              var file = cljs.core.first(s__13686__$2);
              return cljs.core.cons(file, autojournal$core$update_lifelog_$_iter__13685(cljs.core.rest(s__13686__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4652__auto__(autojournal.drive.get_files("20220515.zip"));
  }())], 0));
  return autojournal.sheets.append_BANG_("1ZDPrV6ZngilK00Pb0DVs64yAVs6YQtiLr_vE5-YCiLc", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["hello", "world"], null));
};
goog.exportSymbol("autojournal.core.update_lifelog", autojournal.core.update_lifelog);
autojournal.core.main = function autojournal$core$main() {
  return autojournal.core.update_lifelog();
};
autojournal.core.refresh = function autojournal$core$refresh() {
  return autojournal.env_switching.env_switch(new cljs.core.PersistentArrayMap(null, 2, [cljs$cst$keyword$node, function() {
    cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["Hot code Remount"], 0));
    cljs.core.filterv(cljs.core.some_QMARK_, cljs.core.PersistentVector.EMPTY);
    cljs.core.PersistentHashSet.EMPTY;
    cljs.core.filterv(cljs.core.some_QMARK_, cljs.core.PersistentVector.EMPTY);
    return null;
  }, cljs$cst$keyword$app_DASH_script, function() {
    return cljs.core.List.EMPTY;
  }], null));
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2(autojournal.core.main, process.argv.slice(2));

})();
