
function main() {
  autojournal.core.update_lifelog();
}
  if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part; parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part] && cur[part] !== Object.prototype[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && goog.global.CLOSURE_UNCOMPILED_DEFINES.nodeType === undefined && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && goog.global.CLOSURE_DEFINES.nodeType === undefined && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.provide can not be used within a goog.module.");
  }
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly. Note, " + "modules cannot be loaded as normal scripts. They require some kind of " + "pre-processing step. You're likely trying to load a module via a " + "script tag or as a part of a concatenated bundle without rewriting the " + "module. For more info see: " + "https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (name in goog.loadedModules_) {
      return goog.loadedModules_[name];
    } else {
      if (!goog.implicitNamespaces_[name]) {
        var ns = goog.getObjectByName(name);
        return ns != null ? ns : null;
      }
    }
  }
  return null;
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
goog.forwardDeclare("Document");
goog.forwardDeclare("HTMLScriptElement");
goog.forwardDeclare("XMLHttpRequest");
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part; part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_loadFlags) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    if (!opt_loadFlags || typeof opt_loadFlags === "boolean") {
      opt_loadFlags = opt_loadFlags ? {"module":"goog"} : {};
    }
    for (var i = 0; provide = provides[i]; i++) {
      deps.nameToPath[provide] = path;
      deps.loadFlags[path] = opt_loadFlags;
    }
    for (var j = 0; require = requires[j]; j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      }
    } else {
      if (goog.ENABLE_DEBUG_LOADER) {
        var path = goog.getPathFromDeps_(name);
        if (path) {
          goog.writeScripts_(path);
        } else {
          var errorMessage = "goog.require could not find: " + name;
          goog.logToConsole_(errorMessage);
          throw Error(errorMessage);
        }
      }
    }
    return null;
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.instance_ = undefined;
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
goog.define("goog.TRANSPILE", "detect");
goog.define("goog.TRANSPILER", "transpile.js");
if (goog.DEPENDENCIES_ENABLED) {
  goog.dependencies_ = {loadFlags:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return doc != null && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH) && goog.isString(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var currentScript = doc.currentScript;
    if (currentScript) {
      var scripts = [currentScript];
    } else {
      var scripts = doc.getElementsByTagName("SCRIPT");
    }
    for (var i = scripts.length - 1; i >= 0; --i) {
      var script = scripts[i];
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.oldIeWaiting_ = false;
  goog.importProcessedScript_ = function(src, isModule, needsTranspile) {
    var bootstrap = 'goog.retrieveAndExec_("' + src + '", ' + isModule + ", " + needsTranspile + ");";
    goog.importScript_("", bootstrap);
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0; i < count; i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
    goog.oldIeWaiting_ = false;
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    var loadFlags = path && goog.dependencies_.loadFlags[path] || {};
    var languageLevel = loadFlags["lang"] || "es3";
    if (path && (loadFlags["module"] == "goog" || goog.needsTranspile_(languageLevel))) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModuleFromUrl = function(url) {
    goog.retrieveAndExec_(url, true, false);
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = doc.createElement("script");
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      if (opt_sourceText === undefined) {
        if (!goog.IS_OLD_IE_) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          goog.oldIeWaiting_ = true;
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + goog.protectScriptTag_(opt_sourceText) + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.protectScriptTag_ = function(str) {
    return str.replace(/<\/(SCRIPT)/ig, "\\x3c/$1");
  };
  goog.needsTranspile_ = function(lang) {
    if (goog.TRANSPILE == "always") {
      return true;
    } else {
      if (goog.TRANSPILE == "never") {
        return false;
      } else {
        if (!goog.requiresTranspilation_) {
          goog.requiresTranspilation_ = goog.createRequiresTranspilation_();
        }
      }
    }
    if (lang in goog.requiresTranspilation_) {
      return goog.requiresTranspilation_[lang];
    } else {
      throw new Error("Unknown language mode: " + lang);
    }
  };
  goog.requiresTranspilation_ = null;
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function(pathToLoad) {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    visitNode(pathToLoad);
    for (var i = 0; i < scripts.length; i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    for (var i = 0; i < scripts.length; i++) {
      var path = scripts[i];
      if (path) {
        var loadFlags = deps.loadFlags[path] || {};
        var languageLevel = loadFlags["lang"] || "es3";
        var needsTranspile = goog.needsTranspile_(languageLevel);
        if (loadFlags["module"] == "goog" || needsTranspile) {
          goog.importProcessedScript_(goog.basePath + path, loadFlags["module"] == "goog", needsTranspile);
        } else {
          goog.importScript_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.hasBadLetScoping = null;
goog.useSafari10Workaround = function() {
  if (goog.hasBadLetScoping == null) {
    var hasBadLetScoping;
    try {
      hasBadLetScoping = !eval('"use strict";' + "let x \x3d 1; function f() { return typeof x; };" + 'f() \x3d\x3d "number";');
    } catch (e) {
      hasBadLetScoping = false;
    }
    goog.hasBadLetScoping = hasBadLetScoping;
  }
  return goog.hasBadLetScoping;
};
goog.workaroundSafari10EvalBug = function(moduleDef) {
  return "(function(){" + moduleDef + "\n" + ";" + "})();\n";
};
goog.loadModule = function(moduleDef) {
  var previousState = goog.moduleLoaderState_;
  try {
    goog.moduleLoaderState_ = {moduleName:undefined, declareLegacyNamespace:false};
    var exports;
    if (goog.isFunction(moduleDef)) {
      exports = moduleDef.call(undefined, {});
    } else {
      if (goog.isString(moduleDef)) {
        if (goog.useSafari10Workaround()) {
          moduleDef = goog.workaroundSafari10EvalBug(moduleDef);
        }
        exports = goog.loadModuleFromSource_.call(undefined, moduleDef);
      } else {
        throw Error("Invalid module definition");
      }
    }
    var moduleName = goog.moduleLoaderState_.moduleName;
    if (!goog.isString(moduleName) || !moduleName) {
      throw Error('Invalid module name "' + moduleName + '"');
    }
    if (goog.moduleLoaderState_.declareLegacyNamespace) {
      goog.constructNamespace_(moduleName, exports);
    } else {
      if (goog.SEAL_MODULE_EXPORTS && Object.seal && typeof exports == "object" && exports != null) {
        Object.seal(exports);
      }
    }
    goog.loadedModules_[moduleName] = exports;
  } finally {
    goog.moduleLoaderState_ = previousState;
  }
};
goog.loadModuleFromSource_ = function() {
  var exports = {};
  eval(arguments[0]);
  return exports;
};
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.global.CLOSURE_LOAD_FILE_SYNC;
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    try {
      var xhr = new goog.global["XMLHttpRequest"];
      xhr.open("get", src, false);
      xhr.send();
      return xhr.status == 0 || xhr.status == 200 ? xhr.responseText : null;
    } catch (err) {
      return null;
    }
  }
};
goog.retrieveAndExec_ = function(src, isModule, needsTranspile) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText == null) {
      throw new Error('Load of "' + src + '" failed');
    }
    if (needsTranspile) {
      scriptText = goog.transpile_.call(goog.global, scriptText, src);
    }
    if (isModule) {
      scriptText = goog.wrapModule_(src, scriptText);
    } else {
      scriptText += "\n//# sourceURL\x3d" + src;
    }
    var isOldIE = goog.IS_OLD_IE_;
    if (isOldIE && goog.oldIeWaiting_) {
      goog.dependencies_.deferred[originalPath] = scriptText;
      goog.queuedModules_.push(originalPath);
    } else {
      importScript(src, scriptText);
    }
  }
};
goog.transpile_ = function(code, path) {
  var jscomp = goog.global["$jscomp"];
  if (!jscomp) {
    goog.global["$jscomp"] = jscomp = {};
  }
  var transpile = jscomp.transpile;
  if (!transpile) {
    var transpilerPath = goog.basePath + goog.TRANSPILER;
    var transpilerCode = goog.loadFileSync_(transpilerPath);
    if (transpilerCode) {
      eval(transpilerCode + "\n//# sourceURL\x3d" + transpilerPath);
      if (goog.global["$gwtExport"] && goog.global["$gwtExport"]["$jscomp"] && !goog.global["$gwtExport"]["$jscomp"]["transpile"]) {
        throw new Error('The transpiler did not properly export the "transpile" ' + "method. $gwtExport: " + JSON.stringify(goog.global["$gwtExport"]));
      }
      goog.global["$jscomp"].transpile = goog.global["$gwtExport"]["$jscomp"]["transpile"];
      jscomp = goog.global["$jscomp"];
      transpile = jscomp.transpile;
    }
  }
  if (!transpile) {
    var suffix = " requires transpilation but no transpiler was found.";
    transpile = jscomp.transpile = function(code, path) {
      goog.logToConsole_(path + suffix);
      return code;
    };
  }
  return transpile(code, path);
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call(value);
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if (obj !== null && "removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1e9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments);
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ \x3d 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("SCRIPT");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.global.CLOSURE_CSS_NAME_MAP_FN;
goog.getCssName = function(className, opt_modifier) {
  if (String(className).charAt(0) == ".") {
    throw new Error('className passed in goog.getCssName must not start with ".".' + " You passed: " + className);
  }
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0; i < parts.length; i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  var result = opt_modifier ? className + "-" + rename(opt_modifier) : rename(className);
  if (goog.global.CLOSURE_CSS_NAME_MAP_FN) {
    return goog.global.CLOSURE_CSS_NAME_MAP_FN(result);
  }
  return result;
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2; i < arguments.length; i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1; i < arguments.length; i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2; i < arguments.length; i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor; ctor; ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.scope is not supported within a goog.module.");
  }
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {
    return ctr;
  }
  var superclassSealable = !goog.defineClass.isUnsealable_(superClass);
  var wrappedCtr = function() {
    var instance = ctr.apply(this, arguments) || this;
    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
    if (this.constructor === wrappedCtr && superclassSealable && Object.seal instanceof Function) {
      Object.seal(instance);
    }
    return instance;
  };
  return wrappedCtr;
};
goog.defineClass.isUnsealable_ = function(ctr) {
  return ctr && ctr.prototype && ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0; i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.createRequiresTranspilation_ = function() {
  var requiresTranspilation = {"es3":false};
  var transpilationRequiredForAllLaterModes = false;
  function addNewerLanguageTranspilationCheck(modeName, isSupported) {
    if (transpilationRequiredForAllLaterModes) {
      requiresTranspilation[modeName] = true;
    } else {
      if (isSupported()) {
        requiresTranspilation[modeName] = false;
      } else {
        requiresTranspilation[modeName] = true;
        transpilationRequiredForAllLaterModes = true;
      }
    }
  }
  function evalCheck(code) {
    try {
      return !!eval(code);
    } catch (ignored) {
      return false;
    }
  }
  var userAgent = goog.global.navigator && goog.global.navigator.userAgent ? goog.global.navigator.userAgent : "";
  addNewerLanguageTranspilationCheck("es5", function() {
    return evalCheck("[1,].length\x3d\x3d1");
  });
  addNewerLanguageTranspilationCheck("es6", function() {
    var re = /Edge\/(\d+)(\.\d)*/i;
    var edgeUserAgent = userAgent.match(re);
    if (edgeUserAgent && Number(edgeUserAgent[1]) < 15) {
      return false;
    }
    var es6fullTest = "class X{constructor(){if(new.target!\x3dString)throw 1;this.x\x3d42}}" + "let q\x3dReflect.construct(X,[],String);if(q.x!\x3d42||!(q instanceof " + "String))throw 1;for(const a of[2,3]){if(a\x3d\x3d2)continue;function " + "f(z\x3d{a}){let a\x3d0;return z.a}{function f(){return 0;}}return f()" + "\x3d\x3d3}";
    return evalCheck('(()\x3d\x3e{"use strict";' + es6fullTest + "})()");
  });
  addNewerLanguageTranspilationCheck("es6-impl", function() {
    return true;
  });
  addNewerLanguageTranspilationCheck("es7", function() {
    return evalCheck("2 ** 2 \x3d\x3d 4");
  });
  addNewerLanguageTranspilationCheck("es8", function() {
    return evalCheck("async () \x3d\x3e 1, true");
  });
  return requiresTranspilation;
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:" "};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "" && ch <= "�";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(tokenizerRegExp);
  var tokens2 = str2.toLowerCase().match(tokenizerRegExp);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0; i < count; i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.intAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0; i < length; i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\x3c"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  var sb = ['"'];
  for (var i = 0; i < s.length; i++) {
    var ch = s.charAt(i);
    var cc = ch.charCodeAt(0);
    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
  }
  sb.push('"');
  return sb.join("");
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0; i < str.length; i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(str, substr) {
  return str.replace(substr, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.replaceAll = function(s, ss, replacement) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, replacement.replace(/\$/g, "$$$$"));
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(string, length) {
  return string.repeat(length);
} : function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0; order == 0 && subIdx < subCount; subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    do {
      var v1Comp = /(\d*)(\D*)(.*)/.exec(v1Sub) || ["", "", "", ""];
      var v2Comp = /(\d*)(\D*)(.*)/.exec(v2Sub) || ["", "", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
      v1Sub = v1Comp[3];
      v2Sub = v2Comp[3];
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0; i < str.length; ++i) {
    result = 31 * result + str.charCodeAt(i) >>> 0;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.lastComponent = function(str, separators) {
  if (!separators) {
    return str;
  } else {
    if (typeof separators == "string") {
      separators = [separators];
    }
  }
  var lastSeparatorIndex = -1;
  for (var i = 0; i < separators.length; i++) {
    if (separators[i] == "") {
      continue;
    }
    var currentSeparatorIndex = str.lastIndexOf(separators[i]);
    if (currentSeparatorIndex > lastSeparatorIndex) {
      lastSeparatorIndex = currentSeparatorIndex;
    }
  }
  if (lastSeparatorIndex == -1) {
    return str;
  }
  return str.slice(lastSeparatorIndex + 1);
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0; i < b.length + 1; i++) {
    v0[i] = i;
  }
  for (var i = 0; i < a.length; i++) {
    v1[0] = i + 1;
    for (var j = 0; j < b.length; j++) {
      var cost = Number(a[i] != b[j]);
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0; j < v0.length; j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex; i < arr.length; i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return Array.prototype.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex; i >= 0; i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  Array.prototype.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1; i >= 0; --i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.asserts.assert(f != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1; i >= 0; i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1; i >= 0; i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeLast = function(arr, obj) {
  var i = goog.array.lastIndexOf(arr, obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.join = function(var_args) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0; i < length; i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1; i < arguments.length; i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0; j < len2; j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return Array.prototype.slice.call(arr, start);
  } else {
    return Array.prototype.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  var compArr = new Array(arr.length);
  for (var i = 0; i < arr.length; i++) {
    compArr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(compArr, stableCompareFn);
  for (var i = 0; i < arr.length; i++) {
    arr[i] = compArr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1; i < arr.length; i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0; i < l; i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0; i < l; i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0; i < array.length; i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start; i < end; i += step) {
      array.push(i);
    }
  } else {
    for (var i = start; i > end; i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0; i < n; i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0; i < arguments.length; i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0; c < element.length; c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0; r < recurseResult.length; r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      Array.prototype.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        Array.prototype.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = Array.prototype.splice.call(arr, fromIndex, 1);
  Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  var minLen = arguments[0].length;
  for (var i = 1; i < arguments.length; i++) {
    if (arguments[i].length < minLen) {
      minLen = arguments[i].length;
    }
  }
  for (var i = 0; i < minLen; i++) {
    var value = [];
    for (var j = 0; j < arguments.length; j++) {
      value.push(arguments[j][i]);
    }
    result.push(value);
  }
  return result;
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1; i > 0; i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.array.concatMap = function(arr, f, opt_obj) {
  return goog.array.concat.apply([], goog.array.map(arr, f, opt_obj));
};
goog.provide("goog.object");
goog.object.is = function(v, v2) {
  if (v === v2) {
    return v !== 0 || 1 / v === 1 / v2;
  }
  return v !== v && v2 !== v2;
};
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1; i < keys.length; i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return obj !== null && key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (obj !== null && key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (obj !== null && key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (goog.isFunction(obj.clone)) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1; i < arguments.length; i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0; j < goog.object.PROTOTYPE_FIELDS_.length; j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0; i < argLength; i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0; i < argLength; i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.object.getAllPropertyNames = function(obj, opt_includeObjectPrototype, opt_includeFunctionPrototype) {
  if (!obj) {
    return [];
  }
  if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {
    return goog.object.getKeys(obj);
  }
  var visitedSet = {};
  var proto = obj;
  while (proto && (proto !== Object.prototype || !!opt_includeObjectPrototype) && (proto !== Function.prototype || !!opt_includeFunctionPrototype)) {
    var names = Object.getOwnPropertyNames(proto);
    for (var i = 0; i < names.length; i++) {
      visitedSet[names[i]] = true;
    }
    proto = Object.getPrototypeOf(proto);
  }
  return goog.object.getKeys(visitedSet);
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (col.getCount && typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (col.getValues && typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0; i < l; i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (col.getKeys && typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (col.getValues && typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0; i < l; i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (col.contains && typeof col.contains == "function") {
    return col.contains(val);
  }
  if (col.containsValue && typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (col.isEmpty && typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col);
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (col.clear && typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear(col);
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (col.forEach && typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0; i < l; i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0; i < l; i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0; i < l; i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0; i < l; i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0; i < l; i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0; i < l; i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0; i < l; i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.partialRight = function(fn, var_args) {
  var rightArgs = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.push.apply(newArgs, rightArgs);
    return fn.apply(this, newArgs);
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.equalTo = function(value, opt_useLooseComparison) {
  return function(other) {
    return opt_useLooseComparison ? value == other : value === other;
  };
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2; i >= 0; i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0; i < length; i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0; i < length; i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0; i < length; i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return !f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.functions.once = function(f) {
  var inner = f;
  return function() {
    if (inner) {
      var tmp = inner;
      inner = null;
      tmp();
    }
  };
};
goog.functions.debounce = function(f, interval, opt_scope) {
  var timeout = 0;
  return function(var_args) {
    goog.global.clearTimeout(timeout);
    var args = arguments;
    timeout = goog.global.setTimeout(function() {
      f.apply(opt_scope, args);
    }, interval);
  };
};
goog.functions.throttle = function(f, interval, opt_scope) {
  var timeout = 0;
  var shouldFire = false;
  var args = [];
  var handleTimeout = function() {
    timeout = 0;
    if (shouldFire) {
      shouldFire = false;
      fire();
    }
  };
  var fire = function() {
    timeout = goog.global.setTimeout(handleTimeout, interval);
    f.apply(opt_scope, args);
  };
  return function(var_args) {
    args = arguments;
    if (!timeout) {
      fire();
    } else {
      shouldFire = true;
    }
  };
};
goog.functions.rateLimit = function(f, interval, opt_scope) {
  var timeout = 0;
  var handleTimeout = function() {
    timeout = 0;
  };
  return function(var_args) {
    if (!timeout) {
      timeout = goog.global.setTimeout(handleTimeout, interval);
      f.apply(opt_scope, arguments);
    }
  };
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 0.000001);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  if (x > 0) {
    return 1;
  }
  if (x < 0) {
    return -1;
  }
  return x;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0; i < length1 + 1; i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0; j < length2 + 1; j++) {
    arr[0][j] = 0;
  }
  for (i = 1; i <= length1; i++) {
    for (j = 1; j <= length2; j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0);
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num);
};
goog.math.isNegativeZero = function(num) {
  return num == 0 && 1 / num < 0;
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num ? 1 : 0);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2e-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2e-15));
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
goog.iter.StopIteration = "StopIteration" in goog.global ? goog.global["StopIteration"] : {message:"StopIteration", stack:""};
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  return goog.iter.chainFromIterable(arguments);
};
goog.iter.chainFromIterable = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var val = iterator.next();
    if (f.call(opt_obj, val, undefined, iterator)) {
      return val;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable);
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2, opt_equalsFn) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  return goog.iter.every(pairs, function(pair) {
    return equalsFn(pair[0], pair[1]);
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return !arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1; i >= 0; i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return !!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return [this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return [];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt(opt_end) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return !goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map(sortedIndexIterator.next(), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map(sortedIndexIterator.next(), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0; i < argLength; i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll(opt_map);
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat();
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0; key = this.keys_[i]; i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0; i < keys.length; i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (version != selfObj.version_) {
      throw Error("The map has changed since the iterator was created");
    }
    if (i >= selfObj.keys_.length) {
      throw goog.iter.StopIteration;
    }
    var key = selfObj.keys_[i++];
    return opt_keys ? key : selfObj.map_[key];
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#([\\s\\S]*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_);
};
goog.uri.utils.decodeIfPossible_ = function(uri, opt_preserveReserved) {
  if (!uri) {
    return uri;
  }
  return opt_preserveReserved ? decodeURI(uri) : decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && goog.global.self && goog.global.self.location) {
    var protocol = goog.global.self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri), true);
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri), true);
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getOrigin = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], null, pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  goog.asserts.assert(uri.indexOf("#") < 0 && uri.indexOf("?") < 0, "goog.uri.utils: Fragment or query identifiers are not supported: [%s]", uri);
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.parseQueryData = function(encodedQuery, callback) {
  if (!encodedQuery) {
    return;
  }
  var pairs = encodedQuery.split("\x26");
  for (var i = 0; i < pairs.length; i++) {
    var indexOfEquals = pairs[i].indexOf("\x3d");
    var name = null;
    var value = null;
    if (indexOfEquals >= 0) {
      name = pairs[i].substring(0, indexOfEquals);
      value = pairs[i].substring(indexOfEquals + 1);
    } else {
      name = pairs[i];
    }
    callback(name, value ? goog.string.urlDecode(value) : "");
  }
};
goog.uri.utils.splitQueryData_ = function(uri) {
  var hashIndex = uri.indexOf("#");
  if (hashIndex < 0) {
    hashIndex = uri.length;
  }
  var questionIndex = uri.indexOf("?");
  var queryData;
  if (questionIndex < 0 || questionIndex > hashIndex) {
    questionIndex = hashIndex;
    queryData = "";
  } else {
    queryData = uri.substring(questionIndex + 1, hashIndex);
  }
  return [uri.substr(0, questionIndex), queryData, uri.substr(hashIndex)];
};
goog.uri.utils.joinQueryData_ = function(parts) {
  return parts[0] + (parts[1] ? "?" + parts[1] : "") + parts[2];
};
goog.uri.utils.appendQueryData_ = function(queryData, newData) {
  if (!newData) {
    return queryData;
  }
  return queryData ? queryData + "\x26" + newData : newData;
};
goog.uri.utils.appendQueryDataToUri_ = function(uri, queryData) {
  if (!queryData) {
    return uri;
  }
  var parts = goog.uri.utils.splitQueryData_(uri);
  parts[1] = goog.uri.utils.appendQueryData_(parts[1], queryData);
  return goog.uri.utils.joinQueryData_(parts);
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  goog.asserts.assertString(key);
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0; j < value.length; j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push(key + (value === "" ? "" : "\x3d" + goog.string.urlEncode(value)));
    }
  }
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  var params = [];
  for (var i = opt_startIndex || 0; i < keysAndValues.length; i += 2) {
    var key = keysAndValues[i];
    goog.uri.utils.appendKeyValuePairs_(key, keysAndValues[i + 1], params);
  }
  return params.join("\x26");
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var params = [];
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], params);
  }
  return params.join("\x26");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  var queryData = arguments.length == 2 ? goog.uri.utils.buildQueryData(arguments[1], 0) : goog.uri.utils.buildQueryData(arguments, 1);
  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  var queryData = goog.uri.utils.buildQueryDataFromMap(map);
  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var value = goog.isDefAndNotNull(opt_value) ? "\x3d" + goog.string.urlEncode(opt_value) : "";
  return goog.uri.utils.appendQueryDataToUri_(uri, key + value);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return -1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.setParamsFromMap = function(uri, params) {
  var parts = goog.uri.utils.splitQueryData_(uri);
  var queryData = parts[1];
  var buffer = [];
  if (queryData) {
    goog.array.forEach(queryData.split("\x26"), function(pair) {
      var indexOfEquals = pair.indexOf("\x3d");
      var name = indexOfEquals >= 0 ? pair.substr(0, indexOfEquals) : pair;
      if (!params.hasOwnProperty(name)) {
        buffer.push(pair);
      }
    });
  }
  parts[1] = goog.uri.utils.appendQueryData_(buffer.join("\x26"), goog.uri.utils.buildQueryDataFromMap(params));
  return goog.uri.utils.joinQueryData_(parts);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  this.scheme_ = "";
  this.userInfo_ = "";
  this.domain_ = "";
  this.port_ = null;
  this.path_ = "";
  this.fragment_ = "";
  this.isReadOnly_ = false;
  this.ignoreCase_ = false;
  this.queryData_;
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), ":");
  }
  var domain = this.getDomain();
  if (domain || scheme == "file") {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), "@");
    }
    out.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(domain)));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_, true));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getQueryData().clone());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme, true) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return !!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return !!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain, true) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return !!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath, true) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return !!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, values);
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName);
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return !!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return (!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0; pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val, opt_preserveReserved) {
  if (!val) {
    return "";
  }
  return opt_preserveReserved ? decodeURI(val.replace(/%25/g, "%2525")) : decodeURIComponent(val);
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra, opt_removeDoubleEncoding) {
  if (goog.isString(unescapedPart)) {
    var encoded = encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
    if (opt_removeDoubleEncoding) {
      encoded = goog.Uri.removeDoubleEncoding_(encoded);
    }
    return encoded;
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.removeDoubleEncoding_ = function(doubleEncodedString) {
  return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g, "%$1");
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.keyMap_ = null;
  this.count_ = null;
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var self = this;
      goog.uri.utils.parseQueryData(this.encodedQuery_, function(name, value) {
        self.add(goog.string.urlDecode(name), value);
      });
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0; i < keys.length; i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.forEach = function(f, opt_scope) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(values, key) {
    goog.array.forEach(values, function(value) {
      f.call(opt_scope, value, key, this);
    }, this);
  }, this);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0; i < keys.length; i++) {
    var val = vals[i];
    for (var j = 0; j < val.length; j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = this.keyMap_.getValues();
    for (var i = 0; i < values.length; i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ = goog.asserts.assertNumber(this.count_) + values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0; j < val.length; j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0; i < arguments.length; i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("goog.math.Integer");
goog.math.Integer = function(bits, sign) {
  this.bits_ = [];
  this.sign_ = sign;
  var top = true;
  for (var i = bits.length - 1; i >= 0; i--) {
    var val = bits[i] | 0;
    if (!top || val != sign) {
      this.bits_[i] = val;
      top = false;
    }
  }
};
goog.math.Integer.IntCache_ = {};
goog.math.Integer.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    var cachedObj = goog.math.Integer.IntCache_[value];
    if (cachedObj) {
      return cachedObj;
    }
  }
  var obj = new goog.math.Integer([value | 0], value < 0 ? -1 : 0);
  if (-128 <= value && value < 128) {
    goog.math.Integer.IntCache_[value] = obj;
  }
  return obj;
};
goog.math.Integer.fromNumber = function(value) {
  if (isNaN(value) || !isFinite(value)) {
    return goog.math.Integer.ZERO;
  } else {
    if (value < 0) {
      return goog.math.Integer.fromNumber(-value).negate();
    } else {
      var bits = [];
      var pow = 1;
      for (var i = 0; value >= pow; i++) {
        bits[i] = value / pow | 0;
        pow *= goog.math.Integer.TWO_PWR_32_DBL_;
      }
      return new goog.math.Integer(bits, 0);
    }
  }
};
goog.math.Integer.fromBits = function(bits) {
  var high = bits[bits.length - 1];
  return new goog.math.Integer(bits, high & 1 << 31 ? -1 : 0);
};
goog.math.Integer.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Integer.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character');
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Integer.ZERO;
  for (var i = 0; i < str.length; i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Integer.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Integer.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Integer.fromNumber(value));
    }
  }
  return result;
};
goog.math.Integer.TWO_PWR_32_DBL_ = (1 << 16) * (1 << 16);
goog.math.Integer.ZERO = goog.math.Integer.fromInt(0);
goog.math.Integer.ONE = goog.math.Integer.fromInt(1);
goog.math.Integer.TWO_PWR_24_ = goog.math.Integer.fromInt(1 << 24);
goog.math.Integer.prototype.toInt = function() {
  return this.bits_.length > 0 ? this.bits_[0] : this.sign_;
};
goog.math.Integer.prototype.toNumber = function() {
  if (this.isNegative()) {
    return -this.negate().toNumber();
  } else {
    var val = 0;
    var pow = 1;
    for (var i = 0; i < this.bits_.length; i++) {
      val += this.getBitsUnsigned(i) * pow;
      pow *= goog.math.Integer.TWO_PWR_32_DBL_;
    }
    return val;
  }
};
goog.math.Integer.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  } else {
    if (this.isNegative()) {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.divide(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Integer.prototype.getBits = function(index) {
  if (index < 0) {
    return 0;
  } else {
    if (index < this.bits_.length) {
      return this.bits_[index];
    } else {
      return this.sign_;
    }
  }
};
goog.math.Integer.prototype.getBitsUnsigned = function(index) {
  var val = this.getBits(index);
  return val >= 0 ? val : goog.math.Integer.TWO_PWR_32_DBL_ + val;
};
goog.math.Integer.prototype.getSign = function() {
  return this.sign_;
};
goog.math.Integer.prototype.isZero = function() {
  if (this.sign_ != 0) {
    return false;
  }
  for (var i = 0; i < this.bits_.length; i++) {
    if (this.bits_[i] != 0) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.isNegative = function() {
  return this.sign_ == -1;
};
goog.math.Integer.prototype.isOdd = function() {
  return this.bits_.length == 0 && this.sign_ == -1 || this.bits_.length > 0 && (this.bits_[0] & 1) != 0;
};
goog.math.Integer.prototype.equals = function(other) {
  if (this.sign_ != other.sign_) {
    return false;
  }
  var len = Math.max(this.bits_.length, other.bits_.length);
  for (var i = 0; i < len; i++) {
    if (this.getBits(i) != other.getBits(i)) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.notEquals = function(other) {
  return !this.equals(other);
};
goog.math.Integer.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Integer.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Integer.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Integer.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Integer.prototype.compare = function(other) {
  var diff = this.subtract(other);
  if (diff.isNegative()) {
    return -1;
  } else {
    if (diff.isZero()) {
      return 0;
    } else {
      return +1;
    }
  }
};
goog.math.Integer.prototype.shorten = function(numBits) {
  var arr_index = numBits - 1 >> 5;
  var bit_index = (numBits - 1) % 32;
  var bits = [];
  for (var i = 0; i < arr_index; i++) {
    bits[i] = this.getBits(i);
  }
  var sigBits = bit_index == 31 ? 4294967295 : (1 << bit_index + 1) - 1;
  var val = this.getBits(arr_index) & sigBits;
  if (val & 1 << bit_index) {
    val |= 4294967295 - sigBits;
    bits[arr_index] = val;
    return new goog.math.Integer(bits, -1);
  } else {
    bits[arr_index] = val;
    return new goog.math.Integer(bits, 0);
  }
};
goog.math.Integer.prototype.negate = function() {
  return this.not().add(goog.math.Integer.ONE);
};
goog.math.Integer.prototype.add = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  var carry = 0;
  for (var i = 0; i <= len; i++) {
    var a1 = this.getBits(i) >>> 16;
    var a0 = this.getBits(i) & 65535;
    var b1 = other.getBits(i) >>> 16;
    var b0 = other.getBits(i) & 65535;
    var c0 = carry + a0 + b0;
    var c1 = (c0 >>> 16) + a1 + b1;
    carry = c1 >>> 16;
    c0 &= 65535;
    c1 &= 65535;
    arr[i] = c1 << 16 | c0;
  }
  return goog.math.Integer.fromBits(arr);
};
goog.math.Integer.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Integer.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Integer.ZERO;
  } else {
    if (other.isZero()) {
      return goog.math.Integer.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Integer.TWO_PWR_24_) && other.lessThan(goog.math.Integer.TWO_PWR_24_)) {
    return goog.math.Integer.fromNumber(this.toNumber() * other.toNumber());
  }
  var len = this.bits_.length + other.bits_.length;
  var arr = [];
  for (var i = 0; i < 2 * len; i++) {
    arr[i] = 0;
  }
  for (var i = 0; i < this.bits_.length; i++) {
    for (var j = 0; j < other.bits_.length; j++) {
      var a1 = this.getBits(i) >>> 16;
      var a0 = this.getBits(i) & 65535;
      var b1 = other.getBits(j) >>> 16;
      var b0 = other.getBits(j) & 65535;
      arr[2 * i + 2 * j] += a0 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j);
      arr[2 * i + 2 * j + 1] += a1 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 1] += a0 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 2] += a1 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 2);
    }
  }
  for (var i = 0; i < len; i++) {
    arr[i] = arr[2 * i + 1] << 16 | arr[2 * i];
  }
  for (var i = len; i < 2 * len; i++) {
    arr[i] = 0;
  }
  return new goog.math.Integer(arr, 0);
};
goog.math.Integer.carry16_ = function(bits, index) {
  while ((bits[index] & 65535) != bits[index]) {
    bits[index + 1] += bits[index] >>> 16;
    bits[index] &= 65535;
    index++;
  }
};
goog.math.Integer.prototype.slowDivide_ = function(other) {
  if (this.isNegative() || other.isNegative()) {
    throw Error("slowDivide_ only works with positive integers.");
  }
  var twoPower = goog.math.Integer.ONE;
  var multiple = other;
  while (multiple.lessThanOrEqual(this)) {
    twoPower = twoPower.shiftLeft(1);
    multiple = multiple.shiftLeft(1);
  }
  var res = twoPower.shiftRight(1);
  var total = multiple.shiftRight(1);
  var total2;
  multiple = multiple.shiftRight(2);
  twoPower = twoPower.shiftRight(2);
  while (!multiple.isZero()) {
    total2 = total.add(multiple);
    if (total2.lessThanOrEqual(this)) {
      res = res.add(twoPower);
      total = total2;
    }
    multiple = multiple.shiftRight(1);
    twoPower = twoPower.shiftRight(1);
  }
  return res;
};
goog.math.Integer.prototype.divide = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Integer.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().divide(other.negate());
    } else {
      return this.negate().divide(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.divide(other.negate()).negate();
    }
  }
  if (this.bits_.length > 30) {
    return this.slowDivide_(other);
  }
  var res = goog.math.Integer.ZERO;
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Integer.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Integer.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Integer.ONE;
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Integer.prototype.modulo = function(other) {
  return this.subtract(this.divide(other).multiply(other));
};
goog.math.Integer.prototype.not = function() {
  var len = this.bits_.length;
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = ~this.bits_[i];
  }
  return new goog.math.Integer(arr, ~this.sign_);
};
goog.math.Integer.prototype.and = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) & other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ & other.sign_);
};
goog.math.Integer.prototype.or = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) | other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ | other.sign_);
};
goog.math.Integer.prototype.xor = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) ^ other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ ^ other.sign_);
};
goog.math.Integer.prototype.shiftLeft = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length + arr_delta + (bit_delta > 0 ? 1 : 0);
  var arr = [];
  for (var i = 0; i < len; i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i - arr_delta) << bit_delta | this.getBits(i - arr_delta - 1) >>> 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i - arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.math.Integer.prototype.shiftRight = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length - arr_delta;
  var arr = [];
  for (var i = 0; i < len; i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i + arr_delta) >>> bit_delta | this.getBits(i + arr_delta + 1) << 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i + arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += String(a1);
  if (opt_a2 != null) {
    for (var i = 1; i < arguments.length; i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.objectProperty = function(prop, object) {
  return prop;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.reflect.cache = function(cacheObj, key, valueFn, opt_keyFn) {
  var storedKey = opt_keyFn ? opt_keyFn(key) : key;
  if (Object.prototype.hasOwnProperty.call(cacheObj, storedKey)) {
    return cacheObj[storedKey];
  }
  return cacheObj[storedKey] = valueFn(key);
};
goog.provide("goog.math.Long");
goog.require("goog.asserts");
goog.require("goog.reflect");
goog.math.Long = function(low, high) {
  this.low_ = low | 0;
  this.high_ = high | 0;
};
goog.math.Long.IntCache_ = {};
goog.math.Long.valueCache_ = {};
goog.math.Long.getCachedIntValue_ = function(value) {
  return goog.reflect.cache(goog.math.Long.IntCache_, value, function(val) {
    return new goog.math.Long(val, val < 0 ? -1 : 0);
  });
};
goog.math.Long.MAX_VALUE_FOR_RADIX_ = ["", "", "111111111111111111111111111111111111111111111111111111111111111", "2021110011022210012102010021220101220221", "13333333333333333333333333333333", "1104332401304422434310311212", "1540241003031030222122211", "22341010611245052052300", "777777777777777777777", "67404283172107811827", "9223372036854775807", "1728002635214590697", "41a792678515120367", "10b269549075433c37", "4340724c6c71dc7a7", "160e2ad3246366807", "7fffffffffffffff", "33d3d8307b214008", 
"16agh595df825fa7", "ba643dci0ffeehh", "5cbfjia3fh26ja7", "2heiciiie82dh97", "1adaibb21dckfa7", "i6k448cf4192c2", "acd772jnc9l0l7", "64ie1focnn5g77", "3igoecjbmca687", "27c48l5b37oaop", "1bk39f3ah3dmq7", "q1se8f0m04isb", "hajppbc1fc207", "bm03i95hia437", "7vvvvvvvvvvvv", "5hg4ck9jd4u37", "3tdtk1v8j6tpp", "2pijmikexrxp7", "1y2p0ij32e8e7"];
goog.math.Long.MIN_VALUE_FOR_RADIX_ = ["", "", "-1000000000000000000000000000000000000000000000000000000000000000", "-2021110011022210012102010021220101220222", "-20000000000000000000000000000000", "-1104332401304422434310311213", "-1540241003031030222122212", "-22341010611245052052301", "-1000000000000000000000", "-67404283172107811828", "-9223372036854775808", "-1728002635214590698", "-41a792678515120368", "-10b269549075433c38", "-4340724c6c71dc7a8", "-160e2ad3246366808", "-8000000000000000", "-33d3d8307b214009", 
"-16agh595df825fa8", "-ba643dci0ffeehi", "-5cbfjia3fh26ja8", "-2heiciiie82dh98", "-1adaibb21dckfa8", "-i6k448cf4192c3", "-acd772jnc9l0l8", "-64ie1focnn5g78", "-3igoecjbmca688", "-27c48l5b37oaoq", "-1bk39f3ah3dmq8", "-q1se8f0m04isc", "-hajppbc1fc208", "-bm03i95hia438", "-8000000000000", "-5hg4ck9jd4u38", "-3tdtk1v8j6tpq", "-2pijmikexrxp8", "-1y2p0ij32e8e8"];
goog.math.Long.fromInt = function(value) {
  var intValue = value | 0;
  goog.asserts.assert(value === intValue, "value should be a 32-bit integer");
  if (-128 <= intValue && intValue < 128) {
    return goog.math.Long.getCachedIntValue_(intValue);
  } else {
    return new goog.math.Long(intValue, intValue < 0 ? -1 : 0);
  }
};
goog.math.Long.fromNumber = function(value) {
  if (isNaN(value)) {
    return goog.math.Long.getZero();
  } else {
    if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.getMinValue();
    } else {
      if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
        return goog.math.Long.getMaxValue();
      } else {
        if (value < 0) {
          return goog.math.Long.fromNumber(-value).negate();
        } else {
          return new goog.math.Long(value % goog.math.Long.TWO_PWR_32_DBL_ | 0, value / goog.math.Long.TWO_PWR_32_DBL_ | 0);
        }
      }
    }
  }
};
goog.math.Long.fromBits = function(lowBits, highBits) {
  return new goog.math.Long(lowBits, highBits);
};
goog.math.Long.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Long.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Long.getZero();
  for (var i = 0; i < str.length; i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Long.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Long.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Long.fromNumber(value));
    }
  }
  return result;
};
goog.math.Long.isStringInRange = function(str, opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  var extremeValue = str.charAt(0) == "-" ? goog.math.Long.MIN_VALUE_FOR_RADIX_[radix] : goog.math.Long.MAX_VALUE_FOR_RADIX_[radix];
  if (str.length < extremeValue.length) {
    return true;
  } else {
    if (str.length == extremeValue.length && str <= extremeValue) {
      return true;
    } else {
      return false;
    }
  }
};
goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
goog.math.Long.TWO_PWR_32_DBL_ = goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_64_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
goog.math.Long.TWO_PWR_63_DBL_ = goog.math.Long.TWO_PWR_64_DBL_ / 2;
goog.math.Long.getZero = function() {
  return goog.math.Long.getCachedIntValue_(0);
};
goog.math.Long.getOne = function() {
  return goog.math.Long.getCachedIntValue_(1);
};
goog.math.Long.getNegOne = function() {
  return goog.math.Long.getCachedIntValue_(-1);
};
goog.math.Long.getMaxValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MAX_VALUE, function() {
    return goog.math.Long.fromBits(4294967295 | 0, 2147483647 | 0);
  });
};
goog.math.Long.getMinValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MIN_VALUE, function() {
    return goog.math.Long.fromBits(0, 2147483648 | 0);
  });
};
goog.math.Long.getTwoPwr24 = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.TWO_PWR_24, function() {
    return goog.math.Long.fromInt(1 << 24);
  });
};
goog.math.Long.prototype.toInt = function() {
  return this.low_;
};
goog.math.Long.prototype.toNumber = function() {
  return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
};
goog.math.Long.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  }
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      var radixLong = goog.math.Long.fromNumber(radix);
      var div = this.div(radixLong);
      var rem = div.multiply(radixLong).subtract(this);
      return div.toString(radix) + rem.toInt().toString(radix);
    } else {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.div(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Long.prototype.getHighBits = function() {
  return this.high_;
};
goog.math.Long.prototype.getLowBits = function() {
  return this.low_;
};
goog.math.Long.prototype.getLowBitsUnsigned = function() {
  return this.low_ >= 0 ? this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
};
goog.math.Long.prototype.getNumBitsAbs = function() {
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      return 64;
    } else {
      return this.negate().getNumBitsAbs();
    }
  } else {
    var val = this.high_ != 0 ? this.high_ : this.low_;
    for (var bit = 31; bit > 0; bit--) {
      if ((val & 1 << bit) != 0) {
        break;
      }
    }
    return this.high_ != 0 ? bit + 33 : bit + 1;
  }
};
goog.math.Long.prototype.isZero = function() {
  return this.high_ == 0 && this.low_ == 0;
};
goog.math.Long.prototype.isNegative = function() {
  return this.high_ < 0;
};
goog.math.Long.prototype.isOdd = function() {
  return (this.low_ & 1) == 1;
};
goog.math.Long.prototype.equals = function(other) {
  return this.high_ == other.high_ && this.low_ == other.low_;
};
goog.math.Long.prototype.notEquals = function(other) {
  return this.high_ != other.high_ || this.low_ != other.low_;
};
goog.math.Long.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Long.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Long.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Long.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Long.prototype.compare = function(other) {
  if (this.equals(other)) {
    return 0;
  }
  var thisNeg = this.isNegative();
  var otherNeg = other.isNegative();
  if (thisNeg && !otherNeg) {
    return -1;
  }
  if (!thisNeg && otherNeg) {
    return 1;
  }
  if (this.subtract(other).isNegative()) {
    return -1;
  } else {
    return 1;
  }
};
goog.math.Long.prototype.negate = function() {
  if (this.equals(goog.math.Long.getMinValue())) {
    return goog.math.Long.getMinValue();
  } else {
    return this.not().add(goog.math.Long.getOne());
  }
};
goog.math.Long.prototype.add = function(other) {
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 + b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 + b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 + b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 + b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Long.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Long.getZero();
  } else {
    if (other.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    return other.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return this.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Long.getTwoPwr24()) && other.lessThan(goog.math.Long.getTwoPwr24())) {
    return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
  }
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 * b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 * b00;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c16 += a00 * b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 * b00;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a16 * b16;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a00 * b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.div = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    if (other.equals(goog.math.Long.getOne()) || other.equals(goog.math.Long.getNegOne())) {
      return goog.math.Long.getMinValue();
    } else {
      if (other.equals(goog.math.Long.getMinValue())) {
        return goog.math.Long.getOne();
      } else {
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.getZero())) {
          return other.isNegative() ? goog.math.Long.getOne() : goog.math.Long.getNegOne();
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    }
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().div(other.negate());
    } else {
      return this.negate().div(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
  }
  var res = goog.math.Long.getZero();
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Long.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Long.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Long.getOne();
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Long.prototype.modulo = function(other) {
  return this.subtract(this.div(other).multiply(other));
};
goog.math.Long.prototype.not = function() {
  return goog.math.Long.fromBits(~this.low_, ~this.high_);
};
goog.math.Long.prototype.and = function(other) {
  return goog.math.Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);
};
goog.math.Long.prototype.or = function(other) {
  return goog.math.Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);
};
goog.math.Long.prototype.xor = function(other) {
  return goog.math.Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
};
goog.math.Long.prototype.shiftLeft = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var low = this.low_;
    if (numBits < 32) {
      var high = this.high_;
      return goog.math.Long.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);
    } else {
      return goog.math.Long.fromBits(0, low << numBits - 32);
    }
  }
};
goog.math.Long.prototype.shiftRight = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);
    } else {
      return goog.math.Long.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);
    }
  }
};
goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);
    } else {
      if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> numBits - 32, 0);
      }
    }
  }
};
goog.math.Long.ValueCacheId_ = {MAX_VALUE:1, MIN_VALUE:2, TWO_PWR_24:6};
goog.provide("cljs.core");
goog.require("goog.math.Long");
goog.require("goog.math.Integer");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.Uri");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.10.439";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_unchecked_arrays_STAR_ = false;
cljs.core._STAR_warn_on_infer_STAR_ = false;
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.PROTOCOL_SENTINEL !== "undefined") {
} else {
  cljs.core.PROTOCOL_SENTINEL = {};
}
cljs.core.MODULE_URIS = null;
cljs.core.MODULE_INFOS = null;
goog.define("cljs.core._STAR_target_STAR_", "default");
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = null;
}
cljs.core._STAR_exec_tap_fn_STAR_ = function cljs$core$_STAR_exec_tap_fn_STAR_(f) {
  var and__4036__auto__ = typeof setTimeout !== "undefined";
  if (and__4036__auto__) {
    var and__4036__auto____$1 = setTimeout(f, 0);
    if (cljs.core.truth_(and__4036__auto____$1)) {
      return true;
    } else {
      return and__4036__auto____$1;
    }
  } else {
    return and__4036__auto__;
  }
};
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = null;
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_namespace_maps_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core._STAR_print_fn_bodies_STAR_ = false;
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core.set_print_fn_BANG_(function() {
    var xs = arguments;
    return console.log.apply(console, goog.array.clone(xs));
  });
  cljs.core.set_print_err_fn_BANG_(function() {
    var xs = arguments;
    return console.error.apply(console, goog.array.clone(xs));
  });
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return typeof x === "string" && 1 === x.length;
};
cljs.core.any_QMARK_ = function cljs$core$any_QMARK_(x) {
  return true;
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core._STAR_command_line_args_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4036__auto__ = ty;
    if (cljs.core.truth_(and__4036__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4036__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__5455__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__5455__auto__)) {
    var s = temp__5455__auto__;
    return s;
  } else {
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function cljs$core$system_time() {
  if (typeof performance !== "undefined" && !(performance.now == null)) {
    return performance.now();
  } else {
    if (typeof process !== "undefined" && !(process.hrtime == null)) {
      var t = process.hrtime();
      return (t[0] * 1.0E9 + t[1]) / 1000000.0;
    } else {
      return (new Date).getTime();
    }
  }
};
cljs.core.make_array = function cljs$core$make_array(var_args) {
  var G__1953 = arguments.length;
  switch(G__1953) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___1955 = arguments.length;
      var i__4642__auto___1956 = 0;
      while (true) {
        if (i__4642__auto___1956 < len__4641__auto___1955) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___1956]);
          var G__1957 = i__4642__auto___1956 + 1;
          i__4642__auto___1956 = G__1957;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic = function(type, size, more_sizes) {
  var dims = more_sizes;
  var dimarray = new Array(size);
  var n__4518__auto___1958 = dimarray.length;
  var i_1959 = 0;
  while (true) {
    if (i_1959 < n__4518__auto___1958) {
      dimarray[i_1959] = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.make_array, null, dims);
      var G__1960 = i_1959 + 1;
      i_1959 = G__1960;
      continue;
    } else {
    }
    break;
  }
  return dimarray;
};
cljs.core.make_array.cljs$lang$applyTo = function(seq1950) {
  var G__1951 = cljs.core.first(seq1950);
  var seq1950__$1 = cljs.core.next(seq1950);
  var G__1952 = cljs.core.first(seq1950__$1);
  var seq1950__$2 = cljs.core.next(seq1950__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1951, G__1952, seq1950__$2);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4518__auto___1961 = len;
  var i_1962 = 0;
  while (true) {
    if (i_1962 < n__4518__auto___1961) {
      new_arr[i_1962] = arr[i_1962];
      var G__1963 = i_1962 + 1;
      i_1962 = G__1963;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__1964 = i + 1;
      i = G__1964;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.maybe_warn = function cljs$core$maybe_warn(e) {
  if (cljs.core.truth_(cljs.core._STAR_print_err_fn_STAR_)) {
    return cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1(e) : cljs.core._STAR_print_err_fn_STAR_.call(null, e);
  } else {
    return null;
  }
};
cljs.core.checked_aget = function cljs$core$checked_aget(var_args) {
  var G__1969 = arguments.length;
  switch(G__1969) {
    case 2:
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___1972 = arguments.length;
      var i__4642__auto___1973 = 0;
      while (true) {
        if (i__4642__auto___1973 < len__4641__auto___1972) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___1973]);
          var G__1974 = i__4642__auto___1973 + 1;
          i__4642__auto___1973 = G__1974;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  try {
    if (cljs.core.truth_(function() {
      var or__4047__auto__ = cljs.core.array_QMARK_(array);
      if (or__4047__auto__) {
        return or__4047__auto__;
      } else {
        return goog.isArrayLike(array);
      }
    }())) {
    } else {
      throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
    }
    if (typeof idx === "number") {
    } else {
      throw new Error("Assert failed: (number? idx)");
    }
    if (!(idx < 0)) {
    } else {
      throw new Error("Assert failed: (not (neg? idx))");
    }
    if (idx < array.length) {
    } else {
      throw new Error("Assert failed: (\x3c idx (alength array))");
    }
  } catch (e1970) {
    var e_1975 = e1970;
    cljs.core.maybe_warn(e_1975);
  }
  return array[idx];
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget, cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array, idx), idxs);
};
cljs.core.checked_aget.cljs$lang$applyTo = function(seq1966) {
  var G__1967 = cljs.core.first(seq1966);
  var seq1966__$1 = cljs.core.next(seq1966);
  var G__1968 = cljs.core.first(seq1966__$1);
  var seq1966__$2 = cljs.core.next(seq1966__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1967, G__1968, seq1966__$2);
};
cljs.core.checked_aget.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset = function cljs$core$checked_aset(var_args) {
  var G__1981 = arguments.length;
  switch(G__1981) {
    case 3:
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___1984 = arguments.length;
      var i__4642__auto___1985 = 0;
      while (true) {
        if (i__4642__auto___1985 < len__4641__auto___1984) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___1985]);
          var G__1986 = i__4642__auto___1985 + 1;
          i__4642__auto___1985 = G__1986;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(3), 0, null);
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4663__auto__);
  }
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  try {
    if (cljs.core.truth_(function() {
      var or__4047__auto__ = cljs.core.array_QMARK_(array);
      if (or__4047__auto__) {
        return or__4047__auto__;
      } else {
        return goog.isArrayLike(array);
      }
    }())) {
    } else {
      throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
    }
    if (typeof idx === "number") {
    } else {
      throw new Error("Assert failed: (number? idx)");
    }
    if (!(idx < 0)) {
    } else {
      throw new Error("Assert failed: (not (neg? idx))");
    }
    if (idx < array.length) {
    } else {
      throw new Error("Assert failed: (\x3c idx (alength array))");
    }
  } catch (e1982) {
    var e_1987 = e1982;
    cljs.core.maybe_warn(e_1987);
  }
  return array[idx] = val;
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset, cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array, idx), idx2, idxv);
};
cljs.core.checked_aset.cljs$lang$applyTo = function(seq1977) {
  var G__1978 = cljs.core.first(seq1977);
  var seq1977__$1 = cljs.core.next(seq1977);
  var G__1979 = cljs.core.first(seq1977__$1);
  var seq1977__$2 = cljs.core.next(seq1977__$1);
  var G__1980 = cljs.core.first(seq1977__$2);
  var seq1977__$3 = cljs.core.next(seq1977__$2);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1978, G__1979, G__1980, seq1977__$3);
};
cljs.core.checked_aset.cljs$lang$maxFixedArity = 3;
cljs.core.checked_aget_SINGLEQUOTE_ = function cljs$core$checked_aget_SINGLEQUOTE_(var_args) {
  var G__1992 = arguments.length;
  switch(G__1992) {
    case 2:
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___1994 = arguments.length;
      var i__4642__auto___1995 = 0;
      while (true) {
        if (i__4642__auto___1995 < len__4641__auto___1994) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___1995]);
          var G__1996 = i__4642__auto___1995 + 1;
          i__4642__auto___1995 = G__1996;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  if (cljs.core.truth_(function() {
    var or__4047__auto__ = cljs.core.array_QMARK_(array);
    if (or__4047__auto__) {
      return or__4047__auto__;
    } else {
      return goog.isArrayLike(array);
    }
  }())) {
  } else {
    throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
  }
  if (typeof idx === "number") {
  } else {
    throw new Error("Assert failed: (number? idx)");
  }
  if (!(idx < 0)) {
  } else {
    throw new Error("Assert failed: (not (neg? idx))");
  }
  if (idx < array.length) {
  } else {
    throw new Error("Assert failed: (\x3c idx (alength array))");
  }
  return array[idx];
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget_SINGLEQUOTE_, cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array, idx), idxs);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$applyTo = function(seq1989) {
  var G__1990 = cljs.core.first(seq1989);
  var seq1989__$1 = cljs.core.next(seq1989);
  var G__1991 = cljs.core.first(seq1989__$1);
  var seq1989__$2 = cljs.core.next(seq1989__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1990, G__1991, seq1989__$2);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset_SINGLEQUOTE_ = function cljs$core$checked_aset_SINGLEQUOTE_(var_args) {
  var G__2002 = arguments.length;
  switch(G__2002) {
    case 3:
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2004 = arguments.length;
      var i__4642__auto___2005 = 0;
      while (true) {
        if (i__4642__auto___2005 < len__4641__auto___2004) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2005]);
          var G__2006 = i__4642__auto___2005 + 1;
          i__4642__auto___2005 = G__2006;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(3), 0, null);
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4663__auto__);
  }
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  if (cljs.core.truth_(function() {
    var or__4047__auto__ = cljs.core.array_QMARK_(array);
    if (or__4047__auto__) {
      return or__4047__auto__;
    } else {
      return goog.isArrayLike(array);
    }
  }())) {
  } else {
    throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
  }
  if (typeof idx === "number") {
  } else {
    throw new Error("Assert failed: (number? idx)");
  }
  if (!(idx < 0)) {
  } else {
    throw new Error("Assert failed: (not (neg? idx))");
  }
  if (idx < array.length) {
  } else {
    throw new Error("Assert failed: (\x3c idx (alength array))");
  }
  return array[idx] = val;
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset_SINGLEQUOTE_, cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array, idx), idx2, idxv);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$applyTo = function(seq1998) {
  var G__1999 = cljs.core.first(seq1998);
  var seq1998__$1 = cljs.core.next(seq1998);
  var G__2000 = cljs.core.first(seq1998__$1);
  var seq1998__$2 = cljs.core.next(seq1998__$1);
  var G__2001 = cljs.core.first(seq1998__$2);
  var seq1998__$3 = cljs.core.next(seq1998__$2);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1999, G__2000, G__2001, seq1998__$3);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$maxFixedArity = 3;
cljs.core.aget = function cljs$core$aget(var_args) {
  var G__2011 = arguments.length;
  switch(G__2011) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2013 = arguments.length;
      var i__4642__auto___2014 = 0;
      while (true) {
        if (i__4642__auto___2014 < len__4641__auto___2013) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2014]);
          var G__2015 = i__4642__auto___2014 + 1;
          i__4642__auto___2014 = G__2015;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  return array[idx];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.aget, array[idx], idxs);
};
cljs.core.aget.cljs$lang$applyTo = function(seq2008) {
  var G__2009 = cljs.core.first(seq2008);
  var seq2008__$1 = cljs.core.next(seq2008);
  var G__2010 = cljs.core.first(seq2008__$1);
  var seq2008__$2 = cljs.core.next(seq2008__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2009, G__2010, seq2008__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset(var_args) {
  var G__2021 = arguments.length;
  switch(G__2021) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2023 = arguments.length;
      var i__4642__auto___2024 = 0;
      while (true) {
        if (i__4642__auto___2024 < len__4641__auto___2023) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2024]);
          var G__2025 = i__4642__auto___2024 + 1;
          i__4642__auto___2024 = G__2025;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(3), 0, null);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4663__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  return array[idx] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.aset, array[idx], idx2, idxv);
};
cljs.core.aset.cljs$lang$applyTo = function(seq2017) {
  var G__2018 = cljs.core.first(seq2017);
  var seq2017__$1 = cljs.core.next(seq2017);
  var G__2019 = cljs.core.first(seq2017__$1);
  var seq2017__$2 = cljs.core.next(seq2017__$1);
  var G__2020 = cljs.core.first(seq2017__$2);
  var seq2017__$3 = cljs.core.next(seq2017__$2);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2018, G__2019, G__2020, seq2017__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array(var_args) {
  var G__2027 = arguments.length;
  switch(G__2027) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, x) {
    a.push(x);
    return a;
  }, [], aseq);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___2032 = arguments.length;
  var i__4642__auto___2033 = 0;
  while (true) {
    if (i__4642__auto___2033 < len__4641__auto___2032) {
      args__4647__auto__.push(arguments[i__4642__auto___2033]);
      var G__2034 = i__4642__auto___2033 + 1;
      i__4642__auto___2033 = G__2034;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 2 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(2), 0, null) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4648__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq2029) {
  var G__2030 = cljs.core.first(seq2029);
  var seq2029__$1 = cljs.core.next(seq2029);
  var G__2031 = cljs.core.first(seq2029__$1);
  var seq2029__$2 = cljs.core.next(seq2029__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2030, G__2031, seq2029__$2);
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
cljs.core._invoke = function cljs$core$_invoke(var_args) {
  var G__2036 = arguments.length;
  switch(G__2036) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._invoke[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._invoke[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4348__auto__.call(null, this$, a);
    } else {
      var m__4348__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4348__auto____$1.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._invoke[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4348__auto__.call(null, this$, a, b);
    } else {
      var m__4348__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4348__auto____$1.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._invoke[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4348__auto__.call(null, this$, a, b, c);
    } else {
      var m__4348__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4348__auto____$1.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._invoke[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4348__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__4348__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4348__auto____$1.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._invoke[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4348__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__4348__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$6 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4348__auto____$1.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._invoke[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4348__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__4348__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$7 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4348__auto____$1.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._invoke[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$8 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4348__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__4348__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$8 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4348__auto____$1.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._invoke[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$9 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4348__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__4348__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$9 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4348__auto____$1.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._invoke[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$10 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4348__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__4348__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$10 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4348__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._invoke[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$11 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4348__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__4348__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$11 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4348__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._invoke[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$12 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4348__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__4348__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$12 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4348__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._invoke[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$13 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4348__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__4348__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$13 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4348__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._invoke[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$14 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4348__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__4348__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$14 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4348__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._invoke[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$15 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4348__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__4348__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$15 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4348__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._invoke[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$16 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4348__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__4348__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$16 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4348__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._invoke[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$17 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4348__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__4348__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$17 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4348__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._invoke[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$18 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4348__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__4348__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$18 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4348__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._invoke[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$19 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4348__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__4348__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$19 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4348__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._invoke[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$20 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4348__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__4348__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$20 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4348__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._invoke[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$21 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4348__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__4348__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$21 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4348__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._invoke[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$22 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4348__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__4348__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$22 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4348__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4347__auto__ = value == null ? null : value;
    var m__4348__auto__ = cljs.core._clone[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__4348__auto__.call(null, value);
    } else {
      var m__4348__auto____$1 = cljs.core._clone["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(value) : m__4348__auto____$1.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = function() {
};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._count[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto__.call(null, coll);
    } else {
      var m__4348__auto____$1 = cljs.core._count["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = function() {
};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._empty[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto__.call(null, coll);
    } else {
      var m__4348__auto____$1 = cljs.core._empty["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = function() {
};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._conj[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4348__auto__.call(null, coll, o);
    } else {
      var m__4348__auto____$1 = cljs.core._conj["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4348__auto____$1.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = function() {
};
cljs.core._nth = function cljs$core$_nth(var_args) {
  var G__2039 = arguments.length;
  switch(G__2039) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._nth[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4348__auto__.call(null, coll, n);
    } else {
      var m__4348__auto____$1 = cljs.core._nth["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4348__auto____$1.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._nth[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4348__auto__.call(null, coll, n, not_found);
    } else {
      var m__4348__auto____$1 = cljs.core._nth["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4348__auto____$1.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._first[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto__.call(null, coll);
    } else {
      var m__4348__auto____$1 = cljs.core._first["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._rest[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto__.call(null, coll);
    } else {
      var m__4348__auto____$1 = cljs.core._rest["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = function() {
};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._next[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto__.call(null, coll);
    } else {
      var m__4348__auto____$1 = cljs.core._next["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = function() {
};
cljs.core._lookup = function cljs$core$_lookup(var_args) {
  var G__2042 = arguments.length;
  switch(G__2042) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__4347__auto__ = o == null ? null : o;
    var m__4348__auto__ = cljs.core._lookup[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__4348__auto__.call(null, o, k);
    } else {
      var m__4348__auto____$1 = cljs.core._lookup["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(o, k) : m__4348__auto____$1.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__4347__auto__ = o == null ? null : o;
    var m__4348__auto__ = cljs.core._lookup[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4348__auto__.call(null, o, k, not_found);
    } else {
      var m__4348__auto____$1 = cljs.core._lookup["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4348__auto____$1.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4348__auto__.call(null, coll, k);
    } else {
      var m__4348__auto____$1 = cljs.core._contains_key_QMARK_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4348__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._assoc[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4348__auto__.call(null, coll, k, v);
    } else {
      var m__4348__auto____$1 = cljs.core._assoc["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4348__auto____$1.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IFind = function() {
};
cljs.core._find = function cljs$core$_find(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IFind$_find$arity$2 == null)) {
    return coll.cljs$core$IFind$_find$arity$2(coll, k);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._find[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4348__auto__.call(null, coll, k);
    } else {
      var m__4348__auto____$1 = cljs.core._find["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4348__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IFind.-find", coll);
      }
    }
  }
};
cljs.core.IMap = function() {
};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._dissoc[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4348__auto__.call(null, coll, k);
    } else {
      var m__4348__auto____$1 = cljs.core._dissoc["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4348__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = function() {
};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._key[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto__.call(null, coll);
    } else {
      var m__4348__auto____$1 = cljs.core._key["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._val[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto__.call(null, coll);
    } else {
      var m__4348__auto____$1 = cljs.core._val["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = function() {
};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._disjoin[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4348__auto__.call(null, coll, v);
    } else {
      var m__4348__auto____$1 = cljs.core._disjoin["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4348__auto____$1.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = function() {
};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._peek[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto__.call(null, coll);
    } else {
      var m__4348__auto____$1 = cljs.core._peek["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._pop[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto__.call(null, coll);
    } else {
      var m__4348__auto____$1 = cljs.core._pop["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = function() {
};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._assoc_n[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4348__auto__.call(null, coll, n, val);
    } else {
      var m__4348__auto____$1 = cljs.core._assoc_n["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4348__auto____$1.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = function() {
};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4347__auto__ = o == null ? null : o;
    var m__4348__auto__ = cljs.core._deref[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4348__auto__.call(null, o);
    } else {
      var m__4348__auto____$1 = cljs.core._deref["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4348__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = function() {
};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4347__auto__ = o == null ? null : o;
    var m__4348__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4348__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__4348__auto____$1 = cljs.core._deref_with_timeout["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4348__auto____$1.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = function() {
};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4347__auto__ = o == null ? null : o;
    var m__4348__auto__ = cljs.core._meta[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4348__auto__.call(null, o);
    } else {
      var m__4348__auto____$1 = cljs.core._meta["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4348__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = function() {
};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4347__auto__ = o == null ? null : o;
    var m__4348__auto__ = cljs.core._with_meta[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4348__auto__.call(null, o, meta);
    } else {
      var m__4348__auto____$1 = cljs.core._with_meta["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4348__auto____$1.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = function() {
};
cljs.core._reduce = function cljs$core$_reduce(var_args) {
  var G__2045 = arguments.length;
  switch(G__2045) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._reduce[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4348__auto__.call(null, coll, f);
    } else {
      var m__4348__auto____$1 = cljs.core._reduce["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4348__auto____$1.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._reduce[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4348__auto__.call(null, coll, f, start);
    } else {
      var m__4348__auto____$1 = cljs.core._reduce["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4348__auto____$1.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4348__auto__.call(null, coll, f, init);
    } else {
      var m__4348__auto____$1 = cljs.core._kv_reduce["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4348__auto____$1.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = function() {
};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4347__auto__ = o == null ? null : o;
    var m__4348__auto__ = cljs.core._equiv[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__4348__auto__.call(null, o, other);
    } else {
      var m__4348__auto____$1 = cljs.core._equiv["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(o, other) : m__4348__auto____$1.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = function() {
};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4347__auto__ = o == null ? null : o;
    var m__4348__auto__ = cljs.core._hash[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4348__auto__.call(null, o);
    } else {
      var m__4348__auto____$1 = cljs.core._hash["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4348__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = function() {
};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4347__auto__ = o == null ? null : o;
    var m__4348__auto__ = cljs.core._seq[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4348__auto__.call(null, o);
    } else {
      var m__4348__auto____$1 = cljs.core._seq["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4348__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._rseq[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto__.call(null, coll);
    } else {
      var m__4348__auto____$1 = cljs.core._rseq["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = function() {
};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4348__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__4348__auto____$1 = cljs.core._sorted_seq["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4348__auto____$1.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4348__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__4348__auto____$1 = cljs.core._sorted_seq_from["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4348__auto____$1.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._entry_key[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4348__auto__.call(null, coll, entry);
    } else {
      var m__4348__auto____$1 = cljs.core._entry_key["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4348__auto____$1.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._comparator[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto__.call(null, coll);
    } else {
      var m__4348__auto____$1 = cljs.core._comparator["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = function() {
};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4347__auto__ = writer == null ? null : writer;
    var m__4348__auto__ = cljs.core._write[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4348__auto__.call(null, writer, s);
    } else {
      var m__4348__auto____$1 = cljs.core._write["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4348__auto____$1.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4347__auto__ = writer == null ? null : writer;
    var m__4348__auto__ = cljs.core._flush[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__4348__auto__.call(null, writer);
    } else {
      var m__4348__auto____$1 = cljs.core._flush["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(writer) : m__4348__auto____$1.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = function() {
};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4347__auto__ = o == null ? null : o;
    var m__4348__auto__ = cljs.core._pr_writer[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4348__auto__.call(null, o, writer, opts);
    } else {
      var m__4348__auto____$1 = cljs.core._pr_writer["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4348__auto____$1.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = function() {
};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(x) {
  if (!(x == null) && !(x.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return x.cljs$core$IPending$_realized_QMARK_$arity$1(x);
  } else {
    var x__4347__auto__ = x == null ? null : x;
    var m__4348__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4348__auto__.call(null, x);
    } else {
      var m__4348__auto____$1 = cljs.core._realized_QMARK_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4348__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", x);
      }
    }
  }
};
cljs.core.IWatchable = function() {
};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._notify_watches[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4348__auto__.call(null, this$, oldval, newval);
    } else {
      var m__4348__auto____$1 = cljs.core._notify_watches["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4348__auto____$1.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._add_watch[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4348__auto__.call(null, this$, key, f);
    } else {
      var m__4348__auto____$1 = cljs.core._add_watch["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4348__auto____$1.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = cljs.core._remove_watch[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4348__auto__.call(null, this$, key);
    } else {
      var m__4348__auto____$1 = cljs.core._remove_watch["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4348__auto____$1.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = function() {
};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._as_transient[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto__.call(null, coll);
    } else {
      var m__4348__auto____$1 = cljs.core._as_transient["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = function() {
};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4347__auto__ = tcoll == null ? null : tcoll;
    var m__4348__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4348__auto__.call(null, tcoll, val);
    } else {
      var m__4348__auto____$1 = cljs.core._conj_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4348__auto____$1.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4347__auto__ = tcoll == null ? null : tcoll;
    var m__4348__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4348__auto__.call(null, tcoll);
    } else {
      var m__4348__auto____$1 = cljs.core._persistent_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4348__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = function() {
};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4347__auto__ = tcoll == null ? null : tcoll;
    var m__4348__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4348__auto__.call(null, tcoll, key, val);
    } else {
      var m__4348__auto____$1 = cljs.core._assoc_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4348__auto____$1.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = function() {
};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4347__auto__ = tcoll == null ? null : tcoll;
    var m__4348__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4348__auto__.call(null, tcoll, key);
    } else {
      var m__4348__auto____$1 = cljs.core._dissoc_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4348__auto____$1.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = function() {
};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4347__auto__ = tcoll == null ? null : tcoll;
    var m__4348__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4348__auto__.call(null, tcoll, n, val);
    } else {
      var m__4348__auto____$1 = cljs.core._assoc_n_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4348__auto____$1.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4347__auto__ = tcoll == null ? null : tcoll;
    var m__4348__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4348__auto__.call(null, tcoll);
    } else {
      var m__4348__auto____$1 = cljs.core._pop_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4348__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = function() {
};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4347__auto__ = tcoll == null ? null : tcoll;
    var m__4348__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4348__auto__.call(null, tcoll, v);
    } else {
      var m__4348__auto____$1 = cljs.core._disjoin_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4348__auto____$1.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = function() {
};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4347__auto__ = x == null ? null : x;
    var m__4348__auto__ = cljs.core._compare[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__4348__auto__.call(null, x, y);
    } else {
      var m__4348__auto____$1 = cljs.core._compare["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(x, y) : m__4348__auto____$1.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = function() {
};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._drop_first[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto__.call(null, coll);
    } else {
      var m__4348__auto____$1 = cljs.core._drop_first["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = function() {
};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._chunked_first[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto__.call(null, coll);
    } else {
      var m__4348__auto____$1 = cljs.core._chunked_first["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto__.call(null, coll);
    } else {
      var m__4348__auto____$1 = cljs.core._chunked_rest["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = function() {
};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._chunked_next[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto__.call(null, coll);
    } else {
      var m__4348__auto____$1 = cljs.core._chunked_next["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = function() {
};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4347__auto__ = x == null ? null : x;
    var m__4348__auto__ = cljs.core._name[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4348__auto__.call(null, x);
    } else {
      var m__4348__auto____$1 = cljs.core._name["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4348__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4347__auto__ = x == null ? null : x;
    var m__4348__auto__ = cljs.core._namespace[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4348__auto__.call(null, x);
    } else {
      var m__4348__auto____$1 = cljs.core._namespace["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4348__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4347__auto__ = o == null ? null : o;
    var m__4348__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4348__auto__.call(null, o, new_value);
    } else {
      var m__4348__auto____$1 = cljs.core._reset_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4348__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = function() {
};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_(var_args) {
  var G__2048 = arguments.length;
  switch(G__2048) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__4347__auto__ = o == null ? null : o;
    var m__4348__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__4348__auto__.call(null, o, f);
    } else {
      var m__4348__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(o, f) : m__4348__auto____$1.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__4347__auto__ = o == null ? null : o;
    var m__4348__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4348__auto__.call(null, o, f, a);
    } else {
      var m__4348__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4348__auto____$1.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__4347__auto__ = o == null ? null : o;
    var m__4348__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4348__auto__.call(null, o, f, a, b);
    } else {
      var m__4348__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4348__auto____$1.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__4347__auto__ = o == null ? null : o;
    var m__4348__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4348__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__4348__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4348__auto____$1.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4347__auto__ = o == null ? null : o;
    var m__4348__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4348__auto__.call(null, o, new_value);
    } else {
      var m__4348__auto____$1 = cljs.core._vreset_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4348__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = function() {
};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4347__auto__ = coll == null ? null : coll;
    var m__4348__auto__ = cljs.core._iterator[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto__.call(null, coll);
    } else {
      var m__4348__auto____$1 = cljs.core._iterator["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4348__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math !== "undefined" && typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  return h1__$6 ^ h1__$6 >>> 16;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__2050 = i + 2;
        var G__2051 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__2050;
        h1 = G__2051;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__2054 = i + 1;
          var G__2055 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__2054;
          hash = G__2055;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  goog.object.set(cljs.core.string_hash_cache, k, h);
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  if (k == null) {
    return 0;
  } else {
    var h = cljs.core.string_hash_cache[k];
    if (typeof h === "number") {
      return h;
    } else {
      return cljs.core.add_to_string_hash_cache(k);
    }
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null) ^ 0;
  } else {
    if (typeof o === "number") {
      if (cljs.core.truth_(isFinite(o))) {
        return Math.floor(o) % 2147483647;
      } else {
        var G__2059 = o;
        switch(G__2059) {
          case Infinity:
            return 2146435072;
            break;
          case -Infinity:
            return -1048576;
            break;
          default:
            return 2146959360;
        }
      }
    } else {
      if (o === true) {
        return 1231;
      } else {
        if (o === false) {
          return 1237;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf() ^ 0;
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o) ^ 0;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(c, x) {
  return x instanceof c;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4036__auto__ = cljs.core.not(a.ns);
      if (and__4036__auto__) {
        return b.ns;
      } else {
        return and__4036__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__2061 = a.ns;
            var G__2062 = b.ns;
            return goog.array.defaultCompare(G__2061, G__2062);
          }();
          if (0 === nsc) {
            var G__2063 = a.name;
            var G__2064 = b.name;
            return goog.array.defaultCompare(G__2063, G__2064);
          } else {
            return nsc;
          }
        }
      } else {
        var G__2065 = a.name;
        var G__2066 = b.name;
        return goog.array.defaultCompare(G__2065, G__2066);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__2068 = null;
  var G__2068__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym);
  };
  var G__2068__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__2068 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__2068__2.call(this, self__, coll);
      case 3:
        return G__2068__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2068.cljs$core$IFn$_invoke$arity$2 = G__2068__2;
  G__2068.cljs$core$IFn$_invoke$arity$3 = G__2068__3;
  return G__2068;
}();
cljs.core.Symbol.prototype.apply = function(self__, args2067) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args2067)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4159__auto__ = self__._hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol(var_args) {
  var G__2070 = arguments.length;
  switch(G__2070) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    var idx = name.indexOf("/");
    if (idx < 1) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    } else {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
    }
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns), "/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 6717441;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return ["#'", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.sym)].join("");
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this$__$1.sym, other.sym);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash_symbol(self__.sym);
};
cljs.core.Var.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.call = function() {
  var G__2115 = null;
  var G__2115__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2073 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2073.cljs$core$IFn$_invoke$arity$0 ? fexpr__2073.cljs$core$IFn$_invoke$arity$0() : fexpr__2073.call(null);
  };
  var G__2115__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2074 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2074.cljs$core$IFn$_invoke$arity$1 ? fexpr__2074.cljs$core$IFn$_invoke$arity$1(a) : fexpr__2074.call(null, a);
  };
  var G__2115__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2075 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2075.cljs$core$IFn$_invoke$arity$2 ? fexpr__2075.cljs$core$IFn$_invoke$arity$2(a, b) : fexpr__2075.call(null, a, b);
  };
  var G__2115__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2076 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2076.cljs$core$IFn$_invoke$arity$3 ? fexpr__2076.cljs$core$IFn$_invoke$arity$3(a, b, c) : fexpr__2076.call(null, a, b, c);
  };
  var G__2115__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2077 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2077.cljs$core$IFn$_invoke$arity$4 ? fexpr__2077.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : fexpr__2077.call(null, a, b, c, d);
  };
  var G__2115__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2078 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2078.cljs$core$IFn$_invoke$arity$5 ? fexpr__2078.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : fexpr__2078.call(null, a, b, c, d, e);
  };
  var G__2115__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2079 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2079.cljs$core$IFn$_invoke$arity$6 ? fexpr__2079.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : fexpr__2079.call(null, a, b, c, d, e, f);
  };
  var G__2115__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2080 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2080.cljs$core$IFn$_invoke$arity$7 ? fexpr__2080.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : fexpr__2080.call(null, a, b, c, d, e, f, g);
  };
  var G__2115__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2081 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2081.cljs$core$IFn$_invoke$arity$8 ? fexpr__2081.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : fexpr__2081.call(null, a, b, c, d, e, f, g, h);
  };
  var G__2115__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2082 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2082.cljs$core$IFn$_invoke$arity$9 ? fexpr__2082.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : fexpr__2082.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__2115__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2083 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2083.cljs$core$IFn$_invoke$arity$10 ? fexpr__2083.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : fexpr__2083.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__2115__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2084 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2084.cljs$core$IFn$_invoke$arity$11 ? fexpr__2084.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : fexpr__2084.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__2115__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2085 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2085.cljs$core$IFn$_invoke$arity$12 ? fexpr__2085.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : fexpr__2085.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__2115__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2086 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2086.cljs$core$IFn$_invoke$arity$13 ? fexpr__2086.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : fexpr__2086.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__2115__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2087 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2087.cljs$core$IFn$_invoke$arity$14 ? fexpr__2087.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : fexpr__2087.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__2115__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2088 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2088.cljs$core$IFn$_invoke$arity$15 ? fexpr__2088.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : fexpr__2088.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__2115__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2089 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2089.cljs$core$IFn$_invoke$arity$16 ? fexpr__2089.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : fexpr__2089.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__2115__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2090 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2090.cljs$core$IFn$_invoke$arity$17 ? fexpr__2090.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : fexpr__2090.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__2115__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2091 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2091.cljs$core$IFn$_invoke$arity$18 ? fexpr__2091.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : fexpr__2091.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__2115__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2092 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2092.cljs$core$IFn$_invoke$arity$19 ? fexpr__2092.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : fexpr__2092.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__2115__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2093 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2093.cljs$core$IFn$_invoke$arity$20 ? fexpr__2093.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : fexpr__2093.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__2115__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null), a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__2115 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__2115__1.call(this, self__);
      case 2:
        return G__2115__2.call(this, self__, a);
      case 3:
        return G__2115__3.call(this, self__, a, b);
      case 4:
        return G__2115__4.call(this, self__, a, b, c);
      case 5:
        return G__2115__5.call(this, self__, a, b, c, d);
      case 6:
        return G__2115__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__2115__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__2115__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__2115__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__2115__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__2115__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__2115__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__2115__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__2115__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__2115__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__2115__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__2115__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__2115__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__2115__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__2115__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__2115__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__2115__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2115.cljs$core$IFn$_invoke$arity$1 = G__2115__1;
  G__2115.cljs$core$IFn$_invoke$arity$2 = G__2115__2;
  G__2115.cljs$core$IFn$_invoke$arity$3 = G__2115__3;
  G__2115.cljs$core$IFn$_invoke$arity$4 = G__2115__4;
  G__2115.cljs$core$IFn$_invoke$arity$5 = G__2115__5;
  G__2115.cljs$core$IFn$_invoke$arity$6 = G__2115__6;
  G__2115.cljs$core$IFn$_invoke$arity$7 = G__2115__7;
  G__2115.cljs$core$IFn$_invoke$arity$8 = G__2115__8;
  G__2115.cljs$core$IFn$_invoke$arity$9 = G__2115__9;
  G__2115.cljs$core$IFn$_invoke$arity$10 = G__2115__10;
  G__2115.cljs$core$IFn$_invoke$arity$11 = G__2115__11;
  G__2115.cljs$core$IFn$_invoke$arity$12 = G__2115__12;
  G__2115.cljs$core$IFn$_invoke$arity$13 = G__2115__13;
  G__2115.cljs$core$IFn$_invoke$arity$14 = G__2115__14;
  G__2115.cljs$core$IFn$_invoke$arity$15 = G__2115__15;
  G__2115.cljs$core$IFn$_invoke$arity$16 = G__2115__16;
  G__2115.cljs$core$IFn$_invoke$arity$17 = G__2115__17;
  G__2115.cljs$core$IFn$_invoke$arity$18 = G__2115__18;
  G__2115.cljs$core$IFn$_invoke$arity$19 = G__2115__19;
  G__2115.cljs$core$IFn$_invoke$arity$20 = G__2115__20;
  G__2115.cljs$core$IFn$_invoke$arity$21 = G__2115__21;
  G__2115.cljs$core$IFn$_invoke$arity$22 = G__2115__22;
  return G__2115;
}();
cljs.core.Var.prototype.apply = function(self__, args2072) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args2072)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  var fexpr__2094 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2094.cljs$core$IFn$_invoke$arity$0 ? fexpr__2094.cljs$core$IFn$_invoke$arity$0() : fexpr__2094.call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var fexpr__2095 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2095.cljs$core$IFn$_invoke$arity$1 ? fexpr__2095.cljs$core$IFn$_invoke$arity$1(a) : fexpr__2095.call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var fexpr__2096 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2096.cljs$core$IFn$_invoke$arity$2 ? fexpr__2096.cljs$core$IFn$_invoke$arity$2(a, b) : fexpr__2096.call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var fexpr__2097 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2097.cljs$core$IFn$_invoke$arity$3 ? fexpr__2097.cljs$core$IFn$_invoke$arity$3(a, b, c) : fexpr__2097.call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var fexpr__2098 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2098.cljs$core$IFn$_invoke$arity$4 ? fexpr__2098.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : fexpr__2098.call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var fexpr__2099 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2099.cljs$core$IFn$_invoke$arity$5 ? fexpr__2099.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : fexpr__2099.call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var fexpr__2100 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2100.cljs$core$IFn$_invoke$arity$6 ? fexpr__2100.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : fexpr__2100.call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var fexpr__2101 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2101.cljs$core$IFn$_invoke$arity$7 ? fexpr__2101.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : fexpr__2101.call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var fexpr__2102 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2102.cljs$core$IFn$_invoke$arity$8 ? fexpr__2102.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : fexpr__2102.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var fexpr__2103 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2103.cljs$core$IFn$_invoke$arity$9 ? fexpr__2103.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : fexpr__2103.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var fexpr__2104 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2104.cljs$core$IFn$_invoke$arity$10 ? fexpr__2104.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : fexpr__2104.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var fexpr__2105 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2105.cljs$core$IFn$_invoke$arity$11 ? fexpr__2105.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : fexpr__2105.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var fexpr__2106 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2106.cljs$core$IFn$_invoke$arity$12 ? fexpr__2106.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : fexpr__2106.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var fexpr__2107 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2107.cljs$core$IFn$_invoke$arity$13 ? fexpr__2107.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : fexpr__2107.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var fexpr__2108 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2108.cljs$core$IFn$_invoke$arity$14 ? fexpr__2108.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : fexpr__2108.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var fexpr__2109 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2109.cljs$core$IFn$_invoke$arity$15 ? fexpr__2109.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : fexpr__2109.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var fexpr__2110 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2110.cljs$core$IFn$_invoke$arity$16 ? fexpr__2110.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : fexpr__2110.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var fexpr__2111 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2111.cljs$core$IFn$_invoke$arity$17 ? fexpr__2111.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : fexpr__2111.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var fexpr__2112 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2112.cljs$core$IFn$_invoke$arity$18 ? fexpr__2112.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : fexpr__2112.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var fexpr__2113 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2113.cljs$core$IFn$_invoke$arity$19 ? fexpr__2113.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : fexpr__2113.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var fexpr__2114 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2114.cljs$core$IFn$_invoke$arity$20 ? fexpr__2114.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : fexpr__2114.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null), a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 131072 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || cljs.core.PROTOCOL_SENTINEL === value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0, null);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0, null);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll), " is not ISeqable"].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return s.cljs$core$ISeq$_rest$arity$1(null);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_(var_args) {
  var G__2126 = arguments.length;
  switch(G__2126) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2128 = arguments.length;
      var i__4642__auto___2129 = 0;
      while (true) {
        if (i__4642__auto___2129 < len__4641__auto___2128) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2129]);
          var G__2130 = i__4642__auto___2129 + 1;
          i__4642__auto___2129 = G__2130;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__2131 = y;
        var G__2132 = cljs.core.first(more);
        var G__2133 = cljs.core.next(more);
        x = G__2131;
        y = G__2132;
        more = G__2133;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq2123) {
  var G__2124 = cljs.core.first(seq2123);
  var seq2123__$1 = cljs.core.next(seq2123);
  var G__2125 = cljs.core.first(seq2123__$1);
  var seq2123__$2 = cljs.core.next(seq2123__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2124, G__2125, seq2123__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq(self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__2134 = n + 1;
      var G__2135 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__2136 = cljs.core.next(coll__$1);
      n = G__2134;
      hash_code = G__2135;
      coll__$1 = G__2136;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__2137 = n + 1;
      var G__2138 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__2139 = cljs.core.next(coll__$1);
      n = G__2137;
      hash_code = G__2138;
      coll__$1 = G__2139;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
goog.object.set(cljs.core.ICounted, "null", true);
var G__2140_2143 = cljs.core._count;
var G__2141_2144 = "null";
var G__2142_2145 = function(G__2140_2143, G__2141_2144) {
  return function(_) {
    return 0;
  };
}(G__2140_2143, G__2141_2144);
goog.object.set(G__2140_2143, G__2141_2144, G__2142_2145);
Date.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__2146 = this$__$1.valueOf();
    var G__2147 = other.valueOf();
    return goog.array.defaultCompare(G__2146, G__2147);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(other)].join(""));
  }
};
cljs.core.Inst = function() {
};
cljs.core.inst_ms_STAR_ = function cljs$core$inst_ms_STAR_(inst) {
  if (!(inst == null) && !(inst.cljs$core$Inst$inst_ms_STAR_$arity$1 == null)) {
    return inst.cljs$core$Inst$inst_ms_STAR_$arity$1(inst);
  } else {
    var x__4347__auto__ = inst == null ? null : inst;
    var m__4348__auto__ = cljs.core.inst_ms_STAR_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__4348__auto__.call(null, inst);
    } else {
      var m__4348__auto____$1 = cljs.core.inst_ms_STAR_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(inst) : m__4348__auto____$1.call(null, inst);
      } else {
        throw cljs.core.missing_protocol("Inst.inst-ms*", inst);
      }
    }
  }
};
Date.prototype.cljs$core$Inst$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$Inst$inst_ms_STAR_$arity$1 = function(inst) {
  var inst__$1 = this;
  return inst__$1.getTime();
};
cljs.core.inst_ms = function cljs$core$inst_ms(inst) {
  return cljs.core.inst_ms_STAR_(inst);
};
cljs.core.inst_QMARK_ = function cljs$core$inst_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$Inst$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
  }
};
goog.object.set(cljs.core.IEquiv, "number", true);
var G__2149_2152 = cljs.core._equiv;
var G__2150_2153 = "number";
var G__2151_2154 = function(G__2149_2152, G__2150_2153) {
  return function(x, o) {
    return x === o;
  };
}(G__2149_2152, G__2150_2153);
goog.object.set(G__2149_2152, G__2150_2153, G__2151_2154);
goog.object.set(cljs.core.Fn, "function", true);
goog.object.set(cljs.core.IMeta, "function", true);
var G__2155_2158 = cljs.core._meta;
var G__2156_2159 = "function";
var G__2157_2160 = function(G__2155_2158, G__2156_2159) {
  return function(_) {
    return null;
  };
}(G__2155_2158, G__2156_2159);
goog.object.set(G__2155_2158, G__2156_2159, G__2157_2160);
goog.object.set(cljs.core.IHash, "_", true);
var G__2161_2164 = cljs.core._hash;
var G__2162_2165 = "_";
var G__2163_2166 = function(G__2161_2164, G__2162_2165) {
  return function(o) {
    return goog.getUid(o);
  };
}(G__2161_2164, G__2162_2165);
goog.object.set(G__2161_2164, G__2162_2165, G__2163_2166);
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref(x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce(var_args) {
  var G__2168 = arguments.length;
  switch(G__2168) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__2169 = val;
          var G__2170 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2169, G__2170) : f.call(null, G__2169, G__2170);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__2176 = nval;
          var G__2177 = n + 1;
          val = G__2176;
          n = G__2177;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__2171 = val__$1;
        var G__2172 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2171, G__2172) : f.call(null, G__2171, G__2172);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__2178 = nval;
        var G__2179 = n + 1;
        val__$1 = G__2178;
        n = G__2179;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__2173 = val__$1;
        var G__2174 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2173, G__2174) : f.call(null, G__2173, G__2174);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__2180 = nval;
        var G__2181 = n + 1;
        val__$1 = G__2180;
        n = G__2181;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce(var_args) {
  var G__2183 = arguments.length;
  switch(G__2183) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__2184 = val;
          var G__2185 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2184, G__2185) : f.call(null, G__2184, G__2185);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__2191 = nval;
          var G__2192 = n + 1;
          val = G__2191;
          n = G__2192;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__2186 = val__$1;
        var G__2187 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2186, G__2187) : f.call(null, G__2186, G__2187);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__2193 = nval;
        var G__2194 = n + 1;
        val__$1 = G__2193;
        n = G__2194;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__2188 = val__$1;
        var G__2189 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2188, G__2189) : f.call(null, G__2188, G__2189);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__2195 = nval;
        var G__2196 = n + 1;
        val__$1 = G__2195;
        n = G__2196;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core._indexOf = function cljs$core$_indexOf(var_args) {
  var G__2200 = arguments.length;
  switch(G__2200) {
    case 2:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count(coll);
  if (start >= len) {
    return -1;
  } else {
    var idx = start > 0 ? start : start < 0 ? function() {
      var x__4135__auto__ = 0;
      var y__4136__auto__ = start + len;
      return x__4135__auto__ > y__4136__auto__ ? x__4135__auto__ : y__4136__auto__;
    }() : start;
    while (true) {
      if (idx < len) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx), x)) {
          return idx;
        } else {
          var G__2202 = idx + 1;
          idx = G__2202;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._indexOf.cljs$lang$maxFixedArity = 3;
cljs.core._lastIndexOf = function cljs$core$_lastIndexOf(var_args) {
  var G__2204 = arguments.length;
  switch(G__2204) {
    case 2:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count(coll);
  if (len === 0) {
    return -1;
  } else {
    var idx = start > 0 ? function() {
      var x__4138__auto__ = len - 1;
      var y__4139__auto__ = start;
      return x__4138__auto__ < y__4139__auto__ ? x__4138__auto__ : y__4139__auto__;
    }() : start < 0 ? len + start : start;
    while (true) {
      if (idx >= 0) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx), x)) {
          return idx;
        } else {
          var G__2206 = idx - 1;
          idx = G__2206;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._lastIndexOf.cljs$lang$maxFixedArity = 3;
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i, meta) {
  this.arr = arr;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 166592766;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.indexOf = function() {
  var G__2207 = null;
  var G__2207__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2207__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2207 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2207__1.call(this, x);
      case 2:
        return G__2207__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2207.cljs$core$IFn$_invoke$arity$1 = G__2207__1;
  G__2207.cljs$core$IFn$_invoke$arity$2 = G__2207__2;
  return G__2207;
}();
cljs.core.IndexedSeq.prototype.lastIndexOf = function() {
  var G__2208 = null;
  var G__2208__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2208__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2208 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2208__1.call(this, x);
      case 2:
        return G__2208__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2208.cljs$core$IFn$_invoke$arity$1 = G__2208__1;
  G__2208.cljs$core$IFn$_invoke$arity$2 = G__2208__2;
  return G__2208;
}();
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (0 <= i__$1 && i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    throw new Error("Index out of bounds");
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (0 <= i__$1 && i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, self__.meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__4135__auto__ = 0;
  var y__4136__auto__ = self__.arr.length - self__.i;
  return x__4135__auto__ > y__4136__auto__ ? x__4135__auto__ : y__4136__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = coll__$1.cljs$core$ICounted$_count$arity$1(null);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, new_meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i, meta) {
  return new cljs.core.IndexedSeq(arr, i, meta);
};
var G__2209_2212 = cljs.core.IndexedSeq.prototype;
var G__2210_2213 = cljs.core.ITER_SYMBOL;
var G__2211_2214 = function(G__2209_2212, G__2210_2213) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__2209_2212, G__2210_2213);
goog.object.set(G__2209_2212, G__2210_2213, G__2211_2214);
cljs.core.prim_seq = function cljs$core$prim_seq(var_args) {
  var G__2216 = arguments.length;
  switch(G__2216) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i, null);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq(var_args) {
  var G__2219 = arguments.length;
  switch(G__2219) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.indexOf = function() {
  var G__2221 = null;
  var G__2221__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2221__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2221 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2221__1.call(this, x);
      case 2:
        return G__2221__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2221.cljs$core$IFn$_invoke$arity$1 = G__2221__1;
  G__2221.cljs$core$IFn$_invoke$arity$2 = G__2221__2;
  return G__2221;
}();
cljs.core.RSeq.prototype.lastIndexOf = function() {
  var G__2222 = null;
  var G__2222__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2222__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2222 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2222__1.call(this, x);
      case 2:
        return G__2222__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2222.cljs$core$IFn$_invoke$arity$1 = G__2222__1;
  G__2222.cljs$core$IFn$_invoke$arity$2 = G__2222__2;
  return G__2222;
}();
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
var G__2223_2226 = cljs.core.RSeq.prototype;
var G__2224_2227 = cljs.core.ITER_SYMBOL;
var G__2225_2228 = function(G__2223_2226, G__2224_2227) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__2223_2226, G__2224_2227);
goog.object.set(G__2223_2226, G__2224_2227, G__2225_2228);
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__2229 = sn;
      s = G__2229;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
goog.object.set(cljs.core.IEquiv, "_", true);
var G__2230_2233 = cljs.core._equiv;
var G__2231_2234 = "_";
var G__2232_2235 = function(G__2230_2233, G__2231_2234) {
  return function(x, o) {
    return x === o;
  };
}(G__2230_2233, G__2231_2234);
goog.object.set(G__2230_2233, G__2231_2234, G__2232_2235);
cljs.core.conj = function cljs$core$conj(var_args) {
  var G__2240 = arguments.length;
  switch(G__2240) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2242 = arguments.length;
      var i__4642__auto___2243 = 0;
      while (true) {
        if (i__4642__auto___2243 < len__4641__auto___2242) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2243]);
          var G__2244 = i__4642__auto___2243 + 1;
          i__4642__auto___2243 = G__2244;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return new cljs.core.List(null, x, null, 1, null);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__2245 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__2246 = cljs.core.first(xs);
      var G__2247 = cljs.core.next(xs);
      coll = G__2245;
      x = G__2246;
      xs = G__2247;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq2237) {
  var G__2238 = cljs.core.first(seq2237);
  var seq2237__$1 = cljs.core.next(seq2237);
  var G__2239 = cljs.core.first(seq2237__$1);
  var seq2237__$2 = cljs.core.next(seq2237__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2238, G__2239, seq2237__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__2248 = cljs.core.next(s);
      var G__2249 = acc + 1;
      s = G__2248;
      acc = G__2249;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth(var_args) {
  var G__2253 = arguments.length;
  switch(G__2253) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__2255 = cljs.core.next(coll);
            var G__2256 = n - 1;
            coll = G__2255;
            n = G__2256;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__2257 = cljs.core.next(coll);
            var G__2258 = n - 1;
            var G__2259 = not_found;
            coll = G__2257;
            n = G__2258;
            not_found = G__2259;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth(var_args) {
  var G__2261 = arguments.length;
  switch(G__2261) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("Index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n >= 0 && n < coll.length) {
            return coll[n];
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (typeof coll === "string") {
            if (n >= 0 && n < coll.length) {
              return coll.charAt(n);
            } else {
              throw new Error("Index out of bounds");
            }
          } else {
            if (function() {
              var or__4047__auto__ = !(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false;
              if (or__4047__auto__) {
                return or__4047__auto__;
              } else {
                if (!(coll == null)) {
                  if (coll.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISequential$) {
                    return true;
                  } else {
                    return false;
                  }
                } else {
                  return false;
                }
              }
            }()) {
              if (n < 0) {
                throw new Error("Index out of bounds");
              } else {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("Index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n >= 0 && n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n >= 0 && n < coll.length) {
              return coll.charAt(n);
            } else {
              return not_found;
            }
          } else {
            if (function() {
              var or__4047__auto__ = !(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false;
              if (or__4047__auto__) {
                return or__4047__auto__;
              } else {
                if (!(coll == null)) {
                  if (coll.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISequential$) {
                    return true;
                  } else {
                    return false;
                  }
                } else {
                  return false;
                }
              }
            }()) {
              if (n < 0) {
                return not_found;
              } else {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
              } else {
                throw new Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    var temp__5455__auto__ = n__$1 > 0 && cljs.core.seq(xs);
    if (temp__5455__auto__) {
      var xs__$1 = temp__5455__auto__;
      var G__2271 = n__$1 - 1;
      var G__2272 = cljs.core.rest(xs__$1);
      n__$1 = G__2271;
      xs = G__2272;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get(var_args) {
  var G__2274 = arguments.length;
  switch(G__2274) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (!(k == null) && k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (!(k == null) && k < o.length) {
            return o.charAt(k | 0);
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (!(k == null) && k >= 0 && k < o.length) {
          return o[k | 0];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (!(k == null) && k >= 0 && k < o.length) {
            return o.charAt(k | 0);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc(var_args) {
  var G__2283 = arguments.length;
  switch(G__2283) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2285 = arguments.length;
      var i__4642__auto___2286 = 0;
      while (true) {
        if (i__4642__auto___2286 < len__4641__auto___2285) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2286]);
          var G__2287 = i__4642__auto___2286 + 1;
          i__4642__auto___2286 = G__2287;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(3), 0, null);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4663__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentArrayMap.createAsIfByAssoc([k, v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__2288 = ret;
      var G__2289 = cljs.core.first(kvs);
      var G__2290 = cljs.core.second(kvs);
      var G__2291 = cljs.core.nnext(kvs);
      coll = G__2288;
      k = G__2289;
      v = G__2290;
      kvs = G__2291;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq2279) {
  var G__2280 = cljs.core.first(seq2279);
  var seq2279__$1 = cljs.core.next(seq2279);
  var G__2281 = cljs.core.first(seq2279__$1);
  var seq2279__$2 = cljs.core.next(seq2279__$1);
  var G__2282 = cljs.core.first(seq2279__$2);
  var seq2279__$3 = cljs.core.next(seq2279__$2);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2280, G__2281, G__2282, seq2279__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc(var_args) {
  var G__2296 = arguments.length;
  switch(G__2296) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2298 = arguments.length;
      var i__4642__auto___2299 = 0;
      while (true) {
        if (i__4642__auto___2299 < len__4641__auto___2298) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2299]);
          var G__2300 = i__4642__auto___2299 + 1;
          i__4642__auto___2299 = G__2300;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__2301 = ret;
        var G__2302 = cljs.core.first(ks);
        var G__2303 = cljs.core.next(ks);
        coll = G__2301;
        k = G__2302;
        ks = G__2303;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq2293) {
  var G__2294 = cljs.core.first(seq2293);
  var seq2293__$1 = cljs.core.next(seq2293);
  var G__2295 = cljs.core.first(seq2293__$1);
  var seq2293__$2 = cljs.core.next(seq2293__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2294, G__2295, seq2293__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4047__auto__ = goog.isFunction(f);
  if (or__4047__auto__) {
    return or__4047__auto__;
  } else {
    if (!(f == null)) {
      if (false || cljs.core.PROTOCOL_SENTINEL === f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MetaFn.prototype.call = function() {
  var G__2307 = null;
  var G__2307__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__2307__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__2307__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__2307__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__2307__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__2307__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__2307__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__2307__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__2307__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__2307__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__2307__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__2307__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__2307__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__2307__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__2307__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__2307__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__2307__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__2307__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__2307__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__2307__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__2307__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__2307__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.afn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__2307 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__2307__1.call(this, self__);
      case 2:
        return G__2307__2.call(this, self__, a);
      case 3:
        return G__2307__3.call(this, self__, a, b);
      case 4:
        return G__2307__4.call(this, self__, a, b, c);
      case 5:
        return G__2307__5.call(this, self__, a, b, c, d);
      case 6:
        return G__2307__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__2307__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__2307__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__2307__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__2307__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__2307__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__2307__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__2307__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__2307__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__2307__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__2307__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__2307__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__2307__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__2307__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__2307__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__2307__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__2307__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2307.cljs$core$IFn$_invoke$arity$1 = G__2307__1;
  G__2307.cljs$core$IFn$_invoke$arity$2 = G__2307__2;
  G__2307.cljs$core$IFn$_invoke$arity$3 = G__2307__3;
  G__2307.cljs$core$IFn$_invoke$arity$4 = G__2307__4;
  G__2307.cljs$core$IFn$_invoke$arity$5 = G__2307__5;
  G__2307.cljs$core$IFn$_invoke$arity$6 = G__2307__6;
  G__2307.cljs$core$IFn$_invoke$arity$7 = G__2307__7;
  G__2307.cljs$core$IFn$_invoke$arity$8 = G__2307__8;
  G__2307.cljs$core$IFn$_invoke$arity$9 = G__2307__9;
  G__2307.cljs$core$IFn$_invoke$arity$10 = G__2307__10;
  G__2307.cljs$core$IFn$_invoke$arity$11 = G__2307__11;
  G__2307.cljs$core$IFn$_invoke$arity$12 = G__2307__12;
  G__2307.cljs$core$IFn$_invoke$arity$13 = G__2307__13;
  G__2307.cljs$core$IFn$_invoke$arity$14 = G__2307__14;
  G__2307.cljs$core$IFn$_invoke$arity$15 = G__2307__15;
  G__2307.cljs$core$IFn$_invoke$arity$16 = G__2307__16;
  G__2307.cljs$core$IFn$_invoke$arity$17 = G__2307__17;
  G__2307.cljs$core$IFn$_invoke$arity$18 = G__2307__18;
  G__2307.cljs$core$IFn$_invoke$arity$19 = G__2307__19;
  G__2307.cljs$core$IFn$_invoke$arity$20 = G__2307__20;
  G__2307.cljs$core$IFn$_invoke$arity$21 = G__2307__21;
  G__2307.cljs$core$IFn$_invoke$arity$22 = G__2307__22;
  return G__2307;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args2306) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args2306)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.afn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__4036__auto__ = !(o == null);
    if (and__4036__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__4036__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj(var_args) {
  var G__2314 = arguments.length;
  switch(G__2314) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2316 = arguments.length;
      var i__4642__auto___2317 = 0;
      while (true) {
        if (i__4642__auto___2317 < len__4641__auto___2316) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2317]);
          var G__2318 = i__4642__auto___2317 + 1;
          i__4642__auto___2317 = G__2318;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__2319 = ret;
        var G__2320 = cljs.core.first(ks);
        var G__2321 = cljs.core.next(ks);
        coll = G__2319;
        k = G__2320;
        ks = G__2321;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq2311) {
  var G__2312 = cljs.core.first(seq2311);
  var seq2311__$1 = cljs.core.next(seq2311);
  var G__2313 = cljs.core.first(seq2311__$1);
  var seq2311__$2 = cljs.core.next(seq2311__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2312, G__2313, seq2311__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.ifind_QMARK_ = function cljs$core$ifind_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IFind$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IFind, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IFind, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj(var_args) {
  var G__2335 = arguments.length;
  switch(G__2335) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2339 = arguments.length;
      var i__4642__auto___2340 = 0;
      while (true) {
        if (i__4642__auto___2340 < len__4641__auto___2339) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2340]);
          var G__2341 = i__4642__auto___2340 + 1;
          i__4642__auto___2340 = G__2341;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(0), 0, null);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__4663__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq2334) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq2334));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  return goog.object.getKeys(obj);
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__2342 = i__$1 + 1;
      var G__2343 = j__$1 + 1;
      var G__2344 = len__$1 - 1;
      i__$1 = G__2342;
      j__$1 = G__2343;
      len__$1 = G__2344;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__2345 = i__$1 - 1;
      var G__2346 = j__$1 - 1;
      var G__2347 = len__$1 - 1;
      i__$1 = G__2345;
      j__$1 = G__2346;
      len__$1 = G__2347;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.boolean_QMARK_ = function cljs$core$boolean_QMARK_(x) {
  return x === true || x === false;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  var or__4047__auto__ = s == null;
  if (or__4047__auto__) {
    return or__4047__auto__;
  } else {
    var or__4047__auto____$1 = !(s == null) ? s.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$ISeqable$ ? true : !s.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
    if (or__4047__auto____$1) {
      return or__4047__auto____$1;
    } else {
      return cljs.core.array_QMARK_(s) || typeof s === "string";
    }
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4047__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4047__auto__) {
    return or__4047__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || cljs.core.PROTOCOL_SENTINEL === f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.int_QMARK_ = function cljs$core$int_QMARK_(x) {
  return cljs.core.integer_QMARK_(x) || x instanceof goog.math.Integer || x instanceof goog.math.Long;
};
cljs.core.pos_int_QMARK_ = function cljs$core$pos_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x > 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
    } else {
      if (x instanceof goog.math.Long) {
        return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
      } else {
        return false;
      }
    }
  }
};
cljs.core.neg_int_QMARK_ = function cljs$core$neg_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x < 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return x.isNegative();
    } else {
      if (x instanceof goog.math.Long) {
        return x.isNegative();
      } else {
        return false;
      }
    }
  }
};
cljs.core.nat_int_QMARK_ = function cljs$core$nat_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return !(x < 0);
  } else {
    if (x instanceof goog.math.Integer) {
      return cljs.core.not(x.isNegative());
    } else {
      if (x instanceof goog.math.Long) {
        return cljs.core.not(x.isNegative());
      } else {
        return false;
      }
    }
  }
};
cljs.core.float_QMARK_ = function cljs$core$float_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.double_QMARK_ = function cljs$core$double_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.infinite_QMARK_ = function cljs$core$infinite_QMARK_(x) {
  return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (cljs.core.ifind_QMARK_(coll)) {
    return cljs.core._find(coll, k);
  } else {
    if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
      return new cljs.core.MapEntry(k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k), null);
    } else {
      return null;
    }
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_(var_args) {
  var G__2360 = arguments.length;
  switch(G__2360) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2362 = arguments.length;
      var i__4642__auto___2363 = 0;
      while (true) {
        if (i__4642__auto___2363 < len__4641__auto___2362) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2363]);
          var G__2364 = i__4642__auto___2363 + 1;
          i__4642__auto___2363 = G__2364;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.createAsIfByAssoc([x, y]);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__2365 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__2366 = etc;
          s = G__2365;
          xs = G__2366;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq2357) {
  var G__2358 = cljs.core.first(seq2357);
  var seq2357__$1 = cljs.core.next(seq2357);
  var G__2359 = cljs.core.first(seq2357__$1);
  var seq2357__$2 = cljs.core.next(seq2357__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2358, G__2359, seq2357__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed(var_args) {
  var G__2369 = arguments.length;
  switch(G__2369) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__2371 = xs;
      var G__2372 = ys;
      var G__2373 = len;
      var G__2374 = n + 1;
      xs = G__2371;
      ys = G__2372;
      len = G__2373;
      n = G__2374;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort(var_args) {
  var G__2376 = arguments.length;
  switch(G__2376) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array(coll);
    var G__2377_2380 = a;
    var G__2378_2381 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__2377_2380, G__2378_2381);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by(var_args) {
  var G__2383 = arguments.length;
  switch(G__2383) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    var G__2385 = keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x);
    var G__2386 = keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y);
    var fexpr__2384 = cljs.core.fn__GT_comparator(comp);
    return fexpr__2384.cljs$core$IFn$_invoke$arity$2 ? fexpr__2384.cljs$core$IFn$_invoke$arity$2(G__2385, G__2386) : fexpr__2384.call(null, G__2385, G__2386);
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce(var_args) {
  var G__2389 = arguments.length;
  switch(G__2389) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__5455__auto__ = cljs.core.seq(coll);
  if (temp__5455__auto__) {
    var s = temp__5455__auto__;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.next(s));
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__2390 = val__$1;
        var G__2391 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2390, G__2391) : f.call(null, G__2390, G__2391);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__2393 = nval;
        var G__2394 = cljs.core.next(coll__$1);
        val__$1 = G__2393;
        coll__$1 = G__2394;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array(coll);
  goog.array.shuffle(a);
  return cljs.core.vec(a);
};
cljs.core.iter_reduce = function cljs$core$iter_reduce(var_args) {
  var G__2396 = arguments.length;
  switch(G__2396) {
    case 2:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  var iter = cljs.core._iterator(coll);
  if (cljs.core.truth_(iter.hasNext())) {
    var init = iter.next();
    var acc = init;
    while (true) {
      if (iter.hasNext()) {
        var nacc = function() {
          var G__2397 = acc;
          var G__2398 = iter.next();
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2397, G__2398) : f.call(null, G__2397, G__2398);
        }();
        if (cljs.core.reduced_QMARK_(nacc)) {
          return cljs.core.deref(nacc);
        } else {
          var G__2402 = nacc;
          acc = G__2402;
          continue;
        }
      } else {
        return acc;
      }
      break;
    }
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, init) {
  var iter = cljs.core._iterator(coll);
  var acc = init;
  while (true) {
    if (iter.hasNext()) {
      var nacc = function() {
        var G__2399 = acc;
        var G__2400 = iter.next();
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2399, G__2400) : f.call(null, G__2399, G__2400);
      }();
      if (cljs.core.reduced_QMARK_(nacc)) {
        return cljs.core.deref(nacc);
      } else {
        var G__2403 = nacc;
        acc = G__2403;
        continue;
      }
    } else {
      return acc;
    }
    break;
  }
};
cljs.core.iter_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce = function cljs$core$reduce(var_args) {
  var G__2405 = arguments.length;
  switch(G__2405) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.iterable_QMARK_(coll)) {
            return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.iterable_QMARK_(coll)) {
            return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing(var_args) {
  var G__2410 = arguments.length;
  switch(G__2410) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__2412 = null;
    var G__2412__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__2412__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__2412__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__2412 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__2412__0.call(this);
        case 1:
          return G__2412__1.call(this, x);
        case 2:
          return G__2412__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__2412.cljs$core$IFn$_invoke$arity$0 = G__2412__0;
    G__2412.cljs$core$IFn$_invoke$arity$1 = G__2412__1;
    G__2412.cljs$core$IFn$_invoke$arity$2 = G__2412__2;
    return G__2412;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce(var_args) {
  var G__2414 = arguments.length;
  switch(G__2414) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_(var_args) {
  var G__2420 = arguments.length;
  switch(G__2420) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2422 = arguments.length;
      var i__4642__auto___2423 = 0;
      while (true) {
        if (i__4642__auto___2423 < len__4641__auto___2422) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2423]);
          var G__2424 = i__4642__auto___2423 + 1;
          i__4642__auto___2423 = G__2424;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq2417) {
  var G__2418 = cljs.core.first(seq2417);
  var seq2417__$1 = cljs.core.next(seq2417);
  var G__2419 = cljs.core.first(seq2417__$1);
  var seq2417__$2 = cljs.core.next(seq2417__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2418, G__2419, seq2417__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_(var_args) {
  var G__2429 = arguments.length;
  switch(G__2429) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2431 = arguments.length;
      var i__4642__auto___2432 = 0;
      while (true) {
        if (i__4642__auto___2432 < len__4641__auto___2431) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2432]);
          var G__2433 = i__4642__auto___2432 + 1;
          i__4642__auto___2432 = G__2433;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq2426) {
  var G__2427 = cljs.core.first(seq2426);
  var seq2426__$1 = cljs.core.next(seq2426);
  var G__2428 = cljs.core.first(seq2426__$1);
  var seq2426__$2 = cljs.core.next(seq2426__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2427, G__2428, seq2426__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_(var_args) {
  var G__2438 = arguments.length;
  switch(G__2438) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2440 = arguments.length;
      var i__4642__auto___2441 = 0;
      while (true) {
        if (i__4642__auto___2441 < len__4641__auto___2440) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2441]);
          var G__2442 = i__4642__auto___2441 + 1;
          i__4642__auto___2441 = G__2442;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq2435) {
  var G__2436 = cljs.core.first(seq2435);
  var seq2435__$1 = cljs.core.next(seq2435);
  var G__2437 = cljs.core.first(seq2435__$1);
  var seq2435__$2 = cljs.core.next(seq2435__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2436, G__2437, seq2435__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_(var_args) {
  var G__2447 = arguments.length;
  switch(G__2447) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2449 = arguments.length;
      var i__4642__auto___2450 = 0;
      while (true) {
        if (i__4642__auto___2450 < len__4641__auto___2449) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2450]);
          var G__2451 = i__4642__auto___2450 + 1;
          i__4642__auto___2450 = G__2451;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq2444) {
  var G__2445 = cljs.core.first(seq2444);
  var seq2444__$1 = cljs.core.next(seq2444);
  var G__2446 = cljs.core.first(seq2444__$1);
  var seq2444__$2 = cljs.core.next(seq2444__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2445, G__2446, seq2444__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_(var_args) {
  var G__2456 = arguments.length;
  switch(G__2456) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2458 = arguments.length;
      var i__4642__auto___2459 = 0;
      while (true) {
        if (i__4642__auto___2459 < len__4641__auto___2458) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2459]);
          var G__2460 = i__4642__auto___2459 + 1;
          i__4642__auto___2459 = G__2460;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__2461 = y;
        var G__2462 = cljs.core.first(more);
        var G__2463 = cljs.core.next(more);
        x = G__2461;
        y = G__2462;
        more = G__2463;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq2453) {
  var G__2454 = cljs.core.first(seq2453);
  var seq2453__$1 = cljs.core.next(seq2453);
  var G__2455 = cljs.core.first(seq2453__$1);
  var seq2453__$2 = cljs.core.next(seq2453__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2454, G__2455, seq2453__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_(var_args) {
  var G__2468 = arguments.length;
  switch(G__2468) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2470 = arguments.length;
      var i__4642__auto___2471 = 0;
      while (true) {
        if (i__4642__auto___2471 < len__4641__auto___2470) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2471]);
          var G__2472 = i__4642__auto___2471 + 1;
          i__4642__auto___2471 = G__2472;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__2473 = y;
        var G__2474 = cljs.core.first(more);
        var G__2475 = cljs.core.next(more);
        x = G__2473;
        y = G__2474;
        more = G__2475;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq2465) {
  var G__2466 = cljs.core.first(seq2465);
  var seq2465__$1 = cljs.core.next(seq2465);
  var G__2467 = cljs.core.first(seq2465__$1);
  var seq2465__$2 = cljs.core.next(seq2465__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2466, G__2467, seq2465__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_(var_args) {
  var G__2480 = arguments.length;
  switch(G__2480) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2482 = arguments.length;
      var i__4642__auto___2483 = 0;
      while (true) {
        if (i__4642__auto___2483 < len__4641__auto___2482) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2483]);
          var G__2484 = i__4642__auto___2483 + 1;
          i__4642__auto___2483 = G__2484;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__2485 = y;
        var G__2486 = cljs.core.first(more);
        var G__2487 = cljs.core.next(more);
        x = G__2485;
        y = G__2486;
        more = G__2487;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq2477) {
  var G__2478 = cljs.core.first(seq2477);
  var seq2477__$1 = cljs.core.next(seq2477);
  var G__2479 = cljs.core.first(seq2477__$1);
  var seq2477__$2 = cljs.core.next(seq2477__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2478, G__2479, seq2477__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_(var_args) {
  var G__2492 = arguments.length;
  switch(G__2492) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2494 = arguments.length;
      var i__4642__auto___2495 = 0;
      while (true) {
        if (i__4642__auto___2495 < len__4641__auto___2494) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2495]);
          var G__2496 = i__4642__auto___2495 + 1;
          i__4642__auto___2495 = G__2496;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__2497 = y;
        var G__2498 = cljs.core.first(more);
        var G__2499 = cljs.core.next(more);
        x = G__2497;
        y = G__2498;
        more = G__2499;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq2489) {
  var G__2490 = cljs.core.first(seq2489);
  var seq2489__$1 = cljs.core.next(seq2489);
  var G__2491 = cljs.core.first(seq2489__$1);
  var seq2489__$2 = cljs.core.next(seq2489__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2490, G__2491, seq2489__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max(var_args) {
  var G__2504 = arguments.length;
  switch(G__2504) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2506 = arguments.length;
      var i__4642__auto___2507 = 0;
      while (true) {
        if (i__4642__auto___2507 < len__4641__auto___2506) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2507]);
          var G__2508 = i__4642__auto___2507 + 1;
          i__4642__auto___2507 = G__2508;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4135__auto__ = x;
  var y__4136__auto__ = y;
  return x__4135__auto__ > y__4136__auto__ ? x__4135__auto__ : y__4136__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__4135__auto__ = x;
    var y__4136__auto__ = y;
    return x__4135__auto__ > y__4136__auto__ ? x__4135__auto__ : y__4136__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq2501) {
  var G__2502 = cljs.core.first(seq2501);
  var seq2501__$1 = cljs.core.next(seq2501);
  var G__2503 = cljs.core.first(seq2501__$1);
  var seq2501__$2 = cljs.core.next(seq2501__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2502, G__2503, seq2501__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min(var_args) {
  var G__2513 = arguments.length;
  switch(G__2513) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2515 = arguments.length;
      var i__4642__auto___2516 = 0;
      while (true) {
        if (i__4642__auto___2516 < len__4641__auto___2515) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2516]);
          var G__2517 = i__4642__auto___2516 + 1;
          i__4642__auto___2516 = G__2517;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4138__auto__ = x;
  var y__4139__auto__ = y;
  return x__4138__auto__ < y__4139__auto__ ? x__4138__auto__ : y__4139__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__4138__auto__ = x;
    var y__4139__auto__ = y;
    return x__4138__auto__ < y__4139__auto__ ? x__4138__auto__ : y__4139__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq2510) {
  var G__2511 = cljs.core.first(seq2510);
  var seq2510__$1 = cljs.core.next(seq2510);
  var G__2512 = cljs.core.first(seq2510__$1);
  var seq2510__$2 = cljs.core.next(seq2510__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2511, G__2512, seq2510__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add(var_args) {
  var G__2522 = arguments.length;
  switch(G__2522) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2524 = arguments.length;
      var i__4642__auto___2525 = 0;
      while (true) {
        if (i__4642__auto___2525 < len__4641__auto___2524) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2525]);
          var G__2526 = i__4642__auto___2525 + 1;
          i__4642__auto___2525 = G__2526;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq2519) {
  var G__2520 = cljs.core.first(seq2519);
  var seq2519__$1 = cljs.core.next(seq2519);
  var G__2521 = cljs.core.first(seq2519__$1);
  var seq2519__$2 = cljs.core.next(seq2519__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2520, G__2521, seq2519__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int(var_args) {
  var G__2531 = arguments.length;
  switch(G__2531) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2533 = arguments.length;
      var i__4642__auto___2534 = 0;
      while (true) {
        if (i__4642__auto___2534 < len__4641__auto___2533) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2534]);
          var G__2535 = i__4642__auto___2534 + 1;
          i__4642__auto___2534 = G__2535;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq2528) {
  var G__2529 = cljs.core.first(seq2528);
  var seq2528__$1 = cljs.core.next(seq2528);
  var G__2530 = cljs.core.first(seq2528__$1);
  var seq2528__$2 = cljs.core.next(seq2528__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2529, G__2530, seq2528__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int(var_args) {
  var G__2540 = arguments.length;
  switch(G__2540) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2542 = arguments.length;
      var i__4642__auto___2543 = 0;
      while (true) {
        if (i__4642__auto___2543 < len__4641__auto___2542) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2543]);
          var G__2544 = i__4642__auto___2543 + 1;
          i__4642__auto___2543 = G__2544;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq2537) {
  var G__2538 = cljs.core.first(seq2537);
  var seq2537__$1 = cljs.core.next(seq2537);
  var G__2539 = cljs.core.first(seq2537__$1);
  var seq2537__$2 = cljs.core.next(seq2537__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2538, G__2539, seq2537__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply(var_args) {
  var G__2549 = arguments.length;
  switch(G__2549) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2551 = arguments.length;
      var i__4642__auto___2552 = 0;
      while (true) {
        if (i__4642__auto___2552 < len__4641__auto___2551) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2552]);
          var G__2553 = i__4642__auto___2552 + 1;
          i__4642__auto___2552 = G__2553;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq2546) {
  var G__2547 = cljs.core.first(seq2546);
  var seq2546__$1 = cljs.core.next(seq2546);
  var G__2548 = cljs.core.first(seq2546__$1);
  var seq2546__$2 = cljs.core.next(seq2546__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2547, G__2548, seq2546__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int(var_args) {
  var G__2558 = arguments.length;
  switch(G__2558) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2560 = arguments.length;
      var i__4642__auto___2561 = 0;
      while (true) {
        if (i__4642__auto___2561 < len__4641__auto___2560) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2561]);
          var G__2562 = i__4642__auto___2561 + 1;
          i__4642__auto___2561 = G__2562;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq2555) {
  var G__2556 = cljs.core.first(seq2555);
  var seq2555__$1 = cljs.core.next(seq2555);
  var G__2557 = cljs.core.first(seq2555__$1);
  var seq2555__$2 = cljs.core.next(seq2555__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2556, G__2557, seq2555__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod(x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract(var_args) {
  var G__2567 = arguments.length;
  switch(G__2567) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2569 = arguments.length;
      var i__4642__auto___2570 = 0;
      while (true) {
        if (i__4642__auto___2570 < len__4641__auto___2569) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2570]);
          var G__2571 = i__4642__auto___2570 + 1;
          i__4642__auto___2570 = G__2571;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq2564) {
  var G__2565 = cljs.core.first(seq2564);
  var seq2564__$1 = cljs.core.next(seq2564);
  var G__2566 = cljs.core.first(seq2564__$1);
  var seq2564__$2 = cljs.core.next(seq2564__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2565, G__2566, seq2564__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int(var_args) {
  var G__2576 = arguments.length;
  switch(G__2576) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2578 = arguments.length;
      var i__4642__auto___2579 = 0;
      while (true) {
        if (i__4642__auto___2579 < len__4641__auto___2578) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2579]);
          var G__2580 = i__4642__auto___2579 + 1;
          i__4642__auto___2579 = G__2580;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq2573) {
  var G__2574 = cljs.core.first(seq2573);
  var seq2573__$1 = cljs.core.next(seq2573);
  var G__2575 = cljs.core.first(seq2573__$1);
  var seq2573__$2 = cljs.core.next(seq2573__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2574, G__2575, seq2573__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor(var_args) {
  var G__2585 = arguments.length;
  switch(G__2585) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2587 = arguments.length;
      var i__4642__auto___2588 = 0;
      while (true) {
        if (i__4642__auto___2588 < len__4641__auto___2587) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2588]);
          var G__2589 = i__4642__auto___2588 + 1;
          i__4642__auto___2588 = G__2589;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq2582) {
  var G__2583 = cljs.core.first(seq2582);
  var seq2582__$1 = cljs.core.next(seq2582);
  var G__2584 = cljs.core.first(seq2582__$1);
  var seq2582__$2 = cljs.core.next(seq2582__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2583, G__2584, seq2582__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and(var_args) {
  var G__2594 = arguments.length;
  switch(G__2594) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2596 = arguments.length;
      var i__4642__auto___2597 = 0;
      while (true) {
        if (i__4642__auto___2597 < len__4641__auto___2596) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2597]);
          var G__2598 = i__4642__auto___2597 + 1;
          i__4642__auto___2597 = G__2598;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq2591) {
  var G__2592 = cljs.core.first(seq2591);
  var seq2591__$1 = cljs.core.next(seq2591);
  var G__2593 = cljs.core.first(seq2591__$1);
  var seq2591__$2 = cljs.core.next(seq2591__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2592, G__2593, seq2591__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or(var_args) {
  var G__2603 = arguments.length;
  switch(G__2603) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2605 = arguments.length;
      var i__4642__auto___2606 = 0;
      while (true) {
        if (i__4642__auto___2606 < len__4641__auto___2605) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2606]);
          var G__2607 = i__4642__auto___2606 + 1;
          i__4642__auto___2606 = G__2607;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq2600) {
  var G__2601 = cljs.core.first(seq2600);
  var seq2600__$1 = cljs.core.next(seq2600);
  var G__2602 = cljs.core.first(seq2600__$1);
  var seq2600__$2 = cljs.core.next(seq2600__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2601, G__2602, seq2600__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not(var_args) {
  var G__2612 = arguments.length;
  switch(G__2612) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2614 = arguments.length;
      var i__4642__auto___2615 = 0;
      while (true) {
        if (i__4642__auto___2615 < len__4641__auto___2614) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2615]);
          var G__2616 = i__4642__auto___2615 + 1;
          i__4642__auto___2615 = G__2616;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq2609) {
  var G__2610 = cljs.core.first(seq2609);
  var seq2609__$1 = cljs.core.next(seq2609);
  var G__2611 = cljs.core.first(seq2609__$1);
  var seq2609__$2 = cljs.core.next(seq2609__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2610, G__2611, seq2609__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_(var_args) {
  var G__2621 = arguments.length;
  switch(G__2621) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2623 = arguments.length;
      var i__4642__auto___2624 = 0;
      while (true) {
        if (i__4642__auto___2624 < len__4641__auto___2623) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2624]);
          var G__2625 = i__4642__auto___2624 + 1;
          i__4642__auto___2624 = G__2625;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__2626 = y;
        var G__2627 = cljs.core.first(more);
        var G__2628 = cljs.core.next(more);
        x = G__2626;
        y = G__2627;
        more = G__2628;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq2618) {
  var G__2619 = cljs.core.first(seq2618);
  var seq2618__$1 = cljs.core.next(seq2618);
  var G__2620 = cljs.core.first(seq2618__$1);
  var seq2618__$2 = cljs.core.next(seq2618__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2619, G__2620, seq2618__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(x) {
  return x > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(x) {
  return x === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__2629 = n__$1 - 1;
      var G__2630 = cljs.core.next(xs);
      n__$1 = G__2629;
      xs = G__2630;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str(var_args) {
  var G__2634 = arguments.length;
  switch(G__2634) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2636 = arguments.length;
      var i__4642__auto___2637 = 0;
      while (true) {
        if (i__4642__auto___2637 < len__4641__auto___2636) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2637]);
          var G__2638 = i__4642__auto___2637 + 1;
          i__4642__auto___2637 = G__2638;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(1), 0, null);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4663__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer(cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__2639 = sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
      var G__2640 = cljs.core.next(more);
      sb = G__2639;
      more = G__2640;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq2632) {
  var G__2633 = cljs.core.first(seq2632);
  var seq2632__$1 = cljs.core.next(seq2632);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2633, seq2632__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs(var_args) {
  var G__2642 = arguments.length;
  switch(G__2642) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__2644 = cljs.core.next(xs);
            var G__2645 = cljs.core.next(ys);
            xs = G__2644;
            ys = G__2645;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__2646 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__2647 = cljs.core.next(s);
        res = G__2646;
        s = G__2647;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__2648 = (h + (cljs.core.hash(cljs.core.key(e)) ^ cljs.core.hash(cljs.core.val(e)))) % 4503599627370496;
      var G__2649 = cljs.core.next(s);
      h = G__2648;
      s = G__2649;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__2650 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__2651 = cljs.core.next(s__$1);
      h = G__2650;
      s__$1 = G__2651;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__2652_2662 = cljs.core.seq(fn_map);
  var chunk__2653_2663 = null;
  var count__2654_2664 = 0;
  var i__2655_2665 = 0;
  while (true) {
    if (i__2655_2665 < count__2654_2664) {
      var vec__2656_2666 = chunk__2653_2663.cljs$core$IIndexed$_nth$arity$2(null, i__2655_2665);
      var key_name_2667 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2656_2666, 0, null);
      var f_2668 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2656_2666, 1, null);
      var str_name_2669 = cljs.core.name(key_name_2667);
      goog.object.set(obj, str_name_2669, f_2668);
      var G__2670 = seq__2652_2662;
      var G__2671 = chunk__2653_2663;
      var G__2672 = count__2654_2664;
      var G__2673 = i__2655_2665 + 1;
      seq__2652_2662 = G__2670;
      chunk__2653_2663 = G__2671;
      count__2654_2664 = G__2672;
      i__2655_2665 = G__2673;
      continue;
    } else {
      var temp__5457__auto___2674 = cljs.core.seq(seq__2652_2662);
      if (temp__5457__auto___2674) {
        var seq__2652_2675__$1 = temp__5457__auto___2674;
        if (cljs.core.chunked_seq_QMARK_(seq__2652_2675__$1)) {
          var c__4461__auto___2676 = cljs.core.chunk_first(seq__2652_2675__$1);
          var G__2677 = cljs.core.chunk_rest(seq__2652_2675__$1);
          var G__2678 = c__4461__auto___2676;
          var G__2679 = cljs.core.count(c__4461__auto___2676);
          var G__2680 = 0;
          seq__2652_2662 = G__2677;
          chunk__2653_2663 = G__2678;
          count__2654_2664 = G__2679;
          i__2655_2665 = G__2680;
          continue;
        } else {
          var vec__2659_2681 = cljs.core.first(seq__2652_2675__$1);
          var key_name_2682 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2659_2681, 0, null);
          var f_2683 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2659_2681, 1, null);
          var str_name_2684 = cljs.core.name(key_name_2682);
          goog.object.set(obj, str_name_2684, f_2683);
          var G__2685 = cljs.core.next(seq__2652_2675__$1);
          var G__2686 = null;
          var G__2687 = 0;
          var G__2688 = 0;
          seq__2652_2662 = G__2685;
          chunk__2653_2663 = G__2686;
          count__2654_2664 = G__2687;
          i__2655_2665 = G__2688;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.indexOf = function() {
  var G__2689 = null;
  var G__2689__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2689__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2689 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2689__1.call(this, x);
      case 2:
        return G__2689__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2689.cljs$core$IFn$_invoke$arity$1 = G__2689__1;
  G__2689.cljs$core$IFn$_invoke$arity$2 = G__2689__2;
  return G__2689;
}();
cljs.core.List.prototype.lastIndexOf = function() {
  var G__2690 = null;
  var G__2690__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__2690__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2690 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2690__1.call(this, x);
      case 2:
        return G__2690__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2690.cljs$core$IFn$_invoke$arity$1 = G__2690__1;
  G__2690.cljs$core$IFn$_invoke$arity$2 = G__2690__2;
  return G__2690;
}();
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
var G__2692_2695 = cljs.core.List.prototype;
var G__2693_2696 = cljs.core.ITER_SYMBOL;
var G__2694_2697 = function(G__2692_2695, G__2693_2696) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__2692_2695, G__2693_2696);
goog.object.set(G__2692_2695, G__2693_2696, G__2694_2697);
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.indexOf = function() {
  var G__2698 = null;
  var G__2698__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2698__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2698 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2698__1.call(this, x);
      case 2:
        return G__2698__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2698.cljs$core$IFn$_invoke$arity$1 = G__2698__1;
  G__2698.cljs$core$IFn$_invoke$arity$2 = G__2698__2;
  return G__2698;
}();
cljs.core.EmptyList.prototype.lastIndexOf = function() {
  var G__2699 = null;
  var G__2699__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2699__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2699 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2699__1.call(this, x);
      case 2:
        return G__2699__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2699.cljs$core$IFn$_invoke$arity$1 = G__2699__1;
  G__2699.cljs$core$IFn$_invoke$arity$2 = G__2699__2;
  return G__2699;
}();
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
var G__2700_2703 = cljs.core.EmptyList.prototype;
var G__2701_2704 = cljs.core.ITER_SYMBOL;
var G__2702_2705 = function(G__2700_2703, G__2701_2704) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__2700_2703, G__2701_2704);
goog.object.set(G__2700_2703, G__2701_2704, G__2702_2705);
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(rev) {
  return cljs.core._rseq(rev);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    var or__4047__auto__ = cljs.core.rseq(coll);
    if (or__4047__auto__) {
      return or__4047__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___2708 = arguments.length;
  var i__4642__auto___2709 = 0;
  while (true) {
    if (i__4642__auto___2709 < len__4641__auto___2708) {
      args__4647__auto__.push(arguments[i__4642__auto___2709]);
      var G__2710 = i__4642__auto___2709 + 1;
      i__4642__auto___2709 = G__2710;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__2711 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__2711;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__2712 = i - 1;
      var G__2713 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__2712;
      r = G__2713;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq2707) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq2707));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.indexOf = function() {
  var G__2714 = null;
  var G__2714__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2714__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2714 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2714__1.call(this, x);
      case 2:
        return G__2714__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2714.cljs$core$IFn$_invoke$arity$1 = G__2714__1;
  G__2714.cljs$core$IFn$_invoke$arity$2 = G__2714__2;
  return G__2714;
}();
cljs.core.Cons.prototype.lastIndexOf = function() {
  var G__2715 = null;
  var G__2715__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2715__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2715 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2715__1.call(this, x);
      case 2:
        return G__2715__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2715.cljs$core$IFn$_invoke$arity$1 = G__2715__1;
  G__2715.cljs$core$IFn$_invoke$arity$2 = G__2715__2;
  return G__2715;
}();
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, null);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
var G__2716_2719 = cljs.core.Cons.prototype;
var G__2717_2720 = cljs.core.ITER_SYMBOL;
var G__2718_2721 = function(G__2716_2719, G__2717_2720) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__2716_2719, G__2717_2720);
goog.object.set(G__2716_2719, G__2717_2720, G__2718_2721);
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__4047__auto__ = coll == null;
    if (or__4047__auto__) {
      return or__4047__auto__;
    } else {
      if (!(coll == null)) {
        if (coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4036__auto__ = cljs.core.not(a.ns);
      if (and__4036__auto__) {
        return b.ns;
      } else {
        return and__4036__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__2724 = a.ns;
            var G__2725 = b.ns;
            return goog.array.defaultCompare(G__2724, G__2725);
          }();
          if (0 === nsc) {
            var G__2726 = a.name;
            var G__2727 = b.name;
            return goog.array.defaultCompare(G__2726, G__2727);
          } else {
            return nsc;
          }
        }
      } else {
        var G__2728 = a.name;
        var G__2729 = b.name;
        return goog.array.defaultCompare(G__2728, G__2729);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__2731 = null;
  var G__2731__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__2731__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__2731 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__2731__2.call(this, self__, coll);
      case 3:
        return G__2731__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2731.cljs$core$IFn$_invoke$arity$2 = G__2731__2;
  G__2731.cljs$core$IFn$_invoke$arity$3 = G__2731__3;
  return G__2731;
}();
cljs.core.Keyword.prototype.apply = function(self__, args2730) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args2730)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4159__auto__ = self__._hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error(["Doesn't support namespace: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(""));
  }
};
cljs.core.ident_QMARK_ = function cljs$core$ident_QMARK_(x) {
  return x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol;
};
cljs.core.simple_ident_QMARK_ = function cljs$core$simple_ident_QMARK_(x) {
  return cljs.core.ident_QMARK_(x) && cljs.core.namespace(x) == null;
};
cljs.core.qualified_ident_QMARK_ = function cljs$core$qualified_ident_QMARK_(x) {
  return cljs.core.boolean$(function() {
    var and__4036__auto__ = cljs.core.ident_QMARK_(x);
    if (and__4036__auto__) {
      var and__4036__auto____$1 = cljs.core.namespace(x);
      if (cljs.core.truth_(and__4036__auto____$1)) {
        return true;
      } else {
        return and__4036__auto____$1;
      }
    } else {
      return and__4036__auto__;
    }
  }());
};
cljs.core.simple_symbol_QMARK_ = function cljs$core$simple_symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol && cljs.core.namespace(x) == null;
};
cljs.core.qualified_symbol_QMARK_ = function cljs$core$qualified_symbol_QMARK_(x) {
  return cljs.core.boolean$(function() {
    var and__4036__auto__ = x instanceof cljs.core.Symbol;
    if (and__4036__auto__) {
      var and__4036__auto____$1 = cljs.core.namespace(x);
      if (cljs.core.truth_(and__4036__auto____$1)) {
        return true;
      } else {
        return and__4036__auto____$1;
      }
    } else {
      return and__4036__auto__;
    }
  }());
};
cljs.core.simple_keyword_QMARK_ = function cljs$core$simple_keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword && cljs.core.namespace(x) == null;
};
cljs.core.qualified_keyword_QMARK_ = function cljs$core$qualified_keyword_QMARK_(x) {
  return cljs.core.boolean$(function() {
    var and__4036__auto__ = x instanceof cljs.core.Keyword;
    if (and__4036__auto__) {
      var and__4036__auto____$1 = cljs.core.namespace(x);
      if (cljs.core.truth_(and__4036__auto____$1)) {
        return true;
      } else {
        return and__4036__auto____$1;
      }
    } else {
      return and__4036__auto__;
    }
  }());
};
cljs.core.keyword = function cljs$core$keyword(var_args) {
  var G__2734 = arguments.length;
  switch(G__2734) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name(name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var ns__$1 = ns instanceof cljs.core.Keyword ? cljs.core.name(ns) : ns instanceof cljs.core.Symbol ? cljs.core.name(ns) : ns;
  var name__$1 = name instanceof cljs.core.Keyword ? cljs.core.name(name) : name instanceof cljs.core.Symbol ? cljs.core.name(name) : name;
  return new cljs.core.Keyword(ns__$1, name__$1, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(ns__$1) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1), "/"].join("") : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$1)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.indexOf = function() {
  var G__2736 = null;
  var G__2736__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2736__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2736 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2736__1.call(this, x);
      case 2:
        return G__2736__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2736.cljs$core$IFn$_invoke$arity$1 = G__2736__1;
  G__2736.cljs$core$IFn$_invoke$arity$2 = G__2736__2;
  return G__2736;
}();
cljs.core.LazySeq.prototype.lastIndexOf = function() {
  var G__2737 = null;
  var G__2737__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2737__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2737 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2737__1.call(this, x);
      case 2:
        return G__2737__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2737.cljs$core$IFn$_invoke$arity$1 = G__2737__1;
  G__2737.cljs$core$IFn$_invoke$arity$2 = G__2737__2;
  return G__2737;
}();
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.not(self__.fn);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__2738 = ls.sval();
        ls = G__2738;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, function(coll__$1) {
    return function() {
      return coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
    };
  }(coll__$1), null, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
var G__2739_2742 = cljs.core.LazySeq.prototype;
var G__2740_2743 = cljs.core.ITER_SYMBOL;
var G__2741_2744 = function(G__2739_2742, G__2740_2743) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__2739_2742, G__2740_2743);
goog.object.set(G__2739_2742, G__2740_2743, G__2741_2744);
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk(var_args) {
  var G__2746 = arguments.length;
  switch(G__2746) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.indexOf = function() {
  var G__2748 = null;
  var G__2748__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2748__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2748 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2748__1.call(this, x);
      case 2:
        return G__2748__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2748.cljs$core$IFn$_invoke$arity$1 = G__2748__1;
  G__2748.cljs$core$IFn$_invoke$arity$2 = G__2748__2;
  return G__2748;
}();
cljs.core.ChunkedCons.prototype.lastIndexOf = function() {
  var G__2749 = null;
  var G__2749__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2749__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2749 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2749__1.call(this, x);
      case 2:
        return G__2749__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2749.cljs$core$IFn$_invoke$arity$1 = G__2749__1;
  G__2749.cljs$core$IFn$_invoke$arity$2 = G__2749__2;
  return G__2749;
}();
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return null;
    } else {
      return cljs.core._seq(self__.more);
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
var G__2750_2753 = cljs.core.ChunkedCons.prototype;
var G__2751_2754 = cljs.core.ITER_SYMBOL;
var G__2752_2755 = function(G__2750_2753, G__2751_2754) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__2750_2753, G__2751_2754);
goog.object.set(G__2750_2753, G__2751_2754, G__2752_2755);
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$IChunkedNext$ ? true : false : false) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(coll) {
  var ary = [];
  var s = cljs.core.seq(coll);
  while (true) {
    if (!(s == null)) {
      ary.push(cljs.core.first(s));
      var G__2757 = cljs.core.next(s);
      s = G__2757;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_2758 = 0;
  var xs_2759 = cljs.core.seq(coll);
  while (true) {
    if (xs_2759 == null) {
    } else {
      ret[i_2758] = cljs.core.to_array(cljs.core.first(xs_2759));
      var G__2760 = i_2758 + 1;
      var G__2761 = cljs.core.next(xs_2759);
      i_2758 = G__2760;
      xs_2759 = G__2761;
      continue;
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array(var_args) {
  var G__2763 = arguments.length;
  switch(G__2763) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__2765 = i + 1;
        var G__2766 = cljs.core.next(s__$1);
        i = G__2765;
        s__$1 = G__2766;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4518__auto___2767 = size;
    var i_2768 = 0;
    while (true) {
      if (i_2768 < n__4518__auto___2767) {
        a[i_2768] = init_val_or_seq;
        var G__2769 = i_2768 + 1;
        i_2768 = G__2769;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array(var_args) {
  var G__2771 = arguments.length;
  switch(G__2771) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__2773 = i + 1;
        var G__2774 = cljs.core.next(s__$1);
        i = G__2773;
        s__$1 = G__2774;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4518__auto___2775 = size;
    var i_2776 = 0;
    while (true) {
      if (i_2776 < n__4518__auto___2775) {
        a[i_2776] = init_val_or_seq;
        var G__2777 = i_2776 + 1;
        i_2776 = G__2777;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array(var_args) {
  var G__2779 = arguments.length;
  switch(G__2779) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__2781 = i + 1;
        var G__2782 = cljs.core.next(s__$1);
        i = G__2781;
        s__$1 = G__2782;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4518__auto___2783 = size;
    var i_2784 = 0;
    while (true) {
      if (i_2784 < n__4518__auto___2783) {
        a[i_2784] = init_val_or_seq;
        var G__2785 = i_2784 + 1;
        i_2784 = G__2785;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array(var_args) {
  var G__2787 = arguments.length;
  switch(G__2787) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__2789 = i + 1;
        var G__2790 = cljs.core.next(s__$1);
        i = G__2789;
        s__$1 = G__2790;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4518__auto___2791 = size;
    var i_2792 = 0;
    while (true) {
      if (i_2792 < n__4518__auto___2791) {
        a[i_2792] = init_val_or_seq;
        var G__2793 = i_2792 + 1;
        i_2792 = G__2793;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(n, coll) {
  if (cljs.core.counted_QMARK_(coll)) {
    return cljs.core.count(coll);
  } else {
    var i = 0;
    var s = cljs.core.seq(coll);
    while (true) {
      if (!(s == null) && i < n) {
        var G__2794 = i + 1;
        var G__2795 = cljs.core.next(s);
        i = G__2794;
        s = G__2795;
        continue;
      } else {
        return i;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    var n = cljs.core.next(arglist);
    if (n == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs.core.spread.cljs$core$IFn$_invoke$arity$1 ? cljs.core.spread.cljs$core$IFn$_invoke$arity$1(n) : cljs.core.spread.call(null, n));
    }
  }
};
cljs.core.concat = function cljs$core$concat(var_args) {
  var G__2800 = arguments.length;
  switch(G__2800) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2802 = arguments.length;
      var i__4642__auto___2803 = 0;
      while (true) {
        if (i__4642__auto___2803 < len__4641__auto___2802) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2803]);
          var G__2804 = i__4642__auto___2803 + 1;
          i__4642__auto___2803 = G__2804;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq2797) {
  var G__2798 = cljs.core.first(seq2797);
  var seq2797__$1 = cljs.core.next(seq2797);
  var G__2799 = cljs.core.first(seq2797__$1);
  var seq2797__$2 = cljs.core.next(seq2797__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2798, G__2799, seq2797__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_(var_args) {
  var G__2811 = arguments.length;
  switch(G__2811) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2813 = arguments.length;
      var i__4642__auto___2814 = 0;
      while (true) {
        if (i__4642__auto___2814 < len__4641__auto___2813) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2814]);
          var G__2815 = i__4642__auto___2814 + 1;
          i__4642__auto___2814 = G__2815;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(4), 0, null);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4663__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq2806) {
  var G__2807 = cljs.core.first(seq2806);
  var seq2806__$1 = cljs.core.next(seq2806);
  var G__2808 = cljs.core.first(seq2806__$1);
  var seq2806__$2 = cljs.core.next(seq2806__$1);
  var G__2809 = cljs.core.first(seq2806__$2);
  var seq2806__$3 = cljs.core.next(seq2806__$2);
  var G__2810 = cljs.core.first(seq2806__$3);
  var seq2806__$4 = cljs.core.next(seq2806__$3);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2807, G__2808, G__2809, G__2810, seq2806__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_(var_args) {
  var G__2820 = arguments.length;
  switch(G__2820) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2822 = arguments.length;
      var i__4642__auto___2823 = 0;
      while (true) {
        if (i__4642__auto___2823 < len__4641__auto___2822) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2823]);
          var G__2824 = i__4642__auto___2823 + 1;
          i__4642__auto___2823 = G__2824;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(tcoll) {
  return tcoll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__2825 = ntcoll;
      var G__2826 = cljs.core.first(vals);
      var G__2827 = cljs.core.next(vals);
      tcoll = G__2825;
      val = G__2826;
      vals = G__2827;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq2817) {
  var G__2818 = cljs.core.first(seq2817);
  var seq2817__$1 = cljs.core.next(seq2817);
  var G__2819 = cljs.core.first(seq2817__$1);
  var seq2817__$2 = cljs.core.next(seq2817__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2818, G__2819, seq2817__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_(var_args) {
  var G__2833 = arguments.length;
  switch(G__2833) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2835 = arguments.length;
      var i__4642__auto___2836 = 0;
      while (true) {
        if (i__4642__auto___2836 < len__4641__auto___2835) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2836]);
          var G__2837 = i__4642__auto___2836 + 1;
          i__4642__auto___2836 = G__2837;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(3), 0, null);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4663__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__2838 = ntcoll;
      var G__2839 = cljs.core.first(kvs);
      var G__2840 = cljs.core.second(kvs);
      var G__2841 = cljs.core.nnext(kvs);
      tcoll = G__2838;
      key = G__2839;
      val = G__2840;
      kvs = G__2841;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq2829) {
  var G__2830 = cljs.core.first(seq2829);
  var seq2829__$1 = cljs.core.next(seq2829);
  var G__2831 = cljs.core.first(seq2829__$1);
  var seq2829__$2 = cljs.core.next(seq2829__$1);
  var G__2832 = cljs.core.first(seq2829__$2);
  var seq2829__$3 = cljs.core.next(seq2829__$2);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2830, G__2831, G__2832, seq2829__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_(var_args) {
  var G__2846 = arguments.length;
  switch(G__2846) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2848 = arguments.length;
      var i__4642__auto___2849 = 0;
      while (true) {
        if (i__4642__auto___2849 < len__4641__auto___2848) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2849]);
          var G__2850 = i__4642__auto___2849 + 1;
          i__4642__auto___2849 = G__2850;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__2851 = ntcoll;
      var G__2852 = cljs.core.first(ks);
      var G__2853 = cljs.core.next(ks);
      tcoll = G__2851;
      key = G__2852;
      ks = G__2853;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq2843) {
  var G__2844 = cljs.core.first(seq2843);
  var seq2843__$1 = cljs.core.next(seq2843);
  var G__2845 = cljs.core.first(seq2843__$1);
  var seq2843__$2 = cljs.core.next(seq2843__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2844, G__2845, seq2843__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_(var_args) {
  var G__2858 = arguments.length;
  switch(G__2858) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2860 = arguments.length;
      var i__4642__auto___2861 = 0;
      while (true) {
        if (i__4642__auto___2861 < len__4641__auto___2860) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2861]);
          var G__2862 = i__4642__auto___2861 + 1;
          i__4642__auto___2861 = G__2862;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__2863 = ntcoll;
      var G__2864 = cljs.core.first(vals);
      var G__2865 = cljs.core.next(vals);
      tcoll = G__2863;
      val = G__2864;
      vals = G__2865;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq2855) {
  var G__2856 = cljs.core.first(seq2855);
  var seq2855__$1 = cljs.core.next(seq2855);
  var G__2857 = cljs.core.first(seq2855__$1);
  var seq2855__$2 = cljs.core.next(seq2855__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2856, G__2857, seq2855__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a263 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a263) : f.call(null, a263);
    } else {
      var b264 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a263, b264) : f.call(null, a263, b264);
      } else {
        var c265 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a263, b264, c265) : f.call(null, a263, b264, c265);
        } else {
          var d266 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a263, b264, c265, d266) : f.call(null, a263, b264, c265, d266);
          } else {
            var e267 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a263, b264, c265, d266, e267) : f.call(null, a263, b264, c265, d266, e267);
            } else {
              var f268 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a263, b264, c265, d266, e267, f268) : f.call(null, a263, b264, c265, d266, e267, f268);
              } else {
                var g269 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a263, b264, c265, d266, e267, f268, g269) : f.call(null, a263, b264, c265, d266, e267, f268, g269);
                } else {
                  var h270 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a263, b264, c265, d266, e267, f268, g269, h270) : f.call(null, a263, b264, c265, d266, e267, f268, g269, h270);
                  } else {
                    var i271 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a263, b264, c265, d266, e267, f268, g269, h270, i271) : f.call(null, a263, b264, c265, d266, e267, f268, g269, h270, i271);
                    } else {
                      var j272 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a263, b264, c265, d266, e267, f268, g269, h270, i271, j272) : f.call(null, a263, b264, c265, d266, e267, f268, g269, h270, i271, j272);
                      } else {
                        var k273 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a263, b264, c265, d266, e267, f268, g269, h270, i271, j272, k273) : f.call(null, a263, b264, c265, d266, e267, f268, g269, h270, i271, j272, k273);
                        } else {
                          var l274 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a263, b264, c265, d266, e267, f268, g269, h270, i271, j272, k273, l274) : f.call(null, a263, b264, c265, d266, e267, f268, g269, h270, i271, j272, k273, l274);
                          } else {
                            var m275 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a263, b264, c265, d266, e267, f268, g269, h270, i271, j272, k273, l274, m275) : f.call(null, a263, b264, c265, d266, e267, f268, g269, h270, i271, j272, k273, l274, m275);
                            } else {
                              var n276 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a263, b264, c265, d266, e267, f268, g269, h270, i271, j272, k273, l274, m275, n276) : f.call(null, a263, b264, c265, d266, e267, f268, g269, h270, i271, j272, k273, l274, m275, n276);
                              } else {
                                var o277 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a263, b264, c265, d266, e267, f268, g269, h270, i271, j272, k273, l274, m275, n276, o277) : f.call(null, a263, b264, c265, d266, e267, f268, g269, h270, i271, j272, k273, l274, m275, n276, o277);
                                } else {
                                  var p278 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a263, b264, c265, d266, e267, f268, g269, h270, i271, j272, k273, l274, m275, n276, o277, p278) : f.call(null, a263, b264, c265, d266, e267, f268, g269, h270, i271, j272, k273, l274, m275, n276, o277, p278);
                                  } else {
                                    var q279 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a263, b264, c265, d266, e267, f268, g269, h270, i271, j272, k273, l274, m275, n276, o277, p278, q279) : f.call(null, a263, b264, c265, d266, e267, f268, g269, h270, i271, j272, k273, l274, m275, n276, o277, p278, q279);
                                    } else {
                                      var r280 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a263, b264, c265, d266, e267, f268, g269, h270, i271, j272, k273, l274, m275, n276, o277, p278, q279, r280) : f.call(null, a263, b264, c265, d266, e267, f268, g269, h270, i271, j272, k273, l274, m275, n276, o277, p278, q279, r280);
                                      } else {
                                        var s281 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a263, b264, c265, d266, e267, f268, g269, h270, i271, j272, k273, l274, m275, n276, o277, p278, q279, r280, s281) : f.call(null, a263, b264, c265, d266, e267, f268, g269, h270, i271, j272, k273, l274, m275, n276, o277, p278, q279, r280, s281);
                                        } else {
                                          var t282 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a263, b264, c265, d266, e267, f268, g269, h270, i271, j272, k273, l274, m275, n276, o277, p278, q279, r280, s281, t282) : f.call(null, a263, b264, c265, d266, e267, f268, g269, h270, i271, j272, k273, l274, m275, n276, o277, p278, q279, r280, s281, t282);
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply_to_simple = function cljs$core$apply_to_simple(var_args) {
  var G__2867 = arguments.length;
  switch(G__2867) {
    case 2:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$0) {
      return f.cljs$core$IFn$_invoke$arity$0();
    } else {
      return f.call(f);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f, cljs.core._first(args), cljs.core.next(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3 = function(f, a0, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$1) {
      return f.cljs$core$IFn$_invoke$arity$1(a0);
    } else {
      return f.call(f, a0);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f, a0, cljs.core._first(args), cljs.core.next(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4 = function(f, a0, a1, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$2) {
      return f.cljs$core$IFn$_invoke$arity$2(a0, a1);
    } else {
      return f.call(f, a0, a1);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f, a0, a1, cljs.core._first(args), cljs.core.next(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5 = function(f, a0, a1, a2, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$3) {
      return f.cljs$core$IFn$_invoke$arity$3(a0, a1, a2);
    } else {
      return f.call(f, a0, a1, a2);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f, a0, a1, a2, cljs.core._first(args), cljs.core.next(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6 = function(f, a0, a1, a2, a3, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$4) {
      return f.cljs$core$IFn$_invoke$arity$4(a0, a1, a2, a3);
    } else {
      return f.call(f, a0, a1, a2, a3);
    }
  } else {
    var a4 = cljs.core._first(args);
    var next_4 = cljs.core.next(args);
    if (next_4 == null) {
      if (f.cljs$core$IFn$_invoke$arity$5) {
        return f.cljs$core$IFn$_invoke$arity$5(a0, a1, a2, a3, a4);
      } else {
        return f.call(f, a0, a1, a2, a3, a4);
      }
    } else {
      var a5 = cljs.core._first(next_4);
      var next_5 = cljs.core.next(next_4);
      if (next_5 == null) {
        if (f.cljs$core$IFn$_invoke$arity$6) {
          return f.cljs$core$IFn$_invoke$arity$6(a0, a1, a2, a3, a4, a5);
        } else {
          return f.call(f, a0, a1, a2, a3, a4, a5);
        }
      } else {
        var a6 = cljs.core._first(next_5);
        var next_6 = cljs.core.next(next_5);
        if (next_6 == null) {
          if (f.cljs$core$IFn$_invoke$arity$7) {
            return f.cljs$core$IFn$_invoke$arity$7(a0, a1, a2, a3, a4, a5, a6);
          } else {
            return f.call(f, a0, a1, a2, a3, a4, a5, a6);
          }
        } else {
          var a7 = cljs.core._first(next_6);
          var next_7 = cljs.core.next(next_6);
          if (next_7 == null) {
            if (f.cljs$core$IFn$_invoke$arity$8) {
              return f.cljs$core$IFn$_invoke$arity$8(a0, a1, a2, a3, a4, a5, a6, a7);
            } else {
              return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7);
            }
          } else {
            var a8 = cljs.core._first(next_7);
            var next_8 = cljs.core.next(next_7);
            if (next_8 == null) {
              if (f.cljs$core$IFn$_invoke$arity$9) {
                return f.cljs$core$IFn$_invoke$arity$9(a0, a1, a2, a3, a4, a5, a6, a7, a8);
              } else {
                return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8);
              }
            } else {
              var a9 = cljs.core._first(next_8);
              var next_9 = cljs.core.next(next_8);
              if (next_9 == null) {
                if (f.cljs$core$IFn$_invoke$arity$10) {
                  return f.cljs$core$IFn$_invoke$arity$10(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
                } else {
                  return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
                }
              } else {
                var a10 = cljs.core._first(next_9);
                var next_10 = cljs.core.next(next_9);
                if (next_10 == null) {
                  if (f.cljs$core$IFn$_invoke$arity$11) {
                    return f.cljs$core$IFn$_invoke$arity$11(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
                  } else {
                    return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
                  }
                } else {
                  var a11 = cljs.core._first(next_10);
                  var next_11 = cljs.core.next(next_10);
                  if (next_11 == null) {
                    if (f.cljs$core$IFn$_invoke$arity$12) {
                      return f.cljs$core$IFn$_invoke$arity$12(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
                    } else {
                      return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
                    }
                  } else {
                    var a12 = cljs.core._first(next_11);
                    var next_12 = cljs.core.next(next_11);
                    if (next_12 == null) {
                      if (f.cljs$core$IFn$_invoke$arity$13) {
                        return f.cljs$core$IFn$_invoke$arity$13(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
                      } else {
                        return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
                      }
                    } else {
                      var a13 = cljs.core._first(next_12);
                      var next_13 = cljs.core.next(next_12);
                      if (next_13 == null) {
                        if (f.cljs$core$IFn$_invoke$arity$14) {
                          return f.cljs$core$IFn$_invoke$arity$14(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
                        } else {
                          return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
                        }
                      } else {
                        var a14 = cljs.core._first(next_13);
                        var next_14 = cljs.core.next(next_13);
                        if (next_14 == null) {
                          if (f.cljs$core$IFn$_invoke$arity$15) {
                            return f.cljs$core$IFn$_invoke$arity$15(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
                          } else {
                            return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
                          }
                        } else {
                          var a15 = cljs.core._first(next_14);
                          var next_15 = cljs.core.next(next_14);
                          if (next_15 == null) {
                            if (f.cljs$core$IFn$_invoke$arity$16) {
                              return f.cljs$core$IFn$_invoke$arity$16(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
                            } else {
                              return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
                            }
                          } else {
                            var a16 = cljs.core._first(next_15);
                            var next_16 = cljs.core.next(next_15);
                            if (next_16 == null) {
                              if (f.cljs$core$IFn$_invoke$arity$17) {
                                return f.cljs$core$IFn$_invoke$arity$17(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
                              } else {
                                return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
                              }
                            } else {
                              var a17 = cljs.core._first(next_16);
                              var next_17 = cljs.core.next(next_16);
                              if (next_17 == null) {
                                if (f.cljs$core$IFn$_invoke$arity$18) {
                                  return f.cljs$core$IFn$_invoke$arity$18(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
                                } else {
                                  return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
                                }
                              } else {
                                var a18 = cljs.core._first(next_17);
                                var next_18 = cljs.core.next(next_17);
                                if (next_18 == null) {
                                  if (f.cljs$core$IFn$_invoke$arity$19) {
                                    return f.cljs$core$IFn$_invoke$arity$19(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
                                  } else {
                                    return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
                                  }
                                } else {
                                  var a19 = cljs.core._first(next_18);
                                  var next_19 = cljs.core.next(next_18);
                                  if (next_19 == null) {
                                    if (f.cljs$core$IFn$_invoke$arity$20) {
                                      return f.cljs$core$IFn$_invoke$arity$20(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
                                    } else {
                                      return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
                                    }
                                  } else {
                                    var arr__4566__auto__ = [a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19];
                                    var s__4567__auto___2869 = next_19;
                                    while (true) {
                                      if (s__4567__auto___2869) {
                                        arr__4566__auto__.push(cljs.core._first(s__4567__auto___2869));
                                        var G__2870 = cljs.core.next(s__4567__auto___2869);
                                        s__4567__auto___2869 = G__2870;
                                        continue;
                                      } else {
                                      }
                                      break;
                                    }
                                    return f.apply(f, arr__4566__auto__);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply_to_simple.cljs$lang$maxFixedArity = 6;
cljs.core.apply = function cljs$core$apply(var_args) {
  var G__2878 = arguments.length;
  switch(G__2878) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2880 = arguments.length;
      var i__4642__auto___2881 = 0;
      while (true) {
        if (i__4642__auto___2881 < len__4641__auto___2880) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2881]);
          var G__2882 = i__4642__auto___2881 + 1;
          i__4642__auto___2881 = G__2882;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(5), 0, null);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__4663__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  if (f.cljs$lang$applyTo) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = cljs.core.bounded_count(fixed_arity + 1, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = cljs.core.bounded_count(fixed_arity, args) + 1;
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f, x, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 2 + cljs.core.bounded_count(fixed_arity - 1, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f, x, y, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 3 + cljs.core.bounded_count(fixed_arity - 2, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f, x, y, z, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  if (f.cljs$lang$applyTo) {
    var spread_args = cljs.core.spread(args);
    var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, spread_args))));
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 4 + cljs.core.bounded_count(fixed_arity - 3, spread_args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f, a, b, c, d, cljs.core.spread(args));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq2872) {
  var G__2873 = cljs.core.first(seq2872);
  var seq2872__$1 = cljs.core.next(seq2872);
  var G__2874 = cljs.core.first(seq2872__$1);
  var seq2872__$2 = cljs.core.next(seq2872__$1);
  var G__2875 = cljs.core.first(seq2872__$2);
  var seq2872__$3 = cljs.core.next(seq2872__$2);
  var G__2876 = cljs.core.first(seq2872__$3);
  var seq2872__$4 = cljs.core.next(seq2872__$3);
  var G__2877 = cljs.core.first(seq2872__$4);
  var seq2872__$5 = cljs.core.next(seq2872__$4);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2873, G__2874, G__2875, G__2876, G__2877, seq2872__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta(var_args) {
  var G__2891 = arguments.length;
  switch(G__2891) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2908 = arguments.length;
      var i__4642__auto___2909 = 0;
      while (true) {
        if (i__4642__auto___2909 < len__4641__auto___2908) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2909]);
          var G__2910 = i__4642__auto___2909 + 1;
          i__4642__auto___2909 = G__2910;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(6), 0, null);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4663__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__2892 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2892) : f.call(null, G__2892);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__2893 = cljs.core.meta(obj);
    var G__2894 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2893, G__2894) : f.call(null, G__2893, G__2894);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__2895 = cljs.core.meta(obj);
    var G__2896 = a;
    var G__2897 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2895, G__2896, G__2897) : f.call(null, G__2895, G__2896, G__2897);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__2898 = cljs.core.meta(obj);
    var G__2899 = a;
    var G__2900 = b;
    var G__2901 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__2898, G__2899, G__2900, G__2901) : f.call(null, G__2898, G__2899, G__2900, G__2901);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__2902 = cljs.core.meta(obj);
    var G__2903 = a;
    var G__2904 = b;
    var G__2905 = c;
    var G__2906 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__2902, G__2903, G__2904, G__2905, G__2906) : f.call(null, G__2902, G__2903, G__2904, G__2905, G__2906);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq2884) {
  var G__2885 = cljs.core.first(seq2884);
  var seq2884__$1 = cljs.core.next(seq2884);
  var G__2886 = cljs.core.first(seq2884__$1);
  var seq2884__$2 = cljs.core.next(seq2884__$1);
  var G__2887 = cljs.core.first(seq2884__$2);
  var seq2884__$3 = cljs.core.next(seq2884__$2);
  var G__2888 = cljs.core.first(seq2884__$3);
  var seq2884__$4 = cljs.core.next(seq2884__$3);
  var G__2889 = cljs.core.first(seq2884__$4);
  var seq2884__$5 = cljs.core.next(seq2884__$4);
  var G__2890 = cljs.core.first(seq2884__$5);
  var seq2884__$6 = cljs.core.next(seq2884__$5);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2885, G__2886, G__2887, G__2888, G__2889, G__2890, seq2884__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_(var_args) {
  var G__2915 = arguments.length;
  switch(G__2915) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2917 = arguments.length;
      var i__4642__auto___2918 = 0;
      while (true) {
        if (i__4642__auto___2918 < len__4641__auto___2917) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2918]);
          var G__2919 = i__4642__auto___2918 + 1;
          i__4642__auto___2918 = G__2919;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq2912) {
  var G__2913 = cljs.core.first(seq2912);
  var seq2912__$1 = cljs.core.next(seq2912);
  var G__2914 = cljs.core.first(seq2912__$1);
  var seq2912__$2 = cljs.core.next(seq2912__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2913, G__2914, seq2912__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.t_cljs$core2920 !== "undefined") {
  } else {
    cljs.core.t_cljs$core2920 = function(meta2921) {
      this.meta2921 = meta2921;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t_cljs$core2920.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_2922, meta2921__$1) {
      var self__ = this;
      var _2922__$1 = this;
      return new cljs.core.t_cljs$core2920(meta2921__$1);
    };
    cljs.core.t_cljs$core2920.prototype.cljs$core$IMeta$_meta$arity$1 = function(_2922) {
      var self__ = this;
      var _2922__$1 = this;
      return self__.meta2921;
    };
    cljs.core.t_cljs$core2920.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t_cljs$core2920.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t_cljs$core2920.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t_cljs$core2920.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta2921", "meta2921", 725212033, null)], null);
    };
    cljs.core.t_cljs$core2920.cljs$lang$type = true;
    cljs.core.t_cljs$core2920.cljs$lang$ctorStr = "cljs.core/t_cljs$core2920";
    cljs.core.t_cljs$core2920.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
      return cljs.core._write(writer__4291__auto__, "cljs.core/t_cljs$core2920");
    };
    cljs.core.__GT_t_cljs$core2920 = function cljs$core$nil_iter_$___GT_t_cljs$core2920(meta2921) {
      return new cljs.core.t_cljs$core2920(meta2921);
    };
  }
  return new cljs.core.t_cljs$core2920(cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (!this$.hasNext()) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (cljs.core.iterable_QMARK_(coll)) {
    return cljs.core._iterator(coll);
  } else {
    if (coll == null) {
      return cljs.core.nil_iter();
    } else {
      if (typeof coll === "string") {
        return cljs.core.string_iter(coll);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          return cljs.core.array_iter(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error(["Cannot create iterator from ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.Many = function(vals) {
  this.vals = vals;
};
cljs.core.Many.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  self__.vals.push(o);
  return this$;
};
cljs.core.Many.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  return self__.vals.shift();
};
cljs.core.Many.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return self__.vals.length === 0;
};
cljs.core.Many.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return ["Many: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.vals)].join("");
};
cljs.core.Many.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vals", "vals", -1886377036, null)], null);
};
cljs.core.Many.cljs$lang$type = true;
cljs.core.Many.cljs$lang$ctorStr = "cljs.core/Many";
cljs.core.Many.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/Many");
};
cljs.core.__GT_Many = function cljs$core$__GT_Many(vals) {
  return new cljs.core.Many(vals);
};
cljs.core.NONE = {};
cljs.core.Single = function(val) {
  this.val = val;
};
cljs.core.Single.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  if (self__.val === cljs.core.NONE) {
    self__.val = o;
    return this$;
  } else {
    return new cljs.core.Many([self__.val, o]);
  }
};
cljs.core.Single.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  if (self__.val === cljs.core.NONE) {
    throw new Error("Removing object from empty buffer");
  } else {
    var ret = self__.val;
    self__.val = cljs.core.NONE;
    return ret;
  }
};
cljs.core.Single.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return self__.val === cljs.core.NONE;
};
cljs.core.Single.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return ["Single: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.val)].join("");
};
cljs.core.Single.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Single.cljs$lang$type = true;
cljs.core.Single.cljs$lang$ctorStr = "cljs.core/Single";
cljs.core.Single.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/Single");
};
cljs.core.__GT_Single = function cljs$core$__GT_Single(val) {
  return new cljs.core.Single(val);
};
cljs.core.Empty = function() {
};
cljs.core.Empty.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  return new cljs.core.Single(o);
};
cljs.core.Empty.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  throw new Error("Removing object from empty buffer");
};
cljs.core.Empty.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return true;
};
cljs.core.Empty.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return "Empty";
};
cljs.core.Empty.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.Empty.cljs$lang$type = true;
cljs.core.Empty.cljs$lang$ctorStr = "cljs.core/Empty";
cljs.core.Empty.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/Empty");
};
cljs.core.__GT_Empty = function cljs$core$__GT_Empty() {
  return new cljs.core.Empty;
};
cljs.core.EMPTY = new cljs.core.Empty;
cljs.core.MultiIterator = function(iters) {
  this.iters = iters;
};
cljs.core.MultiIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (!iter.hasNext()) {
        return false;
      } else {
        var G__2923 = cljs.core.next(iters__$1);
        iters__$1 = G__2923;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var nexts = [];
  var n__4518__auto___2924 = self__.iters.length;
  var i_2925 = 0;
  while (true) {
    if (i_2925 < n__4518__auto___2924) {
      nexts[i_2925] = self__.iters[i_2925].next();
      var G__2926 = i_2925 + 1;
      i_2925 = G__2926;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(nexts, 0);
};
cljs.core.MultiIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iters", "iters", 719353031, null)], null);
};
cljs.core.MultiIterator.cljs$lang$type = true;
cljs.core.MultiIterator.cljs$lang$ctorStr = "cljs.core/MultiIterator";
cljs.core.MultiIterator.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/MultiIterator");
};
cljs.core.__GT_MultiIterator = function cljs$core$__GT_MultiIterator(iters) {
  return new cljs.core.MultiIterator(iters);
};
cljs.core.chunkIteratorSeq = function cljs$core$chunkIteratorSeq(iter) {
  return new cljs.core.LazySeq(null, function() {
    if (iter.hasNext()) {
      var arr = [];
      var n = 0;
      while (true) {
        if (cljs.core.truth_(function() {
          var and__4036__auto__ = iter.hasNext();
          if (cljs.core.truth_(and__4036__auto__)) {
            return n < 32;
          } else {
            return and__4036__auto__;
          }
        }())) {
          arr[n] = iter.next();
          var G__2927 = n + 1;
          n = G__2927;
          continue;
        } else {
          return cljs.core.chunk_cons(cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arr, 0, n), cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1(iter) : cljs.core.chunkIteratorSeq.call(null, iter));
        }
        break;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.TransformerIterator = function(buffer, _next, completed, xf, sourceIter, multi) {
  this.buffer = buffer;
  this._next = _next;
  this.completed = completed;
  this.xf = xf;
  this.sourceIter = sourceIter;
  this.multi = multi;
};
cljs.core.TransformerIterator.prototype.step = function() {
  var self__ = this;
  var this$ = this;
  if (!(self__._next === cljs.core.NONE)) {
    return true;
  } else {
    while (true) {
      if (self__._next === cljs.core.NONE) {
        if (self__.buffer.isEmpty()) {
          if (self__.completed) {
            return false;
          } else {
            if (self__.sourceIter.hasNext()) {
              var iter = self__.multi ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xf, cljs.core.cons(null, self__.sourceIter.next())) : function() {
                var G__2928 = null;
                var G__2929 = self__.sourceIter.next();
                return self__.xf.cljs$core$IFn$_invoke$arity$2 ? self__.xf.cljs$core$IFn$_invoke$arity$2(G__2928, G__2929) : self__.xf.call(null, G__2928, G__2929);
              }();
              if (cljs.core.reduced_QMARK_(iter)) {
                self__.xf.cljs$core$IFn$_invoke$arity$1 ? self__.xf.cljs$core$IFn$_invoke$arity$1(null) : self__.xf.call(null, null);
                self__.completed = true;
              } else {
              }
              continue;
            } else {
              self__.xf.cljs$core$IFn$_invoke$arity$1 ? self__.xf.cljs$core$IFn$_invoke$arity$1(null) : self__.xf.call(null, null);
              self__.completed = true;
              continue;
            }
          }
        } else {
          self__._next = self__.buffer.remove();
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  }
};
cljs.core.TransformerIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return this$.step();
};
cljs.core.TransformerIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    var ret = self__._next;
    self__._next = cljs.core.NONE;
    return ret;
  } else {
    throw new Error("No such element");
  }
};
cljs.core.TransformerIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.TransformerIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buffer", "buffer", -2037140571, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "completed", "completed", 1154475024, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "xf", "xf", 2042434515, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "sourceIter", "sourceIter", 1068220306, null), new cljs.core.Symbol(null, 
  "multi", "multi", 1450238522, null)], null);
};
cljs.core.TransformerIterator.cljs$lang$type = true;
cljs.core.TransformerIterator.cljs$lang$ctorStr = "cljs.core/TransformerIterator";
cljs.core.TransformerIterator.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/TransformerIterator");
};
cljs.core.__GT_TransformerIterator = function cljs$core$__GT_TransformerIterator(buffer, _next, completed, xf, sourceIter, multi) {
  return new cljs.core.TransformerIterator(buffer, _next, completed, xf, sourceIter, multi);
};
var G__2930_2933 = cljs.core.TransformerIterator.prototype;
var G__2931_2934 = cljs.core.ITER_SYMBOL;
var G__2932_2935 = function(G__2930_2933, G__2931_2934) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__2930_2933, G__2931_2934);
goog.object.set(G__2930_2933, G__2931_2934, G__2932_2935);
cljs.core.transformer_iterator = function cljs$core$transformer_iterator(xform, sourceIter, multi) {
  var iterator = new cljs.core.TransformerIterator(cljs.core.EMPTY, cljs.core.NONE, false, null, sourceIter, multi);
  iterator.xf = function() {
    var G__2936 = function(iterator) {
      return function() {
        var G__2937 = null;
        var G__2937__0 = function() {
          return null;
        };
        var G__2937__1 = function(acc) {
          return acc;
        };
        var G__2937__2 = function(acc, o) {
          iterator.buffer = iterator.buffer.add(o);
          return acc;
        };
        G__2937 = function(acc, o) {
          switch(arguments.length) {
            case 0:
              return G__2937__0.call(this);
            case 1:
              return G__2937__1.call(this, acc);
            case 2:
              return G__2937__2.call(this, acc, o);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__2937.cljs$core$IFn$_invoke$arity$0 = G__2937__0;
        G__2937.cljs$core$IFn$_invoke$arity$1 = G__2937__1;
        G__2937.cljs$core$IFn$_invoke$arity$2 = G__2937__2;
        return G__2937;
      }();
    }(iterator);
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__2936) : xform.call(null, G__2936);
  }();
  return iterator;
};
cljs.core.TransformerIterator.create = function(xform, source) {
  return cljs.core.transformer_iterator(xform, source, false);
};
cljs.core.TransformerIterator.createMulti = function(xform, sources) {
  return cljs.core.transformer_iterator(xform, new cljs.core.MultiIterator(cljs.core.to_array(sources)), true);
};
cljs.core.sequence = function cljs$core$sequence(var_args) {
  var G__2942 = arguments.length;
  switch(G__2942) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2944 = arguments.length;
      var i__4642__auto___2945 = 0;
      while (true) {
        if (i__4642__auto___2945 < len__4641__auto___2944) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2945]);
          var G__2946 = i__4642__auto___2945 + 1;
          i__4642__auto___2945 = G__2946;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__4047__auto__ = cljs.core.seq(coll);
    if (or__4047__auto__) {
      return or__4047__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  var or__4047__auto__ = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.create(xform, cljs.core.iter(coll)));
  if (cljs.core.truth_(or__4047__auto__)) {
    return or__4047__auto__;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  var or__4047__auto__ = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.createMulti(xform, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.iter, cljs.core.cons(coll, colls))));
  if (cljs.core.truth_(or__4047__auto__)) {
    return or__4047__auto__;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sequence.cljs$lang$applyTo = function(seq2939) {
  var G__2940 = cljs.core.first(seq2939);
  var seq2939__$1 = cljs.core.next(seq2939);
  var G__2941 = cljs.core.first(seq2939__$1);
  var seq2939__$2 = cljs.core.next(seq2939__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2940, G__2941, seq2939__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__2947 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__2947) : pred.call(null, G__2947);
      }())) {
        var G__2948 = pred;
        var G__2949 = cljs.core.next(coll);
        pred = G__2948;
        coll = G__2949;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__4047__auto__ = function() {
        var G__2951 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__2951) : pred.call(null, G__2951);
      }();
      if (cljs.core.truth_(or__4047__auto__)) {
        return or__4047__auto__;
      } else {
        var G__2952 = pred;
        var G__2953 = cljs.core.next(coll);
        pred = G__2952;
        coll = G__2953;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error(["Argument must be an integer: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__2954 = null;
    var G__2954__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__2954__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__2954__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__2954__3 = function() {
      var G__2955__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__2955 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__2956__i = 0, G__2956__a = new Array(arguments.length - 2);
          while (G__2956__i < G__2956__a.length) {
            G__2956__a[G__2956__i] = arguments[G__2956__i + 2];
            ++G__2956__i;
          }
          zs = new cljs.core.IndexedSeq(G__2956__a, 0, null);
        }
        return G__2955__delegate.call(this, x, y, zs);
      };
      G__2955.cljs$lang$maxFixedArity = 2;
      G__2955.cljs$lang$applyTo = function(arglist__2957) {
        var x = cljs.core.first(arglist__2957);
        arglist__2957 = cljs.core.next(arglist__2957);
        var y = cljs.core.first(arglist__2957);
        var zs = cljs.core.rest(arglist__2957);
        return G__2955__delegate(x, y, zs);
      };
      G__2955.cljs$core$IFn$_invoke$arity$variadic = G__2955__delegate;
      return G__2955;
    }();
    G__2954 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__2954__0.call(this);
        case 1:
          return G__2954__1.call(this, x);
        case 2:
          return G__2954__2.call(this, x, y);
        default:
          var G__2958 = null;
          if (arguments.length > 2) {
            var G__2959__i = 0, G__2959__a = new Array(arguments.length - 2);
            while (G__2959__i < G__2959__a.length) {
              G__2959__a[G__2959__i] = arguments[G__2959__i + 2];
              ++G__2959__i;
            }
            G__2958 = new cljs.core.IndexedSeq(G__2959__a, 0, null);
          }
          return G__2954__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__2958);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__2954.cljs$lang$maxFixedArity = 2;
    G__2954.cljs$lang$applyTo = G__2954__3.cljs$lang$applyTo;
    G__2954.cljs$core$IFn$_invoke$arity$0 = G__2954__0;
    G__2954.cljs$core$IFn$_invoke$arity$1 = G__2954__1;
    G__2954.cljs$core$IFn$_invoke$arity$2 = G__2954__2;
    G__2954.cljs$core$IFn$_invoke$arity$variadic = G__2954__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__2954;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__2960__delegate = function(args) {
      return x;
    };
    var G__2960 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__2961__i = 0, G__2961__a = new Array(arguments.length - 0);
        while (G__2961__i < G__2961__a.length) {
          G__2961__a[G__2961__i] = arguments[G__2961__i + 0];
          ++G__2961__i;
        }
        args = new cljs.core.IndexedSeq(G__2961__a, 0, null);
      }
      return G__2960__delegate.call(this, args);
    };
    G__2960.cljs$lang$maxFixedArity = 0;
    G__2960.cljs$lang$applyTo = function(arglist__2962) {
      var args = cljs.core.seq(arglist__2962);
      return G__2960__delegate(args);
    };
    G__2960.cljs$core$IFn$_invoke$arity$variadic = G__2960__delegate;
    return G__2960;
  }();
};
cljs.core.comp = function cljs$core$comp(var_args) {
  var G__2968 = arguments.length;
  switch(G__2968) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2986 = arguments.length;
      var i__4642__auto___2987 = 0;
      while (true) {
        if (i__4642__auto___2987 < len__4641__auto___2986) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2987]);
          var G__2988 = i__4642__auto___2987 + 1;
          i__4642__auto___2987 = G__2988;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(3), 0, null);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4663__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__2989 = null;
    var G__2989__0 = function() {
      var G__2969 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2969) : f.call(null, G__2969);
    };
    var G__2989__1 = function(x) {
      var G__2970 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2970) : f.call(null, G__2970);
    };
    var G__2989__2 = function(x, y) {
      var G__2971 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2971) : f.call(null, G__2971);
    };
    var G__2989__3 = function(x, y, z) {
      var G__2972 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2972) : f.call(null, G__2972);
    };
    var G__2989__4 = function() {
      var G__2990__delegate = function(x, y, z, args) {
        var G__2973 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2973) : f.call(null, G__2973);
      };
      var G__2990 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__2991__i = 0, G__2991__a = new Array(arguments.length - 3);
          while (G__2991__i < G__2991__a.length) {
            G__2991__a[G__2991__i] = arguments[G__2991__i + 3];
            ++G__2991__i;
          }
          args = new cljs.core.IndexedSeq(G__2991__a, 0, null);
        }
        return G__2990__delegate.call(this, x, y, z, args);
      };
      G__2990.cljs$lang$maxFixedArity = 3;
      G__2990.cljs$lang$applyTo = function(arglist__2992) {
        var x = cljs.core.first(arglist__2992);
        arglist__2992 = cljs.core.next(arglist__2992);
        var y = cljs.core.first(arglist__2992);
        arglist__2992 = cljs.core.next(arglist__2992);
        var z = cljs.core.first(arglist__2992);
        var args = cljs.core.rest(arglist__2992);
        return G__2990__delegate(x, y, z, args);
      };
      G__2990.cljs$core$IFn$_invoke$arity$variadic = G__2990__delegate;
      return G__2990;
    }();
    G__2989 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__2989__0.call(this);
        case 1:
          return G__2989__1.call(this, x);
        case 2:
          return G__2989__2.call(this, x, y);
        case 3:
          return G__2989__3.call(this, x, y, z);
        default:
          var G__2993 = null;
          if (arguments.length > 3) {
            var G__2994__i = 0, G__2994__a = new Array(arguments.length - 3);
            while (G__2994__i < G__2994__a.length) {
              G__2994__a[G__2994__i] = arguments[G__2994__i + 3];
              ++G__2994__i;
            }
            G__2993 = new cljs.core.IndexedSeq(G__2994__a, 0, null);
          }
          return G__2989__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__2993);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__2989.cljs$lang$maxFixedArity = 3;
    G__2989.cljs$lang$applyTo = G__2989__4.cljs$lang$applyTo;
    G__2989.cljs$core$IFn$_invoke$arity$0 = G__2989__0;
    G__2989.cljs$core$IFn$_invoke$arity$1 = G__2989__1;
    G__2989.cljs$core$IFn$_invoke$arity$2 = G__2989__2;
    G__2989.cljs$core$IFn$_invoke$arity$3 = G__2989__3;
    G__2989.cljs$core$IFn$_invoke$arity$variadic = G__2989__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__2989;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__2995 = null;
    var G__2995__0 = function() {
      var G__2974 = function() {
        var G__2975 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2975) : g.call(null, G__2975);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2974) : f.call(null, G__2974);
    };
    var G__2995__1 = function(x) {
      var G__2976 = function() {
        var G__2977 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2977) : g.call(null, G__2977);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2976) : f.call(null, G__2976);
    };
    var G__2995__2 = function(x, y) {
      var G__2978 = function() {
        var G__2979 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2979) : g.call(null, G__2979);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2978) : f.call(null, G__2978);
    };
    var G__2995__3 = function(x, y, z) {
      var G__2980 = function() {
        var G__2981 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2981) : g.call(null, G__2981);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2980) : f.call(null, G__2980);
    };
    var G__2995__4 = function() {
      var G__2996__delegate = function(x, y, z, args) {
        var G__2982 = function() {
          var G__2983 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2983) : g.call(null, G__2983);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2982) : f.call(null, G__2982);
      };
      var G__2996 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__2997__i = 0, G__2997__a = new Array(arguments.length - 3);
          while (G__2997__i < G__2997__a.length) {
            G__2997__a[G__2997__i] = arguments[G__2997__i + 3];
            ++G__2997__i;
          }
          args = new cljs.core.IndexedSeq(G__2997__a, 0, null);
        }
        return G__2996__delegate.call(this, x, y, z, args);
      };
      G__2996.cljs$lang$maxFixedArity = 3;
      G__2996.cljs$lang$applyTo = function(arglist__2998) {
        var x = cljs.core.first(arglist__2998);
        arglist__2998 = cljs.core.next(arglist__2998);
        var y = cljs.core.first(arglist__2998);
        arglist__2998 = cljs.core.next(arglist__2998);
        var z = cljs.core.first(arglist__2998);
        var args = cljs.core.rest(arglist__2998);
        return G__2996__delegate(x, y, z, args);
      };
      G__2996.cljs$core$IFn$_invoke$arity$variadic = G__2996__delegate;
      return G__2996;
    }();
    G__2995 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__2995__0.call(this);
        case 1:
          return G__2995__1.call(this, x);
        case 2:
          return G__2995__2.call(this, x, y);
        case 3:
          return G__2995__3.call(this, x, y, z);
        default:
          var G__2999 = null;
          if (arguments.length > 3) {
            var G__3000__i = 0, G__3000__a = new Array(arguments.length - 3);
            while (G__3000__i < G__3000__a.length) {
              G__3000__a[G__3000__i] = arguments[G__3000__i + 3];
              ++G__3000__i;
            }
            G__2999 = new cljs.core.IndexedSeq(G__3000__a, 0, null);
          }
          return G__2995__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__2999);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__2995.cljs$lang$maxFixedArity = 3;
    G__2995.cljs$lang$applyTo = G__2995__4.cljs$lang$applyTo;
    G__2995.cljs$core$IFn$_invoke$arity$0 = G__2995__0;
    G__2995.cljs$core$IFn$_invoke$arity$1 = G__2995__1;
    G__2995.cljs$core$IFn$_invoke$arity$2 = G__2995__2;
    G__2995.cljs$core$IFn$_invoke$arity$3 = G__2995__3;
    G__2995.cljs$core$IFn$_invoke$arity$variadic = G__2995__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__2995;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__3001__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__3002 = function() {
              var fexpr__2984 = cljs.core.first(fs__$2);
              return fexpr__2984.cljs$core$IFn$_invoke$arity$1 ? fexpr__2984.cljs$core$IFn$_invoke$arity$1(ret) : fexpr__2984.call(null, ret);
            }();
            var G__3003 = cljs.core.next(fs__$2);
            ret = G__3002;
            fs__$2 = G__3003;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__3001 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__3004__i = 0, G__3004__a = new Array(arguments.length - 0);
          while (G__3004__i < G__3004__a.length) {
            G__3004__a[G__3004__i] = arguments[G__3004__i + 0];
            ++G__3004__i;
          }
          args = new cljs.core.IndexedSeq(G__3004__a, 0, null);
        }
        return G__3001__delegate.call(this, args);
      };
      G__3001.cljs$lang$maxFixedArity = 0;
      G__3001.cljs$lang$applyTo = function(arglist__3005) {
        var args = cljs.core.seq(arglist__3005);
        return G__3001__delegate(args);
      };
      G__3001.cljs$core$IFn$_invoke$arity$variadic = G__3001__delegate;
      return G__3001;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq2964) {
  var G__2965 = cljs.core.first(seq2964);
  var seq2964__$1 = cljs.core.next(seq2964);
  var G__2966 = cljs.core.first(seq2964__$1);
  var seq2964__$2 = cljs.core.next(seq2964__$1);
  var G__2967 = cljs.core.first(seq2964__$2);
  var seq2964__$3 = cljs.core.next(seq2964__$2);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2965, G__2966, G__2967, seq2964__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial(var_args) {
  var G__3012 = arguments.length;
  switch(G__3012) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___3014 = arguments.length;
      var i__4642__auto___3015 = 0;
      while (true) {
        if (i__4642__auto___3015 < len__4641__auto___3014) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___3015]);
          var G__3016 = i__4642__auto___3015 + 1;
          i__4642__auto___3015 = G__3016;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(4), 0, null);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4663__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__3017 = null;
    var G__3017__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__3017__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__3017__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__3017__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__3017__4 = function() {
      var G__3018__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0));
      };
      var G__3018 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3019__i = 0, G__3019__a = new Array(arguments.length - 3);
          while (G__3019__i < G__3019__a.length) {
            G__3019__a[G__3019__i] = arguments[G__3019__i + 3];
            ++G__3019__i;
          }
          args = new cljs.core.IndexedSeq(G__3019__a, 0, null);
        }
        return G__3018__delegate.call(this, x, y, z, args);
      };
      G__3018.cljs$lang$maxFixedArity = 3;
      G__3018.cljs$lang$applyTo = function(arglist__3020) {
        var x = cljs.core.first(arglist__3020);
        arglist__3020 = cljs.core.next(arglist__3020);
        var y = cljs.core.first(arglist__3020);
        arglist__3020 = cljs.core.next(arglist__3020);
        var z = cljs.core.first(arglist__3020);
        var args = cljs.core.rest(arglist__3020);
        return G__3018__delegate(x, y, z, args);
      };
      G__3018.cljs$core$IFn$_invoke$arity$variadic = G__3018__delegate;
      return G__3018;
    }();
    G__3017 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__3017__0.call(this);
        case 1:
          return G__3017__1.call(this, x);
        case 2:
          return G__3017__2.call(this, x, y);
        case 3:
          return G__3017__3.call(this, x, y, z);
        default:
          var G__3021 = null;
          if (arguments.length > 3) {
            var G__3022__i = 0, G__3022__a = new Array(arguments.length - 3);
            while (G__3022__i < G__3022__a.length) {
              G__3022__a[G__3022__i] = arguments[G__3022__i + 3];
              ++G__3022__i;
            }
            G__3021 = new cljs.core.IndexedSeq(G__3022__a, 0, null);
          }
          return G__3017__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3021);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3017.cljs$lang$maxFixedArity = 3;
    G__3017.cljs$lang$applyTo = G__3017__4.cljs$lang$applyTo;
    G__3017.cljs$core$IFn$_invoke$arity$0 = G__3017__0;
    G__3017.cljs$core$IFn$_invoke$arity$1 = G__3017__1;
    G__3017.cljs$core$IFn$_invoke$arity$2 = G__3017__2;
    G__3017.cljs$core$IFn$_invoke$arity$3 = G__3017__3;
    G__3017.cljs$core$IFn$_invoke$arity$variadic = G__3017__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3017;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__3023 = null;
    var G__3023__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__3023__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__3023__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__3023__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__3023__4 = function() {
      var G__3024__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([z, args], 0));
      };
      var G__3024 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3025__i = 0, G__3025__a = new Array(arguments.length - 3);
          while (G__3025__i < G__3025__a.length) {
            G__3025__a[G__3025__i] = arguments[G__3025__i + 3];
            ++G__3025__i;
          }
          args = new cljs.core.IndexedSeq(G__3025__a, 0, null);
        }
        return G__3024__delegate.call(this, x, y, z, args);
      };
      G__3024.cljs$lang$maxFixedArity = 3;
      G__3024.cljs$lang$applyTo = function(arglist__3026) {
        var x = cljs.core.first(arglist__3026);
        arglist__3026 = cljs.core.next(arglist__3026);
        var y = cljs.core.first(arglist__3026);
        arglist__3026 = cljs.core.next(arglist__3026);
        var z = cljs.core.first(arglist__3026);
        var args = cljs.core.rest(arglist__3026);
        return G__3024__delegate(x, y, z, args);
      };
      G__3024.cljs$core$IFn$_invoke$arity$variadic = G__3024__delegate;
      return G__3024;
    }();
    G__3023 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__3023__0.call(this);
        case 1:
          return G__3023__1.call(this, x);
        case 2:
          return G__3023__2.call(this, x, y);
        case 3:
          return G__3023__3.call(this, x, y, z);
        default:
          var G__3027 = null;
          if (arguments.length > 3) {
            var G__3028__i = 0, G__3028__a = new Array(arguments.length - 3);
            while (G__3028__i < G__3028__a.length) {
              G__3028__a[G__3028__i] = arguments[G__3028__i + 3];
              ++G__3028__i;
            }
            G__3027 = new cljs.core.IndexedSeq(G__3028__a, 0, null);
          }
          return G__3023__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3027);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3023.cljs$lang$maxFixedArity = 3;
    G__3023.cljs$lang$applyTo = G__3023__4.cljs$lang$applyTo;
    G__3023.cljs$core$IFn$_invoke$arity$0 = G__3023__0;
    G__3023.cljs$core$IFn$_invoke$arity$1 = G__3023__1;
    G__3023.cljs$core$IFn$_invoke$arity$2 = G__3023__2;
    G__3023.cljs$core$IFn$_invoke$arity$3 = G__3023__3;
    G__3023.cljs$core$IFn$_invoke$arity$variadic = G__3023__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3023;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__3029 = null;
    var G__3029__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__3029__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__3029__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__3029__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__3029__4 = function() {
      var G__3030__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([y, z, args], 0));
      };
      var G__3030 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3031__i = 0, G__3031__a = new Array(arguments.length - 3);
          while (G__3031__i < G__3031__a.length) {
            G__3031__a[G__3031__i] = arguments[G__3031__i + 3];
            ++G__3031__i;
          }
          args = new cljs.core.IndexedSeq(G__3031__a, 0, null);
        }
        return G__3030__delegate.call(this, x, y, z, args);
      };
      G__3030.cljs$lang$maxFixedArity = 3;
      G__3030.cljs$lang$applyTo = function(arglist__3032) {
        var x = cljs.core.first(arglist__3032);
        arglist__3032 = cljs.core.next(arglist__3032);
        var y = cljs.core.first(arglist__3032);
        arglist__3032 = cljs.core.next(arglist__3032);
        var z = cljs.core.first(arglist__3032);
        var args = cljs.core.rest(arglist__3032);
        return G__3030__delegate(x, y, z, args);
      };
      G__3030.cljs$core$IFn$_invoke$arity$variadic = G__3030__delegate;
      return G__3030;
    }();
    G__3029 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__3029__0.call(this);
        case 1:
          return G__3029__1.call(this, x);
        case 2:
          return G__3029__2.call(this, x, y);
        case 3:
          return G__3029__3.call(this, x, y, z);
        default:
          var G__3033 = null;
          if (arguments.length > 3) {
            var G__3034__i = 0, G__3034__a = new Array(arguments.length - 3);
            while (G__3034__i < G__3034__a.length) {
              G__3034__a[G__3034__i] = arguments[G__3034__i + 3];
              ++G__3034__i;
            }
            G__3033 = new cljs.core.IndexedSeq(G__3034__a, 0, null);
          }
          return G__3029__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3033);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3029.cljs$lang$maxFixedArity = 3;
    G__3029.cljs$lang$applyTo = G__3029__4.cljs$lang$applyTo;
    G__3029.cljs$core$IFn$_invoke$arity$0 = G__3029__0;
    G__3029.cljs$core$IFn$_invoke$arity$1 = G__3029__1;
    G__3029.cljs$core$IFn$_invoke$arity$2 = G__3029__2;
    G__3029.cljs$core$IFn$_invoke$arity$3 = G__3029__3;
    G__3029.cljs$core$IFn$_invoke$arity$variadic = G__3029__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3029;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__3035__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__3035 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__3036__i = 0, G__3036__a = new Array(arguments.length - 0);
        while (G__3036__i < G__3036__a.length) {
          G__3036__a[G__3036__i] = arguments[G__3036__i + 0];
          ++G__3036__i;
        }
        args = new cljs.core.IndexedSeq(G__3036__a, 0, null);
      }
      return G__3035__delegate.call(this, args);
    };
    G__3035.cljs$lang$maxFixedArity = 0;
    G__3035.cljs$lang$applyTo = function(arglist__3037) {
      var args = cljs.core.seq(arglist__3037);
      return G__3035__delegate(args);
    };
    G__3035.cljs$core$IFn$_invoke$arity$variadic = G__3035__delegate;
    return G__3035;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq3007) {
  var G__3008 = cljs.core.first(seq3007);
  var seq3007__$1 = cljs.core.next(seq3007);
  var G__3009 = cljs.core.first(seq3007__$1);
  var seq3007__$2 = cljs.core.next(seq3007__$1);
  var G__3010 = cljs.core.first(seq3007__$2);
  var seq3007__$3 = cljs.core.next(seq3007__$2);
  var G__3011 = cljs.core.first(seq3007__$3);
  var seq3007__$4 = cljs.core.next(seq3007__$3);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3008, G__3009, G__3010, G__3011, seq3007__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil(var_args) {
  var G__3039 = arguments.length;
  switch(G__3039) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__3057 = null;
    var G__3057__1 = function(a) {
      var G__3040 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3040) : f.call(null, G__3040);
    };
    var G__3057__2 = function(a, b) {
      var G__3041 = a == null ? x : a;
      var G__3042 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3041, G__3042) : f.call(null, G__3041, G__3042);
    };
    var G__3057__3 = function(a, b, c) {
      var G__3043 = a == null ? x : a;
      var G__3044 = b;
      var G__3045 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3043, G__3044, G__3045) : f.call(null, G__3043, G__3044, G__3045);
    };
    var G__3057__4 = function() {
      var G__3058__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__3058 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__3059__i = 0, G__3059__a = new Array(arguments.length - 3);
          while (G__3059__i < G__3059__a.length) {
            G__3059__a[G__3059__i] = arguments[G__3059__i + 3];
            ++G__3059__i;
          }
          ds = new cljs.core.IndexedSeq(G__3059__a, 0, null);
        }
        return G__3058__delegate.call(this, a, b, c, ds);
      };
      G__3058.cljs$lang$maxFixedArity = 3;
      G__3058.cljs$lang$applyTo = function(arglist__3060) {
        var a = cljs.core.first(arglist__3060);
        arglist__3060 = cljs.core.next(arglist__3060);
        var b = cljs.core.first(arglist__3060);
        arglist__3060 = cljs.core.next(arglist__3060);
        var c = cljs.core.first(arglist__3060);
        var ds = cljs.core.rest(arglist__3060);
        return G__3058__delegate(a, b, c, ds);
      };
      G__3058.cljs$core$IFn$_invoke$arity$variadic = G__3058__delegate;
      return G__3058;
    }();
    G__3057 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__3057__1.call(this, a);
        case 2:
          return G__3057__2.call(this, a, b);
        case 3:
          return G__3057__3.call(this, a, b, c);
        default:
          var G__3061 = null;
          if (arguments.length > 3) {
            var G__3062__i = 0, G__3062__a = new Array(arguments.length - 3);
            while (G__3062__i < G__3062__a.length) {
              G__3062__a[G__3062__i] = arguments[G__3062__i + 3];
              ++G__3062__i;
            }
            G__3061 = new cljs.core.IndexedSeq(G__3062__a, 0, null);
          }
          return G__3057__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__3061);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3057.cljs$lang$maxFixedArity = 3;
    G__3057.cljs$lang$applyTo = G__3057__4.cljs$lang$applyTo;
    G__3057.cljs$core$IFn$_invoke$arity$1 = G__3057__1;
    G__3057.cljs$core$IFn$_invoke$arity$2 = G__3057__2;
    G__3057.cljs$core$IFn$_invoke$arity$3 = G__3057__3;
    G__3057.cljs$core$IFn$_invoke$arity$variadic = G__3057__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3057;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__3063 = null;
    var G__3063__2 = function(a, b) {
      var G__3046 = a == null ? x : a;
      var G__3047 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3046, G__3047) : f.call(null, G__3046, G__3047);
    };
    var G__3063__3 = function(a, b, c) {
      var G__3048 = a == null ? x : a;
      var G__3049 = b == null ? y : b;
      var G__3050 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3048, G__3049, G__3050) : f.call(null, G__3048, G__3049, G__3050);
    };
    var G__3063__4 = function() {
      var G__3064__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__3064 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__3065__i = 0, G__3065__a = new Array(arguments.length - 3);
          while (G__3065__i < G__3065__a.length) {
            G__3065__a[G__3065__i] = arguments[G__3065__i + 3];
            ++G__3065__i;
          }
          ds = new cljs.core.IndexedSeq(G__3065__a, 0, null);
        }
        return G__3064__delegate.call(this, a, b, c, ds);
      };
      G__3064.cljs$lang$maxFixedArity = 3;
      G__3064.cljs$lang$applyTo = function(arglist__3066) {
        var a = cljs.core.first(arglist__3066);
        arglist__3066 = cljs.core.next(arglist__3066);
        var b = cljs.core.first(arglist__3066);
        arglist__3066 = cljs.core.next(arglist__3066);
        var c = cljs.core.first(arglist__3066);
        var ds = cljs.core.rest(arglist__3066);
        return G__3064__delegate(a, b, c, ds);
      };
      G__3064.cljs$core$IFn$_invoke$arity$variadic = G__3064__delegate;
      return G__3064;
    }();
    G__3063 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__3063__2.call(this, a, b);
        case 3:
          return G__3063__3.call(this, a, b, c);
        default:
          var G__3067 = null;
          if (arguments.length > 3) {
            var G__3068__i = 0, G__3068__a = new Array(arguments.length - 3);
            while (G__3068__i < G__3068__a.length) {
              G__3068__a[G__3068__i] = arguments[G__3068__i + 3];
              ++G__3068__i;
            }
            G__3067 = new cljs.core.IndexedSeq(G__3068__a, 0, null);
          }
          return G__3063__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__3067);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3063.cljs$lang$maxFixedArity = 3;
    G__3063.cljs$lang$applyTo = G__3063__4.cljs$lang$applyTo;
    G__3063.cljs$core$IFn$_invoke$arity$2 = G__3063__2;
    G__3063.cljs$core$IFn$_invoke$arity$3 = G__3063__3;
    G__3063.cljs$core$IFn$_invoke$arity$variadic = G__3063__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3063;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__3069 = null;
    var G__3069__2 = function(a, b) {
      var G__3051 = a == null ? x : a;
      var G__3052 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3051, G__3052) : f.call(null, G__3051, G__3052);
    };
    var G__3069__3 = function(a, b, c) {
      var G__3053 = a == null ? x : a;
      var G__3054 = b == null ? y : b;
      var G__3055 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3053, G__3054, G__3055) : f.call(null, G__3053, G__3054, G__3055);
    };
    var G__3069__4 = function() {
      var G__3070__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__3070 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__3071__i = 0, G__3071__a = new Array(arguments.length - 3);
          while (G__3071__i < G__3071__a.length) {
            G__3071__a[G__3071__i] = arguments[G__3071__i + 3];
            ++G__3071__i;
          }
          ds = new cljs.core.IndexedSeq(G__3071__a, 0, null);
        }
        return G__3070__delegate.call(this, a, b, c, ds);
      };
      G__3070.cljs$lang$maxFixedArity = 3;
      G__3070.cljs$lang$applyTo = function(arglist__3072) {
        var a = cljs.core.first(arglist__3072);
        arglist__3072 = cljs.core.next(arglist__3072);
        var b = cljs.core.first(arglist__3072);
        arglist__3072 = cljs.core.next(arglist__3072);
        var c = cljs.core.first(arglist__3072);
        var ds = cljs.core.rest(arglist__3072);
        return G__3070__delegate(a, b, c, ds);
      };
      G__3070.cljs$core$IFn$_invoke$arity$variadic = G__3070__delegate;
      return G__3070;
    }();
    G__3069 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__3069__2.call(this, a, b);
        case 3:
          return G__3069__3.call(this, a, b, c);
        default:
          var G__3073 = null;
          if (arguments.length > 3) {
            var G__3074__i = 0, G__3074__a = new Array(arguments.length - 3);
            while (G__3074__i < G__3074__a.length) {
              G__3074__a[G__3074__i] = arguments[G__3074__i + 3];
              ++G__3074__i;
            }
            G__3073 = new cljs.core.IndexedSeq(G__3074__a, 0, null);
          }
          return G__3069__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__3073);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3069.cljs$lang$maxFixedArity = 3;
    G__3069.cljs$lang$applyTo = G__3069__4.cljs$lang$applyTo;
    G__3069.cljs$core$IFn$_invoke$arity$2 = G__3069__2;
    G__3069.cljs$core$IFn$_invoke$arity$3 = G__3069__3;
    G__3069.cljs$core$IFn$_invoke$arity$variadic = G__3069__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3069;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed(var_args) {
  var G__3076 = arguments.length;
  switch(G__3076) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_(-1);
    return function(i) {
      return function() {
        var G__3090 = null;
        var G__3090__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3090__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__3090__2 = function(result, input) {
          var G__3077 = result;
          var G__3078 = function() {
            var G__3079 = i.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, i.cljs$core$IDeref$_deref$arity$1(null) + 1);
            var G__3080 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3079, G__3080) : f.call(null, G__3079, G__3080);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3077, G__3078) : rf.call(null, G__3077, G__3078);
        };
        G__3090 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3090__0.call(this);
            case 1:
              return G__3090__1.call(this, result);
            case 2:
              return G__3090__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__3090.cljs$core$IFn$_invoke$arity$0 = G__3090__0;
        G__3090.cljs$core$IFn$_invoke$arity$1 = G__3090__1;
        G__3090.cljs$core$IFn$_invoke$arity$2 = G__3090__2;
        return G__3090;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__5457__auto__ = cljs.core.seq(coll__$1);
      if (temp__5457__auto__) {
        var s = temp__5457__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4518__auto___3091 = size;
          var i_3092 = 0;
          while (true) {
            if (i_3092 < n__4518__auto___3091) {
              cljs.core.chunk_append(b, function() {
                var G__3085 = idx + i_3092;
                var G__3086 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3092);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3085, G__3086) : f.call(null, G__3085, G__3086);
              }());
              var G__3093 = i_3092 + 1;
              i_3092 = G__3093;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__3087 = idx;
            var G__3088 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3087, G__3088) : f.call(null, G__3087, G__3088);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep(var_args) {
  var G__3095 = arguments.length;
  switch(G__3095) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__3099 = null;
      var G__3099__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__3099__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__3099__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__3099 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__3099__0.call(this);
          case 1:
            return G__3099__1.call(this, result);
          case 2:
            return G__3099__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__3099.cljs$core$IFn$_invoke$arity$0 = G__3099__0;
      G__3099.cljs$core$IFn$_invoke$arity$1 = G__3099__1;
      G__3099.cljs$core$IFn$_invoke$arity$2 = G__3099__2;
      return G__3099;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5457__auto__ = cljs.core.seq(coll);
    if (temp__5457__auto__) {
      var s = temp__5457__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4518__auto___3100 = size;
        var i_3101 = 0;
        while (true) {
          if (i_3101 < n__4518__auto___3100) {
            var x_3102 = function() {
              var G__3096 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3101);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3096) : f.call(null, G__3096);
            }();
            if (x_3102 == null) {
            } else {
              cljs.core.chunk_append(b, x_3102);
            }
            var G__3103 = i_3101 + 1;
            i_3101 = G__3103;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__3097 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3097) : f.call(null, G__3097);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__3104 = cljs.core.seq(self__.watches);
  var chunk__3105 = null;
  var count__3106 = 0;
  var i__3107 = 0;
  while (true) {
    if (i__3107 < count__3106) {
      var vec__3108 = chunk__3105.cljs$core$IIndexed$_nth$arity$2(null, i__3107);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3108, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3108, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__3114 = seq__3104;
      var G__3115 = chunk__3105;
      var G__3116 = count__3106;
      var G__3117 = i__3107 + 1;
      seq__3104 = G__3114;
      chunk__3105 = G__3115;
      count__3106 = G__3116;
      i__3107 = G__3117;
      continue;
    } else {
      var temp__5457__auto__ = cljs.core.seq(seq__3104);
      if (temp__5457__auto__) {
        var seq__3104__$1 = temp__5457__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__3104__$1)) {
          var c__4461__auto__ = cljs.core.chunk_first(seq__3104__$1);
          var G__3118 = cljs.core.chunk_rest(seq__3104__$1);
          var G__3119 = c__4461__auto__;
          var G__3120 = cljs.core.count(c__4461__auto__);
          var G__3121 = 0;
          seq__3104 = G__3118;
          chunk__3105 = G__3119;
          count__3106 = G__3120;
          i__3107 = G__3121;
          continue;
        } else {
          var vec__3111 = cljs.core.first(seq__3104__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3111, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3111, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__3122 = cljs.core.next(seq__3104__$1);
          var G__3123 = null;
          var G__3124 = 0;
          var G__3125 = 0;
          seq__3104 = G__3122;
          chunk__3105 = G__3123;
          count__3106 = G__3124;
          i__3107 = G__3125;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom(var_args) {
  var G__3129 = arguments.length;
  switch(G__3129) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___3134 = arguments.length;
      var i__4642__auto___3135 = 0;
      while (true) {
        if (i__4642__auto___3135 < len__4641__auto___3134) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___3135]);
          var G__3136 = i__4642__auto___3135 + 1;
          i__4642__auto___3135 = G__3136;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(1), 0, null);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4663__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__3130) {
  var map__3131 = p__3130;
  var map__3131__$1 = (!(map__3131 == null) ? map__3131.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__3131.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__3131) : map__3131;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__3131__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__3131__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq3127) {
  var G__3128 = cljs.core.first(seq3127);
  var seq3127__$1 = cljs.core.next(seq3127);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3128, seq3127__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error("Validator rejected reference state");
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.reset_vals_BANG_ = function cljs$core$reset_vals_BANG_(a, new_value) {
  var validate = a.validator;
  if (validate == null) {
  } else {
    if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
    } else {
      throw new Error("Validator rejected reference state");
    }
  }
  var old_value = a.state;
  a.state = new_value;
  if (a.watches == null) {
  } else {
    cljs.core._notify_watches(a, old_value, new_value);
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_value, new_value], null);
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_(var_args) {
  var G__3143 = arguments.length;
  switch(G__3143) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___3151 = arguments.length;
      var i__4642__auto___3152 = 0;
      while (true) {
        if (i__4642__auto___3152 < len__4641__auto___3151) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___3152]);
          var G__3153 = i__4642__auto___3152 + 1;
          i__4642__auto___3152 = G__3153;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(4), 0, null);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4663__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__3144 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3144) : f.call(null, G__3144);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__3145 = a.state;
      var G__3146 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3145, G__3146) : f.call(null, G__3145, G__3146);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__3147 = a.state;
      var G__3148 = x;
      var G__3149 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3147, G__3148, G__3149) : f.call(null, G__3147, G__3148, G__3149);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq3138) {
  var G__3139 = cljs.core.first(seq3138);
  var seq3138__$1 = cljs.core.next(seq3138);
  var G__3140 = cljs.core.first(seq3138__$1);
  var seq3138__$2 = cljs.core.next(seq3138__$1);
  var G__3141 = cljs.core.first(seq3138__$2);
  var seq3138__$3 = cljs.core.next(seq3138__$2);
  var G__3142 = cljs.core.first(seq3138__$3);
  var seq3138__$4 = cljs.core.next(seq3138__$3);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3139, G__3140, G__3141, G__3142, seq3138__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.swap_vals_BANG_ = function cljs$core$swap_vals_BANG_(var_args) {
  var G__3160 = arguments.length;
  switch(G__3160) {
    case 2:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___3168 = arguments.length;
      var i__4642__auto___3169 = 0;
      while (true) {
        if (i__4642__auto___3169 < len__4641__auto___3168) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___3169]);
          var G__3170 = i__4642__auto___3169 + 1;
          i__4642__auto___3169 = G__3170;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(4), 0, null);
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4663__auto__);
  }
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__3161 = a.state;
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3161) : f.call(null, G__3161);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__3162 = a.state;
    var G__3163 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3162, G__3163) : f.call(null, G__3162, G__3163);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__3164 = a.state;
    var G__3165 = x;
    var G__3166 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3164, G__3165, G__3166) : f.call(null, G__3164, G__3165, G__3166);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  return cljs.core.reset_vals_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
};
cljs.core.swap_vals_BANG_.cljs$lang$applyTo = function(seq3155) {
  var G__3156 = cljs.core.first(seq3155);
  var seq3155__$1 = cljs.core.next(seq3155);
  var G__3157 = cljs.core.first(seq3155__$1);
  var seq3155__$2 = cljs.core.next(seq3155__$1);
  var G__3158 = cljs.core.first(seq3155__$2);
  var seq3155__$3 = cljs.core.next(seq3155__$2);
  var G__3159 = cljs.core.first(seq3155__$3);
  var seq3155__$4 = cljs.core.next(seq3155__$3);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3156, G__3157, G__3158, G__3159, seq3155__$4);
};
cljs.core.swap_vals_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  if (!(val == null) && cljs.core.not(function() {
    var G__3172 = cljs.core._deref(iref);
    return val.cljs$core$IFn$_invoke$arity$1 ? val.cljs$core$IFn$_invoke$arity$1(G__3172) : val.call(null, G__3172);
  }())) {
    throw new Error("Validator rejected reference state");
  } else {
  }
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed(var_args) {
  var G__3174 = arguments.length;
  switch(G__3174) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__3184 = null;
        var G__3184__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3184__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__3184__2 = function(result, input) {
          var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
          var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
          if (v == null) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          }
        };
        G__3184 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3184__0.call(this);
            case 1:
              return G__3184__1.call(this, result);
            case 2:
              return G__3184__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__3184.cljs$core$IFn$_invoke$arity$0 = G__3184__0;
        G__3184.cljs$core$IFn$_invoke$arity$1 = G__3184__1;
        G__3184.cljs$core$IFn$_invoke$arity$2 = G__3184__2;
        return G__3184;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__5457__auto__ = cljs.core.seq(coll__$1);
      if (temp__5457__auto__) {
        var s = temp__5457__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4518__auto___3185 = size;
          var i_3186 = 0;
          while (true) {
            if (i_3186 < n__4518__auto___3185) {
              var x_3187 = function() {
                var G__3179 = idx + i_3186;
                var G__3180 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3186);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3179, G__3180) : f.call(null, G__3179, G__3180);
              }();
              if (x_3187 == null) {
              } else {
                cljs.core.chunk_append(b, x_3187);
              }
              var G__3188 = i_3186 + 1;
              i_3186 = G__3188;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__3181 = idx;
            var G__3182 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3181, G__3182) : f.call(null, G__3181, G__3182);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred(var_args) {
  var G__3200 = arguments.length;
  switch(G__3200) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___3202 = arguments.length;
      var i__4642__auto___3203 = 0;
      while (true) {
        if (i__4642__auto___3203 < len__4641__auto___3202) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___3203]);
          var G__3204 = i__4642__auto___3203 + 1;
          i__4642__auto___3203 = G__3204;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(3), 0, null);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4663__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4036__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4036__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__4036__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4036__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4036__auto__)) {
          var and__4036__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__4036__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__4036__auto____$1;
          }
        } else {
          return and__4036__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__3205__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4036__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4036__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__4036__auto__;
          }
        }());
      };
      var G__3205 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3206__i = 0, G__3206__a = new Array(arguments.length - 3);
          while (G__3206__i < G__3206__a.length) {
            G__3206__a[G__3206__i] = arguments[G__3206__i + 3];
            ++G__3206__i;
          }
          args = new cljs.core.IndexedSeq(G__3206__a, 0, null);
        }
        return G__3205__delegate.call(this, x, y, z, args);
      };
      G__3205.cljs$lang$maxFixedArity = 3;
      G__3205.cljs$lang$applyTo = function(arglist__3207) {
        var x = cljs.core.first(arglist__3207);
        arglist__3207 = cljs.core.next(arglist__3207);
        var y = cljs.core.first(arglist__3207);
        arglist__3207 = cljs.core.next(arglist__3207);
        var z = cljs.core.first(arglist__3207);
        var args = cljs.core.rest(arglist__3207);
        return G__3205__delegate(x, y, z, args);
      };
      G__3205.cljs$core$IFn$_invoke$arity$variadic = G__3205__delegate;
      return G__3205;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__3208 = null;
          if (arguments.length > 3) {
            var G__3209__i = 0, G__3209__a = new Array(arguments.length - 3);
            while (G__3209__i < G__3209__a.length) {
              G__3209__a[G__3209__i] = arguments[G__3209__i + 3];
              ++G__3209__i;
            }
            G__3208 = new cljs.core.IndexedSeq(G__3209__a, 0, null);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3208);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4036__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4036__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__4036__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4036__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4036__auto__)) {
          var and__4036__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4036__auto____$1)) {
            var and__4036__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__4036__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__4036__auto____$2;
            }
          } else {
            return and__4036__auto____$1;
          }
        } else {
          return and__4036__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4036__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4036__auto__)) {
          var and__4036__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4036__auto____$1)) {
            var and__4036__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__4036__auto____$2)) {
              var and__4036__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__4036__auto____$3)) {
                var and__4036__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4036__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__4036__auto____$4;
                }
              } else {
                return and__4036__auto____$3;
              }
            } else {
              return and__4036__auto____$2;
            }
          } else {
            return and__4036__auto____$1;
          }
        } else {
          return and__4036__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__3210__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4036__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4036__auto__)) {
            return cljs.core.every_QMARK_(function(and__4036__auto__) {
              return function(p1__3189_SHARP_) {
                var and__4036__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__3189_SHARP_) : p1.call(null, p1__3189_SHARP_);
                if (cljs.core.truth_(and__4036__auto____$1)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__3189_SHARP_) : p2.call(null, p1__3189_SHARP_);
                } else {
                  return and__4036__auto____$1;
                }
              };
            }(and__4036__auto__), args);
          } else {
            return and__4036__auto__;
          }
        }());
      };
      var G__3210 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3211__i = 0, G__3211__a = new Array(arguments.length - 3);
          while (G__3211__i < G__3211__a.length) {
            G__3211__a[G__3211__i] = arguments[G__3211__i + 3];
            ++G__3211__i;
          }
          args = new cljs.core.IndexedSeq(G__3211__a, 0, null);
        }
        return G__3210__delegate.call(this, x, y, z, args);
      };
      G__3210.cljs$lang$maxFixedArity = 3;
      G__3210.cljs$lang$applyTo = function(arglist__3212) {
        var x = cljs.core.first(arglist__3212);
        arglist__3212 = cljs.core.next(arglist__3212);
        var y = cljs.core.first(arglist__3212);
        arglist__3212 = cljs.core.next(arglist__3212);
        var z = cljs.core.first(arglist__3212);
        var args = cljs.core.rest(arglist__3212);
        return G__3210__delegate(x, y, z, args);
      };
      G__3210.cljs$core$IFn$_invoke$arity$variadic = G__3210__delegate;
      return G__3210;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__3213 = null;
          if (arguments.length > 3) {
            var G__3214__i = 0, G__3214__a = new Array(arguments.length - 3);
            while (G__3214__i < G__3214__a.length) {
              G__3214__a[G__3214__i] = arguments[G__3214__i + 3];
              ++G__3214__i;
            }
            G__3213 = new cljs.core.IndexedSeq(G__3214__a, 0, null);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3213);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4036__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4036__auto__)) {
          var and__4036__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4036__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__4036__auto____$1;
          }
        } else {
          return and__4036__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4036__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4036__auto__)) {
          var and__4036__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4036__auto____$1)) {
            var and__4036__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4036__auto____$2)) {
              var and__4036__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4036__auto____$3)) {
                var and__4036__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4036__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__4036__auto____$4;
                }
              } else {
                return and__4036__auto____$3;
              }
            } else {
              return and__4036__auto____$2;
            }
          } else {
            return and__4036__auto____$1;
          }
        } else {
          return and__4036__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4036__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4036__auto__)) {
          var and__4036__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4036__auto____$1)) {
            var and__4036__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4036__auto____$2)) {
              var and__4036__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4036__auto____$3)) {
                var and__4036__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4036__auto____$4)) {
                  var and__4036__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__4036__auto____$5)) {
                    var and__4036__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__4036__auto____$6)) {
                      var and__4036__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__4036__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__4036__auto____$7;
                      }
                    } else {
                      return and__4036__auto____$6;
                    }
                  } else {
                    return and__4036__auto____$5;
                  }
                } else {
                  return and__4036__auto____$4;
                }
              } else {
                return and__4036__auto____$3;
              }
            } else {
              return and__4036__auto____$2;
            }
          } else {
            return and__4036__auto____$1;
          }
        } else {
          return and__4036__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__3215__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4036__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4036__auto__)) {
            return cljs.core.every_QMARK_(function(and__4036__auto__) {
              return function(p1__3190_SHARP_) {
                var and__4036__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__3190_SHARP_) : p1.call(null, p1__3190_SHARP_);
                if (cljs.core.truth_(and__4036__auto____$1)) {
                  var and__4036__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__3190_SHARP_) : p2.call(null, p1__3190_SHARP_);
                  if (cljs.core.truth_(and__4036__auto____$2)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__3190_SHARP_) : p3.call(null, p1__3190_SHARP_);
                  } else {
                    return and__4036__auto____$2;
                  }
                } else {
                  return and__4036__auto____$1;
                }
              };
            }(and__4036__auto__), args);
          } else {
            return and__4036__auto__;
          }
        }());
      };
      var G__3215 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3216__i = 0, G__3216__a = new Array(arguments.length - 3);
          while (G__3216__i < G__3216__a.length) {
            G__3216__a[G__3216__i] = arguments[G__3216__i + 3];
            ++G__3216__i;
          }
          args = new cljs.core.IndexedSeq(G__3216__a, 0, null);
        }
        return G__3215__delegate.call(this, x, y, z, args);
      };
      G__3215.cljs$lang$maxFixedArity = 3;
      G__3215.cljs$lang$applyTo = function(arglist__3217) {
        var x = cljs.core.first(arglist__3217);
        arglist__3217 = cljs.core.next(arglist__3217);
        var y = cljs.core.first(arglist__3217);
        arglist__3217 = cljs.core.next(arglist__3217);
        var z = cljs.core.first(arglist__3217);
        var args = cljs.core.rest(arglist__3217);
        return G__3215__delegate(x, y, z, args);
      };
      G__3215.cljs$core$IFn$_invoke$arity$variadic = G__3215__delegate;
      return G__3215;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__3218 = null;
          if (arguments.length > 3) {
            var G__3219__i = 0, G__3219__a = new Array(arguments.length - 3);
            while (G__3219__i < G__3219__a.length) {
              G__3219__a[G__3219__i] = arguments[G__3219__i + 3];
              ++G__3219__i;
            }
            G__3218 = new cljs.core.IndexedSeq(G__3219__a, 0, null);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3218);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__3191_SHARP_) {
            return p1__3191_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3191_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3191_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__3192_SHARP_) {
            var and__4036__auto__ = p1__3192_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3192_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3192_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4036__auto__)) {
              return p1__3192_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3192_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__3192_SHARP_.call(null, y);
            } else {
              return and__4036__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__3193_SHARP_) {
            var and__4036__auto__ = p1__3193_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3193_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3193_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4036__auto__)) {
              var and__4036__auto____$1 = p1__3193_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3193_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__3193_SHARP_.call(null, y);
              if (cljs.core.truth_(and__4036__auto____$1)) {
                return p1__3193_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3193_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__3193_SHARP_.call(null, z);
              } else {
                return and__4036__auto____$1;
              }
            } else {
              return and__4036__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__3220__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__4036__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__4036__auto__)) {
              return cljs.core.every_QMARK_(function(and__4036__auto__, ps__$1) {
                return function(p1__3194_SHARP_) {
                  return cljs.core.every_QMARK_(p1__3194_SHARP_, args);
                };
              }(and__4036__auto__, ps__$1), ps__$1);
            } else {
              return and__4036__auto__;
            }
          }());
        };
        var G__3220 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__3221__i = 0, G__3221__a = new Array(arguments.length - 3);
            while (G__3221__i < G__3221__a.length) {
              G__3221__a[G__3221__i] = arguments[G__3221__i + 3];
              ++G__3221__i;
            }
            args = new cljs.core.IndexedSeq(G__3221__a, 0, null);
          }
          return G__3220__delegate.call(this, x, y, z, args);
        };
        G__3220.cljs$lang$maxFixedArity = 3;
        G__3220.cljs$lang$applyTo = function(arglist__3222) {
          var x = cljs.core.first(arglist__3222);
          arglist__3222 = cljs.core.next(arglist__3222);
          var y = cljs.core.first(arglist__3222);
          arglist__3222 = cljs.core.next(arglist__3222);
          var z = cljs.core.first(arglist__3222);
          var args = cljs.core.rest(arglist__3222);
          return G__3220__delegate(x, y, z, args);
        };
        G__3220.cljs$core$IFn$_invoke$arity$variadic = G__3220__delegate;
        return G__3220;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__3223 = null;
            if (arguments.length > 3) {
              var G__3224__i = 0, G__3224__a = new Array(arguments.length - 3);
              while (G__3224__i < G__3224__a.length) {
                G__3224__a[G__3224__i] = arguments[G__3224__i + 3];
                ++G__3224__i;
              }
              G__3223 = new cljs.core.IndexedSeq(G__3224__a, 0, null);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3223);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq3196) {
  var G__3197 = cljs.core.first(seq3196);
  var seq3196__$1 = cljs.core.next(seq3196);
  var G__3198 = cljs.core.first(seq3196__$1);
  var seq3196__$2 = cljs.core.next(seq3196__$1);
  var G__3199 = cljs.core.first(seq3196__$2);
  var seq3196__$3 = cljs.core.next(seq3196__$2);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3197, G__3198, G__3199, seq3196__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn(var_args) {
  var G__3236 = arguments.length;
  switch(G__3236) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___3238 = arguments.length;
      var i__4642__auto___3239 = 0;
      while (true) {
        if (i__4642__auto___3239 < len__4641__auto___3238) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___3239]);
          var G__3240 = i__4642__auto___3239 + 1;
          i__4642__auto___3239 = G__3240;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(3), 0, null);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4663__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__4047__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4047__auto__)) {
        return or__4047__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__4047__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4047__auto__)) {
        return or__4047__auto__;
      } else {
        var or__4047__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__4047__auto____$1)) {
          return or__4047__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__3241__delegate = function(x, y, z, args) {
        var or__4047__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4047__auto__)) {
          return or__4047__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__3241 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3242__i = 0, G__3242__a = new Array(arguments.length - 3);
          while (G__3242__i < G__3242__a.length) {
            G__3242__a[G__3242__i] = arguments[G__3242__i + 3];
            ++G__3242__i;
          }
          args = new cljs.core.IndexedSeq(G__3242__a, 0, null);
        }
        return G__3241__delegate.call(this, x, y, z, args);
      };
      G__3241.cljs$lang$maxFixedArity = 3;
      G__3241.cljs$lang$applyTo = function(arglist__3243) {
        var x = cljs.core.first(arglist__3243);
        arglist__3243 = cljs.core.next(arglist__3243);
        var y = cljs.core.first(arglist__3243);
        arglist__3243 = cljs.core.next(arglist__3243);
        var z = cljs.core.first(arglist__3243);
        var args = cljs.core.rest(arglist__3243);
        return G__3241__delegate(x, y, z, args);
      };
      G__3241.cljs$core$IFn$_invoke$arity$variadic = G__3241__delegate;
      return G__3241;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__3244 = null;
          if (arguments.length > 3) {
            var G__3245__i = 0, G__3245__a = new Array(arguments.length - 3);
            while (G__3245__i < G__3245__a.length) {
              G__3245__a[G__3245__i] = arguments[G__3245__i + 3];
              ++G__3245__i;
            }
            G__3244 = new cljs.core.IndexedSeq(G__3245__a, 0, null);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3244);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__4047__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4047__auto__)) {
        return or__4047__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__4047__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4047__auto__)) {
        return or__4047__auto__;
      } else {
        var or__4047__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4047__auto____$1)) {
          return or__4047__auto____$1;
        } else {
          var or__4047__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__4047__auto____$2)) {
            return or__4047__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__4047__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4047__auto__)) {
        return or__4047__auto__;
      } else {
        var or__4047__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4047__auto____$1)) {
          return or__4047__auto____$1;
        } else {
          var or__4047__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__4047__auto____$2)) {
            return or__4047__auto____$2;
          } else {
            var or__4047__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__4047__auto____$3)) {
              return or__4047__auto____$3;
            } else {
              var or__4047__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4047__auto____$4)) {
                return or__4047__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__3246__delegate = function(x, y, z, args) {
        var or__4047__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4047__auto__)) {
          return or__4047__auto__;
        } else {
          return cljs.core.some(function(or__4047__auto__) {
            return function(p1__3225_SHARP_) {
              var or__4047__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__3225_SHARP_) : p1.call(null, p1__3225_SHARP_);
              if (cljs.core.truth_(or__4047__auto____$1)) {
                return or__4047__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__3225_SHARP_) : p2.call(null, p1__3225_SHARP_);
              }
            };
          }(or__4047__auto__), args);
        }
      };
      var G__3246 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3247__i = 0, G__3247__a = new Array(arguments.length - 3);
          while (G__3247__i < G__3247__a.length) {
            G__3247__a[G__3247__i] = arguments[G__3247__i + 3];
            ++G__3247__i;
          }
          args = new cljs.core.IndexedSeq(G__3247__a, 0, null);
        }
        return G__3246__delegate.call(this, x, y, z, args);
      };
      G__3246.cljs$lang$maxFixedArity = 3;
      G__3246.cljs$lang$applyTo = function(arglist__3248) {
        var x = cljs.core.first(arglist__3248);
        arglist__3248 = cljs.core.next(arglist__3248);
        var y = cljs.core.first(arglist__3248);
        arglist__3248 = cljs.core.next(arglist__3248);
        var z = cljs.core.first(arglist__3248);
        var args = cljs.core.rest(arglist__3248);
        return G__3246__delegate(x, y, z, args);
      };
      G__3246.cljs$core$IFn$_invoke$arity$variadic = G__3246__delegate;
      return G__3246;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__3249 = null;
          if (arguments.length > 3) {
            var G__3250__i = 0, G__3250__a = new Array(arguments.length - 3);
            while (G__3250__i < G__3250__a.length) {
              G__3250__a[G__3250__i] = arguments[G__3250__i + 3];
              ++G__3250__i;
            }
            G__3249 = new cljs.core.IndexedSeq(G__3250__a, 0, null);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3249);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__4047__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4047__auto__)) {
        return or__4047__auto__;
      } else {
        var or__4047__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4047__auto____$1)) {
          return or__4047__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__4047__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4047__auto__)) {
        return or__4047__auto__;
      } else {
        var or__4047__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4047__auto____$1)) {
          return or__4047__auto____$1;
        } else {
          var or__4047__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4047__auto____$2)) {
            return or__4047__auto____$2;
          } else {
            var or__4047__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4047__auto____$3)) {
              return or__4047__auto____$3;
            } else {
              var or__4047__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4047__auto____$4)) {
                return or__4047__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__4047__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4047__auto__)) {
        return or__4047__auto__;
      } else {
        var or__4047__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4047__auto____$1)) {
          return or__4047__auto____$1;
        } else {
          var or__4047__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4047__auto____$2)) {
            return or__4047__auto____$2;
          } else {
            var or__4047__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4047__auto____$3)) {
              return or__4047__auto____$3;
            } else {
              var or__4047__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4047__auto____$4)) {
                return or__4047__auto____$4;
              } else {
                var or__4047__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__4047__auto____$5)) {
                  return or__4047__auto____$5;
                } else {
                  var or__4047__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__4047__auto____$6)) {
                    return or__4047__auto____$6;
                  } else {
                    var or__4047__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__4047__auto____$7)) {
                      return or__4047__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__3251__delegate = function(x, y, z, args) {
        var or__4047__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4047__auto__)) {
          return or__4047__auto__;
        } else {
          return cljs.core.some(function(or__4047__auto__) {
            return function(p1__3226_SHARP_) {
              var or__4047__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__3226_SHARP_) : p1.call(null, p1__3226_SHARP_);
              if (cljs.core.truth_(or__4047__auto____$1)) {
                return or__4047__auto____$1;
              } else {
                var or__4047__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__3226_SHARP_) : p2.call(null, p1__3226_SHARP_);
                if (cljs.core.truth_(or__4047__auto____$2)) {
                  return or__4047__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__3226_SHARP_) : p3.call(null, p1__3226_SHARP_);
                }
              }
            };
          }(or__4047__auto__), args);
        }
      };
      var G__3251 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3252__i = 0, G__3252__a = new Array(arguments.length - 3);
          while (G__3252__i < G__3252__a.length) {
            G__3252__a[G__3252__i] = arguments[G__3252__i + 3];
            ++G__3252__i;
          }
          args = new cljs.core.IndexedSeq(G__3252__a, 0, null);
        }
        return G__3251__delegate.call(this, x, y, z, args);
      };
      G__3251.cljs$lang$maxFixedArity = 3;
      G__3251.cljs$lang$applyTo = function(arglist__3253) {
        var x = cljs.core.first(arglist__3253);
        arglist__3253 = cljs.core.next(arglist__3253);
        var y = cljs.core.first(arglist__3253);
        arglist__3253 = cljs.core.next(arglist__3253);
        var z = cljs.core.first(arglist__3253);
        var args = cljs.core.rest(arglist__3253);
        return G__3251__delegate(x, y, z, args);
      };
      G__3251.cljs$core$IFn$_invoke$arity$variadic = G__3251__delegate;
      return G__3251;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__3254 = null;
          if (arguments.length > 3) {
            var G__3255__i = 0, G__3255__a = new Array(arguments.length - 3);
            while (G__3255__i < G__3255__a.length) {
              G__3255__a[G__3255__i] = arguments[G__3255__i + 3];
              ++G__3255__i;
            }
            G__3254 = new cljs.core.IndexedSeq(G__3255__a, 0, null);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3254);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__3227_SHARP_) {
            return p1__3227_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3227_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3227_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__3228_SHARP_) {
            var or__4047__auto__ = p1__3228_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3228_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3228_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4047__auto__)) {
              return or__4047__auto__;
            } else {
              return p1__3228_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3228_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__3228_SHARP_.call(null, y);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__3229_SHARP_) {
            var or__4047__auto__ = p1__3229_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3229_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3229_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4047__auto__)) {
              return or__4047__auto__;
            } else {
              var or__4047__auto____$1 = p1__3229_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3229_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__3229_SHARP_.call(null, y);
              if (cljs.core.truth_(or__4047__auto____$1)) {
                return or__4047__auto____$1;
              } else {
                return p1__3229_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3229_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__3229_SHARP_.call(null, z);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__3256__delegate = function(x, y, z, args) {
          var or__4047__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4047__auto__)) {
            return or__4047__auto__;
          } else {
            return cljs.core.some(function(or__4047__auto__, ps__$1) {
              return function(p1__3230_SHARP_) {
                return cljs.core.some(p1__3230_SHARP_, args);
              };
            }(or__4047__auto__, ps__$1), ps__$1);
          }
        };
        var G__3256 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__3257__i = 0, G__3257__a = new Array(arguments.length - 3);
            while (G__3257__i < G__3257__a.length) {
              G__3257__a[G__3257__i] = arguments[G__3257__i + 3];
              ++G__3257__i;
            }
            args = new cljs.core.IndexedSeq(G__3257__a, 0, null);
          }
          return G__3256__delegate.call(this, x, y, z, args);
        };
        G__3256.cljs$lang$maxFixedArity = 3;
        G__3256.cljs$lang$applyTo = function(arglist__3258) {
          var x = cljs.core.first(arglist__3258);
          arglist__3258 = cljs.core.next(arglist__3258);
          var y = cljs.core.first(arglist__3258);
          arglist__3258 = cljs.core.next(arglist__3258);
          var z = cljs.core.first(arglist__3258);
          var args = cljs.core.rest(arglist__3258);
          return G__3256__delegate(x, y, z, args);
        };
        G__3256.cljs$core$IFn$_invoke$arity$variadic = G__3256__delegate;
        return G__3256;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__3259 = null;
            if (arguments.length > 3) {
              var G__3260__i = 0, G__3260__a = new Array(arguments.length - 3);
              while (G__3260__i < G__3260__a.length) {
                G__3260__a[G__3260__i] = arguments[G__3260__i + 3];
                ++G__3260__i;
              }
              G__3259 = new cljs.core.IndexedSeq(G__3260__a, 0, null);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3259);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq3232) {
  var G__3233 = cljs.core.first(seq3232);
  var seq3232__$1 = cljs.core.next(seq3232);
  var G__3234 = cljs.core.first(seq3232__$1);
  var seq3232__$2 = cljs.core.next(seq3232__$1);
  var G__3235 = cljs.core.first(seq3232__$2);
  var seq3232__$3 = cljs.core.next(seq3232__$2);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3233, G__3234, G__3235, seq3232__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map(var_args) {
  var G__3268 = arguments.length;
  switch(G__3268) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___3281 = arguments.length;
      var i__4642__auto___3282 = 0;
      while (true) {
        if (i__4642__auto___3282 < len__4641__auto___3281) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___3282]);
          var G__3283 = i__4642__auto___3282 + 1;
          i__4642__auto___3282 = G__3283;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(4), 0, null);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4663__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__3284 = null;
      var G__3284__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__3284__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__3284__2 = function(result, input) {
        var G__3269 = result;
        var G__3270 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3269, G__3270) : rf.call(null, G__3269, G__3270);
      };
      var G__3284__3 = function() {
        var G__3285__delegate = function(result, input, inputs) {
          var G__3271 = result;
          var G__3272 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3271, G__3272) : rf.call(null, G__3271, G__3272);
        };
        var G__3285 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__3286__i = 0, G__3286__a = new Array(arguments.length - 2);
            while (G__3286__i < G__3286__a.length) {
              G__3286__a[G__3286__i] = arguments[G__3286__i + 2];
              ++G__3286__i;
            }
            inputs = new cljs.core.IndexedSeq(G__3286__a, 0, null);
          }
          return G__3285__delegate.call(this, result, input, inputs);
        };
        G__3285.cljs$lang$maxFixedArity = 2;
        G__3285.cljs$lang$applyTo = function(arglist__3287) {
          var result = cljs.core.first(arglist__3287);
          arglist__3287 = cljs.core.next(arglist__3287);
          var input = cljs.core.first(arglist__3287);
          var inputs = cljs.core.rest(arglist__3287);
          return G__3285__delegate(result, input, inputs);
        };
        G__3285.cljs$core$IFn$_invoke$arity$variadic = G__3285__delegate;
        return G__3285;
      }();
      G__3284 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__3284__0.call(this);
          case 1:
            return G__3284__1.call(this, result);
          case 2:
            return G__3284__2.call(this, result, input);
          default:
            var G__3288 = null;
            if (arguments.length > 2) {
              var G__3289__i = 0, G__3289__a = new Array(arguments.length - 2);
              while (G__3289__i < G__3289__a.length) {
                G__3289__a[G__3289__i] = arguments[G__3289__i + 2];
                ++G__3289__i;
              }
              G__3288 = new cljs.core.IndexedSeq(G__3289__a, 0, null);
            }
            return G__3284__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__3288);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__3284.cljs$lang$maxFixedArity = 2;
      G__3284.cljs$lang$applyTo = G__3284__3.cljs$lang$applyTo;
      G__3284.cljs$core$IFn$_invoke$arity$0 = G__3284__0;
      G__3284.cljs$core$IFn$_invoke$arity$1 = G__3284__1;
      G__3284.cljs$core$IFn$_invoke$arity$2 = G__3284__2;
      G__3284.cljs$core$IFn$_invoke$arity$variadic = G__3284__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__3284;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5457__auto__ = cljs.core.seq(coll);
    if (temp__5457__auto__) {
      var s = temp__5457__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4518__auto___3290 = size;
        var i_3291 = 0;
        while (true) {
          if (i_3291 < n__4518__auto___3290) {
            cljs.core.chunk_append(b, function() {
              var G__3273 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3291);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3273) : f.call(null, G__3273);
            }());
            var G__3292 = i_3291 + 1;
            i_3291 = G__3292;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__3274 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3274) : f.call(null, G__3274);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__3275 = cljs.core.first(s1);
        var G__3276 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3275, G__3276) : f.call(null, G__3275, G__3276);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__3277 = cljs.core.first(s1);
        var G__3278 = cljs.core.first(s2);
        var G__3279 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3277, G__3278, G__3279) : f.call(null, G__3277, G__3278, G__3279);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__3261_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__3261_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq3263) {
  var G__3264 = cljs.core.first(seq3263);
  var seq3263__$1 = cljs.core.next(seq3263);
  var G__3265 = cljs.core.first(seq3263__$1);
  var seq3263__$2 = cljs.core.next(seq3263__$1);
  var G__3266 = cljs.core.first(seq3263__$2);
  var seq3263__$3 = cljs.core.next(seq3263__$2);
  var G__3267 = cljs.core.first(seq3263__$3);
  var seq3263__$4 = cljs.core.next(seq3263__$3);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3264, G__3265, G__3266, G__3267, seq3263__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take(var_args) {
  var G__3294 = arguments.length;
  switch(G__3294) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__3296 = null;
        var G__3296__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3296__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__3296__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
          var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__3296 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3296__0.call(this);
            case 1:
              return G__3296__1.call(this, result);
            case 2:
              return G__3296__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__3296.cljs$core$IFn$_invoke$arity$0 = G__3296__0;
        G__3296.cljs$core$IFn$_invoke$arity$1 = G__3296__1;
        G__3296.cljs$core$IFn$_invoke$arity$2 = G__3296__2;
        return G__3296;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__5457__auto__ = cljs.core.seq(coll);
      if (temp__5457__auto__) {
        var s = temp__5457__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop(var_args) {
  var G__3298 = arguments.length;
  switch(G__3298) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__3300 = null;
        var G__3300__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3300__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__3300__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__3300 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3300__0.call(this);
            case 1:
              return G__3300__1.call(this, result);
            case 2:
              return G__3300__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__3300.cljs$core$IFn$_invoke$arity$0 = G__3300__0;
        G__3300.cljs$core$IFn$_invoke$arity$1 = G__3300__1;
        G__3300.cljs$core$IFn$_invoke$arity$2 = G__3300__2;
        return G__3300;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__3301 = n__$1 - 1;
        var G__3302 = cljs.core.rest(s);
        n__$1 = G__3301;
        coll__$1 = G__3302;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last(var_args) {
  var G__3304 = arguments.length;
  switch(G__3304) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__3306 = cljs.core.next(s);
      var G__3307 = cljs.core.next(lead);
      s = G__3306;
      lead = G__3307;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while(var_args) {
  var G__3309 = arguments.length;
  switch(G__3309) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__3313 = null;
        var G__3313__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3313__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__3313__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__4036__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__4036__auto__)) {
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
            } else {
              return and__4036__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__3313 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3313__0.call(this);
            case 1:
              return G__3313__1.call(this, result);
            case 2:
              return G__3313__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__3313.cljs$core$IFn$_invoke$arity$0 = G__3313__0;
        G__3313.cljs$core$IFn$_invoke$arity$1 = G__3313__1;
        G__3313.cljs$core$IFn$_invoke$arity$2 = G__3313__2;
        return G__3313;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__4036__auto__ = s;
        if (and__4036__auto__) {
          var G__3311 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__3311) : pred__$1.call(null, G__3311);
        } else {
          return and__4036__auto__;
        }
      }())) {
        var G__3314 = pred__$1;
        var G__3315 = cljs.core.rest(s);
        pred__$1 = G__3314;
        coll__$1 = G__3315;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.Cycle = function(meta, all, prev, current, _next) {
  this.meta = meta;
  this.all = all;
  this.prev = prev;
  this.current = current;
  this._next = _next;
  this.cljs$lang$protocol_mask$partition0$ = 26083532;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Cycle.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cycle.prototype.currentval = function() {
  var self__ = this;
  var coll = this;
  if (self__.current) {
  } else {
    var temp__5455__auto___3320 = cljs.core.next(self__.prev);
    if (temp__5455__auto___3320) {
      var c_3321 = temp__5455__auto___3320;
      self__.current = c_3321;
    } else {
      self__.current = self__.all;
    }
  }
  return self__.current;
};
cljs.core.Cycle.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cycle.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.Cycle.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cycle.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return !(self__.current == null);
};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  var s = coll__$1.currentval();
  var ret = cljs.core.first(s);
  while (true) {
    var s__$1 = function() {
      var or__4047__auto__ = cljs.core.next(s);
      if (or__4047__auto__) {
        return or__4047__auto__;
      } else {
        return self__.all;
      }
    }();
    var ret__$1 = function() {
      var G__3316 = ret;
      var G__3317 = cljs.core.first(s__$1);
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3316, G__3317) : f.call(null, G__3316, G__3317);
    }();
    if (cljs.core.reduced_QMARK_(ret__$1)) {
      return cljs.core.deref(ret__$1);
    } else {
      var G__3322 = s__$1;
      var G__3323 = ret__$1;
      s = G__3322;
      ret = G__3323;
      continue;
    }
    break;
  }
};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  var s = coll__$1.currentval();
  var ret = start;
  while (true) {
    var ret__$1 = function() {
      var G__3318 = ret;
      var G__3319 = cljs.core.first(s);
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3318, G__3319) : f.call(null, G__3318, G__3319);
    }();
    if (cljs.core.reduced_QMARK_(ret__$1)) {
      return cljs.core.deref(ret__$1);
    } else {
      var G__3324 = function() {
        var or__4047__auto__ = cljs.core.next(s);
        if (or__4047__auto__) {
          return or__4047__auto__;
        } else {
          return self__.all;
        }
      }();
      var G__3325 = ret__$1;
      s = G__3324;
      ret = G__3325;
      continue;
    }
    break;
  }
};
cljs.core.Cycle.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(coll__$1.currentval());
};
cljs.core.Cycle.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__._next == null) {
    self__._next = new cljs.core.Cycle(null, self__.all, coll__$1.currentval(), null, null);
  } else {
  }
  return self__._next;
};
cljs.core.Cycle.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cycle.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cycle(meta__$1, self__.all, self__.prev, self__.current, self__._next);
};
cljs.core.Cycle.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Cycle.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "all", "all", -1762306027, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null), cljs.core.with_meta(new cljs.core.Symbol(null, "current", "current", 552492924, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cycle.cljs$lang$type = true;
cljs.core.Cycle.cljs$lang$ctorStr = "cljs.core/Cycle";
cljs.core.Cycle.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/Cycle");
};
cljs.core.__GT_Cycle = function cljs$core$__GT_Cycle(meta, all, prev, current, _next) {
  return new cljs.core.Cycle(meta, all, prev, current, _next);
};
cljs.core.cycle = function cljs$core$cycle(coll) {
  var temp__5455__auto__ = cljs.core.seq(coll);
  if (temp__5455__auto__) {
    var vals = temp__5455__auto__;
    return new cljs.core.Cycle(null, vals, null, vals, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.Repeat = function(meta, count, val, next, __hash) {
  this.meta = meta;
  this.count = count;
  this.val = val;
  this.next = next;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Repeat.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Repeat.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Repeat.prototype.indexOf = function() {
  var G__3326 = null;
  var G__3326__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3326__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3326 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3326__1.call(this, x);
      case 2:
        return G__3326__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3326.cljs$core$IFn$_invoke$arity$1 = G__3326__1;
  G__3326.cljs$core$IFn$_invoke$arity$2 = G__3326__2;
  return G__3326;
}();
cljs.core.Repeat.prototype.lastIndexOf = function() {
  var G__3327 = null;
  var G__3327__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__3327__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3327 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3327__1.call(this, x);
      case 2:
        return G__3327__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3327.cljs$core$IFn$_invoke$arity$1 = G__3327__1;
  G__3327.cljs$core$IFn$_invoke$arity$2 = G__3327__2;
  return G__3327;
}();
cljs.core.Repeat.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Repeat.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    if (self__.count > 1) {
      self__.next = new cljs.core.Repeat(null, self__.count - 1, self__.val, null, null);
      return self__.next;
    } else {
      if (-1 === self__.count) {
        return coll__$1;
      } else {
        return null;
      }
    }
  } else {
    return self__.next;
  }
};
cljs.core.Repeat.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.Repeat.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Repeat.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Repeat.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return false;
};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === -1) {
    var ret = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.val, self__.val) : f.call(null, self__.val, self__.val);
    while (true) {
      if (cljs.core.reduced_QMARK_(ret)) {
        return cljs.core.deref(ret);
      } else {
        var G__3328 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        ret = G__3328;
        continue;
      }
      break;
    }
  } else {
    var i = 1;
    var ret = self__.val;
    while (true) {
      if (i < self__.count) {
        var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        if (cljs.core.reduced_QMARK_(ret__$1)) {
          return cljs.core.deref(ret__$1);
        } else {
          var G__3329 = i + 1;
          var G__3330 = ret__$1;
          i = G__3329;
          ret = G__3330;
          continue;
        }
      } else {
        return ret;
      }
      break;
    }
  }
};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === -1) {
    var ret = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(start, self__.val) : f.call(null, start, self__.val);
    while (true) {
      if (cljs.core.reduced_QMARK_(ret)) {
        return cljs.core.deref(ret);
      } else {
        var G__3331 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        ret = G__3331;
        continue;
      }
      break;
    }
  } else {
    var i = 0;
    var ret = start;
    while (true) {
      if (i < self__.count) {
        var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        if (cljs.core.reduced_QMARK_(ret__$1)) {
          return cljs.core.deref(ret__$1);
        } else {
          var G__3332 = i + 1;
          var G__3333 = ret__$1;
          i = G__3332;
          ret = G__3333;
          continue;
        }
      } else {
        return ret;
      }
      break;
    }
  }
};
cljs.core.Repeat.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.val;
};
cljs.core.Repeat.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    if (self__.count > 1) {
      self__.next = new cljs.core.Repeat(null, self__.count - 1, self__.val, null, null);
      return self__.next;
    } else {
      if (-1 === self__.count) {
        return coll__$1;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return self__.next;
  }
};
cljs.core.Repeat.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Repeat.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Repeat(meta__$1, self__.count, self__.val, self__.next, null);
};
cljs.core.Repeat.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Repeat.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), cljs.core.with_meta(new cljs.core.Symbol(null, "next", "next", 1522830042, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Repeat.cljs$lang$type = true;
cljs.core.Repeat.cljs$lang$ctorStr = "cljs.core/Repeat";
cljs.core.Repeat.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/Repeat");
};
cljs.core.__GT_Repeat = function cljs$core$__GT_Repeat(meta, count, val, next, __hash) {
  return new cljs.core.Repeat(meta, count, val, next, __hash);
};
cljs.core.repeat = function cljs$core$repeat(var_args) {
  var G__3335 = arguments.length;
  switch(G__3335) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Repeat(null, -1, x, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  if (n > 0) {
    return new cljs.core.Repeat(null, n, x, null, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly(var_args) {
  var G__3338 = arguments.length;
  switch(G__3338) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.UNREALIZED_SEED = {};
cljs.core.Iterate = function(meta, f, prev_seed, seed, next) {
  this.meta = meta;
  this.f = f;
  this.prev_seed = prev_seed;
  this.seed = seed;
  this.next = next;
  this.cljs$lang$protocol_mask$partition0$ = 26083532;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Iterate.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Iterate.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Iterate.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.Iterate.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Iterate.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return !(self__.seed === cljs.core.UNREALIZED_SEED);
};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, rf) {
  var self__ = this;
  var coll__$1 = this;
  var first = coll__$1.cljs$core$ISeq$_first$arity$1(null);
  var v = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(first) : self__.f.call(null, first);
  var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(first, v) : rf.call(null, first, v);
  var v__$1 = v;
  while (true) {
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.deref(ret);
    } else {
      var v__$2 = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(v__$1) : self__.f.call(null, v__$1);
      var G__3340 = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(ret, v__$2) : rf.call(null, ret, v__$2);
      var G__3341 = v__$2;
      ret = G__3340;
      v__$1 = G__3341;
      continue;
    }
    break;
  }
};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, rf, start) {
  var self__ = this;
  var coll__$1 = this;
  var v = coll__$1.cljs$core$ISeq$_first$arity$1(null);
  var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(start, v) : rf.call(null, start, v);
  var v__$1 = v;
  while (true) {
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.deref(ret);
    } else {
      var v__$2 = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(v__$1) : self__.f.call(null, v__$1);
      var G__3342 = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(ret, v__$2) : rf.call(null, ret, v__$2);
      var G__3343 = v__$2;
      ret = G__3342;
      v__$1 = G__3343;
      continue;
    }
    break;
  }
};
cljs.core.Iterate.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.UNREALIZED_SEED === self__.seed) {
    self__.seed = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(self__.prev_seed) : self__.f.call(null, self__.prev_seed);
  } else {
  }
  return self__.seed;
};
cljs.core.Iterate.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    self__.next = new cljs.core.Iterate(null, self__.f, coll__$1.cljs$core$ISeq$_first$arity$1(null), cljs.core.UNREALIZED_SEED, null);
  } else {
  }
  return self__.next;
};
cljs.core.Iterate.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Iterate.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Iterate(meta__$1, self__.f, self__.prev_seed, self__.seed, self__.next);
};
cljs.core.Iterate.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Iterate.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "prev-seed", "prev-seed", 2126381367, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seed", "seed", 1709144854, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "next", "next", 1522830042, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Iterate.cljs$lang$type = true;
cljs.core.Iterate.cljs$lang$ctorStr = "cljs.core/Iterate";
cljs.core.Iterate.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/Iterate");
};
cljs.core.__GT_Iterate = function cljs$core$__GT_Iterate(meta, f, prev_seed, seed, next) {
  return new cljs.core.Iterate(meta, f, prev_seed, seed, next);
};
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return new cljs.core.Iterate(null, f, null, x, null);
};
cljs.core.interleave = function cljs$core$interleave(var_args) {
  var G__3348 = arguments.length;
  switch(G__3348) {
    case 0:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___3350 = arguments.length;
      var i__4642__auto___3351 = 0;
      while (true) {
        if (i__4642__auto___3351 < len__4641__auto___3350) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___3351]);
          var G__3352 = i__4642__auto___3351 + 1;
          i__4642__auto___3351 = G__3352;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(2), 0, null);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4663__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.List.EMPTY;
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$1 = function(c1) {
  return new cljs.core.LazySeq(null, function() {
    return c1;
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq3345) {
  var G__3346 = cljs.core.first(seq3345);
  var seq3345__$1 = cljs.core.next(seq3345);
  var G__3347 = cljs.core.first(seq3345__$1);
  var seq3345__$2 = cljs.core.next(seq3345__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3346, G__3347, seq3345__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose(var_args) {
  var G__3354 = arguments.length;
  switch(G__3354) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__3356 = null;
        var G__3356__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3356__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__3356__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__3356 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3356__0.call(this);
            case 1:
              return G__3356__1.call(this, result);
            case 2:
              return G__3356__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__3356.cljs$core$IFn$_invoke$arity$0 = G__3356__0;
        G__3356.cljs$core$IFn$_invoke$arity$1 = G__3356__1;
        G__3356.cljs$core$IFn$_invoke$arity$2 = G__3356__2;
        return G__3356;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__5455__auto__ = cljs.core.seq(coll);
      if (temp__5455__auto__) {
        var coll__$1 = temp__5455__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat(var_args) {
  var G__3360 = arguments.length;
  switch(G__3360) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___3362 = arguments.length;
      var i__4642__auto___3363 = 0;
      while (true) {
        if (i__4642__auto___3363 < len__4641__auto___3362) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___3363]);
          var G__3364 = i__4642__auto___3363 + 1;
          i__4642__auto___3363 = G__3364;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(1), 0, null);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4663__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq3358) {
  var G__3359 = cljs.core.first(seq3358);
  var seq3358__$1 = cljs.core.next(seq3358);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3359, seq3358__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter(var_args) {
  var G__3366 = arguments.length;
  switch(G__3366) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__3369 = null;
      var G__3369__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__3369__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__3369__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__3369 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__3369__0.call(this);
          case 1:
            return G__3369__1.call(this, result);
          case 2:
            return G__3369__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__3369.cljs$core$IFn$_invoke$arity$0 = G__3369__0;
      G__3369.cljs$core$IFn$_invoke$arity$1 = G__3369__1;
      G__3369.cljs$core$IFn$_invoke$arity$2 = G__3369__2;
      return G__3369;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5457__auto__ = cljs.core.seq(coll);
    if (temp__5457__auto__) {
      var s = temp__5457__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4518__auto___3370 = size;
        var i_3371 = 0;
        while (true) {
          if (i_3371 < n__4518__auto___3370) {
            if (cljs.core.truth_(function() {
              var G__3367 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3371);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__3367) : pred.call(null, G__3367);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3371));
            } else {
            }
            var G__3372 = i_3371 + 1;
            i_3371 = G__3372;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove(var_args) {
  var G__3374 = arguments.length;
  switch(G__3374) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__3376_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__3376_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into(var_args) {
  var G__3378 = arguments.length;
  switch(G__3378) {
    case 0:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$1 = function(to) {
  return to;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv(var_args) {
  var G__3388 = arguments.length;
  switch(G__3388) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___3390 = arguments.length;
      var i__4642__auto___3391 = 0;
      while (true) {
        if (i__4642__auto___3391 < len__4641__auto___3390) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___3391]);
          var G__3392 = i__4642__auto___3391 + 1;
          i__4642__auto___3391 = G__3392;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(4), 0, null);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4663__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq3383) {
  var G__3384 = cljs.core.first(seq3383);
  var seq3383__$1 = cljs.core.next(seq3383);
  var G__3385 = cljs.core.first(seq3383__$1);
  var seq3383__$2 = cljs.core.next(seq3383__$1);
  var G__3386 = cljs.core.first(seq3383__$2);
  var seq3383__$3 = cljs.core.next(seq3383__$2);
  var G__3387 = cljs.core.first(seq3383__$3);
  var seq3383__$4 = cljs.core.next(seq3383__$3);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3384, G__3385, G__3386, G__3387, seq3383__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition(var_args) {
  var G__3394 = arguments.length;
  switch(G__3394) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5457__auto__ = cljs.core.seq(coll);
    if (temp__5457__auto__) {
      var s = temp__5457__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5457__auto__ = cljs.core.seq(coll);
    if (temp__5457__auto__) {
      var s = temp__5457__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return new cljs.core.List(null, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)), null, 1, null);
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in(var_args) {
  var G__3397 = arguments.length;
  switch(G__3397) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.get, m, ks);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (!(ks__$1 == null)) {
      var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
      if (sentinel === m__$2) {
        return not_found;
      } else {
        var G__3399 = sentinel;
        var G__3400 = m__$2;
        var G__3401 = cljs.core.next(ks__$1);
        sentinel = G__3399;
        m__$1 = G__3400;
        ks__$1 = G__3401;
        continue;
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__3402, v) {
  var vec__3403 = p__3402;
  var seq__3404 = cljs.core.seq(vec__3403);
  var first__3405 = cljs.core.first(seq__3404);
  var seq__3404__$1 = cljs.core.next(seq__3404);
  var k = first__3405;
  var ks = seq__3404__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3406 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__3407 = ks;
      var G__3408 = v;
      return cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3 ? cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3(G__3406, G__3407, G__3408) : cljs.core.assoc_in.call(null, G__3406, G__3407, G__3408);
    }());
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in(var_args) {
  var G__3417 = arguments.length;
  switch(G__3417) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___3449 = arguments.length;
      var i__4642__auto___3450 = 0;
      while (true) {
        if (i__4642__auto___3450 < len__4641__auto___3449) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___3450]);
          var G__3451 = i__4642__auto___3450 + 1;
          i__4642__auto___3450 = G__3451;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(6), 0, null);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4663__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__3418, f) {
  var vec__3419 = p__3418;
  var seq__3420 = cljs.core.seq(vec__3419);
  var first__3421 = cljs.core.first(seq__3420);
  var seq__3420__$1 = cljs.core.next(seq__3420);
  var k = first__3421;
  var ks = seq__3420__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3422 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3422) : f.call(null, G__3422);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__3423, f, a) {
  var vec__3424 = p__3423;
  var seq__3425 = cljs.core.seq(vec__3424);
  var first__3426 = cljs.core.first(seq__3425);
  var seq__3425__$1 = cljs.core.next(seq__3425);
  var k = first__3426;
  var ks = seq__3425__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3427 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__3428 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3427, G__3428) : f.call(null, G__3427, G__3428);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__3429, f, a, b) {
  var vec__3430 = p__3429;
  var seq__3431 = cljs.core.seq(vec__3430);
  var first__3432 = cljs.core.first(seq__3431);
  var seq__3431__$1 = cljs.core.next(seq__3431);
  var k = first__3432;
  var ks = seq__3431__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3433 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__3434 = a;
      var G__3435 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3433, G__3434, G__3435) : f.call(null, G__3433, G__3434, G__3435);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__3436, f, a, b, c) {
  var vec__3437 = p__3436;
  var seq__3438 = cljs.core.seq(vec__3437);
  var first__3439 = cljs.core.first(seq__3438);
  var seq__3438__$1 = cljs.core.next(seq__3438);
  var k = first__3439;
  var ks = seq__3438__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3440 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__3441 = a;
      var G__3442 = b;
      var G__3443 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__3440, G__3441, G__3442, G__3443) : f.call(null, G__3440, G__3441, G__3442, G__3443);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__3444, f, a, b, c, args) {
  var vec__3445 = p__3444;
  var seq__3446 = cljs.core.seq(vec__3445);
  var first__3447 = cljs.core.first(seq__3446);
  var seq__3446__$1 = cljs.core.next(seq__3446);
  var k = first__3447;
  var ks = seq__3446__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq3410) {
  var G__3411 = cljs.core.first(seq3410);
  var seq3410__$1 = cljs.core.next(seq3410);
  var G__3412 = cljs.core.first(seq3410__$1);
  var seq3410__$2 = cljs.core.next(seq3410__$1);
  var G__3413 = cljs.core.first(seq3410__$2);
  var seq3410__$3 = cljs.core.next(seq3410__$2);
  var G__3414 = cljs.core.first(seq3410__$3);
  var seq3410__$4 = cljs.core.next(seq3410__$3);
  var G__3415 = cljs.core.first(seq3410__$4);
  var seq3410__$5 = cljs.core.next(seq3410__$4);
  var G__3416 = cljs.core.first(seq3410__$5);
  var seq3410__$6 = cljs.core.next(seq3410__$5);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3411, G__3412, G__3413, G__3414, G__3415, G__3416, seq3410__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update(var_args) {
  var G__3460 = arguments.length;
  switch(G__3460) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___3472 = arguments.length;
      var i__4642__auto___3473 = 0;
      while (true) {
        if (i__4642__auto___3473 < len__4641__auto___3472) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___3473]);
          var G__3474 = i__4642__auto___3473 + 1;
          i__4642__auto___3473 = G__3474;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(6), 0, null);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4663__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__3461 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3461) : f.call(null, G__3461);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__3462 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__3463 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3462, G__3463) : f.call(null, G__3462, G__3463);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__3464 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__3465 = x;
    var G__3466 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3464, G__3465, G__3466) : f.call(null, G__3464, G__3465, G__3466);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__3467 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__3468 = x;
    var G__3469 = y;
    var G__3470 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__3467, G__3468, G__3469, G__3470) : f.call(null, G__3467, G__3468, G__3469, G__3470);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq3453) {
  var G__3454 = cljs.core.first(seq3453);
  var seq3453__$1 = cljs.core.next(seq3453);
  var G__3455 = cljs.core.first(seq3453__$1);
  var seq3453__$2 = cljs.core.next(seq3453__$1);
  var G__3456 = cljs.core.first(seq3453__$2);
  var seq3453__$3 = cljs.core.next(seq3453__$2);
  var G__3457 = cljs.core.first(seq3453__$3);
  var seq3453__$4 = cljs.core.next(seq3453__$3);
  var G__3458 = cljs.core.first(seq3453__$4);
  var seq3453__$5 = cljs.core.next(seq3453__$4);
  var G__3459 = cljs.core.first(seq3453__$5);
  var seq3453__$6 = cljs.core.next(seq3453__$5);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3454, G__3455, G__3456, G__3457, G__3458, G__3459, seq3453__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__3475 = ll - 5;
      var G__3476 = r;
      ll = G__3475;
      ret = G__3476;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = function() {
        var G__3477 = pv;
        var G__3478 = level - 5;
        var G__3479 = child;
        var G__3480 = tailnode;
        return cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4(G__3477, G__3478, G__3479, G__3480) : cljs.core.push_tail.call(null, G__3477, G__3478, G__3479, G__3480);
      }();
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error(["No item ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(i), " in vector of length ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__3481 = cljs.core.pv_aget(node, 0);
      var G__3482 = level - 5;
      node = G__3481;
      level = G__3482;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__3483 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__3484 = level - 5;
        node = G__3483;
        level = G__3484;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, function() {
      var G__3485 = pv;
      var G__3486 = level - 5;
      var G__3487 = cljs.core.pv_aget(node, subidx);
      var G__3488 = i;
      var G__3489 = val;
      return cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5 ? cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5(G__3485, G__3486, G__3487, G__3488, G__3489) : cljs.core.do_assoc.call(null, G__3485, G__3486, G__3487, G__3488, G__3489);
    }());
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = function() {
      var G__3490 = pv;
      var G__3491 = level - 5;
      var G__3492 = cljs.core.pv_aget(node, subidx);
      return cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3(G__3490, G__3491, G__3492) : cljs.core.pop_tail.call(null, G__3490, G__3491, G__3492);
    }();
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.pv_reduce = function cljs$core$pv_reduce(var_args) {
  var G__3494 = arguments.length;
  switch(G__3494) {
    case 4:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4 = function(pv, f, start, end) {
  if (start < end) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(pv, f, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(pv, start), start + 1, end);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5 = function(pv, f, init, start, end) {
  var acc = init;
  var i = start;
  var arr = cljs.core.unchecked_array_for(pv, start);
  while (true) {
    if (i < end) {
      var j = i & 31;
      var arr__$1 = j === 0 ? cljs.core.unchecked_array_for(pv, i) : arr;
      var nacc = function() {
        var G__3495 = acc;
        var G__3496 = arr__$1[j];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3495, G__3496) : f.call(null, G__3495, G__3496);
      }();
      if (cljs.core.reduced_QMARK_(nacc)) {
        return cljs.core.deref(nacc);
      } else {
        var G__3498 = nacc;
        var G__3499 = i + 1;
        var G__3500 = arr__$1;
        acc = G__3498;
        i = G__3499;
        arr = G__3500;
        continue;
      }
    } else {
      return acc;
    }
    break;
  }
};
cljs.core.pv_reduce.cljs$lang$maxFixedArity = 5;
cljs.core.APersistentVector = function() {
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentVector.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IFind$_find$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return new cljs.core.MapEntry(n, cljs.core.unchecked_array_for(coll__$1, n)[n & 31], null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.indexOf = function() {
  var G__3507 = null;
  var G__3507__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3507__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3507 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3507__1.call(this, x);
      case 2:
        return G__3507__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3507.cljs$core$IFn$_invoke$arity$1 = G__3507__1;
  G__3507.cljs$core$IFn$_invoke$arity$2 = G__3507__2;
  return G__3507;
}();
cljs.core.PersistentVector.prototype.lastIndexOf = function() {
  var G__3508 = null;
  var G__3508__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3508__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3508 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3508__1.call(this, x);
      case 2:
        return G__3508__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3508.cljs$core$IFn$_invoke$arity$1 = G__3508__1;
  G__3508.cljs$core$IFn$_invoke$arity$2 = G__3508__2;
  return G__3508;
}();
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__3502 = init__$2;
              var G__3503 = j + i;
              var G__3504 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3502, G__3503, G__3504) : f.call(null, G__3502, G__3503, G__3504);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__3509 = j + 1;
              var G__3510 = init__$3;
              j = G__3509;
              init__$2 = G__3510;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3511 = i + len;
        var G__3512 = init__$2;
        i = G__3511;
        init__$1 = G__3512;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$APersistentVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return coll__$1.cljs$core$ICollection$_conj$arity$2(null, val);
    } else {
      throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds  [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt), "]"].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return coll__$1.cljs$core$IIndexed$_nth$arity$2(null, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = coll__$1.cljs$core$IIterable$_iterator$arity$1(null);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (me_iter.hasNext()) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root(self__.root), cljs.core.tv_editable_tail(self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(v__$1, f, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__3505 = init__$2;
              var G__3506 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3505, G__3506) : f.call(null, G__3505, G__3506);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__3513 = j + 1;
              var G__3514 = init__$3;
              j = G__3513;
              init__$2 = G__3514;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3515 = i + len;
        var G__3516 = init__$2;
        i = G__3515;
        init__$1 = G__3516;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IVector$_assoc_n$arity$3(null, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.integer_QMARK_(k)) {
    return 0 <= k && k < self__.cnt;
  } else {
    return false;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0, null);
    } else {
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(coll__$1, cljs.core.first_array_for_longvec(coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4518__auto___3517 = len;
    var i_3518 = 0;
    while (true) {
      if (i_3518 < n__4518__auto___3517) {
        new_tail[i_3518] = self__.tail[i_3518];
        var G__3519 = i_3518 + 1;
        i_3518 = G__3519;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__3520 = null;
  var G__3520__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3520__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3520 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3520__2.call(this, self__, k);
      case 3:
        return G__3520__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3520.cljs$core$IFn$_invoke$arity$2 = G__3520__2;
  G__3520.cljs$core$IFn$_invoke$arity$3 = G__3520__3;
  return G__3520;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args3501) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3501)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__3521 = i + 1;
        var G__3522 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__3521;
        out = G__3522;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
var G__3523_3526 = cljs.core.PersistentVector.prototype;
var G__3524_3527 = cljs.core.ITER_SYMBOL;
var G__3525_3528 = function(G__3523_3526, G__3524_3527) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__3523_3526, G__3524_3527);
goog.object.set(G__3523_3526, G__3524_3527, G__3525_3528);
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.map_entry_QMARK_(coll)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.key(coll), cljs.core.val(coll)], null);
  } else {
    if (cljs.core.vector_QMARK_(coll)) {
      return cljs.core.with_meta(coll, null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.PersistentVector.fromArray(coll, true);
      } else {
        return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
      }
    }
  }
};
cljs.core.vector = function cljs$core$vector(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___3530 = arguments.length;
  var i__4642__auto___3531 = 0;
  while (true) {
    if (i__4642__auto___3531 < len__4641__auto___3530) {
      args__4647__auto__.push(arguments[i__4642__auto___3531]);
      var G__3532 = i__4642__auto___3531 + 1;
      i__4642__auto___3531 = G__3532;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq3529) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3529));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.indexOf = function() {
  var G__3533 = null;
  var G__3533__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3533__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3533 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3533__1.call(this, x);
      case 2:
        return G__3533__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3533.cljs$core$IFn$_invoke$arity$1 = G__3533__1;
  G__3533.cljs$core$IFn$_invoke$arity$2 = G__3533__2;
  return G__3533;
}();
cljs.core.ChunkedSeq.prototype.lastIndexOf = function() {
  var G__3534 = null;
  var G__3534__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3534__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3534 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3534__1.call(this, x);
      case 2:
        return G__3534__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3534.cljs$core$IFn$_invoke$arity$1 = G__3534__1;
  G__3534.cljs$core$IFn$_invoke$arity$2 = G__3534__2;
  return G__3534;
}();
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return coll__$1.cljs$core$IChunkedNext$_chunked_next$arity$1(null);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.vec, f, self__.i + self__.off, cljs.core.count(self__.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.vec, f, start, self__.i + self__.off, cljs.core.count(self__.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return coll__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, cljs.core.unchecked_array_for(self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, cljs.core.unchecked_array_for(self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
var G__3535_3538 = cljs.core.ChunkedSeq.prototype;
var G__3536_3539 = cljs.core.ITER_SYMBOL;
var G__3537_3540 = function(G__3535_3538, G__3536_3539) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__3535_3538, G__3536_3539);
goog.object.set(G__3535_3538, G__3536_3539, G__3537_3540);
cljs.core.chunked_seq = function cljs$core$chunked_seq(var_args) {
  var G__3542 = arguments.length;
  switch(G__3542) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.Subvec.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IFind$_find$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0) {
    return null;
  } else {
    var idx = self__.start + n;
    if (idx < self__.end) {
      return new cljs.core.MapEntry(n, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.v, idx), null);
    } else {
      return null;
    }
  }
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.indexOf = function() {
  var G__3551 = null;
  var G__3551__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3551__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__3551 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__3551__1.call(this, x);
      case 2:
        return G__3551__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3551.cljs$core$IFn$_invoke$arity$1 = G__3551__1;
  G__3551.cljs$core$IFn$_invoke$arity$2 = G__3551__2;
  return G__3551;
}();
cljs.core.Subvec.prototype.lastIndexOf = function() {
  var G__3552 = null;
  var G__3552__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3552__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__3552 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__3552__1.call(this, x);
      case 2:
        return G__3552__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3552.cljs$core$IFn$_invoke$arity$1 = G__3552__1;
  G__3552.cljs$core$IFn$_invoke$arity$2 = G__3552__2;
  return G__3552;
}();
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__3545 = init__$1;
        var G__3546 = j;
        var G__3547 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3545, G__3546, G__3547) : f.call(null, G__3545, G__3546, G__3547);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3553 = i + 1;
        var G__3554 = j + 1;
        var G__3555 = init__$2;
        i = G__3553;
        j = G__3554;
        init__$1 = G__3555;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  if (n < 0 || self__.end + 1 <= v_pos) {
    throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll__$1.cljs$core$ICounted$_count$arity$1(null)), "]"].join(""));
  } else {
    return cljs.core.build_subvec(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val), self__.start, function() {
      var x__4135__auto__ = self__.end;
      var y__4136__auto__ = v_pos + 1;
      return x__4135__auto__ > y__4136__auto__ ? x__4135__auto__ : y__4136__auto__;
    }(), null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.ranged_iterator(self__.v, self__.start, self__.end);
  } else {
    return cljs.core.seq_iter(coll__$1);
  }
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec(self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.v, f, self__.start, self__.end);
  } else {
    return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.v, f, init, self__.start, self__.end);
  } else {
    return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, init);
  }
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return coll__$1.cljs$core$IVector$_assoc_n$arity$3(null, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec(meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec(self__.meta, cljs.core._assoc_n(self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__3556 = null;
  var G__3556__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3556__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3556 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3556__2.call(this, self__, k);
      case 3:
        return G__3556__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3556.cljs$core$IFn$_invoke$arity$2 = G__3556__2;
  G__3556.cljs$core$IFn$_invoke$arity$3 = G__3556__3;
  return G__3556;
}();
cljs.core.Subvec.prototype.apply = function(self__, args3544) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3544)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
var G__3557_3560 = cljs.core.Subvec.prototype;
var G__3558_3561 = cljs.core.ITER_SYMBOL;
var G__3559_3562 = function(G__3557_3560, G__3558_3561) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__3557_3560, G__3558_3561);
goog.object.set(G__3557_3560, G__3558_3561, G__3559_3562);
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__3563 = meta;
      var G__3564 = v.v;
      var G__3565 = v.start + start;
      var G__3566 = v.start + end;
      var G__3567 = __hash;
      meta = G__3563;
      v = G__3564;
      start = G__3565;
      end = G__3566;
      __hash = G__3567;
      continue;
    } else {
      if (cljs.core.vector_QMARK_(v)) {
      } else {
        throw new Error("v must satisfy IVector");
      }
      var c_3568 = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c_3568 || end > c_3568) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec(var_args) {
  var G__3570 = arguments.length;
  switch(G__3570) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  if (!(start == null) && !(end == null)) {
  } else {
    throw new Error("Assert failed: (and (not (nil? start)) (not (nil? end)))");
  }
  return cljs.core.build_subvec(null, v, start | 0, end | 0, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      var G__3574 = tv;
      var G__3575 = level - 5;
      var G__3576 = child;
      var G__3577 = tail_node;
      return cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4(G__3574, G__3575, G__3576, G__3577) : cljs.core.tv_push_tail.call(null, G__3574, G__3575, G__3576, G__3577);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = function() {
      var G__3578 = tv;
      var G__3579 = level - 5;
      var G__3580 = cljs.core.pv_aget(node__$1, subidx);
      return cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3(G__3578, G__3579, G__3580) : cljs.core.tv_pop_tail.call(null, G__3578, G__3579, G__3580);
    }();
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__3581 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__3582 = level - 5;
        node = G__3581;
        level = G__3582;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return tcoll__$1.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(null, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function() {
          var fexpr__3584 = function(tcoll__$1) {
            return function cljs$core$go(level, node) {
              var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
              if (level === 0) {
                cljs.core.pv_aset(node__$1, n & 31, val);
                return node__$1;
              } else {
                var subidx = n >>> level & 31;
                cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
                return node__$1;
              }
            };
          }(tcoll__$1);
          return fexpr__3584(self__.shift, self__.root);
        }();
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return tcoll__$1.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, val);
      } else {
        throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds for TransientVector of length", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return coll__$1.cljs$core$IIndexed$_nth$arity$2(null, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__3585 = null;
  var G__3585__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3585__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3585 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3585__2.call(this, self__, k);
      case 3:
        return G__3585__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3585.cljs$core$IFn$_invoke$arity$2 = G__3585__2;
  G__3585.cljs$core$IFn$_invoke$arity$3 = G__3585__3;
  return G__3585;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args3583) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3583)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4047__auto__ = !(self__.fseq == null) && cljs.core.seq(self__.fseq);
  if (or__4047__auto__) {
    return or__4047__auto__;
  } else {
    var and__4036__auto__ = !(self__.riter == null);
    if (and__4036__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__4036__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.fseq == null)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (!(self__.riter == null) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850700;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.indexOf = function() {
  var G__3586 = null;
  var G__3586__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3586__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3586 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3586__1.call(this, x);
      case 2:
        return G__3586__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3586.cljs$core$IFn$_invoke$arity$1 = G__3586__1;
  G__3586.cljs$core$IFn$_invoke$arity$2 = G__3586__2;
  return G__3586;
}();
cljs.core.PersistentQueueSeq.prototype.lastIndexOf = function() {
  var G__3587 = null;
  var G__3587__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3587__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3587 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3587__1.call(this, x);
      case 2:
        return G__3587__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3587.cljs$core$IFn$_invoke$arity$1 = G__3587__1;
  G__3587.cljs$core$IFn$_invoke$arity$2 = G__3587__2;
  return G__3587;
}();
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__5455__auto__ = cljs.core.next(self__.front);
  if (temp__5455__auto__) {
    var f1 = temp__5455__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (!(self__.rear == null)) {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    } else {
      return null;
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__5455__auto__ = cljs.core.next(self__.front);
  if (temp__5455__auto__) {
    var f1 = temp__5455__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
var G__3588_3591 = cljs.core.PersistentQueueSeq.prototype;
var G__3589_3592 = cljs.core.ITER_SYMBOL;
var G__3590_3593 = function(G__3588_3591, G__3589_3592) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__3588_3591, G__3589_3592);
goog.object.set(G__3588_3591, G__3589_3592, G__3590_3593);
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.indexOf = function() {
  var G__3594 = null;
  var G__3594__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3594__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3594 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3594__1.call(this, x);
      case 2:
        return G__3594__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3594.cljs$core$IFn$_invoke$arity$1 = G__3594__1;
  G__3594.cljs$core$IFn$_invoke$arity$2 = G__3594__2;
  return G__3594;
}();
cljs.core.PersistentQueue.prototype.lastIndexOf = function() {
  var G__3595 = null;
  var G__3595__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count.cljs$core$IFn$_invoke$arity$1 ? self__.count.cljs$core$IFn$_invoke$arity$1(coll) : self__.count.call(null, coll));
  };
  var G__3595__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3595 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3595__1.call(this, x);
      case 2:
        return G__3595__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3595.cljs$core$IFn$_invoke$arity$1 = G__3595__1;
  G__3595.cljs$core$IFn$_invoke$arity$2 = G__3595__2;
  return G__3595;
}();
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__5455__auto__ = cljs.core.next(self__.front);
    if (temp__5455__auto__) {
      var f1 = temp__5455__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4047__auto__ = self__.front;
    if (cljs.core.truth_(or__4047__auto__)) {
      return or__4047__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4047__auto__ = self__.rear;
      if (cljs.core.truth_(or__4047__auto__)) {
        return or__4047__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
var G__3596_3599 = cljs.core.PersistentQueue.prototype;
var G__3597_3600 = cljs.core.ITER_SYMBOL;
var G__3598_3601 = function(G__3596_3599, G__3597_3600) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__3596_3599, G__3597_3600);
goog.object.set(G__3596_3599, G__3597_3600, G__3598_3601);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) && !cljs.core.record_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? (!(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 1048576 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IKVReduce$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, x)) ? cljs.core.reduce_kv(function(_, k, v) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, k, cljs.core.never_equiv), v)) {
      return true;
    } else {
      return cljs.core.reduced(false);
    }
  }, true, x) : cljs.core.every_QMARK_(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__3603 = i + incr;
        i = G__3603;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__3604 = i + 1;
      var G__3605 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, goog.object.get(so, k__$1));
      i = G__3604;
      out = G__3605;
      continue;
    } else {
      return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_3611 = 0;
  while (true) {
    if (i_3611 < l) {
      var k_3612 = ks[i_3611];
      var G__3608_3613 = new_obj;
      var G__3609_3614 = k_3612;
      var G__3610_3615 = goog.object.get(obj, k_3612);
      goog.object.set(G__3608_3613, G__3609_3614, G__3610_3615);
      var G__3616 = i_3611 + 1;
      i_3611 = G__3616;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return new cljs.core.MapEntry(k, self__.strobj[k], null);
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__3619 = init__$1;
        var G__3620 = k;
        var G__3621 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3619, G__3620, G__3621) : f.call(null, G__3619, G__3620, G__3621);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3622 = cljs.core.rest(keys__$1);
        var G__3623 = init__$2;
        keys__$1 = G__3622;
        init__$1 = G__3623;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        goog.object.set(new_strobj, k, v);
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        goog.object.set(new_strobj, k, v);
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__3617_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__3617_SHARP_, self__.strobj[p1__3617_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__3624 = null;
  var G__3624__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3624__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3624 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3624__2.call(this, self__, k);
      case 3:
        return G__3624__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3624.cljs$core$IFn$_invoke$arity$2 = G__3624__2;
  G__3624.cljs$core$IFn$_invoke$arity$3 = G__3624__3;
  return G__3624;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args3618) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3618)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4047__auto__ = self__.i < self__.base_count;
  if (or__4047__auto__) {
    return or__4047__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.MapEntry(k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k), null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__3627 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3627, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3627, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__3630 = i + 2;
        i = G__3630;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__3631 = i + 2;
        i = G__3631;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__3632 = i + 2;
        i = G__3632;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__3633 = i + 2;
        i = G__3633;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__3634 = i + 2;
        i = G__3634;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_3635 = 0;
  while (true) {
    if (i_3635 < l) {
      narr[i_3635] = arr[i_3635];
      var G__3636 = i_3635 + 1;
      i_3635 = G__3636;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.MapEntry = function(key, val, __hash) {
  this.key = key;
  this.val = val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MapEntry.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__3638 = k;
  switch(G__3638) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.MapEntry.prototype.indexOf = function() {
  var G__3640 = null;
  var G__3640__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3640__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3640 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3640__1.call(this, x);
      case 2:
        return G__3640__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3640.cljs$core$IFn$_invoke$arity$1 = G__3640__1;
  G__3640.cljs$core$IFn$_invoke$arity$2 = G__3640__2;
  return G__3640;
}();
cljs.core.MapEntry.prototype.lastIndexOf = function() {
  var G__3641 = null;
  var G__3641__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3641__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3641 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3641__1.call(this, x);
      case 2:
        return G__3641__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3641.cljs$core$IFn$_invoke$arity$1 = G__3641__1;
  G__3641.cljs$core$IFn$_invoke$arity$2 = G__3641__2;
  return G__3641;
}();
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.MapEntry.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.MapEntry.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.MapEntry.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.MapEntry.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.MapEntry.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.MapEntry.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.MapEntry.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.MapEntry.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.MapEntry.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.MapEntry.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.MapEntry.prototype.call = function() {
  var G__3642 = null;
  var G__3642__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3642__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3642 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3642__2.call(this, self__, k);
      case 3:
        return G__3642__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3642.cljs$core$IFn$_invoke$arity$2 = G__3642__2;
  G__3642.cljs$core$IFn$_invoke$arity$3 = G__3642__3;
  return G__3642;
}();
cljs.core.MapEntry.prototype.apply = function(self__, args3637) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3637)));
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.MapEntry.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.MapEntry.cljs$lang$type = true;
cljs.core.MapEntry.cljs$lang$ctorStr = "cljs.core/MapEntry";
cljs.core.MapEntry.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/MapEntry");
};
cljs.core.__GT_MapEntry = function cljs$core$__GT_MapEntry(key, val, __hash) {
  return new cljs.core.MapEntry(key, val, __hash);
};
cljs.core.map_entry_QMARK_ = function cljs$core$map_entry_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2048 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMapEntry$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.indexOf = function() {
  var G__3644 = null;
  var G__3644__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3644__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3644 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3644__1.call(this, x);
      case 2:
        return G__3644__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3644.cljs$core$IFn$_invoke$arity$1 = G__3644__1;
  G__3644.cljs$core$IFn$_invoke$arity$2 = G__3644__2;
  return G__3644;
}();
cljs.core.PersistentArrayMapSeq.prototype.lastIndexOf = function() {
  var G__3645 = null;
  var G__3645__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3645__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3645 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3645__1.call(this, x);
      case 2:
        return G__3645__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3645.cljs$core$IFn$_invoke$arity$1 = G__3645__1;
  G__3645.cljs$core$IFn$_invoke$arity$2 = G__3645__2;
  return G__3645;
}();
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.MapEntry(self__.arr[self__.i], self__.arr[self__.i + 1], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
var G__3646_3649 = cljs.core.PersistentArrayMapSeq.prototype;
var G__3647_3650 = cljs.core.ITER_SYMBOL;
var G__3648_3651 = function(G__3646_3649, G__3647_3650) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__3646_3649, G__3647_3650);
goog.object.set(G__3646_3649, G__3647_3650, G__3648_3651);
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.MapEntry(self__.arr[self__.i], self__.arr[self__.i + 1], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return null;
  } else {
    return new cljs.core.MapEntry(self__.arr[idx], self__.arr[idx + 1], null);
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__3653 = cljs.core.seq(coll);
  var chunk__3654 = null;
  var count__3655 = 0;
  var i__3656 = 0;
  while (true) {
    if (i__3656 < count__3655) {
      var vec__3657 = chunk__3654.cljs$core$IIndexed$_nth$arity$2(null, i__3656);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3657, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3657, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__3669 = seq__3653;
      var G__3670 = chunk__3654;
      var G__3671 = count__3655;
      var G__3672 = i__3656 + 1;
      seq__3653 = G__3669;
      chunk__3654 = G__3670;
      count__3655 = G__3671;
      i__3656 = G__3672;
      continue;
    } else {
      var temp__5457__auto__ = cljs.core.seq(seq__3653);
      if (temp__5457__auto__) {
        var seq__3653__$1 = temp__5457__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__3653__$1)) {
          var c__4461__auto__ = cljs.core.chunk_first(seq__3653__$1);
          var G__3673 = cljs.core.chunk_rest(seq__3653__$1);
          var G__3674 = c__4461__auto__;
          var G__3675 = cljs.core.count(c__4461__auto__);
          var G__3676 = 0;
          seq__3653 = G__3673;
          chunk__3654 = G__3674;
          count__3655 = G__3675;
          i__3656 = G__3676;
          continue;
        } else {
          var vec__3660 = cljs.core.first(seq__3653__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3660, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3660, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__3677 = cljs.core.next(seq__3653__$1);
          var G__3678 = null;
          var G__3679 = 0;
          var G__3680 = 0;
          seq__3653 = G__3677;
          chunk__3654 = G__3678;
          count__3655 = G__3679;
          i__3656 = G__3680;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__3663 = init__$1;
        var G__3664 = self__.arr[i];
        var G__3665 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3663, G__3664, G__3665) : f.call(null, G__3663, G__3664, G__3665);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3681 = i + 2;
        var G__3682 = init__$2;
        i = G__3681;
        init__$1 = G__3682;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.map_QMARK_(other) && !cljs.core.record_QMARK_(other)) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__3683 = i + 2;
              i = G__3683;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__3684 = s + 2;
            var G__3685 = d;
            s = G__3684;
            d = G__3685;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__3686 = s + 2;
            var G__3687 = d + 2;
            s = G__3686;
            d = G__3687;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__3668 = cljs.core.aclone(self__.arr);
        G__3668[idx + 1] = v;
        return G__3668;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__3688 = ret.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__3689 = cljs.core.next(es);
          ret = G__3688;
          es = G__3689;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__3690 = null;
  var G__3690__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3690__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3690 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3690__2.call(this, self__, k);
      case 3:
        return G__3690__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3690.cljs$core$IFn$_invoke$arity$2 = G__3690__2;
  G__3690.cljs$core$IFn$_invoke$arity$3 = G__3690__3;
  return G__3690;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args3652) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3652)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_3691 = 0;
    while (true) {
      if (i_3691 < arr__$1.length) {
        var k_3692 = arr__$1[i_3691];
        var v_3693 = arr__$1[i_3691 + 1];
        var idx_3694 = cljs.core.array_index_of(ret, k_3692);
        if (idx_3694 === -1) {
          ret.push(k_3692);
          ret.push(v_3693);
        } else {
        }
        var G__3695 = i_3691 + 2;
        i_3691 = G__3695;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var cnt = arr__$2.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
};
cljs.core.PersistentArrayMap.createWithCheck = function(arr) {
  var ret = [];
  var i_3697 = 0;
  while (true) {
    if (i_3697 < arr.length) {
      var k_3698 = arr[i_3697];
      var v_3699 = arr[i_3697 + 1];
      var idx_3700 = cljs.core.array_index_of(ret, k_3698);
      if (idx_3700 === -1) {
        var G__3696_3701 = ret;
        G__3696_3701.push(k_3698);
        G__3696_3701.push(v_3699);
      } else {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(k_3698)].join(""));
      }
      var G__3702 = i_3697 + 2;
      i_3697 = G__3702;
      continue;
    } else {
    }
    break;
  }
  var cnt = arr.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr, null);
};
cljs.core.PersistentArrayMap.createAsIfByAssoc = function(arr) {
  var ret = [];
  var i_3704 = 0;
  while (true) {
    if (i_3704 < arr.length) {
      var k_3705 = arr[i_3704];
      var v_3706 = arr[i_3704 + 1];
      var idx_3707 = cljs.core.array_index_of(ret, k_3705);
      if (idx_3707 === -1) {
        var G__3703_3708 = ret;
        G__3703_3708.push(k_3705);
        G__3703_3708.push(v_3706);
      } else {
        ret[idx_3707 + 1] = v_3706;
      }
      var G__3709 = i_3704 + 2;
      i_3704 = G__3709;
      continue;
    } else {
    }
    break;
  }
  return new cljs.core.PersistentArrayMap(null, ret.length / 2, ret, null);
};
var G__3710_3713 = cljs.core.PersistentArrayMap.prototype;
var G__3711_3714 = cljs.core.ITER_SYMBOL;
var G__3712_3715 = function(G__3710_3713, G__3711_3714) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__3710_3713, G__3711_3714);
goog.object.set(G__3710_3713, G__3711_3714, G__3712_3715);
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (cljs.core.map_entry_QMARK_(o)) {
      return tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, cljs.core.key(o), cljs.core.val(o));
    } else {
      if (cljs.core.vector_QMARK_(o)) {
        return tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(0) : o.call(null, 0), o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(1) : o.call(null, 1));
      } else {
        var es = cljs.core.seq(o);
        var tcoll__$2 = tcoll__$1;
        while (true) {
          var temp__5455__auto__ = cljs.core.first(es);
          if (cljs.core.truth_(temp__5455__auto__)) {
            var e = temp__5455__auto__;
            var G__3718 = cljs.core.next(es);
            var G__3719 = tcoll__$2.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, cljs.core.key(e), cljs.core.val(e));
            es = G__3718;
            tcoll__$2 = G__3719;
            continue;
          } else {
            return tcoll__$2;
          }
          break;
        }
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map(self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__3717_3720 = self__.arr;
      G__3717_3720.pop();
      G__3717_3720.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.call = function() {
  var G__3721 = null;
  var G__3721__2 = function(self__, key) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, null);
  };
  var G__3721__3 = function(self__, key, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
  };
  G__3721 = function(self__, key, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3721__2.call(this, self__, key);
      case 3:
        return G__3721__3.call(this, self__, key, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3721.cljs$core$IFn$_invoke$arity$2 = G__3721__2;
  G__3721.cljs$core$IFn$_invoke$arity$3 = G__3721__3;
  return G__3721;
}();
cljs.core.TransientArrayMap.prototype.apply = function(self__, args3716) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3716)));
};
cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(key) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(key, not_found) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__3722 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__3723 = i + 2;
      out = G__3722;
      i = G__3723;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set(var_args) {
  var G__3725 = arguments.length;
  switch(G__3725) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__3726 = cljs.core.aclone(arr);
  G__3726[i] = a;
  return G__3726;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__3727 = cljs.core.aclone(arr);
  G__3727[i] = a;
  G__3727[j] = b;
  return G__3727;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set(var_args) {
  var G__3730 = arguments.length;
  switch(G__3730) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__3732 = init__$1;
          var G__3733 = k;
          var G__3734 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3732, G__3733, G__3734) : f.call(null, G__3732, G__3733, G__3734);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return init__$2;
      } else {
        var G__3735 = i + 2;
        var G__3736 = init__$2;
        i = G__3735;
        init__$1 = G__3736;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = !(key == null) ? self__.next_entry = new cljs.core.MapEntry(key, node_or_val, null) : !(node_or_val == null) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__4047__auto__ = !(self__.next_entry == null);
  if (or__4047__auto__) {
    return or__4047__auto__;
  } else {
    var or__4047__auto____$1 = !(self__.next_iter == null);
    if (or__4047__auto____$1) {
      return or__4047__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (!(self__.next_entry == null)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (!(self__.next_iter == null)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_.val = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_3737 = 0;
        var j_3738 = 0;
        while (true) {
          if (i_3737 < 32) {
            if ((self__.bitmap >>> i_3737 & 1) === 0) {
              var G__3739 = i_3737 + 1;
              var G__3740 = j_3738;
              i_3737 = G__3739;
              j_3738 = G__3740;
              continue;
            } else {
              nodes[i_3737] = !(self__.arr[j_3738] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_3738]), self__.arr[j_3738], self__.arr[j_3738 + 1], added_leaf_QMARK_) : self__.arr[j_3738 + 1];
              var G__3741 = i_3737 + 1;
              var G__3742 = j_3738 + 2;
              i_3737 = G__3741;
              j_3738 = G__3742;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_3743 = 0;
      var j_3744 = 0;
      while (true) {
        if (i_3743 < 32) {
          if ((self__.bitmap >>> i_3743 & 1) === 0) {
            var G__3745 = i_3743 + 1;
            var G__3746 = j_3744;
            i_3743 = G__3745;
            j_3744 = G__3746;
            continue;
          } else {
            nodes[i_3743] = !(self__.arr[j_3744] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_3744]), self__.arr[j_3744], self__.arr[j_3744 + 1], added_leaf_QMARK_) : self__.arr[j_3744 + 1];
            var G__3747 = i_3743 + 1;
            var G__3748 = j_3744 + 2;
            i_3743 = G__3747;
            j_3744 = G__3748;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.MapEntry(key_or_nil, val_or_node, null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__3749 = i + 1;
        var G__3750 = j + 2;
        var G__3751 = bitmap | 1 << i;
        i = G__3749;
        j = G__3750;
        bitmap = G__3751;
        continue;
      } else {
        var G__3752 = i + 1;
        var G__3753 = j;
        var G__3754 = bitmap;
        i = G__3752;
        j = G__3753;
        bitmap = G__3754;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(!(self__.next_iter == null) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (!(node == null)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return init__$2;
        } else {
          var G__3755 = i + 1;
          var G__3756 = init__$2;
          i = G__3755;
          init__$1 = G__3756;
          continue;
        }
      } else {
        var G__3757 = i + 1;
        var G__3758 = init__$1;
        i = G__3757;
        init__$1 = G__3758;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__3759 = i + 2;
        i = G__3759;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_.val = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx + 1], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.MapEntry(self__.arr[idx], self__.arr[idx + 1], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node(var_args) {
  var G__3761 = arguments.length;
  switch(G__3761) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.indexOf = function() {
  var G__3763 = null;
  var G__3763__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3763__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3763 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3763__1.call(this, x);
      case 2:
        return G__3763__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3763.cljs$core$IFn$_invoke$arity$1 = G__3763__1;
  G__3763.cljs$core$IFn$_invoke$arity$2 = G__3763__2;
  return G__3763;
}();
cljs.core.NodeSeq.prototype.lastIndexOf = function() {
  var G__3764 = null;
  var G__3764__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3764__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3764 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3764__1.call(this, x);
      case 2:
        return G__3764__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3764.cljs$core$IFn$_invoke$arity$1 = G__3764__1;
  G__3764.cljs$core$IFn$_invoke$arity$2 = G__3764__2;
  return G__3764;
}();
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.MapEntry(self__.nodes[self__.i], self__.nodes[self__.i + 1], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = self__.s == null ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i + 2, null) : cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
var G__3765_3768 = cljs.core.NodeSeq.prototype;
var G__3766_3769 = cljs.core.ITER_SYMBOL;
var G__3767_3770 = function(G__3765_3768, G__3766_3769) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__3765_3768, G__3766_3769);
goog.object.set(G__3765_3768, G__3766_3769, G__3767_3770);
cljs.core.create_inode_seq = function cljs$core$create_inode_seq(var_args) {
  var G__3772 = arguments.length;
  switch(G__3772) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__5455__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__5455__auto__)) {
            var node = temp__5455__auto__;
            var temp__5455__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__5455__auto____$1)) {
              var node_seq = temp__5455__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__3774 = j + 2;
              j = G__3774;
              continue;
            }
          } else {
            var G__3775 = j + 2;
            j = G__3775;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.indexOf = function() {
  var G__3776 = null;
  var G__3776__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3776__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3776 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3776__1.call(this, x);
      case 2:
        return G__3776__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3776.cljs$core$IFn$_invoke$arity$1 = G__3776__1;
  G__3776.cljs$core$IFn$_invoke$arity$2 = G__3776__2;
  return G__3776;
}();
cljs.core.ArrayNodeSeq.prototype.lastIndexOf = function() {
  var G__3777 = null;
  var G__3777__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3777__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3777 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3777__1.call(this, x);
      case 2:
        return G__3777__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3777.cljs$core$IFn$_invoke$arity$1 = G__3777__1;
  G__3777.cljs$core$IFn$_invoke$arity$2 = G__3777__2;
  return G__3777;
}();
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, self__.nodes, self__.i, cljs.core.next(self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, self__.nodes, self__.i, cljs.core.next(self__.s));
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
var G__3778_3781 = cljs.core.ArrayNodeSeq.prototype;
var G__3779_3782 = cljs.core.ITER_SYMBOL;
var G__3780_3783 = function(G__3778_3781, G__3779_3782) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__3778_3781, G__3779_3782);
goog.object.set(G__3778_3781, G__3779_3782, G__3780_3783);
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq(var_args) {
  var G__3785 = arguments.length;
  switch(G__3785) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__5455__auto__ = nodes[j];
        if (cljs.core.truth_(temp__5455__auto__)) {
          var nj = temp__5455__auto__;
          var temp__5455__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__5455__auto____$1)) {
            var ns = temp__5455__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__3787 = j + 1;
            j = G__3787;
            continue;
          }
        } else {
          var G__3788 = j + 1;
          j = G__3788;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return !self__.seen || self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return new cljs.core.MapEntry(null, self__.nil_val, null);
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.MapEntry(null, self__.nil_val, null);
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_find(0, cljs.core.hash(k), k, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__3790 = cljs.core.seq(coll);
  var chunk__3791 = null;
  var count__3792 = 0;
  var i__3793 = 0;
  while (true) {
    if (i__3793 < count__3792) {
      var vec__3794 = chunk__3791.cljs$core$IIndexed$_nth$arity$2(null, i__3793);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3794, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3794, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__3802 = seq__3790;
      var G__3803 = chunk__3791;
      var G__3804 = count__3792;
      var G__3805 = i__3793 + 1;
      seq__3790 = G__3802;
      chunk__3791 = G__3803;
      count__3792 = G__3804;
      i__3793 = G__3805;
      continue;
    } else {
      var temp__5457__auto__ = cljs.core.seq(seq__3790);
      if (temp__5457__auto__) {
        var seq__3790__$1 = temp__5457__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__3790__$1)) {
          var c__4461__auto__ = cljs.core.chunk_first(seq__3790__$1);
          var G__3806 = cljs.core.chunk_rest(seq__3790__$1);
          var G__3807 = c__4461__auto__;
          var G__3808 = cljs.core.count(c__4461__auto__);
          var G__3809 = 0;
          seq__3790 = G__3806;
          chunk__3791 = G__3807;
          count__3792 = G__3808;
          i__3793 = G__3809;
          continue;
        } else {
          var vec__3797 = cljs.core.first(seq__3790__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3797, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3797, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__3810 = cljs.core.next(seq__3790__$1);
          var G__3811 = null;
          var G__3812 = 0;
          var G__3813 = 0;
          seq__3790 = G__3810;
          chunk__3791 = G__3811;
          count__3792 = G__3812;
          i__3793 = G__3813;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref(init__$1);
  } else {
    if (!(self__.root == null)) {
      return cljs.core.unreduced(self__.root.kv_reduce(f, init__$1));
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter();
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.MapEntry(null, self__.nil_val, null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__3814 = ret.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__3815 = cljs.core.next(es);
          ret = G__3814;
          es = G__3815;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__3816 = null;
  var G__3816__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3816__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3816 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3816__2.call(this, self__, k);
      case 3:
        return G__3816__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3816.cljs$core$IFn$_invoke$arity$2 = G__3816__2;
  G__3816.cljs$core$IFn$_invoke$arity$3 = G__3816__3;
  return G__3816;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args3789) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3789)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__3817 = i + 2;
      var G__3818 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__3817;
      ret = G__3818;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__3819 = i + 1;
      var G__3820 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__3819;
      out = G__3820;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.createWithCheck = function(arr) {
  var len = arr.length;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i_3821 = 0;
  while (true) {
    if (i_3821 < len) {
      cljs.core._assoc_BANG_(ret, arr[i_3821], arr[i_3821 + 1]);
      if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._count(ret), i_3821 / 2 + 1)) {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arr[i_3821])].join(""));
      } else {
        var G__3822 = i_3821 + 2;
        i_3821 = G__3822;
        continue;
      }
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(ret);
};
var G__3823_3826 = cljs.core.PersistentHashMap.prototype;
var G__3824_3827 = cljs.core.ITER_SYMBOL;
var G__3825_3828 = function(G__3823_3826, G__3824_3827) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__3823_3826, G__3824_3827);
goog.object.set(G__3823_3826, G__3824_3827, G__3825_3828);
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (cljs.core.map_entry_QMARK_(o)) {
      return tcoll.assoc_BANG_(cljs.core.key(o), cljs.core.val(o));
    } else {
      if (cljs.core.vector_QMARK_(o)) {
        return tcoll.assoc_BANG_(o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(0) : o.call(null, 0), o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(1) : o.call(null, 1));
      } else {
        var es = cljs.core.seq(o);
        var tcoll__$1 = tcoll;
        while (true) {
          var temp__5455__auto__ = cljs.core.first(es);
          if (cljs.core.truth_(temp__5455__auto__)) {
            var e = temp__5455__auto__;
            var G__3830 = cljs.core.next(es);
            var G__3831 = tcoll__$1.assoc_BANG_(cljs.core.key(e), cljs.core.val(e));
            es = G__3830;
            tcoll__$1 = G__3831;
            continue;
          } else {
            return tcoll__$1;
          }
          break;
        }
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (removed_leaf_QMARK_.val) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.call = function() {
  var G__3832 = null;
  var G__3832__2 = function(self__, key) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$2(null, key);
  };
  var G__3832__3 = function(self__, key, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
  };
  G__3832 = function(self__, key, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3832__2.call(this, self__, key);
      case 3:
        return G__3832__3.call(this, self__, key, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3832.cljs$core$IFn$_invoke$arity$2 = G__3832__2;
  G__3832.cljs$core$IFn$_invoke$arity$3 = G__3832__3;
  return G__3832;
}();
cljs.core.TransientHashMap.prototype.apply = function(self__, args3829) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3829)));
};
cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(key) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$2(null, key);
};
cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(key, not_found) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__3833 = ascending_QMARK_ ? t.left : t.right;
      var G__3834 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__3833;
      stack__$1 = G__3834;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.indexOf = function() {
  var G__3835 = null;
  var G__3835__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3835__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3835 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3835__1.call(this, x);
      case 2:
        return G__3835__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3835.cljs$core$IFn$_invoke$arity$1 = G__3835__1;
  G__3835.cljs$core$IFn$_invoke$arity$2 = G__3835__2;
  return G__3835;
}();
cljs.core.PersistentTreeMapSeq.prototype.lastIndexOf = function() {
  var G__3836 = null;
  var G__3836__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3836__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3836 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3836__1.call(this, x);
      case 2:
        return G__3836__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3836.cljs$core$IFn$_invoke$arity$1 = G__3836__1;
  G__3836.cljs$core$IFn$_invoke$arity$2 = G__3836__2;
  return G__3836;
}();
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (next_stack == null) {
    return null;
  } else {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
var G__3837_3840 = cljs.core.PersistentTreeMapSeq.prototype;
var G__3838_3841 = cljs.core.ITER_SYMBOL;
var G__3839_3842 = function(G__3837_3840, G__3838_3841) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__3837_3840, G__3838_3841);
goog.object.set(G__3837_3840, G__3838_3841, G__3839_3842);
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? function() {
    var G__3843 = node.left;
    var G__3844 = f;
    var G__3845 = init;
    return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__3843, G__3844, G__3845) : cljs.core.tree_map_kv_reduce.call(null, G__3843, G__3844, G__3845);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return init__$1;
  } else {
    var init__$2 = function() {
      var G__3846 = init__$1;
      var G__3847 = node.key;
      var G__3848 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3846, G__3847, G__3848) : f.call(null, G__3846, G__3847, G__3848);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return init__$2;
    } else {
      if (!(node.right == null)) {
        var G__3849 = node.right;
        var G__3850 = f;
        var G__3851 = init__$2;
        return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__3849, G__3850, G__3851) : cljs.core.tree_map_kv_reduce.call(null, G__3849, G__3850, G__3851);
      } else {
        return init__$2;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__3853 = k;
  switch(G__3853) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.BlackNode.prototype.lastIndexOf = function() {
  var G__3855 = null;
  var G__3855__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3855__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3855 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3855__1.call(this, x);
      case 2:
        return G__3855__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3855.cljs$core$IFn$_invoke$arity$1 = G__3855__1;
  G__3855.cljs$core$IFn$_invoke$arity$2 = G__3855__2;
  return G__3855;
}();
cljs.core.BlackNode.prototype.indexOf = function() {
  var G__3856 = null;
  var G__3856__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3856__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3856 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3856__1.call(this, x);
      case 2:
        return G__3856__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3856.cljs$core$IFn$_invoke$arity$1 = G__3856__1;
  G__3856.cljs$core$IFn$_invoke$arity$2 = G__3856__2;
  return G__3856;
}();
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__3857 = null;
  var G__3857__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3857__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3857 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3857__2.call(this, self__, k);
      case 3:
        return G__3857__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3857.cljs$core$IFn$_invoke$arity$2 = G__3857__2;
  G__3857.cljs$core$IFn$_invoke$arity$3 = G__3857__3;
  return G__3857;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args3852) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3852)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
var G__3858_3861 = cljs.core.BlackNode.prototype;
var G__3859_3862 = cljs.core.ITER_SYMBOL;
var G__3860_3863 = function(G__3858_3861, G__3859_3862) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__3858_3861, G__3859_3862);
goog.object.set(G__3858_3861, G__3859_3862, G__3860_3863);
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__3865 = k;
  switch(G__3865) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.RedNode.prototype.lastIndexOf = function() {
  var G__3867 = null;
  var G__3867__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3867__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3867 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3867__1.call(this, x);
      case 2:
        return G__3867__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3867.cljs$core$IFn$_invoke$arity$1 = G__3867__1;
  G__3867.cljs$core$IFn$_invoke$arity$2 = G__3867__2;
  return G__3867;
}();
cljs.core.RedNode.prototype.indexOf = function() {
  var G__3868 = null;
  var G__3868__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3868__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3868 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3868__1.call(this, x);
      case 2:
        return G__3868__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3868.cljs$core$IFn$_invoke$arity$1 = G__3868__1;
  G__3868.cljs$core$IFn$_invoke$arity$2 = G__3868__2;
  return G__3868;
}();
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__3869 = null;
  var G__3869__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3869__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3869 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3869__2.call(this, self__, k);
      case 3:
        return G__3869__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3869.cljs$core$IFn$_invoke$arity$2 = G__3869__2;
  G__3869.cljs$core$IFn$_invoke$arity$3 = G__3869__3;
  return G__3869;
}();
cljs.core.RedNode.prototype.apply = function(self__, args3864) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3864)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
var G__3870_3873 = cljs.core.RedNode.prototype;
var G__3871_3874 = cljs.core.ITER_SYMBOL;
var G__3872_3875 = function(G__3870_3873, G__3871_3874) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__3870_3873, G__3871_3874);
goog.object.set(G__3870_3873, G__3871_3874, G__3872_3875);
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__3876 = k;
      var G__3877 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__3876, G__3877) : comp.call(null, G__3876, G__3877);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = function() {
          var G__3878 = comp;
          var G__3879 = tree.left;
          var G__3880 = k;
          var G__3881 = v;
          var G__3882 = found;
          return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__3878, G__3879, G__3880, G__3881, G__3882) : cljs.core.tree_map_add.call(null, G__3878, G__3879, G__3880, G__3881, G__3882);
        }();
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = function() {
          var G__3883 = comp;
          var G__3884 = tree.right;
          var G__3885 = k;
          var G__3886 = v;
          var G__3887 = found;
          return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__3883, G__3884, G__3885, G__3886, G__3887) : cljs.core.tree_map_add.call(null, G__3883, G__3884, G__3885, G__3886, G__3887);
        }();
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = function() {
            var G__3888 = left.right;
            var G__3889 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__3888, G__3889) : cljs.core.tree_map_append.call(null, G__3888, G__3889);
          }();
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, function() {
            var G__3890 = left.right;
            var G__3891 = right;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__3890, G__3891) : cljs.core.tree_map_append.call(null, G__3890, G__3891);
          }(), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, function() {
            var G__3892 = left;
            var G__3893 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__3892, G__3893) : cljs.core.tree_map_append.call(null, G__3892, G__3893);
          }(), right.right, null);
        } else {
          var app = function() {
            var G__3894 = left.right;
            var G__3895 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__3894, G__3895) : cljs.core.tree_map_append.call(null, G__3894, G__3895);
          }();
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__3896 = k;
      var G__3897 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__3896, G__3897) : comp.call(null, G__3896, G__3897);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = function() {
          var G__3898 = comp;
          var G__3899 = tree.left;
          var G__3900 = k;
          var G__3901 = found;
          return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__3898, G__3899, G__3900, G__3901) : cljs.core.tree_map_remove.call(null, G__3898, G__3899, G__3900, G__3901);
        }();
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = function() {
          var G__3902 = comp;
          var G__3903 = tree.right;
          var G__3904 = k;
          var G__3905 = found;
          return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__3902, G__3903, G__3904, G__3905) : cljs.core.tree_map_remove.call(null, G__3902, G__3903, G__3904, G__3905);
        }();
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, function() {
        var G__3906 = comp;
        var G__3907 = tree.left;
        var G__3908 = k;
        var G__3909 = v;
        return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__3906, G__3907, G__3908, G__3909) : cljs.core.tree_map_replace.call(null, G__3906, G__3907, G__3908, G__3909);
      }(), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, function() {
        var G__3910 = comp;
        var G__3911 = tree.right;
        var G__3912 = k;
        var G__3913 = v;
        return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__3910, G__3911, G__3912, G__3913) : cljs.core.tree_map_replace.call(null, G__3910, G__3911, G__3912, G__3913);
      }());
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.entry_at(k);
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__3915 = cljs.core.seq(coll);
  var chunk__3916 = null;
  var count__3917 = 0;
  var i__3918 = 0;
  while (true) {
    if (i__3918 < count__3917) {
      var vec__3919 = chunk__3916.cljs$core$IIndexed$_nth$arity$2(null, i__3918);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3919, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3919, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__3929 = seq__3915;
      var G__3930 = chunk__3916;
      var G__3931 = count__3917;
      var G__3932 = i__3918 + 1;
      seq__3915 = G__3929;
      chunk__3916 = G__3930;
      count__3917 = G__3931;
      i__3918 = G__3932;
      continue;
    } else {
      var temp__5457__auto__ = cljs.core.seq(seq__3915);
      if (temp__5457__auto__) {
        var seq__3915__$1 = temp__5457__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__3915__$1)) {
          var c__4461__auto__ = cljs.core.chunk_first(seq__3915__$1);
          var G__3933 = cljs.core.chunk_rest(seq__3915__$1);
          var G__3934 = c__4461__auto__;
          var G__3935 = cljs.core.count(c__4461__auto__);
          var G__3936 = 0;
          seq__3915 = G__3933;
          chunk__3916 = G__3934;
          count__3917 = G__3935;
          i__3918 = G__3936;
          continue;
        } else {
          var vec__3922 = cljs.core.first(seq__3915__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3922, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3922, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__3937 = cljs.core.next(seq__3915__$1);
          var G__3938 = null;
          var G__3939 = 0;
          var G__3940 = 0;
          seq__3915 = G__3937;
          chunk__3916 = G__3938;
          count__3917 = G__3939;
          i__3918 = G__3940;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__3925 = k;
        var G__3926 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__3925, G__3926) : self__.comp.call(null, G__3925, G__3926);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__3941 = t.left;
          t = G__3941;
          continue;
        } else {
          var G__3942 = t.right;
          t = G__3942;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.unreduced(cljs.core.tree_map_kv_reduce(self__.tree, f, init));
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__3943 = ret.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__3944 = cljs.core.next(es);
          ret = G__3943;
          es = G__3944;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__3945 = null;
  var G__3945__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3945__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3945 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3945__2.call(this, self__, k);
      case 3:
        return G__3945__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3945.cljs$core$IFn$_invoke$arity$2 = G__3945__2;
  G__3945.cljs$core$IFn$_invoke$arity$3 = G__3945__3;
  return G__3945;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args3914) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3914)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__3927 = k;
          var G__3928 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__3927, G__3928) : self__.comp.call(null, G__3927, G__3928);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__3946 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__3947 = t.left;
              stack = G__3946;
              t = G__3947;
              continue;
            } else {
              var G__3948 = stack;
              var G__3949 = t.right;
              stack = G__3948;
              t = G__3949;
              continue;
            }
          } else {
            if (c > 0) {
              var G__3950 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__3951 = t.right;
              stack = G__3950;
              t = G__3951;
              continue;
            } else {
              var G__3952 = stack;
              var G__3953 = t.left;
              stack = G__3952;
              t = G__3953;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key(entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
var G__3954_3957 = cljs.core.PersistentTreeMap.prototype;
var G__3955_3958 = cljs.core.ITER_SYMBOL;
var G__3956_3959 = function(G__3954_3957, G__3955_3958) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__3954_3957, G__3955_3958);
goog.object.set(G__3954_3957, G__3955_3958, G__3956_3959);
cljs.core.hash_map = function cljs$core$hash_map(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___3961 = arguments.length;
  var i__4642__auto___3962 = 0;
  while (true) {
    if (i__4642__auto___3962 < len__4641__auto___3961) {
      args__4647__auto__.push(arguments[i__4642__auto___3962]);
      var G__3963 = i__4642__auto___3962 + 1;
      i__4642__auto___3962 = G__3963;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__3964 = cljs.core.nnext(in$);
      var G__3965 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__3964;
      out = G__3965;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq3960) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3960));
};
cljs.core.array_map = function cljs$core$array_map(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___3967 = arguments.length;
  var i__4642__auto___3968 = 0;
  while (true) {
    if (i__4642__auto___3968 < len__4641__auto___3967) {
      args__4647__auto__.push(arguments[i__4642__auto___3968]);
      var G__3969 = i__4642__auto___3968 + 1;
      i__4642__auto___3968 = G__3969;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.createAsIfByAssoc(arr);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq3966) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3966));
};
cljs.core.obj_map = function cljs$core$obj_map(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___3976 = arguments.length;
  var i__4642__auto___3977 = 0;
  while (true) {
    if (i__4642__auto___3977 < len__4641__auto___3976) {
      args__4647__auto__.push(arguments[i__4642__auto___3977]);
      var G__3978 = i__4642__auto___3977 + 1;
      i__4642__auto___3977 = G__3978;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      var G__3973_3979 = obj;
      var G__3974_3980 = cljs.core.first(kvs);
      var G__3975_3981 = cljs.core.second(kvs);
      goog.object.set(G__3973_3979, G__3974_3980, G__3975_3981);
      var G__3982 = cljs.core.nnext(kvs);
      kvs = G__3982;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq3970) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3970));
};
cljs.core.sorted_map = function cljs$core$sorted_map(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___3984 = arguments.length;
  var i__4642__auto___3985 = 0;
  while (true) {
    if (i__4642__auto___3985 < len__4641__auto___3984) {
      args__4647__auto__.push(arguments[i__4642__auto___3985]);
      var G__3986 = i__4642__auto___3985 + 1;
      i__4642__auto___3985 = G__3986;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__3987 = cljs.core.nnext(in$);
      var G__3988 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__3987;
      out = G__3988;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq3983) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3983));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___3991 = arguments.length;
  var i__4642__auto___3992 = 0;
  while (true) {
    if (i__4642__auto___3992 < len__4641__auto___3991) {
      args__4647__auto__.push(arguments[i__4642__auto___3992]);
      var G__3993 = i__4642__auto___3992 + 1;
      i__4642__auto___3992 = G__3993;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 1 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4648__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__3994 = cljs.core.nnext(in$);
      var G__3995 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__3994;
      out = G__3995;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq3989) {
  var G__3990 = cljs.core.first(seq3989);
  var seq3989__$1 = cljs.core.next(seq3989);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3990, seq3989__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.indexOf = function() {
  var G__3998 = null;
  var G__3998__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3998__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3998 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3998__1.call(this, x);
      case 2:
        return G__3998__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3998.cljs$core$IFn$_invoke$arity$1 = G__3998__1;
  G__3998.cljs$core$IFn$_invoke$arity$2 = G__3998__2;
  return G__3998;
}();
cljs.core.KeySeq.prototype.lastIndexOf = function() {
  var G__3999 = null;
  var G__3999__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3999__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3999 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3999__1.call(this, x);
      case 2:
        return G__3999__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3999.cljs$core$IFn$_invoke$arity$1 = G__3999__1;
  G__3999.cljs$core$IFn$_invoke$arity$2 = G__3999__2;
  return G__3999;
}();
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
var G__4000_4003 = cljs.core.KeySeq.prototype;
var G__4001_4004 = cljs.core.ITER_SYMBOL;
var G__4002_4005 = function(G__4000_4003, G__4001_4004) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__4000_4003, G__4001_4004);
goog.object.set(G__4000_4003, G__4001_4004, G__4002_4005);
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__5457__auto__ = cljs.core.seq(hash_map);
  if (temp__5457__auto__) {
    var mseq = temp__5457__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.indexOf = function() {
  var G__4008 = null;
  var G__4008__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__4008__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__4008 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__4008__1.call(this, x);
      case 2:
        return G__4008__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4008.cljs$core$IFn$_invoke$arity$1 = G__4008__1;
  G__4008.cljs$core$IFn$_invoke$arity$2 = G__4008__2;
  return G__4008;
}();
cljs.core.ValSeq.prototype.lastIndexOf = function() {
  var G__4009 = null;
  var G__4009__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__4009__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__4009 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__4009__1.call(this, x);
      case 2:
        return G__4009__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4009.cljs$core$IFn$_invoke$arity$1 = G__4009__1;
  G__4009.cljs$core$IFn$_invoke$arity$2 = G__4009__2;
  return G__4009;
}();
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
var G__4010_4013 = cljs.core.ValSeq.prototype;
var G__4011_4014 = cljs.core.ITER_SYMBOL;
var G__4012_4015 = function(G__4010_4013, G__4011_4014) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__4010_4013, G__4011_4014);
goog.object.set(G__4010_4013, G__4011_4014, G__4012_4015);
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__5457__auto__ = cljs.core.seq(hash_map);
  if (temp__5457__auto__) {
    var mseq = temp__5457__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___4019 = arguments.length;
  var i__4642__auto___4020 = 0;
  while (true) {
    if (i__4642__auto___4020 < len__4641__auto___4019) {
      args__4647__auto__.push(arguments[i__4642__auto___4020]);
      var G__4021 = i__4642__auto___4020 + 1;
      i__4642__auto___4020 = G__4021;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__4016_SHARP_, p2__4017_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__4047__auto__ = p1__4016_SHARP_;
        if (cljs.core.truth_(or__4047__auto__)) {
          return or__4047__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__4017_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq4018) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4018));
};
cljs.core.merge_with = function cljs$core$merge_with(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___4026 = arguments.length;
  var i__4642__auto___4027 = 0;
  while (true) {
    if (i__4642__auto___4027 < len__4641__auto___4026) {
      args__4647__auto__.push(arguments[i__4642__auto___4027]);
      var G__4028 = i__4642__auto___4027 + 1;
      i__4642__auto___4027 = G__4028;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 1 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(1), 0, null) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4648__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.key(e);
      var v = cljs.core.val(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__4024 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__4025 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4024, G__4025) : f.call(null, G__4024, G__4025);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__4047__auto__ = m1;
          if (cljs.core.truth_(or__4047__auto__)) {
            return or__4047__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq4022) {
  var G__4023 = cljs.core.first(seq4022);
  var seq4022__$1 = cljs.core.next(seq4022);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4023, seq4022__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__4029 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__4030 = cljs.core.next(keys);
      ret = G__4029;
      keys = G__4030;
      continue;
    } else {
      return cljs.core._with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().key;
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__4034 = cljs.core.seq(coll);
  var chunk__4035 = null;
  var count__4036 = 0;
  var i__4037 = 0;
  while (true) {
    if (i__4037 < count__4036) {
      var vec__4038 = chunk__4035.cljs$core$IIndexed$_nth$arity$2(null, i__4037);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4038, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4038, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__4047 = seq__4034;
      var G__4048 = chunk__4035;
      var G__4049 = count__4036;
      var G__4050 = i__4037 + 1;
      seq__4034 = G__4047;
      chunk__4035 = G__4048;
      count__4036 = G__4049;
      i__4037 = G__4050;
      continue;
    } else {
      var temp__5457__auto__ = cljs.core.seq(seq__4034);
      if (temp__5457__auto__) {
        var seq__4034__$1 = temp__5457__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__4034__$1)) {
          var c__4461__auto__ = cljs.core.chunk_first(seq__4034__$1);
          var G__4051 = cljs.core.chunk_rest(seq__4034__$1);
          var G__4052 = c__4461__auto__;
          var G__4053 = cljs.core.count(c__4461__auto__);
          var G__4054 = 0;
          seq__4034 = G__4051;
          chunk__4035 = G__4052;
          count__4036 = G__4053;
          i__4037 = G__4054;
          continue;
        } else {
          var vec__4041 = cljs.core.first(seq__4034__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4041, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4041, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__4055 = cljs.core.next(seq__4034__$1);
          var G__4056 = null;
          var G__4057 = 0;
          var G__4058 = 0;
          seq__4034 = G__4055;
          chunk__4035 = G__4056;
          count__4036 = G__4057;
          i__4037 = G__4058;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var temp__5455__auto__ = cljs.core._find(self__.hash_map, v);
  if (cljs.core.truth_(temp__5455__auto__)) {
    var entry = temp__5455__auto__;
    return cljs.core.key(entry);
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var and__4036__auto__ = cljs.core.set_QMARK_(other);
  if (and__4036__auto__) {
    var and__4036__auto____$1 = cljs.core.count(coll__$1) === cljs.core.count(other);
    if (and__4036__auto____$1) {
      try {
        return cljs.core.reduce_kv(function(and__4036__auto____$1, and__4036__auto__, coll__$1) {
          return function(p1__4032_SHARP_, p2__4031_SHARP_) {
            var or__4047__auto__ = cljs.core.contains_QMARK_(other, p2__4031_SHARP_);
            if (or__4047__auto__) {
              return or__4047__auto__;
            } else {
              return cljs.core.reduced(false);
            }
          };
        }(and__4036__auto____$1, and__4036__auto__, coll__$1), true, self__.hash_map);
      } catch (e4046) {
        if (e4046 instanceof Error) {
          var ex = e4046;
          return false;
        } else {
          throw e4046;
        }
      }
    } else {
      return and__4036__auto____$1;
    }
  } else {
    return and__4036__auto__;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__4059 = null;
  var G__4059__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__4059__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__4059 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__4059__2.call(this, self__, k);
      case 3:
        return G__4059__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__4059.cljs$core$IFn$_invoke$arity$2 = G__4059__2;
  G__4059.cljs$core$IFn$_invoke$arity$3 = G__4059__3;
  return G__4059;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args4033) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args4033)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__4060 = i + 1;
        var G__4061 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__4060;
        out = G__4061;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__4062 = i + 1;
        var G__4063 = cljs.core._conj_BANG_(out, items[i]);
        i = G__4062;
        out = G__4063;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.createWithCheck = function(items) {
  var len = items.length;
  var t = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
  var n__4518__auto___4064 = len;
  var i_4065 = 0;
  while (true) {
    if (i_4065 < n__4518__auto___4064) {
      cljs.core._conj_BANG_(t, items[i_4065]);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(t), i_4065 + 1)) {
      } else {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(items[i_4065])].join(""));
      }
      var G__4066 = i_4065 + 1;
      i_4065 = G__4066;
      continue;
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(t);
};
cljs.core.PersistentHashSet.createAsIfByAssoc = function(items) {
  var len = items.length;
  var t = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
  var n__4518__auto___4067 = len;
  var i_4068 = 0;
  while (true) {
    if (i_4068 < n__4518__auto___4067) {
      cljs.core._conj_BANG_(t, items[i_4068]);
      var G__4069 = i_4068 + 1;
      i_4068 = G__4069;
      continue;
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(t);
};
var G__4070_4073 = cljs.core.PersistentHashSet.prototype;
var G__4071_4074 = cljs.core.ITER_SYMBOL;
var G__4072_4075 = function(G__4070_4073, G__4071_4074) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__4070_4073, G__4071_4074);
goog.object.set(G__4070_4073, G__4071_4074, G__4072_4075);
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__4077 = null;
  var G__4077__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__4077__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__4077 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__4077__2.call(this, self__, k);
      case 3:
        return G__4077__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__4077.cljs$core$IFn$_invoke$arity$2 = G__4077__2;
  G__4077.cljs$core$IFn$_invoke$arity$3 = G__4077__3;
  return G__4077;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args4076) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args4076)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__4081 = cljs.core.seq(coll);
  var chunk__4082 = null;
  var count__4083 = 0;
  var i__4084 = 0;
  while (true) {
    if (i__4084 < count__4083) {
      var vec__4085 = chunk__4082.cljs$core$IIndexed$_nth$arity$2(null, i__4084);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4085, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4085, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__4094 = seq__4081;
      var G__4095 = chunk__4082;
      var G__4096 = count__4083;
      var G__4097 = i__4084 + 1;
      seq__4081 = G__4094;
      chunk__4082 = G__4095;
      count__4083 = G__4096;
      i__4084 = G__4097;
      continue;
    } else {
      var temp__5457__auto__ = cljs.core.seq(seq__4081);
      if (temp__5457__auto__) {
        var seq__4081__$1 = temp__5457__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__4081__$1)) {
          var c__4461__auto__ = cljs.core.chunk_first(seq__4081__$1);
          var G__4098 = cljs.core.chunk_rest(seq__4081__$1);
          var G__4099 = c__4461__auto__;
          var G__4100 = cljs.core.count(c__4461__auto__);
          var G__4101 = 0;
          seq__4081 = G__4098;
          chunk__4082 = G__4099;
          count__4083 = G__4100;
          i__4084 = G__4101;
          continue;
        } else {
          var vec__4088 = cljs.core.first(seq__4081__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4088, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4088, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__4102 = cljs.core.next(seq__4081__$1);
          var G__4103 = null;
          var G__4104 = 0;
          var G__4105 = 0;
          seq__4081 = G__4102;
          chunk__4082 = G__4103;
          count__4083 = G__4104;
          i__4084 = G__4105;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var and__4036__auto__ = cljs.core.set_QMARK_(other);
  if (and__4036__auto__) {
    var and__4036__auto____$1 = cljs.core.count(coll__$1) === cljs.core.count(other);
    if (and__4036__auto____$1) {
      try {
        return cljs.core.reduce_kv(function(and__4036__auto____$1, and__4036__auto__, coll__$1) {
          return function(p1__4079_SHARP_, p2__4078_SHARP_) {
            var or__4047__auto__ = cljs.core.contains_QMARK_(other, p2__4078_SHARP_);
            if (or__4047__auto__) {
              return or__4047__auto__;
            } else {
              return cljs.core.reduced(false);
            }
          };
        }(and__4036__auto____$1, and__4036__auto__, coll__$1), true, self__.tree_map);
      } catch (e4093) {
        if (e4093 instanceof Error) {
          var ex = e4093;
          return false;
        } else {
          throw e4093;
        }
      }
    } else {
      return and__4036__auto____$1;
    }
  } else {
    return and__4036__auto__;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__4106 = null;
  var G__4106__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__4106__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__4106 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__4106__2.call(this, self__, k);
      case 3:
        return G__4106__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__4106.cljs$core$IFn$_invoke$arity$2 = G__4106__2;
  G__4106.cljs$core$IFn$_invoke$arity$3 = G__4106__3;
  return G__4106;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args4080) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args4080)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
var G__4107_4110 = cljs.core.PersistentTreeSet.prototype;
var G__4108_4111 = cljs.core.ITER_SYMBOL;
var G__4109_4112 = function(G__4107_4110, G__4108_4111) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__4107_4110, G__4108_4111);
goog.object.set(G__4107_4110, G__4108_4111, G__4109_4112);
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4515__auto__ = arr;
    var l__4516__auto__ = a__4515__auto__.length;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < l__4516__auto__) {
        var G__4113 = i + 1;
        var G__4114 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__4113;
        res = G__4114;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  if (cljs.core.set_QMARK_(coll)) {
    return cljs.core.with_meta(coll, null);
  } else {
    var in$ = cljs.core.seq(coll);
    if (in$ == null) {
      return cljs.core.PersistentHashSet.EMPTY;
    } else {
      if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
        return cljs.core.PersistentHashSet.createAsIfByAssoc(in$.arr);
      } else {
        var in$__$1 = in$;
        var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__4115 = cljs.core.next(in$__$1);
            var G__4116 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
            in$__$1 = G__4115;
            out = G__4116;
            continue;
          } else {
            return cljs.core.persistent_BANG_(out);
          }
          break;
        }
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set(var_args) {
  var G__4119 = arguments.length;
  switch(G__4119) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___4121 = arguments.length;
      var i__4642__auto___4122 = 0;
      while (true) {
        if (i__4642__auto___4122 < len__4641__auto___4121) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___4122]);
          var G__4123 = i__4642__auto___4122 + 1;
          i__4642__auto___4122 = G__4123;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(0), 0, null);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__4663__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq4118) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4118));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___4125 = arguments.length;
  var i__4642__auto___4126 = 0;
  while (true) {
    if (i__4642__auto___4126 < len__4641__auto___4125) {
      args__4647__auto__.push(arguments[i__4642__auto___4126]);
      var G__4127 = i__4642__auto___4126 + 1;
      i__4642__auto___4126 = G__4127;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq4124) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4124));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___4130 = arguments.length;
  var i__4642__auto___4131 = 0;
  while (true) {
    if (i__4642__auto___4131 < len__4641__auto___4130) {
      args__4647__auto__.push(arguments[i__4642__auto___4131]);
      var G__4132 = i__4642__auto___4131 + 1;
      i__4642__auto___4131 = G__4132;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 1 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4648__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq4128) {
  var G__4129 = cljs.core.first(seq4128);
  var seq4128__$1 = cljs.core.next(seq4128);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4129, seq4128__$1);
};
cljs.core.replace = function cljs$core$replace(var_args) {
  var G__4136 = arguments.length;
  switch(G__4136) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__4133_SHARP_) {
    var temp__5455__auto__ = cljs.core.find(smap, p1__4133_SHARP_);
    if (cljs.core.truth_(temp__5455__auto__)) {
      var e = temp__5455__auto__;
      return cljs.core.val(e);
    } else {
      return p1__4133_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__5455__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__5455__auto__)) {
          var e = temp__5455__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__4134_SHARP_) {
      var temp__5455__auto__ = cljs.core.find(smap, p1__4134_SHARP_);
      if (cljs.core.truth_(temp__5455__auto__)) {
        var e = temp__5455__auto__;
        return cljs.core.second(e);
      } else {
        return p1__4134_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct(var_args) {
  var G__4139 = arguments.length;
  switch(G__4139) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__4150 = null;
        var G__4150__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__4150__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__4150__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(cljs.core.deref(seen), input)) {
            return result;
          } else {
            seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__4150 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__4150__0.call(this);
            case 1:
              return G__4150__1.call(this, result);
            case 2:
              return G__4150__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__4150.cljs$core$IFn$_invoke$arity$0 = G__4150__0;
        G__4150.cljs$core$IFn$_invoke$arity$1 = G__4150__1;
        G__4150.cljs$core$IFn$_invoke$arity$2 = G__4150__2;
        return G__4150;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      var fexpr__4144 = function(p__4145, seen__$1) {
        while (true) {
          var vec__4146 = p__4145;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4146, 0, null);
          var xs__$1 = vec__4146;
          var temp__5457__auto__ = cljs.core.seq(xs__$1);
          if (temp__5457__auto__) {
            var s = temp__5457__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__4151 = cljs.core.rest(s);
              var G__4152 = seen__$1;
              p__4145 = G__4151;
              seen__$1 = G__4152;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      };
      return fexpr__4144(xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__4153 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__4154 = cljs.core.next(s__$1);
      ret = G__4153;
      s__$1 = G__4154;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error(["Doesn't support name: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__4156 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__4157 = cljs.core.next(ks);
      var G__4158 = cljs.core.next(vs);
      map = G__4156;
      ks = G__4157;
      vs = G__4158;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key(var_args) {
  var G__4166 = arguments.length;
  switch(G__4166) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___4168 = arguments.length;
      var i__4642__auto___4169 = 0;
      while (true) {
        if (i__4642__auto___4169 < len__4641__auto___4168) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___4169]);
          var G__4170 = i__4642__auto___4169 + 1;
          i__4642__auto___4169 = G__4170;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(3), 0, null);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4663__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4159_SHARP_, p2__4160_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__4159_SHARP_, p2__4160_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq4162) {
  var G__4163 = cljs.core.first(seq4162);
  var seq4162__$1 = cljs.core.next(seq4162);
  var G__4164 = cljs.core.first(seq4162__$1);
  var seq4162__$2 = cljs.core.next(seq4162__$1);
  var G__4165 = cljs.core.first(seq4162__$2);
  var seq4162__$3 = cljs.core.next(seq4162__$2);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4163, G__4164, G__4165, seq4162__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key(var_args) {
  var G__4178 = arguments.length;
  switch(G__4178) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___4180 = arguments.length;
      var i__4642__auto___4181 = 0;
      while (true) {
        if (i__4642__auto___4181 < len__4641__auto___4180) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___4181]);
          var G__4182 = i__4642__auto___4181 + 1;
          i__4642__auto___4181 = G__4182;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(3), 0, null);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4663__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4171_SHARP_, p2__4172_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__4171_SHARP_, p2__4172_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq4174) {
  var G__4175 = cljs.core.first(seq4174);
  var seq4174__$1 = cljs.core.next(seq4174);
  var G__4176 = cljs.core.first(seq4174__$1);
  var seq4174__$2 = cljs.core.next(seq4174__$1);
  var G__4177 = cljs.core.first(seq4174__$2);
  var seq4174__$3 = cljs.core.next(seq4174__$2);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4175, G__4176, G__4177, seq4174__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all(var_args) {
  var G__4184 = arguments.length;
  switch(G__4184) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__4186 = null;
        var G__4186__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__4186__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__4186__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          } else {
            return result;
          }
        };
        G__4186 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__4186__0.call(this);
            case 1:
              return G__4186__1.call(this, result);
            case 2:
              return G__4186__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__4186.cljs$core$IFn$_invoke$arity$0 = G__4186__0;
        G__4186.cljs$core$IFn$_invoke$arity$1 = G__4186__1;
        G__4186.cljs$core$IFn$_invoke$arity$2 = G__4186__2;
        return G__4186;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5457__auto__ = cljs.core.seq(coll);
    if (temp__5457__auto__) {
      var s = temp__5457__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while(var_args) {
  var G__4188 = arguments.length;
  switch(G__4188) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__4191 = null;
      var G__4191__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__4191__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__4191__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__4191 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__4191__0.call(this);
          case 1:
            return G__4191__1.call(this, result);
          case 2:
            return G__4191__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__4191.cljs$core$IFn$_invoke$arity$0 = G__4191__0;
      G__4191.cljs$core$IFn$_invoke$arity$1 = G__4191__1;
      G__4191.cljs$core$IFn$_invoke$arity$2 = G__4191__2;
      return G__4191;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5457__auto__ = cljs.core.seq(coll);
    if (temp__5457__auto__) {
      var s = temp__5457__auto__;
      if (cljs.core.truth_(function() {
        var G__4189 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__4189) : pred.call(null, G__4189);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__4192 = function() {
      var G__4194 = cljs.core._entry_key(sc, e);
      var G__4195 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__4194, G__4195) : comp.call(null, G__4194, G__4195);
    }();
    var G__4193 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__4192, G__4193) : test.call(null, G__4192, G__4193);
  };
};
cljs.core.subseq = function cljs$core$subseq(var_args) {
  var G__4197 = arguments.length;
  switch(G__4197) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(function() {
    var fexpr__4198 = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._GT_, cljs.core._GT__EQ_]);
    return fexpr__4198.cljs$core$IFn$_invoke$arity$1 ? fexpr__4198.cljs$core$IFn$_invoke$arity$1(test) : fexpr__4198.call(null, test);
  }())) {
    var temp__5457__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__5457__auto__)) {
      var vec__4199 = temp__5457__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4199, 0, null);
      var s = vec__4199;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__5457__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__5457__auto__)) {
    var vec__4202 = temp__5457__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4202, 0, null);
    var s = vec__4202;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(function() {
      var fexpr__4205 = cljs.core.mk_bound_fn(sc, start_test, start_key);
      return fexpr__4205.cljs$core$IFn$_invoke$arity$1 ? fexpr__4205.cljs$core$IFn$_invoke$arity$1(e) : fexpr__4205.call(null, e);
    }()) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq(var_args) {
  var G__4208 = arguments.length;
  switch(G__4208) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(function() {
    var fexpr__4209 = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._LT_, cljs.core._LT__EQ_]);
    return fexpr__4209.cljs$core$IFn$_invoke$arity$1 ? fexpr__4209.cljs$core$IFn$_invoke$arity$1(test) : fexpr__4209.call(null, test);
  }())) {
    var temp__5457__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__5457__auto__)) {
      var vec__4210 = temp__5457__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4210, 0, null);
      var s = vec__4210;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__5457__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__5457__auto__)) {
    var vec__4213 = temp__5457__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4213, 0, null);
    var s = vec__4213;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(function() {
      var fexpr__4216 = cljs.core.mk_bound_fn(sc, end_test, end_key);
      return fexpr__4216.cljs$core$IFn$_invoke$arity$1 ? fexpr__4216.cljs$core$IFn$_invoke$arity$1(e) : fexpr__4216.call(null, e);
    }()) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.indexOf = function() {
  var G__4219 = null;
  var G__4219__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__4219__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__4219 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__4219__1.call(this, x);
      case 2:
        return G__4219__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4219.cljs$core$IFn$_invoke$arity$1 = G__4219__1;
  G__4219.cljs$core$IFn$_invoke$arity$2 = G__4219__2;
  return G__4219;
}();
cljs.core.Range.prototype.lastIndexOf = function() {
  var G__4220 = null;
  var G__4220__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__4220__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__4220 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__4220__1.call(this, x);
      case 2:
        return G__4220__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4220.cljs$core$IFn$_invoke$arity$1 = G__4220__1;
  G__4220.cljs$core$IFn$_invoke$arity$2 = G__4220__2;
  return G__4220;
}();
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (0 <= n && n < rng__$1.cljs$core$ICounted$_count$arity$1(null)) {
    return self__.start + n * self__.step;
  } else {
    if (0 <= n && self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (0 <= n && n < rng__$1.cljs$core$ICounted$_count$arity$1(null)) {
    return self__.start + n * self__.step;
  } else {
    if (0 <= n && self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(rng__$1.cljs$core$ISeqable$_seq$arity$1(null))) {
    return 0;
  } else {
    var G__4218 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__4218);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref(ret__$1);
      } else {
        var G__4221 = i + self__.step;
        var G__4222 = ret__$1;
        i = G__4221;
        ret = G__4222;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (rng__$1.cljs$core$ISeqable$_seq$arity$1(null) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(rng__$1.cljs$core$ISeqable$_seq$arity$1(null) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.step < 0) {
      if (self__.start > self__.end) {
        return rng__$1;
      } else {
        return null;
      }
    } else {
      if (self__.start === self__.end) {
        return null;
      } else {
        return rng__$1;
      }
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
var G__4223_4226 = cljs.core.Range.prototype;
var G__4224_4227 = cljs.core.ITER_SYMBOL;
var G__4225_4228 = function(G__4223_4226, G__4224_4227) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__4223_4226, G__4224_4227);
goog.object.set(G__4223_4226, G__4224_4227, G__4225_4228);
cljs.core.range = function cljs$core$range(var_args) {
  var G__4230 = arguments.length;
  switch(G__4230) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth(var_args) {
  var G__4233 = arguments.length;
  switch(G__4233) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__4235 = null;
        var G__4235__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__4235__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__4235__2 = function(result, input) {
          var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
          if (cljs.core.rem(i, n) === 0) {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__4235 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__4235__0.call(this);
            case 1:
              return G__4235__1.call(this, result);
            case 2:
              return G__4235__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__4235.cljs$core$IFn$_invoke$arity$0 = G__4235__0;
        G__4235.cljs$core$IFn$_invoke$arity$1 = G__4235__1;
        G__4235.cljs$core$IFn$_invoke$arity$2 = G__4235__2;
        return G__4235;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__5457__auto__ = cljs.core.seq(coll);
    if (temp__5457__auto__) {
      var s = temp__5457__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by(var_args) {
  var G__4238 = arguments.length;
  switch(G__4238) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__4240 = null;
        var G__4240__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__4240__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__4240__2 = function(result, input) {
          var pval = cljs.core.deref(pa);
          var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__4240 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__4240__0.call(this);
            case 1:
              return G__4240__1.call(this, result);
            case 2:
              return G__4240__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__4240.cljs$core$IFn$_invoke$arity$0 = G__4240__0;
        G__4240.cljs$core$IFn$_invoke$arity$1 = G__4240__1;
        G__4240.cljs$core$IFn$_invoke$arity$2 = G__4240__2;
        return G__4240;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5457__auto__ = cljs.core.seq(coll);
    if (temp__5457__auto__) {
      var s = temp__5457__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__5457__auto__) {
        return function(p1__4236_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__4236_SHARP_) : f.call(null, p1__4236_SHARP_));
        };
      }(fst, fv, s, temp__5457__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, new cljs.core.LazySeq(null, function(fst, fv, run, s, temp__5457__auto__) {
        return function() {
          return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s);
        };
      }(fst, fv, run, s, temp__5457__auto__), null, null)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions(var_args) {
  var G__4242 = arguments.length;
  switch(G__4242) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5455__auto__ = cljs.core.seq(coll);
    if (temp__5455__auto__) {
      var s = temp__5455__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return new cljs.core.List(null, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), null, 1, null);
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  if (cljs.core.reduced_QMARK_(init)) {
    return new cljs.core.List(null, cljs.core.deref(init), null, 1, null);
  } else {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__5457__auto__ = cljs.core.seq(coll);
      if (temp__5457__auto__) {
        var s = temp__5457__auto__;
        return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__4243 = init;
          var G__4244 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4243, G__4244) : f.call(null, G__4243, G__4244);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  }
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt(var_args) {
  var G__4261 = arguments.length;
  switch(G__4261) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___4263 = arguments.length;
      var i__4642__auto___4264 = 0;
      while (true) {
        if (i__4642__auto___4264 < len__4641__auto___4263) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___4264]);
          var G__4265 = i__4642__auto___4264 + 1;
          i__4642__auto___4264 = G__4265;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(3), 0, null);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4663__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__4266 = null;
    var G__4266__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__4266__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__4266__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__4266__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__4266__4 = function() {
      var G__4267__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__4267 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__4268__i = 0, G__4268__a = new Array(arguments.length - 3);
          while (G__4268__i < G__4268__a.length) {
            G__4268__a[G__4268__i] = arguments[G__4268__i + 3];
            ++G__4268__i;
          }
          args = new cljs.core.IndexedSeq(G__4268__a, 0, null);
        }
        return G__4267__delegate.call(this, x, y, z, args);
      };
      G__4267.cljs$lang$maxFixedArity = 3;
      G__4267.cljs$lang$applyTo = function(arglist__4269) {
        var x = cljs.core.first(arglist__4269);
        arglist__4269 = cljs.core.next(arglist__4269);
        var y = cljs.core.first(arglist__4269);
        arglist__4269 = cljs.core.next(arglist__4269);
        var z = cljs.core.first(arglist__4269);
        var args = cljs.core.rest(arglist__4269);
        return G__4267__delegate(x, y, z, args);
      };
      G__4267.cljs$core$IFn$_invoke$arity$variadic = G__4267__delegate;
      return G__4267;
    }();
    G__4266 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__4266__0.call(this);
        case 1:
          return G__4266__1.call(this, x);
        case 2:
          return G__4266__2.call(this, x, y);
        case 3:
          return G__4266__3.call(this, x, y, z);
        default:
          var G__4270 = null;
          if (arguments.length > 3) {
            var G__4271__i = 0, G__4271__a = new Array(arguments.length - 3);
            while (G__4271__i < G__4271__a.length) {
              G__4271__a[G__4271__i] = arguments[G__4271__i + 3];
              ++G__4271__i;
            }
            G__4270 = new cljs.core.IndexedSeq(G__4271__a, 0, null);
          }
          return G__4266__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__4270);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__4266.cljs$lang$maxFixedArity = 3;
    G__4266.cljs$lang$applyTo = G__4266__4.cljs$lang$applyTo;
    G__4266.cljs$core$IFn$_invoke$arity$0 = G__4266__0;
    G__4266.cljs$core$IFn$_invoke$arity$1 = G__4266__1;
    G__4266.cljs$core$IFn$_invoke$arity$2 = G__4266__2;
    G__4266.cljs$core$IFn$_invoke$arity$3 = G__4266__3;
    G__4266.cljs$core$IFn$_invoke$arity$variadic = G__4266__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__4266;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__4272 = null;
    var G__4272__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__4272__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__4272__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__4272__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__4272__4 = function() {
      var G__4273__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__4273 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__4274__i = 0, G__4274__a = new Array(arguments.length - 3);
          while (G__4274__i < G__4274__a.length) {
            G__4274__a[G__4274__i] = arguments[G__4274__i + 3];
            ++G__4274__i;
          }
          args = new cljs.core.IndexedSeq(G__4274__a, 0, null);
        }
        return G__4273__delegate.call(this, x, y, z, args);
      };
      G__4273.cljs$lang$maxFixedArity = 3;
      G__4273.cljs$lang$applyTo = function(arglist__4275) {
        var x = cljs.core.first(arglist__4275);
        arglist__4275 = cljs.core.next(arglist__4275);
        var y = cljs.core.first(arglist__4275);
        arglist__4275 = cljs.core.next(arglist__4275);
        var z = cljs.core.first(arglist__4275);
        var args = cljs.core.rest(arglist__4275);
        return G__4273__delegate(x, y, z, args);
      };
      G__4273.cljs$core$IFn$_invoke$arity$variadic = G__4273__delegate;
      return G__4273;
    }();
    G__4272 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__4272__0.call(this);
        case 1:
          return G__4272__1.call(this, x);
        case 2:
          return G__4272__2.call(this, x, y);
        case 3:
          return G__4272__3.call(this, x, y, z);
        default:
          var G__4276 = null;
          if (arguments.length > 3) {
            var G__4277__i = 0, G__4277__a = new Array(arguments.length - 3);
            while (G__4277__i < G__4277__a.length) {
              G__4277__a[G__4277__i] = arguments[G__4277__i + 3];
              ++G__4277__i;
            }
            G__4276 = new cljs.core.IndexedSeq(G__4277__a, 0, null);
          }
          return G__4272__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__4276);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__4272.cljs$lang$maxFixedArity = 3;
    G__4272.cljs$lang$applyTo = G__4272__4.cljs$lang$applyTo;
    G__4272.cljs$core$IFn$_invoke$arity$0 = G__4272__0;
    G__4272.cljs$core$IFn$_invoke$arity$1 = G__4272__1;
    G__4272.cljs$core$IFn$_invoke$arity$2 = G__4272__2;
    G__4272.cljs$core$IFn$_invoke$arity$3 = G__4272__3;
    G__4272.cljs$core$IFn$_invoke$arity$variadic = G__4272__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__4272;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__4278 = null;
    var G__4278__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__4278__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__4278__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__4278__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__4278__4 = function() {
      var G__4279__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__4279 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__4280__i = 0, G__4280__a = new Array(arguments.length - 3);
          while (G__4280__i < G__4280__a.length) {
            G__4280__a[G__4280__i] = arguments[G__4280__i + 3];
            ++G__4280__i;
          }
          args = new cljs.core.IndexedSeq(G__4280__a, 0, null);
        }
        return G__4279__delegate.call(this, x, y, z, args);
      };
      G__4279.cljs$lang$maxFixedArity = 3;
      G__4279.cljs$lang$applyTo = function(arglist__4281) {
        var x = cljs.core.first(arglist__4281);
        arglist__4281 = cljs.core.next(arglist__4281);
        var y = cljs.core.first(arglist__4281);
        arglist__4281 = cljs.core.next(arglist__4281);
        var z = cljs.core.first(arglist__4281);
        var args = cljs.core.rest(arglist__4281);
        return G__4279__delegate(x, y, z, args);
      };
      G__4279.cljs$core$IFn$_invoke$arity$variadic = G__4279__delegate;
      return G__4279;
    }();
    G__4278 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__4278__0.call(this);
        case 1:
          return G__4278__1.call(this, x);
        case 2:
          return G__4278__2.call(this, x, y);
        case 3:
          return G__4278__3.call(this, x, y, z);
        default:
          var G__4282 = null;
          if (arguments.length > 3) {
            var G__4283__i = 0, G__4283__a = new Array(arguments.length - 3);
            while (G__4283__i < G__4283__a.length) {
              G__4283__a[G__4283__i] = arguments[G__4283__i + 3];
              ++G__4283__i;
            }
            G__4282 = new cljs.core.IndexedSeq(G__4283__a, 0, null);
          }
          return G__4278__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__4282);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__4278.cljs$lang$maxFixedArity = 3;
    G__4278.cljs$lang$applyTo = G__4278__4.cljs$lang$applyTo;
    G__4278.cljs$core$IFn$_invoke$arity$0 = G__4278__0;
    G__4278.cljs$core$IFn$_invoke$arity$1 = G__4278__1;
    G__4278.cljs$core$IFn$_invoke$arity$2 = G__4278__2;
    G__4278.cljs$core$IFn$_invoke$arity$3 = G__4278__3;
    G__4278.cljs$core$IFn$_invoke$arity$variadic = G__4278__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__4278;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__4284 = null;
      var G__4284__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__4246_SHARP_, p2__4247_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4246_SHARP_, p2__4247_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__4247_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__4247_SHARP_.call(null));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__4284__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__4248_SHARP_, p2__4249_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4248_SHARP_, p2__4249_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__4249_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__4249_SHARP_.call(null, x));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__4284__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__4250_SHARP_, p2__4251_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4250_SHARP_, p2__4251_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__4251_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__4251_SHARP_.call(null, x, y));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__4284__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__4252_SHARP_, p2__4253_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4252_SHARP_, p2__4253_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__4253_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__4253_SHARP_.call(null, x, y, z));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__4284__4 = function() {
        var G__4285__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__4254_SHARP_, p2__4255_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4254_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__4255_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__4285 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__4286__i = 0, G__4286__a = new Array(arguments.length - 3);
            while (G__4286__i < G__4286__a.length) {
              G__4286__a[G__4286__i] = arguments[G__4286__i + 3];
              ++G__4286__i;
            }
            args = new cljs.core.IndexedSeq(G__4286__a, 0, null);
          }
          return G__4285__delegate.call(this, x, y, z, args);
        };
        G__4285.cljs$lang$maxFixedArity = 3;
        G__4285.cljs$lang$applyTo = function(arglist__4287) {
          var x = cljs.core.first(arglist__4287);
          arglist__4287 = cljs.core.next(arglist__4287);
          var y = cljs.core.first(arglist__4287);
          arglist__4287 = cljs.core.next(arglist__4287);
          var z = cljs.core.first(arglist__4287);
          var args = cljs.core.rest(arglist__4287);
          return G__4285__delegate(x, y, z, args);
        };
        G__4285.cljs$core$IFn$_invoke$arity$variadic = G__4285__delegate;
        return G__4285;
      }();
      G__4284 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__4284__0.call(this);
          case 1:
            return G__4284__1.call(this, x);
          case 2:
            return G__4284__2.call(this, x, y);
          case 3:
            return G__4284__3.call(this, x, y, z);
          default:
            var G__4288 = null;
            if (arguments.length > 3) {
              var G__4289__i = 0, G__4289__a = new Array(arguments.length - 3);
              while (G__4289__i < G__4289__a.length) {
                G__4289__a[G__4289__i] = arguments[G__4289__i + 3];
                ++G__4289__i;
              }
              G__4288 = new cljs.core.IndexedSeq(G__4289__a, 0, null);
            }
            return G__4284__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__4288);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__4284.cljs$lang$maxFixedArity = 3;
      G__4284.cljs$lang$applyTo = G__4284__4.cljs$lang$applyTo;
      G__4284.cljs$core$IFn$_invoke$arity$0 = G__4284__0;
      G__4284.cljs$core$IFn$_invoke$arity$1 = G__4284__1;
      G__4284.cljs$core$IFn$_invoke$arity$2 = G__4284__2;
      G__4284.cljs$core$IFn$_invoke$arity$3 = G__4284__3;
      G__4284.cljs$core$IFn$_invoke$arity$variadic = G__4284__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__4284;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq4257) {
  var G__4258 = cljs.core.first(seq4257);
  var seq4257__$1 = cljs.core.next(seq4257);
  var G__4259 = cljs.core.first(seq4257__$1);
  var seq4257__$2 = cljs.core.next(seq4257__$1);
  var G__4260 = cljs.core.first(seq4257__$2);
  var seq4257__$3 = cljs.core.next(seq4257__$2);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4258, G__4259, G__4260, seq4257__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun(var_args) {
  var G__4291 = arguments.length;
  switch(G__4291) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    var temp__5457__auto__ = cljs.core.seq(coll);
    if (temp__5457__auto__) {
      var s = temp__5457__auto__;
      var G__4293 = cljs.core.next(s);
      coll = G__4293;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__4294 = n - 1;
      var G__4295 = cljs.core.next(coll);
      n = G__4294;
      coll = G__4295;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall(var_args) {
  var G__4297 = arguments.length;
  switch(G__4297) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_idx = match_idx + function() {
    var x__4135__auto__ = 1;
    var y__4136__auto__ = cljs.core.count(match_str);
    return x__4135__auto__ > y__4136__auto__ ? x__4135__auto__ : y__4136__auto__;
  }();
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, post_idx);
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_idx, post_match) {
      return function() {
        return cljs.core.cons(match_data, post_idx <= cljs.core.count(s) ? cljs.core.re_seq.cljs$core$IFn$_invoke$arity$2 ? cljs.core.re_seq.cljs$core$IFn$_invoke$arity$2(re, post_match) : cljs.core.re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_idx, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__4299 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4299, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4299, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__4047__auto__ = flags;
      if (cljs.core.truth_(or__4047__auto__)) {
        return or__4047__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR__orig_val__4302 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_level_STAR__temp_val__4303 = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__4303;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4047__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4047__auto__)) {
              return or__4047__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__4304_4310 = cljs.core.first(coll);
          var G__4305_4311 = writer;
          var G__4306_4312 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4304_4310, G__4305_4311, G__4306_4312) : print_one.call(null, G__4304_4310, G__4305_4311, G__4306_4312);
        } else {
        }
        var coll_4313__$1 = cljs.core.next(coll);
        var n_4314 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_4313__$1 && (n_4314 == null || !(n_4314 === 0))) {
            cljs.core._write(writer, sep);
            var G__4307_4315 = cljs.core.first(coll_4313__$1);
            var G__4308_4316 = writer;
            var G__4309_4317 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4307_4315, G__4308_4316, G__4309_4317) : print_one.call(null, G__4307_4315, G__4308_4316, G__4309_4317);
            var G__4318 = cljs.core.next(coll_4313__$1);
            var G__4319 = n_4314 - 1;
            coll_4313__$1 = G__4318;
            n_4314 = G__4319;
            continue;
          } else {
            if (cljs.core.seq(coll_4313__$1) && n_4314 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4047__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4047__auto__)) {
                  return or__4047__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__4302;
  }
};
cljs.core.write_all = function cljs$core$write_all(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___4326 = arguments.length;
  var i__4642__auto___4327 = 0;
  while (true) {
    if (i__4642__auto___4327 < len__4641__auto___4326) {
      args__4647__auto__.push(arguments[i__4642__auto___4327]);
      var G__4328 = i__4642__auto___4327 + 1;
      i__4642__auto___4327 = G__4328;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 1 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(1), 0, null) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4648__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__4322 = cljs.core.seq(ss);
  var chunk__4323 = null;
  var count__4324 = 0;
  var i__4325 = 0;
  while (true) {
    if (i__4325 < count__4324) {
      var s = chunk__4323.cljs$core$IIndexed$_nth$arity$2(null, i__4325);
      cljs.core._write(writer, s);
      var G__4329 = seq__4322;
      var G__4330 = chunk__4323;
      var G__4331 = count__4324;
      var G__4332 = i__4325 + 1;
      seq__4322 = G__4329;
      chunk__4323 = G__4330;
      count__4324 = G__4331;
      i__4325 = G__4332;
      continue;
    } else {
      var temp__5457__auto__ = cljs.core.seq(seq__4322);
      if (temp__5457__auto__) {
        var seq__4322__$1 = temp__5457__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__4322__$1)) {
          var c__4461__auto__ = cljs.core.chunk_first(seq__4322__$1);
          var G__4333 = cljs.core.chunk_rest(seq__4322__$1);
          var G__4334 = c__4461__auto__;
          var G__4335 = cljs.core.count(c__4461__auto__);
          var G__4336 = 0;
          seq__4322 = G__4333;
          chunk__4323 = G__4334;
          count__4324 = G__4335;
          i__4325 = G__4336;
          continue;
        } else {
          var s = cljs.core.first(seq__4322__$1);
          cljs.core._write(writer, s);
          var G__4337 = cljs.core.next(seq__4322__$1);
          var G__4338 = null;
          var G__4339 = 0;
          var G__4340 = 0;
          seq__4322 = G__4337;
          chunk__4323 = G__4338;
          count__4324 = G__4339;
          i__4325 = G__4340;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq4320) {
  var G__4321 = cljs.core.first(seq4320);
  var seq4320__$1 = cljs.core.next(seq4320);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4321, seq4320__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  if (cljs.core._STAR_print_fn_STAR_ == null) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  } else {
  }
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj4342 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj4342;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1('"'), cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str.cljs$core$IFn$_invoke$arity$1('"')].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__4036__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  if (and__4036__auto__) {
    var and__4036__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IMeta$ ? true : false : false;
    if (and__4036__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__4036__auto____$1;
    }
  } else {
    return and__4036__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      cljs.core.pr_writer(cljs.core.meta(obj), writer, opts);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IPrintWithWriter$ ? true : !obj.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, obj) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, obj)) {
        return cljs.core._pr_writer(obj, writer, opts);
      } else {
        if (obj === true || obj === false) {
          return cljs.core._write(writer, cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
        } else {
          if (typeof obj === "number") {
            return cljs.core._write(writer, isNaN(obj) ? "##NaN" : obj === Number.POSITIVE_INFINITY ? "##Inf" : obj === Number.NEGATIVE_INFINITY ? "##-Inf" : cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
          } else {
            if (cljs.core.object_QMARK_(obj)) {
              cljs.core._write(writer, "#js ");
              return cljs.core.print_map(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                return new cljs.core.MapEntry(function() {
                  var G__4347 = k;
                  if (!(cljs.core.re_matches(/[A-Za-z_\*\+\?!\-'][\w\*\+\?!\-']*/, k) == null)) {
                    return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(G__4347);
                  } else {
                    return G__4347;
                  }
                }(), obj[k], null);
              }, cljs.core.js_keys(obj)), cljs.core.pr_writer, writer, opts);
            } else {
              if (cljs.core.array_QMARK_(obj)) {
                return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
              } else {
                if (goog.isString(obj)) {
                  if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                    return cljs.core._write(writer, cljs.core.quote_string(obj));
                  } else {
                    return cljs.core._write(writer, obj);
                  }
                } else {
                  if (goog.isFunction(obj)) {
                    var name = obj.name;
                    var name__$1 = cljs.core.truth_(function() {
                      var or__4047__auto__ = name == null;
                      if (or__4047__auto__) {
                        return or__4047__auto__;
                      } else {
                        return goog.string.isEmpty(name);
                      }
                    }()) ? "Function" : name;
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, cljs.core._STAR_print_fn_bodies_STAR_ ? [' "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj)), '"'].join("") : "", "]"], 0));
                  } else {
                    if (obj instanceof Date) {
                      var normalize = function(n, len) {
                        var ns = cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                        while (true) {
                          if (cljs.core.count(ns) < len) {
                            var G__4350 = ["0", cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns)].join("");
                            ns = G__4350;
                            continue;
                          } else {
                            return ns;
                          }
                          break;
                        }
                      };
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#inst "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj.getUTCFullYear()), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                    } else {
                      if (cljs.core.regexp_QMARK_(obj)) {
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#"', obj.source, '"'], 0));
                      } else {
                        if (cljs.core.truth_(function() {
                          var G__4348 = obj;
                          var G__4348__$1 = G__4348 == null ? null : G__4348.constructor;
                          if (G__4348__$1 == null) {
                            return null;
                          } else {
                            return G__4348__$1.cljs$lang$ctorStr;
                          }
                        }())) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                        } else {
                          var name = function() {
                            var G__4349 = obj;
                            var G__4349__$1 = G__4349 == null ? null : G__4349.constructor;
                            if (G__4349__$1 == null) {
                              return null;
                            } else {
                              return G__4349__$1.name;
                            }
                          }();
                          var name__$1 = cljs.core.truth_(function() {
                            var or__4047__auto__ = name == null;
                            if (or__4047__auto__) {
                              return or__4047__auto__;
                            } else {
                              return goog.string.isEmpty(name);
                            }
                          }()) ? "Object" : name;
                          if (obj.constructor == null) {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, "]"], 0));
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, " ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "]"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__5455__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__5455__auto__)) {
    var alt_impl = temp__5455__auto__;
    var G__4351 = obj;
    var G__4352 = writer;
    var G__4353 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__4351, G__4352, G__4353) : alt_impl.call(null, G__4351, G__4352, G__4353);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__4354 = cljs.core.seq(cljs.core.next(objs));
  var chunk__4355 = null;
  var count__4356 = 0;
  var i__4357 = 0;
  while (true) {
    if (i__4357 < count__4356) {
      var obj = chunk__4355.cljs$core$IIndexed$_nth$arity$2(null, i__4357);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__4358 = seq__4354;
      var G__4359 = chunk__4355;
      var G__4360 = count__4356;
      var G__4361 = i__4357 + 1;
      seq__4354 = G__4358;
      chunk__4355 = G__4359;
      count__4356 = G__4360;
      i__4357 = G__4361;
      continue;
    } else {
      var temp__5457__auto__ = cljs.core.seq(seq__4354);
      if (temp__5457__auto__) {
        var seq__4354__$1 = temp__5457__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__4354__$1)) {
          var c__4461__auto__ = cljs.core.chunk_first(seq__4354__$1);
          var G__4362 = cljs.core.chunk_rest(seq__4354__$1);
          var G__4363 = c__4461__auto__;
          var G__4364 = cljs.core.count(c__4461__auto__);
          var G__4365 = 0;
          seq__4354 = G__4362;
          chunk__4355 = G__4363;
          count__4356 = G__4364;
          i__4357 = G__4365;
          continue;
        } else {
          var obj = cljs.core.first(seq__4354__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__4366 = cljs.core.next(seq__4354__$1);
          var G__4367 = null;
          var G__4368 = 0;
          var G__4369 = 0;
          seq__4354 = G__4366;
          chunk__4355 = G__4367;
          count__4356 = G__4368;
          i__4357 = G__4369;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts(objs, opts));
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(var_args) {
  var G__4371 = arguments.length;
  switch(G__4371) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___4374 = arguments.length;
  var i__4642__auto___4375 = 0;
  while (true) {
    if (i__4642__auto___4375 < len__4641__auto___4374) {
      args__4647__auto__.push(arguments[i__4642__auto___4375]);
      var G__4376 = i__4642__auto___4375 + 1;
      i__4642__auto___4375 = G__4376;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq4373) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4373));
};
cljs.core.prn_str = function cljs$core$prn_str(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___4378 = arguments.length;
  var i__4642__auto___4379 = 0;
  while (true) {
    if (i__4642__auto___4379 < len__4641__auto___4378) {
      args__4647__auto__.push(arguments[i__4642__auto___4379]);
      var G__4380 = i__4642__auto___4379 + 1;
      i__4642__auto___4379 = G__4380;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq4377) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4377));
};
cljs.core.pr = function cljs$core$pr(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___4382 = arguments.length;
  var i__4642__auto___4383 = 0;
  while (true) {
    if (i__4642__auto___4383 < len__4641__auto___4382) {
      args__4647__auto__.push(arguments[i__4642__auto___4383]);
      var G__4384 = i__4642__auto___4383 + 1;
      i__4642__auto___4383 = G__4384;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq4381) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4381));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__4385__i = 0, G__4385__a = new Array(arguments.length - 0);
      while (G__4385__i < G__4385__a.length) {
        G__4385__a[G__4385__i] = arguments[G__4385__i + 0];
        ++G__4385__i;
      }
      objs = new cljs.core.IndexedSeq(G__4385__a, 0, null);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__4386) {
    var objs = cljs.core.seq(arglist__4386);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___4388 = arguments.length;
  var i__4642__auto___4389 = 0;
  while (true) {
    if (i__4642__auto___4389 < len__4641__auto___4388) {
      args__4647__auto__.push(arguments[i__4642__auto___4389]);
      var G__4390 = i__4642__auto___4389 + 1;
      i__4642__auto___4389 = G__4390;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq4387) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4387));
};
cljs.core.println = function cljs$core$println(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___4392 = arguments.length;
  var i__4642__auto___4393 = 0;
  while (true) {
    if (i__4642__auto___4393 < len__4641__auto___4392) {
      args__4647__auto__.push(arguments[i__4642__auto___4393]);
      var G__4394 = i__4642__auto___4393 + 1;
      i__4642__auto___4393 = G__4394;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core._STAR_print_newline_STAR_) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq4391) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4391));
};
cljs.core.println_str = function cljs$core$println_str(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___4396 = arguments.length;
  var i__4642__auto___4397 = 0;
  while (true) {
    if (i__4642__auto___4397 < len__4641__auto___4396) {
      args__4647__auto__.push(arguments[i__4642__auto___4397]);
      var G__4398 = i__4642__auto___4397 + 1;
      i__4642__auto___4397 = G__4398;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq4395) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4395));
};
cljs.core.prn = function cljs$core$prn(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___4400 = arguments.length;
  var i__4642__auto___4401 = 0;
  while (true) {
    if (i__4642__auto___4401 < len__4641__auto___4400) {
      args__4647__auto__.push(arguments[i__4642__auto___4401]);
      var G__4402 = i__4642__auto___4401 + 1;
      i__4642__auto___4401 = G__4402;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core._STAR_print_newline_STAR_) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq4399) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4399));
};
cljs.core.strip_ns = function cljs$core$strip_ns(named) {
  if (named instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(named));
  } else {
    return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(named));
  }
};
cljs.core.lift_ns = function cljs$core$lift_ns(m) {
  if (cljs.core._STAR_print_namespace_maps_STAR_) {
    var ns = null;
    var G__4409 = cljs.core.seq(m);
    var vec__4410 = G__4409;
    var seq__4411 = cljs.core.seq(vec__4410);
    var first__4412 = cljs.core.first(seq__4411);
    var seq__4411__$1 = cljs.core.next(seq__4411);
    var vec__4413 = first__4412;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4413, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4413, 1, null);
    var entry = vec__4413;
    var entries = seq__4411__$1;
    var lm = cljs.core.empty(m);
    var ns__$1 = ns;
    var G__4409__$1 = G__4409;
    var lm__$1 = lm;
    while (true) {
      var ns__$2 = ns__$1;
      var vec__4416 = G__4409__$1;
      var seq__4417 = cljs.core.seq(vec__4416);
      var first__4418 = cljs.core.first(seq__4417);
      var seq__4417__$1 = cljs.core.next(seq__4417);
      var vec__4419 = first__4418;
      var k__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4419, 0, null);
      var v__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4419, 1, null);
      var entry__$1 = vec__4419;
      var entries__$1 = seq__4417__$1;
      var lm__$2 = lm__$1;
      if (cljs.core.truth_(entry__$1)) {
        if (k__$1 instanceof cljs.core.Keyword || k__$1 instanceof cljs.core.Symbol) {
          if (cljs.core.truth_(ns__$2)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns__$2, cljs.core.namespace(k__$1))) {
              var G__4422 = ns__$2;
              var G__4423 = entries__$1;
              var G__4424 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2, cljs.core.strip_ns(k__$1), v__$1);
              ns__$1 = G__4422;
              G__4409__$1 = G__4423;
              lm__$1 = G__4424;
              continue;
            } else {
              return null;
            }
          } else {
            var temp__5457__auto__ = cljs.core.namespace(k__$1);
            if (cljs.core.truth_(temp__5457__auto__)) {
              var new_ns = temp__5457__auto__;
              var G__4425 = new_ns;
              var G__4426 = entries__$1;
              var G__4427 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2, cljs.core.strip_ns(k__$1), v__$1);
              ns__$1 = G__4425;
              G__4409__$1 = G__4426;
              lm__$1 = G__4427;
              continue;
            } else {
              return null;
            }
          }
        } else {
          return null;
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns__$2, lm__$2], null);
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.print_prefix_map = function cljs$core$print_prefix_map(prefix, m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__4428_4434 = cljs.core.key(e);
    var G__4429_4435 = w;
    var G__4430_4436 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4428_4434, G__4429_4435, G__4430_4436) : print_one.call(null, G__4428_4434, G__4429_4435, G__4430_4436);
    cljs.core._write(w, " ");
    var G__4431 = cljs.core.val(e);
    var G__4432 = w;
    var G__4433 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4431, G__4432, G__4433) : print_one.call(null, G__4431, G__4432, G__4433);
  }, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), "{"].join(""), ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  var vec__4437 = cljs.core.map_QMARK_(m) ? cljs.core.lift_ns(m) : null;
  var ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4437, 0, null);
  var lift_map = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4437, 1, null);
  if (cljs.core.truth_(ns)) {
    return cljs.core.print_prefix_map(["#:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns)].join(""), lift_map, print_one, writer, opts);
  } else {
    return cljs.core.print_prefix_map(null, m, print_one, writer, opts);
  }
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.MapEntry.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.BlackNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.RedNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___4443 = arguments.length;
  var i__4642__auto___4444 = 0;
  while (true) {
    if (i__4642__auto___4444 < len__4641__auto___4443) {
      args__4647__auto__.push(arguments[i__4642__auto___4444]);
      var G__4445 = i__4642__auto___4444 + 1;
      i__4642__auto___4444 = G__4445;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 2 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(2), 0, null) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4648__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq4440) {
  var G__4441 = cljs.core.first(seq4440);
  var seq4440__$1 = cljs.core.next(seq4440);
  var G__4442 = cljs.core.first(seq4440__$1);
  var seq4440__$2 = cljs.core.next(seq4440__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4441, G__4442, seq4440__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym(var_args) {
  var G__4447 = arguments.length;
  switch(G__4447) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 2147516416;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(x) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(x, writer, opts) {
  var self__ = this;
  var x__$1 = this;
  cljs.core._write(writer, "#object[cljs.core.Delay ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), self__.f == null ? new cljs.core.Keyword(null, "ready", "ready", 1086465795) : new cljs.core.Keyword(null, "pending", "pending", -220036727), new cljs.core.Keyword(null, "val", "val", 128701612), self__.value], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref(x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(x) {
  return cljs.core._realized_QMARK_(x);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__4449_SHARP_, p2__4450_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__4449_SHARP_, p2__4450_SHARP_) : rf.call(null, p1__4449_SHARP_, p2__4450_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__4451 = null;
      var G__4451__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__4451__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__4451__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__4451 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__4451__0.call(this);
          case 1:
            return G__4451__1.call(this, result);
          case 2:
            return G__4451__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__4451.cljs$core$IFn$_invoke$arity$0 = G__4451__0;
      G__4451.cljs$core$IFn$_invoke$arity$1 = G__4451__1;
      G__4451.cljs$core$IFn$_invoke$arity$2 = G__4451__2;
      return G__4451;
    }();
  }(rf1);
};
cljs.core.halt_when = function cljs$core$halt_when(var_args) {
  var G__4453 = arguments.length;
  switch(G__4453) {
    case 1:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(pred, null);
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2 = function(pred, retf) {
  return function(rf) {
    return function() {
      var G__4457 = null;
      var G__4457__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__4457__1 = function(result) {
        if (cljs.core.map_QMARK_(result) && cljs.core.contains_QMARK_(result, new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715))) {
          return (new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715)).cljs$core$IFn$_invoke$arity$1(result);
        } else {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        }
      };
      var G__4457__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return cljs.core.reduced(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715), cljs.core.truth_(retf) ? function() {
            var G__4454 = rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
            var G__4455 = input;
            return retf.cljs$core$IFn$_invoke$arity$2 ? retf.cljs$core$IFn$_invoke$arity$2(G__4454, G__4455) : retf.call(null, G__4454, G__4455);
          }() : input], null));
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__4457 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__4457__0.call(this);
          case 1:
            return G__4457__1.call(this, result);
          case 2:
            return G__4457__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__4457.cljs$core$IFn$_invoke$arity$0 = G__4457__0;
      G__4457.cljs$core$IFn$_invoke$arity$1 = G__4457__1;
      G__4457.cljs$core$IFn$_invoke$arity$2 = G__4457__2;
      return G__4457;
    }();
  };
};
cljs.core.halt_when.cljs$lang$maxFixedArity = 2;
cljs.core.dedupe = function cljs$core$dedupe(var_args) {
  var G__4459 = arguments.length;
  switch(G__4459) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__4461 = null;
        var G__4461__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__4461__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__4461__2 = function(result, input) {
          var prior = cljs.core.deref(pa);
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__4461 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__4461__0.call(this);
            case 1:
              return G__4461__1.call(this, result);
            case 2:
              return G__4461__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__4461.cljs$core$IFn$_invoke$arity$0 = G__4461__0;
        G__4461.cljs$core$IFn$_invoke$arity$1 = G__4461__1;
        G__4461.cljs$core$IFn$_invoke$arity$2 = G__4461__2;
        return G__4461;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample(var_args) {
  var G__4463 = arguments.length;
  switch(G__4463) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return cljs.core.rand.cljs$core$IFn$_invoke$arity$0() < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return cljs.core.rand.cljs$core$IFn$_invoke$arity$0() < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
};
cljs.core.Eduction.prototype.indexOf = function() {
  var G__4465 = null;
  var G__4465__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, 0);
  };
  var G__4465__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__4465 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__4465__1.call(this, x);
      case 2:
        return G__4465__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4465.cljs$core$IFn$_invoke$arity$1 = G__4465__1;
  G__4465.cljs$core$IFn$_invoke$arity$2 = G__4465__2;
  return G__4465;
}();
cljs.core.Eduction.prototype.lastIndexOf = function() {
  var G__4466 = null;
  var G__4466__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, cljs.core.count(coll__$1));
  };
  var G__4466__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__4466 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__4466__1.call(this, x);
      case 2:
        return G__4466__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4466.cljs$core$IFn$_invoke$arity$1 = G__4466__1;
  G__4466.cljs$core$IFn$_invoke$arity$2 = G__4466__2;
  return G__4466;
}();
cljs.core.Eduction.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.TransformerIterator.create(self__.xform, cljs.core.iter(self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
var G__4467_4470 = cljs.core.Eduction.prototype;
var G__4468_4471 = cljs.core.ITER_SYMBOL;
var G__4469_4472 = function(G__4467_4470, G__4468_4471) {
  return function() {
    var this__4580__auto__ = this;
    return cljs.core.es6_iterator(this__4580__auto__);
  };
}(G__4467_4470, G__4468_4471);
goog.object.set(G__4467_4470, G__4468_4471, G__4469_4472);
cljs.core.eduction = function cljs$core$eduction(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___4474 = arguments.length;
  var i__4642__auto___4475 = 0;
  while (true) {
    if (i__4642__auto___4475 < len__4641__auto___4474) {
      args__4647__auto__.push(arguments[i__4642__auto___4475]);
      var G__4476 = i__4642__auto___4475 + 1;
      i__4642__auto___4475 = G__4476;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq4473) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4473));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4478_SHARP_, p2__4477_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__4477_SHARP_) : proc.call(null, p2__4477_SHARP_);
  }, null, coll);
  return null;
};
cljs.core.IEncodeJS = function() {
};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4347__auto__ = x == null ? null : x;
    var m__4348__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4348__auto__.call(null, x);
    } else {
      var m__4348__auto____$1 = cljs.core._clj__GT_js["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4348__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4347__auto__ = x == null ? null : x;
    var m__4348__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4348__auto__.call(null, x);
    } else {
      var m__4348__auto____$1 = cljs.core._key__GT_js["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4348__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
      }
    }
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(var_args) {
  var G__4480 = arguments.length;
  switch(G__4480) {
    case 1:
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1 = function(k) {
  return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k, cljs.core.clj__GT_js);
};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2 = function(k, primitive_fn) {
  if (!(k == null) ? false || cljs.core.PROTOCOL_SENTINEL === k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return primitive_fn.cljs$core$IFn$_invoke$arity$1 ? primitive_fn.cljs$core$IFn$_invoke$arity$1(k) : primitive_fn.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([k], 0));
    }
  }
};
cljs.core.key__GT_js.cljs$lang$maxFixedArity = 2;
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___4534 = arguments.length;
  var i__4642__auto___4535 = 0;
  while (true) {
    if (i__4642__auto___4535 < len__4641__auto___4534) {
      args__4647__auto__.push(arguments[i__4642__auto___4535]);
      var G__4536 = i__4642__auto___4535 + 1;
      i__4642__auto___4535 = G__4536;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 1 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(1), 0, null) : null;
  return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4648__auto__);
};
cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic = function(x, p__4485) {
  var map__4486 = p__4485;
  var map__4486__$1 = (!(map__4486 == null) ? map__4486.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__4486.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__4486) : map__4486;
  var options = map__4486__$1;
  var keyword_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__4486__$1, new cljs.core.Keyword(null, "keyword-fn", "keyword-fn", -64566675), cljs.core.name);
  var keyfn = function(map__4486, map__4486__$1, options, keyword_fn) {
    return function cljs$core$keyfn(k) {
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k, thisfn);
    };
  }(map__4486, map__4486__$1, options, keyword_fn);
  var thisfn = function(map__4486, map__4486__$1, options, keyword_fn) {
    return function cljs$core$thisfn(x__$1) {
      if (x__$1 == null) {
        return null;
      } else {
        if (!(x__$1 == null) ? false || cljs.core.PROTOCOL_SENTINEL === x__$1.cljs$core$IEncodeJS$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x__$1)) {
          return cljs.core._clj__GT_js(x__$1);
        } else {
          if (x__$1 instanceof cljs.core.Keyword) {
            return keyword_fn.cljs$core$IFn$_invoke$arity$1 ? keyword_fn.cljs$core$IFn$_invoke$arity$1(x__$1) : keyword_fn.call(null, x__$1);
          } else {
            if (x__$1 instanceof cljs.core.Symbol) {
              return cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
            } else {
              if (cljs.core.map_QMARK_(x__$1)) {
                var m = {};
                var seq__4514_4537 = cljs.core.seq(x__$1);
                var chunk__4515_4538 = null;
                var count__4516_4539 = 0;
                var i__4517_4540 = 0;
                while (true) {
                  if (i__4517_4540 < count__4516_4539) {
                    var vec__4518_4541 = chunk__4515_4538.cljs$core$IIndexed$_nth$arity$2(null, i__4517_4540);
                    var k_4542 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4518_4541, 0, null);
                    var v_4543 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4518_4541, 1, null);
                    var G__4521_4544 = m;
                    var G__4522_4545 = keyfn(k_4542);
                    var G__4523_4546 = cljs$core$thisfn(v_4543);
                    goog.object.set(G__4521_4544, G__4522_4545, G__4523_4546);
                    var G__4547 = seq__4514_4537;
                    var G__4548 = chunk__4515_4538;
                    var G__4549 = count__4516_4539;
                    var G__4550 = i__4517_4540 + 1;
                    seq__4514_4537 = G__4547;
                    chunk__4515_4538 = G__4548;
                    count__4516_4539 = G__4549;
                    i__4517_4540 = G__4550;
                    continue;
                  } else {
                    var temp__5457__auto___4551 = cljs.core.seq(seq__4514_4537);
                    if (temp__5457__auto___4551) {
                      var seq__4514_4552__$1 = temp__5457__auto___4551;
                      if (cljs.core.chunked_seq_QMARK_(seq__4514_4552__$1)) {
                        var c__4461__auto___4553 = cljs.core.chunk_first(seq__4514_4552__$1);
                        var G__4554 = cljs.core.chunk_rest(seq__4514_4552__$1);
                        var G__4555 = c__4461__auto___4553;
                        var G__4556 = cljs.core.count(c__4461__auto___4553);
                        var G__4557 = 0;
                        seq__4514_4537 = G__4554;
                        chunk__4515_4538 = G__4555;
                        count__4516_4539 = G__4556;
                        i__4517_4540 = G__4557;
                        continue;
                      } else {
                        var vec__4524_4558 = cljs.core.first(seq__4514_4552__$1);
                        var k_4559 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4524_4558, 0, null);
                        var v_4560 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4524_4558, 1, null);
                        var G__4527_4561 = m;
                        var G__4528_4562 = keyfn(k_4559);
                        var G__4529_4563 = cljs$core$thisfn(v_4560);
                        goog.object.set(G__4527_4561, G__4528_4562, G__4529_4563);
                        var G__4564 = cljs.core.next(seq__4514_4552__$1);
                        var G__4565 = null;
                        var G__4566 = 0;
                        var G__4567 = 0;
                        seq__4514_4537 = G__4564;
                        chunk__4515_4538 = G__4565;
                        count__4516_4539 = G__4566;
                        i__4517_4540 = G__4567;
                        continue;
                      }
                    } else {
                    }
                  }
                  break;
                }
                return m;
              } else {
                if (cljs.core.coll_QMARK_(x__$1)) {
                  var arr = [];
                  var seq__4530_4568 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
                  var chunk__4531_4569 = null;
                  var count__4532_4570 = 0;
                  var i__4533_4571 = 0;
                  while (true) {
                    if (i__4533_4571 < count__4532_4570) {
                      var x_4572__$2 = chunk__4531_4569.cljs$core$IIndexed$_nth$arity$2(null, i__4533_4571);
                      arr.push(x_4572__$2);
                      var G__4573 = seq__4530_4568;
                      var G__4574 = chunk__4531_4569;
                      var G__4575 = count__4532_4570;
                      var G__4576 = i__4533_4571 + 1;
                      seq__4530_4568 = G__4573;
                      chunk__4531_4569 = G__4574;
                      count__4532_4570 = G__4575;
                      i__4533_4571 = G__4576;
                      continue;
                    } else {
                      var temp__5457__auto___4577 = cljs.core.seq(seq__4530_4568);
                      if (temp__5457__auto___4577) {
                        var seq__4530_4578__$1 = temp__5457__auto___4577;
                        if (cljs.core.chunked_seq_QMARK_(seq__4530_4578__$1)) {
                          var c__4461__auto___4579 = cljs.core.chunk_first(seq__4530_4578__$1);
                          var G__4580 = cljs.core.chunk_rest(seq__4530_4578__$1);
                          var G__4581 = c__4461__auto___4579;
                          var G__4582 = cljs.core.count(c__4461__auto___4579);
                          var G__4583 = 0;
                          seq__4530_4568 = G__4580;
                          chunk__4531_4569 = G__4581;
                          count__4532_4570 = G__4582;
                          i__4533_4571 = G__4583;
                          continue;
                        } else {
                          var x_4584__$2 = cljs.core.first(seq__4530_4578__$1);
                          arr.push(x_4584__$2);
                          var G__4585 = cljs.core.next(seq__4530_4578__$1);
                          var G__4586 = null;
                          var G__4587 = 0;
                          var G__4588 = 0;
                          seq__4530_4568 = G__4585;
                          chunk__4531_4569 = G__4586;
                          count__4532_4570 = G__4587;
                          i__4533_4571 = G__4588;
                          continue;
                        }
                      } else {
                      }
                    }
                    break;
                  }
                  return arr;
                } else {
                  return x__$1;
                }
              }
            }
          }
        }
      }
    };
  }(map__4486, map__4486__$1, options, keyword_fn);
  return thisfn(x);
};
cljs.core.clj__GT_js.cljs$lang$maxFixedArity = 1;
cljs.core.clj__GT_js.cljs$lang$applyTo = function(seq4483) {
  var G__4484 = cljs.core.first(seq4483);
  var seq4483__$1 = cljs.core.next(seq4483);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4484, seq4483__$1);
};
cljs.core.IEncodeClojure = function() {
};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4347__auto__ = x == null ? null : x;
    var m__4348__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__4348__auto__.call(null, x, options);
    } else {
      var m__4348__auto____$1 = cljs.core._js__GT_clj["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(x, options) : m__4348__auto____$1.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj(var_args) {
  var G__4594 = arguments.length;
  switch(G__4594) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___4599 = arguments.length;
      var i__4642__auto___4600 = 0;
      while (true) {
        if (i__4642__auto___4600 < len__4641__auto___4599) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___4600]);
          var G__4601 = i__4642__auto___4600 + 1;
          i__4642__auto___4600 = G__4601;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(1), 0, null);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4663__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__4595 = opts;
  var map__4595__$1 = (!(map__4595 == null) ? map__4595.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__4595.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__4595) : map__4595;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4595__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__4595, map__4595__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (!(x__$1 == null) ? false || cljs.core.PROTOCOL_SENTINEL === x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.map_entry_QMARK_(x__$1)) {
            return new cljs.core.MapEntry(cljs$core$thisfn(cljs.core.key(x__$1)), cljs$core$thisfn(cljs.core.val(x__$1)), null);
          } else {
            if (cljs.core.coll_QMARK_(x__$1)) {
              return cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs$core$thisfn), x__$1);
            } else {
              if (cljs.core.array_QMARK_(x__$1)) {
                return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(map__4595, map__4595__$1, keywordize_keys, keyfn) {
                  return function(p1__4589_SHARP_, p2__4590_SHARP_) {
                    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(p1__4589_SHARP_, cljs$core$thisfn(p2__4590_SHARP_));
                  };
                }(map__4595, map__4595__$1, keywordize_keys, keyfn), cljs.core.transient$(cljs.core.PersistentVector.EMPTY), x__$1));
              } else {
                if (cljs.core.type(x__$1) === Object) {
                  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(map__4595, map__4595__$1, keywordize_keys, keyfn) {
                    return function(r, k) {
                      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(r, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(goog.object.get(x__$1, k)));
                    };
                  }(map__4595, map__4595__$1, keywordize_keys, keyfn), cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), cljs.core.js_keys(x__$1)));
                } else {
                  return x__$1;
                }
              }
            }
          }
        }
      }
    };
  }(map__4595, map__4595__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq4592) {
  var G__4593 = cljs.core.first(seq4592);
  var seq4592__$1 = cljs.core.next(seq4592);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4593, seq4592__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__4602__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__4602 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__4603__i = 0, G__4603__a = new Array(arguments.length - 0);
          while (G__4603__i < G__4603__a.length) {
            G__4603__a[G__4603__i] = arguments[G__4603__i + 0];
            ++G__4603__i;
          }
          args = new cljs.core.IndexedSeq(G__4603__a, 0, null);
        }
        return G__4602__delegate.call(this, args);
      };
      G__4602.cljs$lang$maxFixedArity = 0;
      G__4602.cljs$lang$applyTo = function(arglist__4604) {
        var args = cljs.core.seq(arglist__4604);
        return G__4602__delegate(args);
      };
      G__4602.cljs$core$IFn$_invoke$arity$variadic = G__4602__delegate;
      return G__4602;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline(var_args) {
  var G__4608 = arguments.length;
  switch(G__4608) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___4610 = arguments.length;
      var i__4642__auto___4611 = 0;
      while (true) {
        if (i__4642__auto___4611 < len__4641__auto___4610) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___4611]);
          var G__4612 = i__4642__auto___4611 + 1;
          i__4642__auto___4611 = G__4612;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(1), 0, null);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4663__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__4613 = ret;
      f = G__4613;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq4606) {
  var G__4607 = cljs.core.first(seq4606);
  var seq4606__$1 = cljs.core.next(seq4606);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4607, seq4606__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand(var_args) {
  var G__4615 = arguments.length;
  switch(G__4615) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__4617 = Math.random() * n;
  return Math.floor(G__4617);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.make_hierarchy());
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___4620 = arguments.length;
  var i__4642__auto___4621 = 0;
  while (true) {
    if (i__4642__auto___4621 < len__4641__auto___4620) {
      args__4647__auto__.push(arguments[i__4642__auto___4621]);
      var G__4622 = i__4642__auto___4621 + 1;
      i__4642__auto___4621 = G__4622;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 1 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(1), 0, null) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4648__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq4618) {
  var G__4619 = cljs.core.first(seq4618);
  var seq4618__$1 = cljs.core.next(seq4618);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4619, seq4618__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_(var_args) {
  var G__4624 = arguments.length;
  switch(G__4624) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.core.get_global_hierarchy()), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__4047__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__4047__auto__) {
    return or__4047__auto__;
  } else {
    var or__4047__auto____$1 = cljs.core.contains_QMARK_(function() {
      var fexpr__4627 = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
      return fexpr__4627.cljs$core$IFn$_invoke$arity$1 ? fexpr__4627.cljs$core$IFn$_invoke$arity$1(child) : fexpr__4627.call(null, child);
    }(), parent);
    if (or__4047__auto____$1) {
      return or__4047__auto____$1;
    } else {
      var and__4036__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__4036__auto__) {
        var and__4036__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__4036__auto____$1) {
          var and__4036__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__4036__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__4629 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__4630 = i + 1;
                ret = G__4629;
                i = G__4630;
                continue;
              }
              break;
            }
          } else {
            return and__4036__auto____$2;
          }
        } else {
          return and__4036__auto____$1;
        }
      } else {
        return and__4036__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents(var_args) {
  var G__4632 = arguments.length;
  switch(G__4632) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors(var_args) {
  var G__4635 = arguments.length;
  switch(G__4635) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants(var_args) {
  var G__4638 = arguments.length;
  switch(G__4638) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive(var_args) {
  var G__4641 = arguments.length;
  switch(G__4641) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error("Assert failed: (namespace parent)");
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error("Assert failed: (not\x3d tag parent)");
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
        };
      }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
    };
  }(tp, td, ta);
  var or__4047__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), "already has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent), "as ancestor"].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error(["Cyclic derivation:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent), "has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), "as ancestor"].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__4047__auto__)) {
    return or__4047__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive(var_args) {
  var G__4647 = arguments.length;
  switch(G__4647) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__4643_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__4643_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__4643_SHARP_), cljs.core.second(p1__4643_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__4644_SHARP_, p2__4645_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__4644_SHARP_, p2__4645_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref(method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref(hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var fexpr__4649 = cljs.core.deref(prefer_table);
    return fexpr__4649.cljs$core$IFn$_invoke$arity$1 ? fexpr__4649.cljs$core$IFn$_invoke$arity$1(x) : fexpr__4649.call(null, x);
  }();
  var or__4047__auto__ = cljs.core.truth_(function() {
    var and__4036__auto__ = xprefs;
    if (cljs.core.truth_(and__4036__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__4036__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4047__auto__)) {
    return or__4047__auto__;
  } else {
    var or__4047__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(function() {
            var G__4653 = x;
            var G__4654 = cljs.core.first(ps);
            var G__4655 = prefer_table;
            return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__4653, G__4654, G__4655) : cljs.core.prefers_STAR_.call(null, G__4653, G__4654, G__4655);
          }())) {
          } else {
          }
          var G__4662 = cljs.core.rest(ps);
          ps = G__4662;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4047__auto____$1)) {
      return or__4047__auto____$1;
    } else {
      var or__4047__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(function() {
              var G__4659 = cljs.core.first(ps);
              var G__4660 = y;
              var G__4661 = prefer_table;
              return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__4659, G__4660, G__4661) : cljs.core.prefers_STAR_.call(null, G__4659, G__4660, G__4661);
            }())) {
            } else {
            }
            var G__4663 = cljs.core.rest(ps);
            ps = G__4663;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4047__auto____$2)) {
        return or__4047__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table, hierarchy) {
  var or__4047__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4047__auto__)) {
    return or__4047__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(hierarchy, x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__4664) {
    var vec__4665 = p__4664;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4665, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4665, 1, null);
    var e = vec__4665;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__4047__auto__ = be == null;
        if (or__4047__auto__) {
          return or__4047__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table, cljs.core.deref(hierarchy));
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table, cljs.core.deref(hierarchy)))) {
      } else {
        throw new Error(["Multiple methods in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), "' match dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val), " -\x3e ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(k), " and ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(be2)), ", and neither is preferred"].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref(method_table));
  var best_entry__$1 = function() {
    var temp__5455__auto__ = function() {
      var and__4036__auto__ = best_entry == null;
      if (and__4036__auto__) {
        var fexpr__4669 = cljs.core.deref(method_table);
        return fexpr__4669.cljs$core$IFn$_invoke$arity$1 ? fexpr__4669.cljs$core$IFn$_invoke$arity$1(default_dispatch_val) : fexpr__4669.call(null, default_dispatch_val);
      } else {
        return and__4036__auto__;
      }
    }();
    if (cljs.core.truth_(temp__5455__auto__)) {
      var entry = temp__5455__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default_dispatch_val, entry], null);
    } else {
      return best_entry;
    }
  }();
  if (cljs.core.truth_(best_entry__$1)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cached_hierarchy), cljs.core.deref(hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry__$1));
      return cljs.core.second(best_entry__$1);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8 ? cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val) : cljs.core.find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4347__auto__ = mf == null ? null : mf;
    var m__4348__auto__ = cljs.core._reset[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4348__auto__.call(null, mf);
    } else {
      var m__4348__auto____$1 = cljs.core._reset["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4348__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4347__auto__ = mf == null ? null : mf;
    var m__4348__auto__ = cljs.core._add_method[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4348__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__4348__auto____$1 = cljs.core._add_method["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4348__auto____$1.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4347__auto__ = mf == null ? null : mf;
    var m__4348__auto__ = cljs.core._remove_method[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4348__auto__.call(null, mf, dispatch_val);
    } else {
      var m__4348__auto____$1 = cljs.core._remove_method["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4348__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4347__auto__ = mf == null ? null : mf;
    var m__4348__auto__ = cljs.core._prefer_method[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4348__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__4348__auto____$1 = cljs.core._prefer_method["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4348__auto____$1.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4347__auto__ = mf == null ? null : mf;
    var m__4348__auto__ = cljs.core._get_method[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4348__auto__.call(null, mf, dispatch_val);
    } else {
      var m__4348__auto____$1 = cljs.core._get_method["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4348__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4347__auto__ = mf == null ? null : mf;
    var m__4348__auto__ = cljs.core._methods[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4348__auto__.call(null, mf);
    } else {
      var m__4348__auto____$1 = cljs.core._methods["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4348__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4347__auto__ = mf == null ? null : mf;
    var m__4348__auto__ = cljs.core._prefers[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4348__auto__.call(null, mf);
    } else {
      var m__4348__auto____$1 = cljs.core._prefers["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4348__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__4347__auto__ = mf == null ? null : mf;
    var m__4348__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4348__auto__.call(null, mf);
    } else {
      var m__4348__auto____$1 = cljs.core._default_dispatch_val["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4348__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__4347__auto__ = mf == null ? null : mf;
    var m__4348__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4348__auto__.call(null, mf);
    } else {
      var m__4348__auto____$1 = cljs.core._dispatch_fn["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4348__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error(["No method in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), "' for dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__4672 = null;
  var G__4672__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__4672__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__4672__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__4672__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__4672__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__4672__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__4672__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__4672__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__4672__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__4672__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__4672__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__4672__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__4672__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__4672__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__4672__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__4672__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__4672__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__4672__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__4672__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__4672__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__4672__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__4672__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__4672 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__4672__1.call(this, self__);
      case 2:
        return G__4672__2.call(this, self__, a);
      case 3:
        return G__4672__3.call(this, self__, a, b);
      case 4:
        return G__4672__4.call(this, self__, a, b, c);
      case 5:
        return G__4672__5.call(this, self__, a, b, c, d);
      case 6:
        return G__4672__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__4672__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__4672__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__4672__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__4672__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__4672__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__4672__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__4672__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__4672__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__4672__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__4672__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__4672__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__4672__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__4672__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__4672__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__4672__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__4672__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__4672.cljs$core$IFn$_invoke$arity$1 = G__4672__1;
  G__4672.cljs$core$IFn$_invoke$arity$2 = G__4672__2;
  G__4672.cljs$core$IFn$_invoke$arity$3 = G__4672__3;
  G__4672.cljs$core$IFn$_invoke$arity$4 = G__4672__4;
  G__4672.cljs$core$IFn$_invoke$arity$5 = G__4672__5;
  G__4672.cljs$core$IFn$_invoke$arity$6 = G__4672__6;
  G__4672.cljs$core$IFn$_invoke$arity$7 = G__4672__7;
  G__4672.cljs$core$IFn$_invoke$arity$8 = G__4672__8;
  G__4672.cljs$core$IFn$_invoke$arity$9 = G__4672__9;
  G__4672.cljs$core$IFn$_invoke$arity$10 = G__4672__10;
  G__4672.cljs$core$IFn$_invoke$arity$11 = G__4672__11;
  G__4672.cljs$core$IFn$_invoke$arity$12 = G__4672__12;
  G__4672.cljs$core$IFn$_invoke$arity$13 = G__4672__13;
  G__4672.cljs$core$IFn$_invoke$arity$14 = G__4672__14;
  G__4672.cljs$core$IFn$_invoke$arity$15 = G__4672__15;
  G__4672.cljs$core$IFn$_invoke$arity$16 = G__4672__16;
  G__4672.cljs$core$IFn$_invoke$arity$17 = G__4672__17;
  G__4672.cljs$core$IFn$_invoke$arity$18 = G__4672__18;
  G__4672.cljs$core$IFn$_invoke$arity$19 = G__4672__19;
  G__4672.cljs$core$IFn$_invoke$arity$20 = G__4672__20;
  G__4672.cljs$core$IFn$_invoke$arity$21 = G__4672__21;
  G__4672.cljs$core$IFn$_invoke$arity$22 = G__4672__22;
  return G__4672;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args4670) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args4670)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error(["Preference conflict in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name), "': ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y), " is already preferred to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref(self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref(self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.cached_hierarchy), cljs.core.deref(self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__5455__auto__ = function() {
    var fexpr__4671 = cljs.core.deref(self__.method_cache);
    return fexpr__4671.cljs$core$IFn$_invoke$arity$1 ? fexpr__4671.cljs$core$IFn$_invoke$arity$1(dispatch_val) : fexpr__4671.call(null, dispatch_val);
  }();
  if (cljs.core.truth_(temp__5455__auto__)) {
    var target_fn = temp__5455__auto__;
    return target_fn;
  } else {
    return cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy, self__.default_dispatch_val);
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.IUUID = function() {
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.cljs$core$IUUID$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, ['#uuid "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid), '"'].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = cljs.core.hash(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__4673 = self__.uuid;
  var G__4674 = other.uuid;
  return goog.array.defaultCompare(G__4673, G__4674);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  if (typeof s === "string") {
  } else {
    throw new Error("Assert failed: (string? s)");
  }
  return new cljs.core.UUID(s.toLowerCase(), null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(16).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", "4", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(rhex), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex())].join(""));
};
cljs.core.uuid_QMARK_ = function cljs$core$uuid_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IUUID$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info(var_args) {
  var G__4677 = arguments.length;
  switch(G__4677) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 24, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), "null", new cljs.core.Symbol(null, "case*", "case*", -1938255072, null), "null", new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), "null", new cljs.core.Symbol(null, "try", "try", -1273693247, null), "null", new cljs.core.Symbol(null, "ns*", "ns*", 1840949383, null), "null", new cljs.core.Symbol(null, 
  "finally", "finally", -1065347064, null), "null", new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), "null", new cljs.core.Symbol(null, "do", "do", 1686842252, null), "null", new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null), "null", new cljs.core.Symbol(null, "if", "if", 1181717262, null), "null", new cljs.core.Symbol(null, "new", "new", -444906321, null), "null", new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), "null", new cljs.core.Symbol(null, "deftype*", 
  "deftype*", 962659890, null), "null", new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), "null", new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), "null", new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), "null", new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), "null", new cljs.core.Symbol(null, "set!", "set!", 250714521, null), "null", new cljs.core.Symbol(null, ".", ".", 1975675962, null), "null", new cljs.core.Symbol(null, "var", "var", 870848730, 
  null), "null", new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "null", new cljs.core.Symbol(null, "catch", "catch", -1616370245, null), "null", new cljs.core.Symbol(null, "throw", "throw", 595905694, null), "null", new cljs.core.Symbol(null, "def", "def", 597100991, null), "null"], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__4679 = v;
  var G__4679__$1 = G__4679 instanceof cljs.core.Keyword ? G__4679.fqn : null;
  switch(G__4679__$1) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.tag), " "].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error("Assert failed: (symbol? tag)");
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["arguments", "abstract", "await", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", 
"throw", "throws", "transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null", "constructor"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4681_SHARP_, p2__4682_SHARP_) {
      goog.object.set(p1__4681_SHARP_, p2__4682_SHARP_, true);
      return p1__4681_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return cljs.core.js_reserved.hasOwnProperty(x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__4684 = cljs.core.next(ks__$1);
          var G__4685 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
            var G__4683 = ret;
            if (!(ret === "")) {
              return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__4683), "|"].join("");
            } else {
              return G__4683;
            }
          }()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__4684;
          ret = G__4685;
          continue;
        } else {
          return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ret), "|\\$"].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_4686 = 0;
  while (true) {
    if (i_4686 < name.length) {
      var c_4687 = name.charAt(i_4686);
      var sub_4688 = goog.object.get(cljs.core.CHAR_MAP, c_4687);
      if (!(sub_4688 == null)) {
        sb.append(sub_4688);
      } else {
        sb.append(c_4687);
      }
      var G__4689 = i_4686 + 1;
      i_4686 = G__4689;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE_), "$"].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return name_SINGLEQUOTE___$1;
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__5455__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__5455__auto__)) {
      var match = temp__5455__auto__;
      var vec__4690 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4690, 0, null);
      var G__4693 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ret), cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__4694 = r.lastIndex;
      ret = G__4693;
      last_match_end = G__4694;
      continue;
    } else {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ret), cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  var G__4696 = function() {
    var name_SINGLEQUOTE_ = cljs.core.str.cljs$core$IFn$_invoke$arity$1(name);
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str(name_SINGLEQUOTE_);
    }
  }();
  var fexpr__4695 = name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str;
  return fexpr__4695.cljs$core$IFn$_invoke$arity$1 ? fexpr__4695.cljs$core$IFn$_invoke$arity$1(G__4696) : fexpr__4695.call(null, G__4696);
};
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.tapset !== "undefined") {
} else {
  cljs.core.tapset = null;
}
cljs.core.maybe_init_tapset = function cljs$core$maybe_init_tapset() {
  if (cljs.core.tapset == null) {
    return cljs.core.tapset = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashSet.EMPTY);
  } else {
    return null;
  }
};
cljs.core.add_tap = function cljs$core$add_tap(f) {
  cljs.core.maybe_init_tapset();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset, cljs.core.conj, f);
  return null;
};
cljs.core.remove_tap = function cljs$core$remove_tap(f) {
  cljs.core.maybe_init_tapset();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset, cljs.core.disj, f);
  return null;
};
cljs.core.tap_GT_ = function cljs$core$tap_GT_(x) {
  cljs.core.maybe_init_tapset();
  return cljs.core._STAR_exec_tap_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_exec_tap_fn_STAR_.cljs$core$IFn$_invoke$arity$1(function() {
    var seq__4697 = cljs.core.seq(cljs.core.deref(cljs.core.tapset));
    var chunk__4698 = null;
    var count__4699 = 0;
    var i__4700 = 0;
    while (true) {
      if (i__4700 < count__4699) {
        var tap = chunk__4698.cljs$core$IIndexed$_nth$arity$2(null, i__4700);
        try {
          tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
        } catch (e4701) {
          if (e4701 instanceof Error) {
            var ex_4703 = e4701;
          } else {
            throw e4701;
          }
        }
        var G__4704 = seq__4697;
        var G__4705 = chunk__4698;
        var G__4706 = count__4699;
        var G__4707 = i__4700 + 1;
        seq__4697 = G__4704;
        chunk__4698 = G__4705;
        count__4699 = G__4706;
        i__4700 = G__4707;
        continue;
      } else {
        var temp__5457__auto__ = cljs.core.seq(seq__4697);
        if (temp__5457__auto__) {
          var seq__4697__$1 = temp__5457__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__4697__$1)) {
            var c__4461__auto__ = cljs.core.chunk_first(seq__4697__$1);
            var G__4708 = cljs.core.chunk_rest(seq__4697__$1);
            var G__4709 = c__4461__auto__;
            var G__4710 = cljs.core.count(c__4461__auto__);
            var G__4711 = 0;
            seq__4697 = G__4708;
            chunk__4698 = G__4709;
            count__4699 = G__4710;
            i__4700 = G__4711;
            continue;
          } else {
            var tap = cljs.core.first(seq__4697__$1);
            try {
              tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
            } catch (e4702) {
              if (e4702 instanceof Error) {
                var ex_4712 = e4702;
              } else {
                throw e4702;
              }
            }
            var G__4713 = cljs.core.next(seq__4697__$1);
            var G__4714 = null;
            var G__4715 = 0;
            var G__4716 = 0;
            seq__4697 = G__4713;
            chunk__4698 = G__4714;
            count__4699 = G__4715;
            i__4700 = G__4716;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }) : cljs.core._STAR_exec_tap_fn_STAR_.call(null, function() {
    var seq__4697 = cljs.core.seq(cljs.core.deref(cljs.core.tapset));
    var chunk__4698 = null;
    var count__4699 = 0;
    var i__4700 = 0;
    while (true) {
      if (i__4700 < count__4699) {
        var tap = chunk__4698.cljs$core$IIndexed$_nth$arity$2(null, i__4700);
        try {
          tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
        } catch (e4701) {
          if (e4701 instanceof Error) {
            var ex_4717 = e4701;
          } else {
            throw e4701;
          }
        }
        var G__4718 = seq__4697;
        var G__4719 = chunk__4698;
        var G__4720 = count__4699;
        var G__4721 = i__4700 + 1;
        seq__4697 = G__4718;
        chunk__4698 = G__4719;
        count__4699 = G__4720;
        i__4700 = G__4721;
        continue;
      } else {
        var temp__5457__auto__ = cljs.core.seq(seq__4697);
        if (temp__5457__auto__) {
          var seq__4697__$1 = temp__5457__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__4697__$1)) {
            var c__4461__auto__ = cljs.core.chunk_first(seq__4697__$1);
            var G__4722 = cljs.core.chunk_rest(seq__4697__$1);
            var G__4723 = c__4461__auto__;
            var G__4724 = cljs.core.count(c__4461__auto__);
            var G__4725 = 0;
            seq__4697 = G__4722;
            chunk__4698 = G__4723;
            count__4699 = G__4724;
            i__4700 = G__4725;
            continue;
          } else {
            var tap = cljs.core.first(seq__4697__$1);
            try {
              tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
            } catch (e4702) {
              if (e4702 instanceof Error) {
                var ex_4726 = e4702;
              } else {
                throw e4702;
              }
            }
            var G__4727 = cljs.core.next(seq__4697__$1);
            var G__4728 = null;
            var G__4729 = 0;
            var G__4730 = 0;
            seq__4697 = G__4727;
            chunk__4698 = G__4728;
            count__4699 = G__4729;
            i__4700 = G__4730;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  });
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name), cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name);
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write(writer__4291__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__4733 = function() {
          var G__4731 = ctxt;
          var G__4732 = cljs.core.first(xs);
          return goog.object.get(G__4731, G__4732);
        }();
        var G__4734 = cljs.core.next(xs);
        ctxt = G__4733;
        xs = G__4734;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns));
  var segs = munged_ns.split(".");
  var G__4735 = cljs.core._STAR_target_STAR_;
  switch(G__4735) {
    case "nodejs":
      if (COMPILED) {
        return cljs.core.find_ns_obj_STAR_(function() {
          try {
            var ctxt = eval(cljs.core.first(segs));
            if (cljs.core.truth_(function() {
              var and__4036__auto__ = ctxt;
              if (cljs.core.truth_(and__4036__auto__)) {
                return cljs.core.object_QMARK_(ctxt);
              } else {
                return and__4036__auto__;
              }
            }())) {
              return ctxt;
            } else {
              return null;
            }
          } catch (e4736) {
            if (e4736 instanceof ReferenceError) {
              var e = e4736;
              return null;
            } else {
              throw e4736;
            }
          }
        }(), cljs.core.next(segs));
      } else {
        return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      }
      break;
    case "default":
    case "webworker":
      return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      break;
    default:
      throw new Error(["find-ns-obj not supported for target ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core._STAR_target_STAR_)].join(""));
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function(ns_obj, ns) {
    return function cljs$core$ns_interns_STAR__$_step(ret, k) {
      var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function(var_sym, ns_obj, ns) {
        return function() {
          return goog.object.get(ns_obj, k);
        };
      }(var_sym, ns_obj, ns), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym), cljs.core.str.cljs$core$IFn$_invoke$arity$1(var_sym)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
    };
  }(ns_obj, ns);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns(var_args) {
  var G__4739 = arguments.length;
  switch(G__4739) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  } else {
  }
  var ns_str = cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);
  var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_str), "$macros"].join("")) : ns;
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), ns__$1);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
cljs.core.uri_QMARK_ = function cljs$core$uri_QMARK_(x) {
  return x instanceof goog.Uri;
};
cljs.core.maybe_enable_print_BANG_ = function cljs$core$maybe_enable_print_BANG_() {
  if (typeof console !== "undefined") {
    return cljs.core.enable_console_print_BANG_();
  } else {
    if (cljs.core._STAR_target_STAR_ === "nashorn" || cljs.core._STAR_target_STAR_ === "graaljs") {
      var system = Java.type("java.lang.System");
      cljs.core._STAR_print_newline_STAR_ = false;
      cljs.core.set_print_fn_BANG_(function(system) {
        return function() {
          var xs = arguments;
          var s = goog.array.clone(xs).join("");
          return system.out.println(s);
        };
      }(system));
      return cljs.core.set_print_err_fn_BANG_(function(system) {
        return function() {
          var xs = arguments;
          var s = goog.array.clone(xs).join("");
          return system.error.println(s);
        };
      }(system));
    } else {
      return null;
    }
  }
};
cljs.core.maybe_enable_print_BANG_();
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_eval_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_eval_STAR_ = function cljs$core$_STAR_eval_STAR_(_) {
    throw new Error("cljs.core/*eval* not bound");
  };
}
cljs.core.eval = function cljs$core$eval(form) {
  return cljs.core._STAR_eval_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_eval_STAR_.cljs$core$IFn$_invoke$arity$1(form) : cljs.core._STAR_eval_STAR_.call(null, form);
};
goog.provide("process.env");
goog.require("cljs.core");
goog.define("process.env.NODE_ENV", "development");
goog.provide("autojournal.env_switching");
goog.require("cljs.core");
goog.provide("fipp.util");
goog.require("cljs.core");
fipp.util.boolean_QMARK_ = function fipp$util$boolean_QMARK_(x) {
  return x === true || x === false;
};
fipp.util.char_QMARK_ = function fipp$util$char_QMARK_(x) {
  return false;
};
fipp.util.regexp_QMARK_ = cljs.core.regexp_QMARK_;
fipp.util.edn_QMARK_ = function fipp$util$edn_QMARK_(x) {
  var or__4047__auto__ = x == null;
  if (or__4047__auto__) {
    return or__4047__auto__;
  } else {
    var or__4047__auto____$1 = fipp.util.boolean_QMARK_.call(null, x);
    if (or__4047__auto____$1) {
      return or__4047__auto____$1;
    } else {
      var or__4047__auto____$2 = typeof x === "string";
      if (or__4047__auto____$2) {
        return or__4047__auto____$2;
      } else {
        var or__4047__auto____$3 = fipp.util.char_QMARK_.call(null, x);
        if (or__4047__auto____$3) {
          return or__4047__auto____$3;
        } else {
          var or__4047__auto____$4 = x instanceof cljs.core.Symbol;
          if (or__4047__auto____$4) {
            return or__4047__auto____$4;
          } else {
            var or__4047__auto____$5 = x instanceof cljs.core.Keyword;
            if (or__4047__auto____$5) {
              return or__4047__auto____$5;
            } else {
              var or__4047__auto____$6 = typeof x === "number";
              if (or__4047__auto____$6) {
                return or__4047__auto____$6;
              } else {
                var or__4047__auto____$7 = cljs.core.seq_QMARK_.call(null, x);
                if (or__4047__auto____$7) {
                  return or__4047__auto____$7;
                } else {
                  var or__4047__auto____$8 = cljs.core.vector_QMARK_.call(null, x);
                  if (or__4047__auto____$8) {
                    return or__4047__auto____$8;
                  } else {
                    var or__4047__auto____$9 = cljs.core.record_QMARK_.call(null, x);
                    if (or__4047__auto____$9) {
                      return or__4047__auto____$9;
                    } else {
                      var or__4047__auto____$10 = cljs.core.map_QMARK_.call(null, x);
                      if (or__4047__auto____$10) {
                        return or__4047__auto____$10;
                      } else {
                        var or__4047__auto____$11 = cljs.core.set_QMARK_.call(null, x);
                        if (or__4047__auto____$11) {
                          return or__4047__auto____$11;
                        } else {
                          var or__4047__auto____$12 = cljs.core.tagged_literal_QMARK_.call(null, x);
                          if (or__4047__auto____$12) {
                            return or__4047__auto____$12;
                          } else {
                            var or__4047__auto____$13 = cljs.core.var_QMARK_.call(null, x);
                            if (or__4047__auto____$13) {
                              return or__4047__auto____$13;
                            } else {
                              return fipp.util.regexp_QMARK_.call(null, x);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
fipp.util.value_obj_QMARK_ = function fipp$util$value_obj_QMARK_(x) {
  var and__4036__auto__ = !(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 262144 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IWithMeta$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, x) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, x);
  if (and__4036__auto__) {
    return !cljs.core.var_QMARK_.call(null, x);
  } else {
    return and__4036__auto__;
  }
};
fipp.util.instant_supported_QMARK_ = true;
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace_all = function clojure$string$replace_all(s, re, replacement) {
  var r = new RegExp(re.source, function() {
    var G__8686 = "g";
    var G__8686__$1 = cljs.core.truth_(re.ignoreCase) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__8686), "i"].join("") : G__8686;
    var G__8686__$2 = cljs.core.truth_(re.multiline) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__8686__$1), "m"].join("") : G__8686__$1;
    if (cljs.core.truth_(re.unicode)) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__8686__$2), "u"].join("");
    } else {
      return G__8686__$2;
    }
  }());
  return s.replace(r, replacement);
};
clojure.string.replace_with = function clojure$string$replace_with(f) {
  return function() {
    var G__8687__delegate = function(args) {
      var matches = cljs.core.drop_last.call(null, 2, args);
      if (cljs.core._EQ_.call(null, cljs.core.count.call(null, matches), 1)) {
        return f.call(null, cljs.core.first.call(null, matches));
      } else {
        return f.call(null, cljs.core.vec.call(null, matches));
      }
    };
    var G__8687 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__8688__i = 0, G__8688__a = new Array(arguments.length - 0);
        while (G__8688__i < G__8688__a.length) {
          G__8688__a[G__8688__i] = arguments[G__8688__i + 0];
          ++G__8688__i;
        }
        args = new cljs.core.IndexedSeq(G__8688__a, 0, null);
      }
      return G__8687__delegate.call(this, args);
    };
    G__8687.cljs$lang$maxFixedArity = 0;
    G__8687.cljs$lang$applyTo = function(arglist__8689) {
      var args = cljs.core.seq(arglist__8689);
      return G__8687__delegate(args);
    };
    G__8687.cljs$core$IFn$_invoke$arity$variadic = G__8687__delegate;
    return G__8687;
  }();
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      if (typeof replacement === "string") {
        return clojure.string.replace_all.call(null, s, match, replacement);
      } else {
        return clojure.string.replace_all.call(null, s, match, clojure.string.replace_with.call(null, replacement));
      }
    } else {
      throw ["Invalid match arg: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join(var_args) {
  var G__8691 = arguments.length;
  switch(G__8691) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__8693 = sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, coll__$1)));
      var G__8694 = cljs.core.next.call(null, coll__$1);
      sb = G__8693;
      coll__$1 = G__8694;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, coll__$1)));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__8695 = sb;
      var G__8696 = coll__$2;
      sb = G__8695;
      coll__$1 = G__8696;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  return goog.string.capitalize(s);
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek.call(null, v__$1)) {
      var G__8697 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__8697;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit && 1 < cljs.core.count.call(null, v)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__8698 = cljs.core._EQ__EQ_;
    var expr__8699 = limit;
    if (cljs.core.truth_(pred__8698.call(null, 1, expr__8699))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__8698.call(null, 2, expr__8699))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split(var_args) {
  var G__8702 = arguments.length;
  switch(G__8702) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, "/(?:)/" === cljs.core.str.cljs$core$IFn$_invoke$arity$1(re) ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(s).split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var m = cljs.core.re_find.call(null, re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__8704 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__8705 = limit__$1 - 1;
          var G__8706 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__8704;
          limit__$1 = G__8705;
          parts = G__8706;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__8707 = index - 1;
        index = G__8707;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.call(null, cmap, ch);
      if (!(replacement == null)) {
        buffer.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement));
      } else {
        buffer.append(ch);
      }
      var G__8708 = index + 1;
      index = G__8708;
      continue;
    }
    break;
  }
};
clojure.string.index_of = function clojure$string$index_of(var_args) {
  var G__8710 = arguments.length;
  switch(G__8710) {
    case 2:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.indexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.indexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$lang$maxFixedArity = 3;
clojure.string.last_index_of = function clojure$string$last_index_of(var_args) {
  var G__8713 = arguments.length;
  switch(G__8713) {
    case 2:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.lastIndexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.lastIndexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$lang$maxFixedArity = 3;
clojure.string.starts_with_QMARK_ = function clojure$string$starts_with_QMARK_(s, substr) {
  return goog.string.startsWith(s, substr);
};
clojure.string.ends_with_QMARK_ = function clojure$string$ends_with_QMARK_(s, substr) {
  return goog.string.endsWith(s, substr);
};
clojure.string.includes_QMARK_ = function clojure$string$includes_QMARK_(s, substr) {
  return goog.string.contains(s, substr);
};
goog.provide("fipp.ednize");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("fipp.util");
fipp.ednize.IEdn = function() {
};
fipp.ednize._edn = function fipp$ednize$_edn(x) {
  if (!(x == null) && !(x.fipp$ednize$IEdn$_edn$arity$1 == null)) {
    return x.fipp$ednize$IEdn$_edn$arity$1(x);
  } else {
    var x__4347__auto__ = x == null ? null : x;
    var m__4348__auto__ = fipp.ednize._edn[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, x);
    } else {
      var m__4348__auto____$1 = fipp.ednize._edn["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IEdn.-edn", x);
      }
    }
  }
};
fipp.ednize.IOverride = function() {
};
fipp.ednize.override_QMARK_ = function fipp$ednize$override_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.fipp$ednize$IEdn$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, fipp.ednize.IEdn, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, fipp.ednize.IEdn, x);
  }
};
fipp.ednize.edn = function fipp$ednize$edn(x) {
  if (fipp.ednize.override_QMARK_.call(null, x)) {
    return fipp.ednize._edn.call(null, x);
  } else {
    if (cljs.core.object_QMARK_.call(null, x)) {
      return cljs.core.tagged_literal.call(null, new cljs.core.Symbol(null, "js", "js", -886355190, null), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
        var iter__4434__auto__ = function fipp$ednize$edn_$_iter__8731(s__8732) {
          return new cljs.core.LazySeq(null, function() {
            var s__8732__$1 = s__8732;
            while (true) {
              var temp__5720__auto__ = cljs.core.seq.call(null, s__8732__$1);
              if (temp__5720__auto__) {
                var s__8732__$2 = temp__5720__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__8732__$2)) {
                  var c__4432__auto__ = cljs.core.chunk_first.call(null, s__8732__$2);
                  var size__4433__auto__ = cljs.core.count.call(null, c__4432__auto__);
                  var b__8734 = cljs.core.chunk_buffer.call(null, size__4433__auto__);
                  if (function() {
                    var i__8733 = 0;
                    while (true) {
                      if (i__8733 < size__4433__auto__) {
                        var k = cljs.core._nth.call(null, c__4432__auto__, i__8733);
                        cljs.core.chunk_append.call(null, b__8734, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), x[k]], null));
                        var G__8739 = i__8733 + 1;
                        i__8733 = G__8739;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8734), fipp$ednize$edn_$_iter__8731.call(null, cljs.core.chunk_rest.call(null, s__8732__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8734), null);
                  }
                } else {
                  var k = cljs.core.first.call(null, s__8732__$2);
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), x[k]], null), fipp$ednize$edn_$_iter__8731.call(null, cljs.core.rest.call(null, s__8732__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          }, null, null);
        };
        return iter__4434__auto__.call(null, cljs.core.js_keys.call(null, x));
      }()));
    } else {
      if (cljs.core.array_QMARK_.call(null, x)) {
        return cljs.core.tagged_literal.call(null, new cljs.core.Symbol(null, "js", "js", -886355190, null), cljs.core.vec.call(null, x));
      } else {
        if (!(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IDeref$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x)) {
          var pending_QMARK_ = function() {
            var and__4036__auto__ = !(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 1 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IPending$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, x) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, x);
            if (and__4036__auto__) {
              return !cljs.core.realized_QMARK_.call(null, x);
            } else {
              return and__4036__auto__;
            }
          }();
          var val = pending_QMARK_ ? null : cljs.core.deref.call(null, x);
          var status = pending_QMARK_ ? new cljs.core.Keyword(null, "pending", "pending", -220036727) : new cljs.core.Keyword(null, "ready", "ready", 1086465795);
          return cljs.core.tagged_literal.call(null, new cljs.core.Symbol(null, "object", "object", -1179821820, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.pr_str.call(null, cljs.core.type.call(null, x))), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), status, new cljs.core.Keyword(null, "val", "val", 128701612), val], null)], null));
        } else {
          if (x instanceof Date) {
            return cljs.core.tagged_literal.call(null, new cljs.core.Symbol(null, "inst", "inst", -2008473268, null), function() {
              var normalize = function(n, len) {
                var ns = cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                while (true) {
                  if (cljs.core.count.call(null, ns) < len) {
                    var G__8740 = ["0", cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns)].join("");
                    ns = G__8740;
                    continue;
                  } else {
                    return ns;
                  }
                  break;
                }
              };
              return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(x.getUTCFullYear()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(normalize.call(null, x.getUTCMonth() + 1, 2)), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(normalize.call(null, x.getUTCDate(), 2)), "T", cljs.core.str.cljs$core$IFn$_invoke$arity$1(normalize.call(null, x.getUTCHours(), 2)), ":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(normalize.call(null, x.getUTCMinutes(), 2)), ":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(normalize.call(null, 
              x.getUTCSeconds(), 2)), ".", cljs.core.str.cljs$core$IFn$_invoke$arity$1(normalize.call(null, x.getUTCMilliseconds(), 3)), "-", "00:00"].join("");
            }());
          } else {
            if (!(x == null) ? false || cljs.core.PROTOCOL_SENTINEL === x.fipp$ednize$IEdn$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, fipp.ednize.IEdn, x) : false : cljs.core.native_satisfies_QMARK_.call(null, fipp.ednize.IEdn, x)) {
              return fipp.ednize._edn.call(null, x);
            } else {
              if (cljs.core.truth_(fipp.util.edn_QMARK_.call(null, x))) {
                return x;
              } else {
                return cljs.core.tagged_literal.call(null, new cljs.core.Symbol(null, "object", "object", -1179821820, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.pr_str.call(null, cljs.core.type.call(null, x)))], null));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.UUID.prototype.fipp$ednize$IEdn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.UUID.prototype.fipp$ednize$IEdn$_edn$arity$1 = function(x) {
  var x__$1 = this;
  return cljs.core.tagged_literal.call(null, new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1));
};
cljs.core.ExceptionInfo.prototype.fipp$ednize$IEdn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ExceptionInfo.prototype.fipp$ednize$IEdn$_edn$arity$1 = function(x) {
  var x__$1 = this;
  return cljs.core.tagged_literal.call(null, new cljs.core.Symbol(null, "ExceptionInfo", "ExceptionInfo", 294935087, null), cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "message", "message", -406056002), cljs.core.ex_message.call(null, x__$1), new cljs.core.Keyword(null, "data", "data", -232669377), cljs.core.ex_data.call(null, x__$1)], null), function() {
    var temp__5720__auto__ = cljs.core.ex_cause.call(null, x__$1);
    if (cljs.core.truth_(temp__5720__auto__)) {
      var cause = temp__5720__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "cause", "cause", 231901252), cause], null);
    } else {
      return null;
    }
  }()));
};
fipp.ednize.record__GT_tagged = function fipp$ednize$record__GT_tagged(x) {
  return cljs.core.tagged_literal.call(null, cljs.core.apply.call(null, cljs.core.symbol, clojure.string.split.call(null, cljs.core.pr_str.call(null, cljs.core.type.call(null, x)), /\//, 2)), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, x));
};
goog.provide("fipp.visit");
goog.require("cljs.core");
goog.require("fipp.util");
goog.require("fipp.ednize");
fipp.visit.IVisitor = function() {
};
fipp.visit.visit_unknown = function fipp$visit$visit_unknown(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_unknown$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_unknown$arity$2(this$, x);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = fipp.visit.visit_unknown[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, x);
    } else {
      var m__4348__auto____$1 = fipp.visit.visit_unknown["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-unknown", this$);
      }
    }
  }
};
fipp.visit.visit_nil = function fipp$visit$visit_nil(this$) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_nil$arity$1 == null)) {
    return this$.fipp$visit$IVisitor$visit_nil$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = fipp.visit.visit_nil[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = fipp.visit.visit_nil["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-nil", this$);
      }
    }
  }
};
fipp.visit.visit_boolean = function fipp$visit$visit_boolean(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_boolean$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_boolean$arity$2(this$, x);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = fipp.visit.visit_boolean[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, x);
    } else {
      var m__4348__auto____$1 = fipp.visit.visit_boolean["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-boolean", this$);
      }
    }
  }
};
fipp.visit.visit_string = function fipp$visit$visit_string(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_string$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_string$arity$2(this$, x);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = fipp.visit.visit_string[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, x);
    } else {
      var m__4348__auto____$1 = fipp.visit.visit_string["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-string", this$);
      }
    }
  }
};
fipp.visit.visit_character = function fipp$visit$visit_character(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_character$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_character$arity$2(this$, x);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = fipp.visit.visit_character[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, x);
    } else {
      var m__4348__auto____$1 = fipp.visit.visit_character["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-character", this$);
      }
    }
  }
};
fipp.visit.visit_symbol = function fipp$visit$visit_symbol(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_symbol$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_symbol$arity$2(this$, x);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = fipp.visit.visit_symbol[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, x);
    } else {
      var m__4348__auto____$1 = fipp.visit.visit_symbol["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-symbol", this$);
      }
    }
  }
};
fipp.visit.visit_keyword = function fipp$visit$visit_keyword(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_keyword$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_keyword$arity$2(this$, x);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = fipp.visit.visit_keyword[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, x);
    } else {
      var m__4348__auto____$1 = fipp.visit.visit_keyword["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-keyword", this$);
      }
    }
  }
};
fipp.visit.visit_number = function fipp$visit$visit_number(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_number$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_number$arity$2(this$, x);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = fipp.visit.visit_number[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, x);
    } else {
      var m__4348__auto____$1 = fipp.visit.visit_number["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-number", this$);
      }
    }
  }
};
fipp.visit.visit_seq = function fipp$visit$visit_seq(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_seq$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_seq$arity$2(this$, x);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = fipp.visit.visit_seq[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, x);
    } else {
      var m__4348__auto____$1 = fipp.visit.visit_seq["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-seq", this$);
      }
    }
  }
};
fipp.visit.visit_vector = function fipp$visit$visit_vector(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_vector$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_vector$arity$2(this$, x);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = fipp.visit.visit_vector[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, x);
    } else {
      var m__4348__auto____$1 = fipp.visit.visit_vector["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-vector", this$);
      }
    }
  }
};
fipp.visit.visit_map = function fipp$visit$visit_map(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_map$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_map$arity$2(this$, x);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = fipp.visit.visit_map[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, x);
    } else {
      var m__4348__auto____$1 = fipp.visit.visit_map["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-map", this$);
      }
    }
  }
};
fipp.visit.visit_set = function fipp$visit$visit_set(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_set$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_set$arity$2(this$, x);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = fipp.visit.visit_set[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, x);
    } else {
      var m__4348__auto____$1 = fipp.visit.visit_set["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-set", this$);
      }
    }
  }
};
fipp.visit.visit_tagged = function fipp$visit$visit_tagged(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_tagged$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_tagged$arity$2(this$, x);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = fipp.visit.visit_tagged[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, x);
    } else {
      var m__4348__auto____$1 = fipp.visit.visit_tagged["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-tagged", this$);
      }
    }
  }
};
fipp.visit.visit_meta = function fipp$visit$visit_meta(this$, meta, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_meta$arity$3 == null)) {
    return this$.fipp$visit$IVisitor$visit_meta$arity$3(this$, meta, x);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = fipp.visit.visit_meta[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, meta, x);
    } else {
      var m__4348__auto____$1 = fipp.visit.visit_meta["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, meta, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-meta", this$);
      }
    }
  }
};
fipp.visit.visit_var = function fipp$visit$visit_var(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_var$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_var$arity$2(this$, x);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = fipp.visit.visit_var[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, x);
    } else {
      var m__4348__auto____$1 = fipp.visit.visit_var["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-var", this$);
      }
    }
  }
};
fipp.visit.visit_pattern = function fipp$visit$visit_pattern(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_pattern$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_pattern$arity$2(this$, x);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = fipp.visit.visit_pattern[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, x);
    } else {
      var m__4348__auto____$1 = fipp.visit.visit_pattern["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-pattern", this$);
      }
    }
  }
};
fipp.visit.visit_record = function fipp$visit$visit_record(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_record$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_record$arity$2(this$, x);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = fipp.visit.visit_record[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, x);
    } else {
      var m__4348__auto____$1 = fipp.visit.visit_record["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-record", this$);
      }
    }
  }
};
fipp.visit.visit_STAR_ = function fipp$visit$visit_STAR_(visitor, x) {
  if (x == null) {
    return fipp.visit.visit_nil.call(null, visitor);
  } else {
    if (fipp.ednize.override_QMARK_.call(null, x)) {
      return fipp.visit.visit_unknown.call(null, visitor, x);
    } else {
      if (fipp.util.boolean_QMARK_.call(null, x)) {
        return fipp.visit.visit_boolean.call(null, visitor, x);
      } else {
        if (typeof x === "string") {
          return fipp.visit.visit_string.call(null, visitor, x);
        } else {
          if (fipp.util.char_QMARK_.call(null, x)) {
            return fipp.visit.visit_character.call(null, visitor, x);
          } else {
            if (x instanceof cljs.core.Symbol) {
              return fipp.visit.visit_symbol.call(null, visitor, x);
            } else {
              if (x instanceof cljs.core.Keyword) {
                return fipp.visit.visit_keyword.call(null, visitor, x);
              } else {
                if (typeof x === "number") {
                  return fipp.visit.visit_number.call(null, visitor, x);
                } else {
                  if (cljs.core.seq_QMARK_.call(null, x)) {
                    return fipp.visit.visit_seq.call(null, visitor, x);
                  } else {
                    if (cljs.core.vector_QMARK_.call(null, x)) {
                      return fipp.visit.visit_vector.call(null, visitor, x);
                    } else {
                      if (cljs.core.record_QMARK_.call(null, x)) {
                        return fipp.visit.visit_record.call(null, visitor, x);
                      } else {
                        if (cljs.core.map_QMARK_.call(null, x)) {
                          return fipp.visit.visit_map.call(null, visitor, x);
                        } else {
                          if (cljs.core.set_QMARK_.call(null, x)) {
                            return fipp.visit.visit_set.call(null, visitor, x);
                          } else {
                            if (cljs.core.tagged_literal_QMARK_.call(null, x)) {
                              return fipp.visit.visit_tagged.call(null, visitor, x);
                            } else {
                              if (cljs.core.var_QMARK_.call(null, x)) {
                                return fipp.visit.visit_var.call(null, visitor, x);
                              } else {
                                if (cljs.core.truth_(fipp.util.regexp_QMARK_.call(null, x))) {
                                  return fipp.visit.visit_pattern.call(null, visitor, x);
                                } else {
                                  return fipp.visit.visit_unknown.call(null, visitor, x);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
fipp.visit.value_meta = function fipp$visit$value_meta(x) {
  if (fipp.util.value_obj_QMARK_.call(null, x)) {
    return cljs.core.meta.call(null, x);
  } else {
    return null;
  }
};
fipp.visit.visit = function fipp$visit$visit(visitor, x) {
  var temp__5718__auto__ = fipp.visit.value_meta.call(null, x);
  if (cljs.core.truth_(temp__5718__auto__)) {
    var m = temp__5718__auto__;
    return fipp.visit.visit_meta.call(null, visitor, m, x);
  } else {
    return fipp.visit.visit_STAR_.call(null, visitor, x);
  }
};
goog.provide("clojure.core.rrb_vector.protocols");
goog.require("cljs.core");
clojure.core.rrb_vector.protocols.PSpliceableVector = function() {
};
clojure.core.rrb_vector.protocols._splicev = function clojure$core$rrb_vector$protocols$_splicev(v1, v2) {
  if (!(v1 == null) && !(v1.clojure$core$rrb_vector$protocols$PSpliceableVector$_splicev$arity$2 == null)) {
    return v1.clojure$core$rrb_vector$protocols$PSpliceableVector$_splicev$arity$2(v1, v2);
  } else {
    var x__4347__auto__ = v1 == null ? null : v1;
    var m__4348__auto__ = clojure.core.rrb_vector.protocols._splicev[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, v1, v2);
    } else {
      var m__4348__auto____$1 = clojure.core.rrb_vector.protocols._splicev["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, v1, v2);
      } else {
        throw cljs.core.missing_protocol.call(null, "PSpliceableVector.-splicev", v1);
      }
    }
  }
};
clojure.core.rrb_vector.protocols.PSliceableVector = function() {
};
clojure.core.rrb_vector.protocols._slicev = function clojure$core$rrb_vector$protocols$_slicev(v, start, end) {
  if (!(v == null) && !(v.clojure$core$rrb_vector$protocols$PSliceableVector$_slicev$arity$3 == null)) {
    return v.clojure$core$rrb_vector$protocols$PSliceableVector$_slicev$arity$3(v, start, end);
  } else {
    var x__4347__auto__ = v == null ? null : v;
    var m__4348__auto__ = clojure.core.rrb_vector.protocols._slicev[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, v, start, end);
    } else {
      var m__4348__auto____$1 = clojure.core.rrb_vector.protocols._slicev["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, v, start, end);
      } else {
        throw cljs.core.missing_protocol.call(null, "PSliceableVector.-slicev", v);
      }
    }
  }
};
goog.provide("clojure.core.rrb_vector.nodes");
goog.require("cljs.core");
clojure.core.rrb_vector.nodes.empty_node = cljs.core.PersistentVector.EMPTY_NODE;
clojure.core.rrb_vector.nodes.clone = function clojure$core$rrb_vector$nodes$clone(shift, node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
clojure.core.rrb_vector.nodes.regular_QMARK_ = function clojure$core$rrb_vector$nodes$regular_QMARK_(node) {
  return !(node.arr.length === 33);
};
clojure.core.rrb_vector.nodes.node_ranges = function clojure$core$rrb_vector$nodes$node_ranges(node) {
  return node.arr[32];
};
clojure.core.rrb_vector.nodes.last_range = function clojure$core$rrb_vector$nodes$last_range(node) {
  var rngs = clojure.core.rrb_vector.nodes.node_ranges.call(null, node);
  var i = rngs[32] - 1;
  return rngs[i];
};
clojure.core.rrb_vector.nodes.regular_ranges = function clojure$core$rrb_vector$nodes$regular_ranges(shift, cnt) {
  var step = 1 << shift;
  var rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  var i = 0;
  var r = step;
  while (true) {
    if (r < cnt) {
      rngs[i] = r;
      var G__1942 = i + 1;
      var G__1943 = r + step;
      i = G__1942;
      r = G__1943;
      continue;
    } else {
      rngs[i] = cnt;
      rngs[32] = i + 1;
      return rngs;
    }
    break;
  }
};
clojure.core.rrb_vector.nodes.overflow_QMARK_ = function clojure$core$rrb_vector$nodes$overflow_QMARK_(root, shift, cnt) {
  while (true) {
    if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, root)) {
      return cnt >> 5 > 1 << shift;
    } else {
      var rngs = clojure.core.rrb_vector.nodes.node_ranges.call(null, root);
      var slc = rngs[32];
      var and__4036__auto__ = slc === 32;
      if (and__4036__auto__) {
        var or__4047__auto__ = shift === 5;
        if (or__4047__auto__) {
          return or__4047__auto__;
        } else {
          var G__1944 = root.arr[slc - 1];
          var G__1945 = shift - 5;
          var G__1946 = rngs[31] - rngs[30] + 32;
          root = G__1944;
          shift = G__1945;
          cnt = G__1946;
          continue;
        }
      } else {
        return and__4036__auto__;
      }
    }
    break;
  }
};
clojure.core.rrb_vector.nodes.index_of_0 = function clojure$core$rrb_vector$nodes$index_of_0(arr) {
  var l = 0;
  var h = 31;
  while (true) {
    if (l >= h - 1) {
      if ((arr[l] | 0) === 0) {
        return l;
      } else {
        if ((arr[h] | 0) === 0) {
          return h;
        } else {
          return 32;
        }
      }
    } else {
      var mid = l + (h - l >> 1);
      if ((arr[mid] | 0) === 0) {
        var G__1947 = l;
        var G__1948 = mid;
        l = G__1947;
        h = G__1948;
        continue;
      } else {
        var G__1949 = mid + 1;
        var G__1950 = h;
        l = G__1949;
        h = G__1950;
        continue;
      }
    }
    break;
  }
};
clojure.core.rrb_vector.nodes.index_of_nil = function clojure$core$rrb_vector$nodes$index_of_nil(arr) {
  var l = 0;
  var h = 31;
  while (true) {
    if (l >= h - 1) {
      if (arr[l] == null) {
        return l;
      } else {
        if (arr[h] == null) {
          return h;
        } else {
          return 32;
        }
      }
    } else {
      var mid = l + (h - l >> 1);
      if (arr[mid] == null) {
        var G__1951 = l;
        var G__1952 = mid;
        l = G__1951;
        h = G__1952;
        continue;
      } else {
        var G__1953 = mid + 1;
        var G__1954 = h;
        l = G__1953;
        h = G__1954;
        continue;
      }
    }
    break;
  }
};
clojure.core.rrb_vector.nodes.first_child = function clojure$core$rrb_vector$nodes$first_child(node) {
  return node.arr[0];
};
clojure.core.rrb_vector.nodes.last_child = function clojure$core$rrb_vector$nodes$last_child(node) {
  var arr = node.arr;
  if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node)) {
    return arr[clojure.core.rrb_vector.nodes.index_of_nil.call(null, arr) - 1];
  } else {
    return arr[clojure.core.rrb_vector.nodes.node_ranges.call(null, node)[32] - 1];
  }
};
clojure.core.rrb_vector.nodes.remove_leftmost_child = function clojure$core$rrb_vector$nodes$remove_leftmost_child(shift, parent) {
  var arr = parent.arr;
  if (arr[1] == null) {
    return null;
  } else {
    var r_QMARK_ = clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, parent);
    var new_arr = new Array(r_QMARK_ ? 32 : 33);
    cljs.core.array_copy.call(null, arr, 1, new_arr, 0, 31);
    if (!r_QMARK_) {
      var rngs_1955 = clojure.core.rrb_vector.nodes.node_ranges.call(null, parent);
      var rng0_1956 = rngs_1955[0];
      var new_rngs_1957 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var lim_1958 = rngs_1955[32];
      cljs.core.array_copy.call(null, rngs_1955, 1, new_rngs_1957, 0, lim_1958 - 1);
      var i_1959 = 0;
      while (true) {
        if (i_1959 < lim_1958) {
          new_rngs_1957[i_1959] = new_rngs_1957[i_1959] - rng0_1956;
          var G__1960 = i_1959 + 1;
          i_1959 = G__1960;
          continue;
        } else {
        }
        break;
      }
      new_rngs_1957[32] = rngs_1955[32] - 1;
      new_rngs_1957[rngs_1955[32] - 1] = 0;
      new_arr[32] = new_rngs_1957;
    } else {
    }
    return cljs.core.__GT_VectorNode.call(null, parent.edit, new_arr);
  }
};
clojure.core.rrb_vector.nodes.replace_leftmost_child = function clojure$core$rrb_vector$nodes$replace_leftmost_child(shift, parent, pcnt, child, d) {
  if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, parent)) {
    var step = 1 << shift;
    var rng0 = step - d;
    var ncnt = pcnt - d;
    var li = shift >> pcnt - 1 & 31;
    var arr = parent.arr;
    var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
    var new_rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
    new_arr[0] = child;
    cljs.core.array_copy.call(null, arr, 1, new_arr, 1, li);
    new_arr[32] = new_rngs;
    new_rngs[0] = rng0;
    new_rngs[li] = ncnt;
    new_rngs[32] = li + 1;
    var i_1961 = 1;
    while (true) {
      if (i_1961 <= li) {
        new_rngs[i_1961] = new_rngs[i_1961 - 1] + step;
        var G__1962 = i_1961 + 1;
        i_1961 = G__1962;
        continue;
      } else {
      }
      break;
    }
    return cljs.core.__GT_VectorNode.call(null, null, new_arr);
  } else {
    var new_arr = cljs.core.aclone.call(null, parent.arr);
    var rngs = clojure.core.rrb_vector.nodes.node_ranges.call(null, parent);
    var new_rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
    var li = rngs[32] - 1;
    new_rngs[32] = rngs[32];
    new_arr[32] = new_rngs;
    new_arr[0] = child;
    var i_1963 = 0;
    while (true) {
      if (i_1963 <= li) {
        new_rngs[i_1963] = rngs[i_1963] - d;
        var G__1964 = i_1963 + 1;
        i_1963 = G__1964;
        continue;
      } else {
      }
      break;
    }
    return cljs.core.__GT_VectorNode.call(null, null, new_arr);
  }
};
clojure.core.rrb_vector.nodes.replace_rightmost_child = function clojure$core$rrb_vector$nodes$replace_rightmost_child(shift, parent, child, d) {
  if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, parent)) {
    var arr = parent.arr;
    var i = clojure.core.rrb_vector.nodes.index_of_nil.call(null, arr) - 1;
    if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, child)) {
      var new_arr = cljs.core.aclone.call(null, arr);
      new_arr[i] = child;
      return cljs.core.__GT_VectorNode.call(null, null, new_arr);
    } else {
      var arr__$1 = parent.arr;
      var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var step = 1 << shift;
      var rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      rngs[32] = i + 1;
      new_arr[32] = rngs;
      cljs.core.array_copy.call(null, arr__$1, 0, new_arr, 0, i);
      new_arr[i] = child;
      var j_1965 = 0;
      var r_1966 = step;
      while (true) {
        if (j_1965 <= i) {
          rngs[j_1965] = r_1966;
          var G__1967 = j_1965 + 1;
          var G__1968 = r_1966 + step;
          j_1965 = G__1967;
          r_1966 = G__1968;
          continue;
        } else {
        }
        break;
      }
      rngs[i] = clojure.core.rrb_vector.nodes.last_range.call(null, child);
      return cljs.core.__GT_VectorNode.call(null, null, new_arr);
    }
  } else {
    var rngs = clojure.core.rrb_vector.nodes.node_ranges.call(null, parent);
    var new_rngs = cljs.core.aclone.call(null, rngs);
    var i = rngs[32] - 1;
    var new_arr = cljs.core.aclone.call(null, parent.arr);
    new_arr[i] = child;
    new_arr[32] = new_rngs;
    new_rngs[i] = rngs[i] + d;
    return cljs.core.__GT_VectorNode.call(null, null, new_arr);
  }
};
clojure.core.rrb_vector.nodes.new_path_STAR_ = function clojure$core$rrb_vector$nodes$new_path_STAR_(shift, node) {
  var reg_QMARK_ = 32 === node.arr.length;
  var len = reg_QMARK_ ? 32 : 33;
  var arr = new Array(len);
  var rngs = !reg_QMARK_ ? function() {
    var G__1969 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
    G__1969[0] = node.arr.length;
    G__1969[32] = 1;
    return G__1969;
  }() : null;
  var ret = cljs.core.__GT_VectorNode.call(null, null, arr);
  var arr_1970__$1 = arr;
  var shift_1971__$1 = shift;
  while (true) {
    if (shift_1971__$1 === 5) {
      if (!reg_QMARK_) {
        arr_1970__$1[32] = rngs;
      } else {
      }
      arr_1970__$1[0] = node;
    } else {
      var a_1972 = new Array(len);
      var e_1973 = cljs.core.__GT_VectorNode.call(null, null, a_1972);
      arr_1970__$1[0] = e_1973;
      if (!reg_QMARK_) {
        arr_1970__$1[32] = rngs;
      } else {
      }
      var G__1974 = a_1972;
      var G__1975 = shift_1971__$1 - 5;
      arr_1970__$1 = G__1974;
      shift_1971__$1 = G__1975;
      continue;
    }
    break;
  }
  return ret;
};
clojure.core.rrb_vector.nodes.fold_tail = function clojure$core$rrb_vector$nodes$fold_tail(node, shift, cnt, tail) {
  var tlen = tail.length;
  var reg_QMARK_ = clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node) && tlen === 32;
  var arr = node.arr;
  var li = clojure.core.rrb_vector.nodes.index_of_nil.call(null, arr);
  var new_arr = new Array(reg_QMARK_ ? 32 : 33);
  var rngs = !clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node) ? clojure.core.rrb_vector.nodes.node_ranges.call(null, node) : null;
  var cret = shift === 5 ? cljs.core.__GT_VectorNode.call(null, null, tail) : clojure.core.rrb_vector.nodes.fold_tail.call(null, arr[li - 1], shift - 5, clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node) ? cljs.core.mod.call(null, cnt, 1 << shift) : function() {
    var li__$1 = rngs[32] - 1;
    if (li__$1 > 0) {
      return rngs[li__$1] - rngs[li__$1 - 1];
    } else {
      return rngs[0];
    }
  }(), tail);
  var new_rngs = !reg_QMARK_ ? cljs.core.truth_(rngs) ? cljs.core.aclone.call(null, rngs) : clojure.core.rrb_vector.nodes.regular_ranges.call(null, shift, cnt) : null;
  if ((cret == null || shift === 5) && li === 32) {
    return null;
  } else {
    cljs.core.array_copy.call(null, arr, 0, new_arr, 0, li);
    if (reg_QMARK_) {
    } else {
      if (cret == null || shift === 5) {
        new_rngs[li] = (li > 0 ? new_rngs[li - 1] : 0 | 0) + tlen;
        new_rngs[32] = li + 1;
      } else {
        if (li > 0) {
          new_rngs[li - 1] = new_rngs[li - 1] + tlen;
        } else {
        }
        new_rngs[32] = li;
      }
    }
    if (!reg_QMARK_) {
      new_arr[32] = new_rngs;
    } else {
    }
    if (cret == null) {
      new_arr[li] = clojure.core.rrb_vector.nodes.new_path_STAR_.call(null, shift - 5, cljs.core.__GT_VectorNode.call(null, null, tail));
    } else {
      new_arr[shift === 5 ? li : li - 1] = cret;
    }
    return cljs.core.__GT_VectorNode.call(null, null, new_arr);
  }
};
goog.provide("clojure.core.rrb_vector.trees");
goog.require("cljs.core");
goog.require("clojure.core.rrb_vector.nodes");
clojure.core.rrb_vector.trees.new_path = function clojure$core$rrb_vector$trees$new_path(tail, edit, shift, current_node) {
  if (tail.length === 32) {
    var s = 0;
    var n = current_node;
    while (true) {
      if (s === shift) {
        return n;
      } else {
        var arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var ret = cljs.core.__GT_VectorNode.call(null, edit, arr);
        arr[0] = n;
        var G__2005 = s + 5;
        var G__2006 = ret;
        s = G__2005;
        n = G__2006;
        continue;
      }
      break;
    }
  } else {
    var s = 0;
    var n = current_node;
    while (true) {
      if (s === shift) {
        return n;
      } else {
        var arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var ret = cljs.core.__GT_VectorNode.call(null, edit, arr);
        arr[0] = n;
        arr[32] = rngs;
        rngs[32] = 1;
        rngs[0] = tail.length;
        var G__2007 = s + 5;
        var G__2008 = ret;
        s = G__2007;
        n = G__2008;
        continue;
      }
      break;
    }
  }
};
clojure.core.rrb_vector.trees.push_tail = function clojure$core$rrb_vector$trees$push_tail(shift, cnt, root_edit, current_node, tail_node) {
  if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, current_node)) {
    var arr = cljs.core.aclone.call(null, current_node.arr);
    var ret = cljs.core.__GT_VectorNode.call(null, current_node.edit, arr);
    var n_2009 = ret;
    var shift_2010__$1 = shift;
    while (true) {
      var arr_2011__$1 = n_2009.arr;
      var subidx_2012 = cnt - 1 >> shift_2010__$1 & 31;
      if (shift_2010__$1 === 5) {
        arr_2011__$1[subidx_2012] = tail_node;
      } else {
        var temp__5718__auto___2013 = arr_2011__$1[subidx_2012];
        if (cljs.core.truth_(temp__5718__auto___2013)) {
          var child_2014 = temp__5718__auto___2013;
          var new_carr_2015 = cljs.core.aclone.call(null, child_2014.arr);
          var new_child_2016 = cljs.core.__GT_VectorNode.call(null, root_edit, new_carr_2015);
          arr_2011__$1[subidx_2012] = new_child_2016;
          var G__2017 = new_child_2016;
          var G__2018 = shift_2010__$1 - 5;
          n_2009 = G__2017;
          shift_2010__$1 = G__2018;
          continue;
        } else {
          arr_2011__$1[subidx_2012] = clojure.core.rrb_vector.trees.new_path.call(null, tail_node.arr, root_edit, shift_2010__$1 - 5, tail_node);
        }
      }
      break;
    }
    return ret;
  } else {
    var arr = cljs.core.aclone.call(null, current_node.arr);
    var rngs = clojure.core.rrb_vector.nodes.node_ranges.call(null, current_node);
    var li = rngs[32] - 1;
    var ret = cljs.core.__GT_VectorNode.call(null, current_node.edit, arr);
    var cret = shift === 5 ? null : function() {
      var child = arr[li];
      var ccnt = (li > 0 ? rngs[li] - rngs[li - 1] : rngs[0]) + 32;
      if (!clojure.core.rrb_vector.nodes.overflow_QMARK_.call(null, child, shift - 5, ccnt)) {
        return clojure.core.rrb_vector.trees.push_tail.call(null, shift - 5, ccnt, root_edit, child, tail_node);
      } else {
        return null;
      }
    }();
    if (cljs.core.truth_(cret)) {
      arr[li] = cret;
      rngs[li] = rngs[li] + 32;
      return ret;
    } else {
      if (li >= 31) {
        var msg_2019 = ["Assigning index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(li + 1), " of vector", " object array to become a node, when that", " index should only be used for storing", " range arrays."].join("");
        var data_2020 = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "shift", "shift", 997140064), shift, new cljs.core.Keyword(null, "cnt", "cnt", 283978798), cnt, new cljs.core.Keyword(null, "current-node", "current-node", -814308842), current_node, new cljs.core.Keyword(null, "tail-node", "tail-node", -1373693221), tail_node, new cljs.core.Keyword(null, "rngs", "rngs", -8039697), rngs, new cljs.core.Keyword(null, "li", "li", 723558921), li, new cljs.core.Keyword(null, 
        "cret", "cret", 2090504467), cret], null);
        throw cljs.core.ex_info.call(null, msg_2019, data_2020);
      } else {
      }
      arr[li + 1] = clojure.core.rrb_vector.trees.new_path.call(null, tail_node.arr, root_edit, shift - 5, tail_node);
      rngs[li + 1] = rngs[li] + 32;
      rngs[32] = rngs[32] + 1;
      return ret;
    }
  }
};
clojure.core.rrb_vector.trees.pop_tail = function clojure$core$rrb_vector$trees$pop_tail(shift, cnt, root_edit, current_node) {
  if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, current_node)) {
    var subidx = cnt - 2 >> shift & 31;
    if (shift > 5) {
      var new_child = clojure.core.rrb_vector.trees.pop_tail.call(null, shift - 5, cnt, root_edit, current_node.arr[subidx]);
      if (new_child == null && subidx === 0) {
        return null;
      } else {
        var arr = cljs.core.aclone.call(null, current_node.arr);
        arr[subidx] = new_child;
        return cljs.core.__GT_VectorNode.call(null, root_edit, arr);
      }
    } else {
      if (subidx === 0) {
        return null;
      } else {
        var arr = cljs.core.aclone.call(null, current_node.arr);
        arr[subidx] = null;
        return cljs.core.__GT_VectorNode.call(null, root_edit, arr);
      }
    }
  } else {
    var rngs = clojure.core.rrb_vector.nodes.node_ranges.call(null, current_node);
    var subidx = rngs[32] - 1;
    var new_rngs = cljs.core.aclone.call(null, rngs);
    if (shift > 5) {
      var child = current_node.arr[subidx];
      var child_cnt = subidx === 0 ? rngs[0] : rngs[subidx] - rngs[subidx - 1];
      var new_child = clojure.core.rrb_vector.trees.pop_tail.call(null, shift - 5, child_cnt, root_edit, child);
      if (new_child == null && subidx === 0) {
        return null;
      } else {
        if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, child)) {
          var arr = cljs.core.aclone.call(null, current_node.arr);
          new_rngs[subidx] = new_rngs[subidx] - 32;
          arr[subidx] = new_child;
          arr[32] = new_rngs;
          if (new_child == null) {
            new_rngs[32] = new_rngs[32] - 1;
          } else {
          }
          return cljs.core.__GT_VectorNode.call(null, root_edit, arr);
        } else {
          var rng = clojure.core.rrb_vector.nodes.last_range.call(null, child);
          var diff = rng - (cljs.core.truth_(new_child) ? clojure.core.rrb_vector.nodes.last_range.call(null, new_child) : 0);
          var arr = cljs.core.aclone.call(null, current_node.arr);
          new_rngs[subidx] = new_rngs[subidx] - diff;
          arr[subidx] = new_child;
          arr[32] = new_rngs;
          if (new_child == null) {
            new_rngs[32] = new_rngs[32] - 1;
          } else {
          }
          return cljs.core.__GT_VectorNode.call(null, root_edit, arr);
        }
      }
    } else {
      if (subidx === 0) {
        return null;
      } else {
        var arr = cljs.core.aclone.call(null, current_node.arr);
        var child = arr[subidx];
        var new_rngs__$1 = cljs.core.aclone.call(null, rngs);
        arr[subidx] = null;
        arr[32] = new_rngs__$1;
        new_rngs__$1[subidx] = 0;
        new_rngs__$1[32] = new_rngs__$1[32] - 1;
        return cljs.core.__GT_VectorNode.call(null, root_edit, arr);
      }
    }
  }
};
clojure.core.rrb_vector.trees.do_assoc = function clojure$core$rrb_vector$trees$do_assoc(shift, current_node, i, val) {
  if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, current_node)) {
    var node = clojure.core.rrb_vector.nodes.clone.call(null, shift, current_node);
    var shift_2021__$1 = shift;
    var node_2022__$1 = node;
    while (true) {
      if (shift_2021__$1 === 0) {
        var arr_2023 = node_2022__$1.arr;
        arr_2023[i & 31] = val;
      } else {
        var arr_2024 = node_2022__$1.arr;
        var subidx_2025 = i >> shift_2021__$1 & 31;
        var child_2026 = clojure.core.rrb_vector.nodes.clone.call(null, shift_2021__$1, arr_2024[subidx_2025]);
        arr_2024[subidx_2025] = child_2026;
        var G__2027 = shift_2021__$1 - 5;
        var G__2028 = child_2026;
        shift_2021__$1 = G__2027;
        node_2022__$1 = G__2028;
        continue;
      }
      break;
    }
    return node;
  } else {
    var arr = cljs.core.aclone.call(null, current_node.arr);
    var rngs = clojure.core.rrb_vector.nodes.node_ranges.call(null, current_node);
    var subidx = i >> shift & 31;
    var subidx__$1 = function() {
      var subidx__$1 = subidx;
      while (true) {
        if (i < (rngs[subidx__$1] | 0)) {
          return subidx__$1;
        } else {
          var G__2029 = subidx__$1 + 1;
          subidx__$1 = G__2029;
          continue;
        }
        break;
      }
    }();
    var i__$1 = subidx__$1 === 0 ? i : i - rngs[subidx__$1 - 1];
    arr[subidx__$1] = clojure.core.rrb_vector.trees.do_assoc.call(null, shift - 5, arr[subidx__$1], i__$1, val);
    return cljs.core.__GT_VectorNode.call(null, current_node.edit, arr);
  }
};
goog.provide("clojure.core.rrb_vector.transients");
goog.require("cljs.core");
goog.require("clojure.core.rrb_vector.nodes");
goog.require("clojure.core.rrb_vector.trees");
clojure.core.rrb_vector.transients.ensure_editable = function clojure$core$rrb_vector$transients$ensure_editable(edit, node) {
  if (node.edit === edit) {
    return node;
  } else {
    var new_arr = cljs.core.aclone.call(null, node.arr);
    if (33 === new_arr.length) {
      new_arr[32] = cljs.core.aclone.call(null, new_arr[32]);
    } else {
    }
    return new cljs.core.VectorNode(edit, new_arr);
  }
};
clojure.core.rrb_vector.transients.editable_root = function clojure$core$rrb_vector$transients$editable_root(root) {
  var new_arr = cljs.core.aclone.call(null, root.arr);
  if (33 === new_arr.length) {
    new_arr[32] = cljs.core.aclone.call(null, new_arr[32]);
  } else {
  }
  return new cljs.core.VectorNode({}, new_arr);
};
clojure.core.rrb_vector.transients.editable_tail = function clojure$core$rrb_vector$transients$editable_tail(tail) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tail, 0, ret, 0, tail.length);
  return ret;
};
clojure.core.rrb_vector.transients.push_tail_BANG_ = function clojure$core$rrb_vector$transients$push_tail_BANG_(shift, cnt, root_edit, current_node, tail_node) {
  var ret = clojure.core.rrb_vector.transients.ensure_editable.call(null, root_edit, current_node);
  if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, ret)) {
    var n_2062 = ret;
    var shift_2063__$1 = shift;
    while (true) {
      var arr_2064 = n_2062.arr;
      var subidx_2065 = cnt - 1 >> shift_2063__$1 & 31;
      if (shift_2063__$1 === 5) {
        arr_2064[subidx_2065] = tail_node;
      } else {
        var child_2066 = arr_2064[subidx_2065];
        if (child_2066 == null) {
          arr_2064[subidx_2065] = clojure.core.rrb_vector.trees.new_path.call(null, tail_node.arr, root_edit, shift_2063__$1 - 5, tail_node);
        } else {
          var editable_child_2067 = clojure.core.rrb_vector.transients.ensure_editable.call(null, root_edit, child_2066);
          arr_2064[subidx_2065] = editable_child_2067;
          var G__2068 = editable_child_2067;
          var G__2069 = shift_2063__$1 - 5;
          n_2062 = G__2068;
          shift_2063__$1 = G__2069;
          continue;
        }
      }
      break;
    }
    return ret;
  } else {
    var arr = ret.arr;
    var rngs = clojure.core.rrb_vector.nodes.node_ranges.call(null, ret);
    var li = rngs[32] - 1;
    var cret = shift === 5 ? null : function() {
      var child = clojure.core.rrb_vector.transients.ensure_editable.call(null, root_edit, arr[li]);
      var ccnt = (li > 0 ? rngs[li] - rngs[li - 1] : rngs[0]) + 32;
      if (!clojure.core.rrb_vector.nodes.overflow_QMARK_.call(null, child, shift - 5, ccnt)) {
        return clojure.core.rrb_vector.transients.push_tail_BANG_.call(null, shift - 5, ccnt, root_edit, child, tail_node);
      } else {
        return null;
      }
    }();
    if (cljs.core.truth_(cret)) {
      arr[li] = cret;
      rngs[li] = rngs[li] + 32;
      return ret;
    } else {
      if (li >= 31) {
        var msg_2070 = ["Assigning index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(li + 1), " of vector", " object array to become a node, when that", " index should only be used for storing", " range arrays."].join("");
        var data_2071 = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "shift", "shift", 997140064), shift, new cljs.core.Keyword(null, "cnd", "cnd", -521882032), cnt, new cljs.core.Keyword(null, "current-node", "current-node", -814308842), current_node, new cljs.core.Keyword(null, "tail-node", "tail-node", -1373693221), tail_node, new cljs.core.Keyword(null, "rngs", "rngs", -8039697), rngs, new cljs.core.Keyword(null, "li", "li", 723558921), li, new cljs.core.Keyword(null, 
        "cret", "cret", 2090504467), cret], null);
        throw cljs.core.ex_info.call(null, msg_2070, data_2071);
      } else {
      }
      arr[li + 1] = clojure.core.rrb_vector.trees.new_path.call(null, tail_node.arr, root_edit, shift - 5, tail_node);
      rngs[li + 1] = rngs[li] + 32;
      rngs[32] = rngs[32] + 1;
      return ret;
    }
  }
};
clojure.core.rrb_vector.transients.pop_tail_BANG_ = function clojure$core$rrb_vector$transients$pop_tail_BANG_(shift, cnt, root_edit, current_node) {
  var ret = clojure.core.rrb_vector.transients.ensure_editable.call(null, root_edit, current_node);
  if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, ret)) {
    var subidx = cnt - 2 >> shift & 31;
    if (shift > 5) {
      var child = clojure.core.rrb_vector.transients.pop_tail_BANG_.call(null, shift - 5, cnt, root_edit, ret.arr[subidx]);
      if (child == null && subidx === 0) {
        return null;
      } else {
        var arr = ret.arr;
        arr[subidx] = child;
        return ret;
      }
    } else {
      if (subidx === 0) {
        return null;
      } else {
        var arr = ret.arr;
        arr[subidx] = null;
        return ret;
      }
    }
  } else {
    var rngs = clojure.core.rrb_vector.nodes.node_ranges.call(null, ret);
    var subidx = rngs[32] - 1;
    if (shift > 5) {
      var child = ret.arr[subidx];
      var child_cnt = subidx === 0 ? rngs[0] : rngs[subidx] - rngs[subidx - 1];
      var new_child = clojure.core.rrb_vector.transients.pop_tail_BANG_.call(null, shift - 5, child_cnt, root_edit, child);
      if (new_child == null && subidx === 0) {
        return null;
      } else {
        if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, child)) {
          var arr = ret.arr;
          rngs[subidx] = rngs[subidx] - 32;
          arr[subidx] = new_child;
          if (new_child == null) {
            rngs[32] = rngs[32] - 1;
          } else {
          }
          return ret;
        } else {
          var rng = clojure.core.rrb_vector.nodes.last_range.call(null, child);
          var diff = rng - (cljs.core.truth_(new_child) ? clojure.core.rrb_vector.nodes.last_range.call(null, new_child) : 0);
          var arr = ret.arr;
          rngs[subidx] = rngs[subidx] - diff;
          arr[subidx] = new_child;
          if (new_child == null) {
            rngs[32] = rngs[32] - 1;
          } else {
          }
          return ret;
        }
      }
    } else {
      if (subidx === 0) {
        return null;
      } else {
        var arr = ret.arr;
        var child = arr[subidx];
        arr[subidx] = null;
        rngs[subidx] = 0;
        rngs[32] = rngs[32] - 1;
        return ret;
      }
    }
  }
};
clojure.core.rrb_vector.transients.do_assoc_BANG_ = function clojure$core$rrb_vector$transients$do_assoc_BANG_(shift, root_edit, current_node, i, val) {
  var ret = clojure.core.rrb_vector.transients.ensure_editable.call(null, root_edit, current_node);
  if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, ret)) {
    var shift_2072__$1 = shift;
    var node_2073 = ret;
    while (true) {
      if (shift_2072__$1 === 0) {
        var arr_2074 = node_2073.arr;
        arr_2074[i & 31] = val;
      } else {
        var arr_2075 = node_2073.arr;
        var subidx_2076 = i >> shift_2072__$1 & 31;
        var child_2077 = clojure.core.rrb_vector.transients.ensure_editable.call(null, root_edit, arr_2075[subidx_2076]);
        arr_2075[subidx_2076] = child_2077;
        var G__2078 = shift_2072__$1 - 5;
        var G__2079 = child_2077;
        shift_2072__$1 = G__2078;
        node_2073 = G__2079;
        continue;
      }
      break;
    }
  } else {
    var arr_2080 = ret.arr;
    var rngs_2081 = clojure.core.rrb_vector.nodes.node_ranges.call(null, ret);
    var subidx_2082 = i >> shift & 31;
    var subidx_2083__$1 = function() {
      var subidx__$1 = subidx_2082;
      while (true) {
        if (i < (rngs_2081[subidx__$1] | 0)) {
          return subidx__$1;
        } else {
          var G__2085 = subidx__$1 + 1;
          subidx__$1 = G__2085;
          continue;
        }
        break;
      }
    }();
    var i_2084__$1 = subidx_2083__$1 === 0 ? i : i - rngs_2081[subidx_2083__$1 - 1];
    arr_2080[subidx_2083__$1] = clojure.core.rrb_vector.transients.do_assoc_BANG_.call(null, shift - 5, root_edit, arr_2080[subidx_2083__$1], i_2084__$1, val);
  }
  return ret;
};
goog.provide("clojure.core.rrb_vector.rrbt");
goog.require("cljs.core");
goog.require("clojure.core.rrb_vector.protocols");
goog.require("clojure.core.rrb_vector.nodes");
goog.require("clojure.core.rrb_vector.trees");
goog.require("clojure.core.rrb_vector.transients");
clojure.core.rrb_vector.rrbt.rrbt_concat_threshold = 33;
clojure.core.rrb_vector.rrbt.max_extra_search_steps = 2;
clojure.core.rrb_vector.rrbt.IVecImpl = function() {
};
clojure.core.rrb_vector.rrbt._tail_offset = function clojure$core$rrb_vector$rrbt$_tail_offset(v) {
  if (!(v == null) && !(v.clojure$core$rrb_vector$rrbt$IVecImpl$_tail_offset$arity$1 == null)) {
    return v.clojure$core$rrb_vector$rrbt$IVecImpl$_tail_offset$arity$1(v);
  } else {
    var x__4347__auto__ = v == null ? null : v;
    var m__4348__auto__ = clojure.core.rrb_vector.rrbt._tail_offset[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, v);
    } else {
      var m__4348__auto____$1 = clojure.core.rrb_vector.rrbt._tail_offset["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, v);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVecImpl.-tail-offset", v);
      }
    }
  }
};
clojure.core.rrb_vector.rrbt._array_for = function clojure$core$rrb_vector$rrbt$_array_for(v, i) {
  if (!(v == null) && !(v.clojure$core$rrb_vector$rrbt$IVecImpl$_array_for$arity$2 == null)) {
    return v.clojure$core$rrb_vector$rrbt$IVecImpl$_array_for$arity$2(v, i);
  } else {
    var x__4347__auto__ = v == null ? null : v;
    var m__4348__auto__ = clojure.core.rrb_vector.rrbt._array_for[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, v, i);
    } else {
      var m__4348__auto____$1 = clojure.core.rrb_vector.rrbt._array_for["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, v, i);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVecImpl.-array-for", v);
      }
    }
  }
};
clojure.core.rrb_vector.rrbt.AsRRBT = function() {
};
clojure.core.rrb_vector.rrbt._as_rrbt = function clojure$core$rrb_vector$rrbt$_as_rrbt(v) {
  if (!(v == null) && !(v.clojure$core$rrb_vector$rrbt$AsRRBT$_as_rrbt$arity$1 == null)) {
    return v.clojure$core$rrb_vector$rrbt$AsRRBT$_as_rrbt$arity$1(v);
  } else {
    var x__4347__auto__ = v == null ? null : v;
    var m__4348__auto__ = clojure.core.rrb_vector.rrbt._as_rrbt[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, v);
    } else {
      var m__4348__auto____$1 = clojure.core.rrb_vector.rrbt._as_rrbt["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, v);
      } else {
        throw cljs.core.missing_protocol.call(null, "AsRRBT.-as-rrbt", v);
      }
    }
  }
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2179858668;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, this$__$1);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = clojure.core.rrb_vector.rrbt.rrb_chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = clojure.core.rrb_vector.rrbt.rrb_chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? clojure.core.rrb_vector.rrbt.rrb_chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return cljs.core.List.EMPTY;
  } else {
    return s;
  }
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return clojure.core.rrb_vector.rrbt.rrb_chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? clojure.core.rrb_vector.rrbt.rrb_chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return null;
  } else {
    return s;
  }
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.cljs$lang$type = true;
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.cljs$lang$ctorStr = "clojure.core.rrb-vector.rrbt/RRBChunkedSeq";
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write.call(null, writer__4291__auto__, "clojure.core.rrb-vector.rrbt/RRBChunkedSeq");
};
clojure.core.rrb_vector.rrbt.__GT_RRBChunkedSeq = function clojure$core$rrb_vector$rrbt$__GT_RRBChunkedSeq(vec, node, i, off, meta, __hash) {
  return new clojure.core.rrb_vector.rrbt.RRBChunkedSeq(vec, node, i, off, meta, __hash);
};
clojure.core.rrb_vector.rrbt.rrb_chunked_seq = function clojure$core$rrb_vector$rrbt$rrb_chunked_seq(var_args) {
  var G__2319 = arguments.length;
  switch(G__2319) {
    case 3:
      return clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new clojure.core.rrb_vector.rrbt.RRBChunkedSeq(vec, clojure.core.rrb_vector.rrbt._array_for.call(null, vec, i), i, off, null, null);
};
clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new clojure.core.rrb_vector.rrbt.RRBChunkedSeq(vec, node, i, off, null, null);
};
clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new clojure.core.rrb_vector.rrbt.RRBChunkedSeq(vec, node, i, off, meta, null);
};
clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$lang$maxFixedArity = 5;
clojure.core.rrb_vector.rrbt.slice_right = function clojure$core$rrb_vector$rrbt$slice_right(node, shift, end) {
  if (shift === 0) {
    var arr = node.arr;
    var new_arr = new Array(end);
    cljs.core.array_copy.call(null, arr, 0, new_arr, 0, end);
    return cljs.core.__GT_VectorNode.call(null, null, new_arr);
  } else {
    var reg_QMARK_ = clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node);
    var rngs = !reg_QMARK_ ? clojure.core.rrb_vector.nodes.node_ranges.call(null, node) : null;
    var i = end - 1 >> shift & 31;
    var i__$1 = reg_QMARK_ ? i : function() {
      var j = i;
      while (true) {
        if (end <= rngs[j]) {
          return j;
        } else {
          var G__2321 = j + 1;
          j = G__2321;
          continue;
        }
        break;
      }
    }();
    var child_end = reg_QMARK_ ? function() {
      var ce = cljs.core.mod.call(null, end, 1 << shift);
      if (ce === 0) {
        return 1 << shift;
      } else {
        return ce;
      }
    }() : i__$1 > 0 ? end - rngs[i__$1 - 1] : end;
    var arr = node.arr;
    var new_child = clojure.core.rrb_vector.rrbt.slice_right.call(null, arr[i__$1], shift - 5, child_end);
    var regular_child_QMARK_ = shift === 5 ? 32 === new_child.arr.length : clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, new_child);
    var new_arr = new Array(reg_QMARK_ && regular_child_QMARK_ ? 32 : 33);
    var new_child_rng = regular_child_QMARK_ ? function() {
      var m = cljs.core.mod.call(null, child_end, 1 << shift);
      if (m === 0) {
        return 1 << shift;
      } else {
        return m;
      }
    }() : shift === 5 ? new_child.arr.length : clojure.core.rrb_vector.nodes.last_range.call(null, new_child);
    cljs.core.array_copy.call(null, arr, 0, new_arr, 0, i__$1);
    new_arr[i__$1] = new_child;
    if (!(reg_QMARK_ && regular_child_QMARK_)) {
      var new_rngs_2322 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var step_2323 = 1 << shift;
      if (reg_QMARK_) {
        var n__4518__auto___2324 = i__$1;
        var j_2325 = 0;
        while (true) {
          if (j_2325 < n__4518__auto___2324) {
            new_rngs_2322[j_2325] = (j_2325 + 1) * step_2323;
            var G__2326 = j_2325 + 1;
            j_2325 = G__2326;
            continue;
          } else {
          }
          break;
        }
      } else {
        var n__4518__auto___2327 = i__$1;
        var j_2328 = 0;
        while (true) {
          if (j_2328 < n__4518__auto___2327) {
            new_rngs_2322[j_2328] = rngs[j_2328];
            var G__2329 = j_2328 + 1;
            j_2328 = G__2329;
            continue;
          } else {
          }
          break;
        }
      }
      new_rngs_2322[i__$1] = (i__$1 > 0 ? new_rngs_2322[i__$1 - 1] : 0) + new_child_rng;
      new_rngs_2322[32] = i__$1 + 1;
      new_arr[32] = new_rngs_2322;
    } else {
    }
    return cljs.core.__GT_VectorNode.call(null, null, new_arr);
  }
};
clojure.core.rrb_vector.rrbt.slice_left = function clojure$core$rrb_vector$rrbt$slice_left(node, shift, start, end) {
  if (shift === 0) {
    var arr = node.arr;
    var new_len = arr.length - start;
    var new_arr = new Array(new_len);
    cljs.core.array_copy.call(null, arr, start, new_arr, 0, new_len);
    return cljs.core.__GT_VectorNode.call(null, null, new_arr);
  } else {
    var reg_QMARK_ = clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node);
    var arr = node.arr;
    var rngs = !reg_QMARK_ ? clojure.core.rrb_vector.nodes.node_ranges.call(null, node) : null;
    var i = start >> shift & 31;
    var i__$1 = reg_QMARK_ ? i : function() {
      var j = i;
      while (true) {
        if (start < rngs[j]) {
          return j;
        } else {
          var G__2330 = j + 1;
          j = G__2330;
          continue;
        }
        break;
      }
    }();
    var len = reg_QMARK_ ? function() {
      var i__$2 = i__$1;
      while (true) {
        if (i__$2 === 32 || arr[i__$2] == null) {
          return i__$2;
        } else {
          var G__2331 = i__$2 + 1;
          i__$2 = G__2331;
          continue;
        }
        break;
      }
    }() : rngs[32];
    var child_start = i__$1 > 0 ? start - (reg_QMARK_ ? i__$1 * (1 << shift) : rngs[i__$1 - 1]) : start;
    var child_end = reg_QMARK_ ? function() {
      var x__4138__auto__ = 1 << shift;
      var y__4139__auto__ = i__$1 > 0 ? end - i__$1 * (1 << shift) : end;
      return x__4138__auto__ < y__4139__auto__ ? x__4138__auto__ : y__4139__auto__;
    }() : function() {
      var capped_end = function() {
        var x__4138__auto__ = rngs[i__$1];
        var y__4139__auto__ = end;
        return x__4138__auto__ < y__4139__auto__ ? x__4138__auto__ : y__4139__auto__;
      }();
      if (i__$1 > 0) {
        return capped_end - rngs[i__$1 - 1];
      } else {
        return capped_end;
      }
    }();
    var new_child = clojure.core.rrb_vector.rrbt.slice_left.call(null, arr[i__$1], shift - 5, child_start, child_end);
    var new_len = len - i__$1;
    var new_len__$1 = new_child == null ? new_len - 1 : new_len;
    if (new_len__$1 === 0) {
      return null;
    } else {
      if (reg_QMARK_) {
        var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var rngs__$1 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var rng0 = new_child == null || shift === 5 || clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, new_child) ? (1 << shift) - (start >> shift - 5 & 31) : clojure.core.rrb_vector.nodes.last_range.call(null, new_child);
        var step = 1 << shift;
        var j_2332 = 0;
        var r_2333 = rng0;
        while (true) {
          if (j_2332 < new_len__$1) {
            rngs__$1[j_2332] = r_2333;
            var G__2334 = j_2332 + 1;
            var G__2335 = r_2333 + step;
            j_2332 = G__2334;
            r_2333 = G__2335;
            continue;
          } else {
          }
          break;
        }
        if (new_len__$1 > 1) {
          rngs__$1[new_len__$1 - 1] = end - start;
        } else {
        }
        rngs__$1[32] = new_len__$1;
        cljs.core.array_copy.call(null, arr, new_child == null ? i__$1 + 1 : i__$1, new_arr, 0, new_len__$1);
        if (!(new_child == null)) {
          new_arr[0] = new_child;
        } else {
        }
        new_arr[32] = rngs__$1;
        return cljs.core.__GT_VectorNode.call(null, node.edit, new_arr);
      } else {
        var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var j_2336 = 0;
        var i_2337__$2 = i__$1;
        while (true) {
          if (j_2336 < new_len__$1) {
            new_rngs[j_2336] = rngs[i_2337__$2] - start;
            var G__2338 = j_2336 + 1;
            var G__2339 = i_2337__$2 + 1;
            j_2336 = G__2338;
            i_2337__$2 = G__2339;
            continue;
          } else {
          }
          break;
        }
        new_rngs[32] = new_len__$1;
        cljs.core.array_copy.call(null, arr, new_child == null ? i__$1 + 1 : i__$1, new_arr, 0, new_len__$1);
        if (!(new_child == null)) {
          new_arr[0] = new_child;
        } else {
        }
        new_arr[32] = new_rngs;
        return cljs.core.__GT_VectorNode.call(null, node.edit, new_arr);
      }
    }
  }
};
clojure.core.rrb_vector.rrbt.Vector = function(cnt, shift, root, tail, meta, __hash) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2315152159;
  this.cljs$lang$protocol_mask$partition1$ = 2052;
};
clojure.core.rrb_vector.rrbt.Vector.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return cljs.core.pr_str_STAR_.call(null, this$);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, k, null);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, k, not_found);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this$, f, init) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.cnt === 0) {
    return init;
  } else {
    var i = 0;
    var j = 0;
    var init__$1 = init;
    var arr = clojure.core.rrb_vector.rrbt._array_for.call(null, this$__$1, i);
    var lim = arr.length - 1;
    var step = lim + 1;
    while (true) {
      var init__$2 = f.call(null, init__$1, i + j, arr[j]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        if (j < lim) {
          var G__2344 = i;
          var G__2345 = j + 1;
          var G__2346 = init__$2;
          var G__2347 = arr;
          var G__2348 = lim;
          var G__2349 = step;
          i = G__2344;
          j = G__2345;
          init__$1 = G__2346;
          arr = G__2347;
          lim = G__2348;
          step = G__2349;
          continue;
        } else {
          var i__$1 = i + step;
          if (i__$1 < self__.cnt) {
            var arr__$1 = clojure.core.rrb_vector.rrbt._array_for.call(null, this$__$1, i__$1);
            var len = arr__$1.length;
            var lim__$1 = len - 1;
            var G__2350 = i__$1;
            var G__2351 = 0;
            var G__2352 = init__$2;
            var G__2353 = arr__$1;
            var G__2354 = lim__$1;
            var G__2355 = len;
            i = G__2350;
            j = G__2351;
            init__$1 = G__2352;
            arr = G__2353;
            lim = G__2354;
            step = G__2355;
            continue;
          } else {
            return init__$2;
          }
        }
      }
      break;
    }
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, i) {
  var self__ = this;
  var this$__$1 = this;
  if (0 <= i && i < self__.cnt) {
    var tail_off = self__.cnt - self__.tail.length;
    if (tail_off <= i) {
      return self__.tail[i - tail_off];
    } else {
      var i__$1 = i;
      var node = self__.root;
      var shift__$1 = self__.shift;
      while (true) {
        if (shift__$1 === 0) {
          var arr = node.arr;
          return arr[i__$1 >> shift__$1 & 31];
        } else {
          if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node)) {
            var arr = node.arr;
            var idx = i__$1 >> shift__$1 & 31;
            var i__$2 = i__$1;
            var node__$1 = arr[idx];
            var shift__$2 = shift__$1 - 5;
            while (true) {
              var arr__$1 = node__$1.arr;
              var idx__$1 = i__$2 >> shift__$2 & 31;
              if (shift__$2 === 0) {
                return arr__$1[idx__$1];
              } else {
                var G__2356 = i__$2;
                var G__2357 = arr__$1[idx__$1];
                var G__2358 = shift__$2 - 5;
                i__$2 = G__2356;
                node__$1 = G__2357;
                shift__$2 = G__2358;
                continue;
              }
              break;
            }
          } else {
            var arr = node.arr;
            var rngs = clojure.core.rrb_vector.nodes.node_ranges.call(null, node);
            var idx = function() {
              var j = i__$1 >> shift__$1 & 31;
              while (true) {
                if (i__$1 < rngs[j]) {
                  return j;
                } else {
                  var G__2359 = j + 1;
                  j = G__2359;
                  continue;
                }
                break;
              }
            }();
            var i__$2 = idx === 0 ? i__$1 : i__$1 - rngs[idx - 1];
            var G__2360 = i__$2;
            var G__2361 = arr[idx];
            var G__2362 = shift__$1 - 5;
            i__$1 = G__2360;
            node = G__2361;
            shift__$1 = G__2362;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, self__.cnt);
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, i, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (i >= 0 && i < self__.cnt) {
    return cljs.core._nth.call(null, this$__$1, i);
  } else {
    return not_found;
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, this$__$1);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(this$, i, val) {
  var self__ = this;
  var this$__$1 = this;
  if (0 <= i && i < self__.cnt) {
    var tail_off = clojure.core.rrb_vector.rrbt._tail_offset.call(null, this$__$1);
    if (i >= tail_off) {
      var new_tail = new Array(self__.tail.length);
      var idx = i - tail_off;
      cljs.core.array_copy.call(null, self__.tail, 0, new_tail, 0, self__.tail.length);
      new_tail[idx] = val;
      return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt, self__.shift, self__.root, new_tail, self__.meta, null);
    } else {
      return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt, self__.shift, clojure.core.rrb_vector.trees.do_assoc.call(null, self__.shift, self__.root, i, val), self__.tail, self__.meta, null);
    }
  } else {
    if (i === self__.cnt) {
      return cljs.core._conj.call(null, this$__$1, val);
    } else {
      return cljs.core.vector_index_out_of_bounds.call(null, i, self__.cnt);
    }
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$rrbt$AsRRBT$ = cljs.core.PROTOCOL_SENTINEL;
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$rrbt$AsRRBT$_as_rrbt$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.meta;
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.cnt;
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, 0);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, 1);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, this$__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (self__.tail.length > 1) {
        var new_tail = new Array(self__.tail.length - 1);
        cljs.core.array_copy.call(null, self__.tail, 0, new_tail, 0, new_tail.length);
        return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt - 1, self__.shift, self__.root, new_tail, self__.meta, null);
      } else {
        var new_tail = clojure.core.rrb_vector.rrbt._array_for.call(null, this$__$1, self__.cnt - 2);
        var root_cnt = clojure.core.rrb_vector.rrbt._tail_offset.call(null, this$__$1);
        var new_root = clojure.core.rrb_vector.trees.pop_tail.call(null, self__.shift, root_cnt, self__.root.edit, self__.root);
        if (new_root == null) {
          return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt - 1, self__.shift, clojure.core.rrb_vector.nodes.empty_node, new_tail, self__.meta, null);
        } else {
          if (self__.shift > 5 && new_root.arr[1] == null) {
            return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt - 1, self__.shift - 5, new_root.arr[0], new_tail, self__.meta, null);
          } else {
            return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt - 1, self__.shift, new_root, new_tail, self__.meta, null);
          }
        }
      }
    }
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(this$__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = cljs.core.hash_ordered_coll.call(null, this$__$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, that) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.equiv_sequential.call(null, this$__$1, that);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return clojure.core.rrb_vector.rrbt.__GT_Transient.call(null, self__.cnt, self__.shift, clojure.core.rrb_vector.transients.editable_root.call(null, self__.root), clojure.core.rrb_vector.transients.editable_tail.call(null, self__.tail), self__.tail.length);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$protocols$PSliceableVector$ = cljs.core.PROTOCOL_SENTINEL;
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$protocols$PSliceableVector$_slicev$arity$3 = function(this$, start, end) {
  var self__ = this;
  var this$__$1 = this;
  var new_cnt = end - start;
  if (start < 0 || end > self__.cnt) {
    throw new Error("vector index out of bounds");
  } else {
    if (start === end) {
      return cljs.core.empty.call(null, this$__$1);
    } else {
      if (start > end) {
        throw new Error("start index greater than end index");
      } else {
        var tail_off = clojure.core.rrb_vector.rrbt._tail_offset.call(null, this$__$1);
        if (start >= tail_off) {
          var new_tail = new Array(new_cnt);
          cljs.core.array_copy.call(null, self__.tail, start - tail_off, new_tail, 0, new_cnt);
          return new clojure.core.rrb_vector.rrbt.Vector(new_cnt, 5, clojure.core.rrb_vector.nodes.empty_node, new_tail, self__.meta, null);
        } else {
          var tail_cut_QMARK_ = end > tail_off;
          var new_root = tail_cut_QMARK_ ? self__.root : clojure.core.rrb_vector.rrbt.slice_right.call(null, self__.root, self__.shift, end);
          var new_root__$1 = start === 0 ? new_root : clojure.core.rrb_vector.rrbt.slice_left.call(null, new_root, self__.shift, start, function() {
            var x__4138__auto__ = end;
            var y__4139__auto__ = tail_off;
            return x__4138__auto__ < y__4139__auto__ ? x__4138__auto__ : y__4139__auto__;
          }());
          var new_tail = tail_cut_QMARK_ ? function() {
            var new_len = end - tail_off;
            var new_tail = new Array(new_len);
            cljs.core.array_copy.call(null, self__.tail, 0, new_tail, 0, new_len);
            return new_tail;
          }() : clojure.core.rrb_vector.rrbt._array_for.call(null, new clojure.core.rrb_vector.rrbt.Vector(new_cnt, self__.shift, new_root__$1, [], self__.meta, null), new_cnt - 1);
          var new_root__$2 = tail_cut_QMARK_ ? new_root__$1 : clojure.core.rrb_vector.trees.pop_tail.call(null, self__.shift, new_cnt, new_root__$1.edit, new_root__$1);
          if (new_root__$2 == null) {
            return new clojure.core.rrb_vector.rrbt.Vector(new_cnt, 5, clojure.core.rrb_vector.nodes.empty_node, new_tail, self__.meta, null);
          } else {
            var r = new_root__$2;
            var s = self__.shift;
            while (true) {
              if (s > 5 && r.arr[1] == null) {
                var G__2363 = r.arr[0];
                var G__2364 = s - 5;
                r = G__2363;
                s = G__2364;
                continue;
              } else {
                return new clojure.core.rrb_vector.rrbt.Vector(new_cnt, s, r, new_tail, self__.meta, null);
              }
              break;
            }
          }
        }
      }
    }
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$rrbt$IVecImpl$ = cljs.core.PROTOCOL_SENTINEL;
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$rrbt$IVecImpl$_tail_offset$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.cnt - self__.tail.length;
};
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$rrbt$IVecImpl$_array_for$arity$2 = function(this$, i) {
  var self__ = this;
  var this$__$1 = this;
  if (0 <= i && i < self__.cnt) {
    if (i >= clojure.core.rrb_vector.rrbt._tail_offset.call(null, this$__$1)) {
      return self__.tail;
    } else {
      var i__$1 = i;
      var node = self__.root;
      var shift__$1 = self__.shift;
      while (true) {
        if (shift__$1 === 0) {
          return node.arr;
        } else {
          if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node)) {
            var node__$1 = node.arr[i__$1 >> shift__$1 & 31];
            var shift__$2 = shift__$1 - 5;
            while (true) {
              if (shift__$2 === 0) {
                return node__$1.arr;
              } else {
                var G__2365 = node__$1.arr[i__$1 >> shift__$2 & 31];
                var G__2366 = shift__$2 - 5;
                node__$1 = G__2365;
                shift__$2 = G__2366;
                continue;
              }
              break;
            }
          } else {
            var rngs = clojure.core.rrb_vector.nodes.node_ranges.call(null, node);
            var j = function() {
              var j = i__$1 >> shift__$1 & 31;
              while (true) {
                if (i__$1 < rngs[j]) {
                  return j;
                } else {
                  var G__2367 = j + 1;
                  j = G__2367;
                  continue;
                }
                break;
              }
            }();
            var i__$2 = j > 0 ? i__$1 - rngs[j - 1] : i__$1;
            var G__2368 = i__$2;
            var G__2369 = node.arr[j];
            var G__2370 = shift__$1 - 5;
            i__$1 = G__2368;
            node = G__2369;
            shift__$1 = G__2370;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, self__.cnt);
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ci_reduce.call(null, this$__$1, f);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(this$, f, start) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ci_reduce.call(null, this$__$1, f, start);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, k, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._assoc_n.call(null, this$__$1, k, v);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (clojure.core.rrb_vector.rrbt._tail_offset.call(null, this$__$1) === 0) {
      return cljs.core.array_seq.call(null, self__.tail);
    } else {
      return clojure.core.rrb_vector.rrbt.rrb_chunked_seq.call(null, this$__$1, 0, 0);
    }
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, meta__$1) {
  var self__ = this;
  var this$__$1 = this;
  return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt, self__.shift, self__.root, self__.tail, meta__$1, self__.__hash);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, val) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.tail.length < 32) {
    var tail_len = self__.tail.length;
    var new_tail = new Array(tail_len + 1);
    cljs.core.array_copy.call(null, self__.tail, 0, new_tail, 0, tail_len);
    new_tail[tail_len] = val;
    return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt + 1, self__.shift, self__.root, new_tail, self__.meta, null);
  } else {
    var tail_node = cljs.core.__GT_VectorNode.call(null, self__.root.edit, self__.tail);
    var new_tail = function() {
      var new_arr = [null];
      new_arr[0] = val;
      return new_arr;
    }();
    if (clojure.core.rrb_vector.nodes.overflow_QMARK_.call(null, self__.root, self__.shift, self__.cnt)) {
      if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, self__.root)) {
        var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_root = cljs.core.__GT_VectorNode.call(null, self__.root.edit, new_arr);
        var G__2341_2371 = new_arr;
        G__2341_2371[0] = self__.root;
        G__2341_2371[1] = clojure.core.rrb_vector.trees.new_path.call(null, self__.tail, self__.root.edit, self__.shift, tail_node);
        return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt + 1, self__.shift + 5, new_root, new_tail, self__.meta, null);
      } else {
        var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_root = cljs.core.__GT_VectorNode.call(null, self__.root.edit, new_arr);
        var root_total_range = clojure.core.rrb_vector.nodes.node_ranges.call(null, self__.root)[31];
        var G__2342_2372 = new_arr;
        G__2342_2372[0] = self__.root;
        G__2342_2372[1] = clojure.core.rrb_vector.trees.new_path.call(null, self__.tail, self__.root.edit, self__.shift, tail_node);
        G__2342_2372[32] = new_rngs;
        var G__2343_2373 = new_rngs;
        G__2343_2373[0] = root_total_range;
        G__2343_2373[1] = root_total_range + 32;
        G__2343_2373[32] = 2;
        return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt + 1, self__.shift + 5, new_root, new_tail, self__.meta, null);
      }
    } else {
      return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt + 1, self__.shift, clojure.core.rrb_vector.trees.push_tail.call(null, self__.shift, self__.cnt, self__.root.edit, self__.root, tail_node), new_tail, self__.meta, null);
    }
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.call = function() {
  var G__2374 = null;
  var G__2374__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._nth.call(null, this$, k);
  };
  var G__2374__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._nth.call(null, this$, k, not_found);
  };
  G__2374 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__2374__2.call(this, self__, k);
      case 3:
        return G__2374__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2374.cljs$core$IFn$_invoke$arity$2 = G__2374__2;
  G__2374.cljs$core$IFn$_invoke$arity$3 = G__2374__3;
  return G__2374;
}();
clojure.core.rrb_vector.rrbt.Vector.prototype.apply = function(self__, args2340) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args2340)));
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return cljs.core._nth.call(null, this$, k);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return cljs.core._nth.call(null, this$, k, not_found);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, that) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.compare_indexed.call(null, this$__$1, that);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$protocols$PSpliceableVector$ = cljs.core.PROTOCOL_SENTINEL;
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$protocols$PSpliceableVector$_splicev$arity$2 = function(this$, that) {
  var self__ = this;
  var this$__$1 = this;
  return clojure.core.rrb_vector.rrbt.splice_rrbts.call(null, this$__$1, clojure.core.rrb_vector.rrbt._as_rrbt.call(null, that));
};
clojure.core.rrb_vector.rrbt.Vector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
clojure.core.rrb_vector.rrbt.Vector.cljs$lang$type = true;
clojure.core.rrb_vector.rrbt.Vector.cljs$lang$ctorStr = "clojure.core.rrb-vector.rrbt/Vector";
clojure.core.rrb_vector.rrbt.Vector.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write.call(null, writer__4291__auto__, "clojure.core.rrb-vector.rrbt/Vector");
};
clojure.core.rrb_vector.rrbt.__GT_Vector = function clojure$core$rrb_vector$rrbt$__GT_Vector(cnt, shift, root, tail, meta, __hash) {
  return new clojure.core.rrb_vector.rrbt.Vector(cnt, shift, root, tail, meta, __hash);
};
cljs.core.PersistentVector.prototype.clojure$core$rrb_vector$rrbt$AsRRBT$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.clojure$core$rrb_vector$rrbt$AsRRBT$_as_rrbt$arity$1 = function(this$) {
  var this$__$1 = this;
  return new clojure.core.rrb_vector.rrbt.Vector(cljs.core.count.call(null, this$__$1), this$__$1.shift, this$__$1.root, this$__$1.tail, cljs.core.meta.call(null, this$__$1), null);
};
cljs.core.Subvec.prototype.clojure$core$rrb_vector$rrbt$AsRRBT$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.clojure$core$rrb_vector$rrbt$AsRRBT$_as_rrbt$arity$1 = function(this$) {
  var this$__$1 = this;
  var v = this$__$1.v;
  var start = this$__$1.start;
  var end = this$__$1.end;
  return clojure.core.rrb_vector.protocols._slicev.call(null, clojure.core.rrb_vector.rrbt._as_rrbt.call(null, v), start, end);
};
clojure.core.rrb_vector.rrbt.shift_from_to = function clojure$core$rrb_vector$rrbt$shift_from_to(node, from, to) {
  while (true) {
    if (from === to) {
      return node;
    } else {
      if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node)) {
        var G__2378 = cljs.core.__GT_VectorNode.call(null, node.edit, function() {
          var G__2375 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
          G__2375[0] = node;
          return G__2375;
        }());
        var G__2379 = 5 + from;
        var G__2380 = to;
        node = G__2378;
        from = G__2379;
        to = G__2380;
        continue;
      } else {
        var G__2381 = cljs.core.__GT_VectorNode.call(null, node.edit, function() {
          var G__2376 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
          G__2376[0] = node;
          G__2376[32] = function() {
            var G__2377 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            G__2377[0] = clojure.core.rrb_vector.nodes.last_range.call(null, node);
            G__2377[32] = 1;
            return G__2377;
          }();
          return G__2376;
        }());
        var G__2382 = 5 + from;
        var G__2383 = to;
        node = G__2381;
        from = G__2382;
        to = G__2383;
        continue;
      }
    }
    break;
  }
};
clojure.core.rrb_vector.rrbt.slot_count = function clojure$core$rrb_vector$rrbt$slot_count(node, shift) {
  var arr = node.arr;
  if (shift === 0) {
    return arr.length;
  } else {
    if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node)) {
      return clojure.core.rrb_vector.nodes.index_of_nil.call(null, arr);
    } else {
      var rngs = clojure.core.rrb_vector.nodes.node_ranges.call(null, node);
      return rngs[32];
    }
  }
};
clojure.core.rrb_vector.rrbt.subtree_branch_count = function clojure$core$rrb_vector$rrbt$subtree_branch_count(node, shift) {
  var arr = node.arr;
  var cs = shift - 5;
  if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node)) {
    var i = 0;
    var sbc = 0;
    while (true) {
      if (i === 32) {
        return sbc;
      } else {
        var temp__5718__auto__ = arr[i];
        if (cljs.core.truth_(temp__5718__auto__)) {
          var child = temp__5718__auto__;
          var G__2384 = i + 1;
          var G__2385 = sbc + clojure.core.rrb_vector.rrbt.slot_count.call(null, child, cs);
          i = G__2384;
          sbc = G__2385;
          continue;
        } else {
          return sbc;
        }
      }
      break;
    }
  } else {
    var lim = clojure.core.rrb_vector.nodes.node_ranges.call(null, node)[32];
    var i = 0;
    var sbc = 0;
    while (true) {
      if (i === lim) {
        return sbc;
      } else {
        var child = arr[i];
        var G__2386 = i + 1;
        var G__2387 = sbc + clojure.core.rrb_vector.rrbt.slot_count.call(null, child, cs);
        i = G__2386;
        sbc = G__2387;
        continue;
      }
      break;
    }
  }
};
clojure.core.rrb_vector.rrbt.leaf_seq = function clojure$core$rrb_vector$rrbt$leaf_seq(arr) {
  return cljs.core.mapcat.call(null, function(p1__2388_SHARP_) {
    return p1__2388_SHARP_.arr;
  }, cljs.core.take.call(null, clojure.core.rrb_vector.nodes.index_of_nil.call(null, arr), arr));
};
clojure.core.rrb_vector.rrbt.rebalance_leaves = function clojure$core$rrb_vector$rrbt$rebalance_leaves(n1, cnt1, n2, cnt2, transferred_leaves) {
  var slc1 = clojure.core.rrb_vector.rrbt.slot_count.call(null, n1, 5);
  var slc2 = clojure.core.rrb_vector.rrbt.slot_count.call(null, n2, 5);
  var a = slc1 + slc2;
  var sbc1 = clojure.core.rrb_vector.rrbt.subtree_branch_count.call(null, n1, 5);
  var sbc2 = clojure.core.rrb_vector.rrbt.subtree_branch_count.call(null, n2, 5);
  var p = sbc1 + sbc2;
  var e = a - (cljs.core.quot.call(null, p - 1, 32) + 1);
  if (e <= 2) {
    return [n1, n2];
  } else {
    if (sbc1 + sbc2 <= 1024) {
      var reg_QMARK_ = cljs.core.mod.call(null, p, 32) === 0;
      var new_arr = new Array(reg_QMARK_ ? 32 : 33);
      var new_n1 = cljs.core.__GT_VectorNode.call(null, null, new_arr);
      var i_2389 = 0;
      var bs_2390 = cljs.core.partition_all.call(null, 32, cljs.core.concat.call(null, clojure.core.rrb_vector.rrbt.leaf_seq.call(null, n1.arr), clojure.core.rrb_vector.rrbt.leaf_seq.call(null, n2.arr)));
      while (true) {
        var temp__5720__auto___2391 = cljs.core.seq.call(null, bs_2390);
        if (temp__5720__auto___2391) {
          var xs__6277__auto___2392 = temp__5720__auto___2391;
          var block_2393 = cljs.core.first.call(null, xs__6277__auto___2392);
          var a_2394__$1 = new Array(cljs.core.count.call(null, block_2393));
          var i_2395__$1 = 0;
          var xs_2396 = cljs.core.seq.call(null, block_2393);
          while (true) {
            if (xs_2396) {
              a_2394__$1[i_2395__$1] = cljs.core.first.call(null, xs_2396);
              var G__2397 = i_2395__$1 + 1;
              var G__2398 = cljs.core.next.call(null, xs_2396);
              i_2395__$1 = G__2397;
              xs_2396 = G__2398;
              continue;
            } else {
            }
            break;
          }
          new_arr[i_2389] = cljs.core.__GT_VectorNode.call(null, null, a_2394__$1);
          var G__2399 = i_2389 + 1;
          var G__2400 = cljs.core.next.call(null, bs_2390);
          i_2389 = G__2399;
          bs_2390 = G__2400;
          continue;
        } else {
        }
        break;
      }
      if (!reg_QMARK_) {
        new_arr[32] = clojure.core.rrb_vector.nodes.regular_ranges.call(null, 5, p);
      } else {
      }
      transferred_leaves.val = sbc2;
      return [new_n1, null];
    } else {
      var reg_QMARK_ = cljs.core.mod.call(null, p, 32) === 0;
      var new_arr1 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var new_arr2 = new Array(reg_QMARK_ ? 32 : 33);
      var new_n1 = cljs.core.__GT_VectorNode.call(null, null, new_arr1);
      var new_n2 = cljs.core.__GT_VectorNode.call(null, null, new_arr2);
      var i_2401 = 0;
      var bs_2402 = cljs.core.partition_all.call(null, 32, cljs.core.concat.call(null, clojure.core.rrb_vector.rrbt.leaf_seq.call(null, n1.arr), clojure.core.rrb_vector.rrbt.leaf_seq.call(null, n2.arr)));
      while (true) {
        var temp__5720__auto___2403 = cljs.core.seq.call(null, bs_2402);
        if (temp__5720__auto___2403) {
          var xs__6277__auto___2404 = temp__5720__auto___2403;
          var block_2405 = cljs.core.first.call(null, xs__6277__auto___2404);
          var a_2406__$1 = new Array(cljs.core.count.call(null, block_2405));
          var i_2407__$1 = 0;
          var xs_2408 = cljs.core.seq.call(null, block_2405);
          while (true) {
            if (xs_2408) {
              a_2406__$1[i_2407__$1] = cljs.core.first.call(null, xs_2408);
              var G__2409 = i_2407__$1 + 1;
              var G__2410 = cljs.core.next.call(null, xs_2408);
              i_2407__$1 = G__2409;
              xs_2408 = G__2410;
              continue;
            } else {
            }
            break;
          }
          if (i_2401 < 32) {
            new_arr1[i_2401] = cljs.core.__GT_VectorNode.call(null, null, a_2406__$1);
          } else {
            new_arr2[i_2401 - 32] = cljs.core.__GT_VectorNode.call(null, null, a_2406__$1);
          }
          var G__2411 = i_2401 + 1;
          var G__2412 = cljs.core.next.call(null, bs_2402);
          i_2401 = G__2411;
          bs_2402 = G__2412;
          continue;
        } else {
        }
        break;
      }
      if (!reg_QMARK_) {
        new_arr2[32] = clojure.core.rrb_vector.nodes.regular_ranges.call(null, 5, p - 1024);
      } else {
      }
      transferred_leaves.val = 1024 - sbc1;
      return [new_n1, new_n2];
    }
  }
};
clojure.core.rrb_vector.rrbt.child_seq = function clojure$core$rrb_vector$rrbt$child_seq(node, shift, cnt) {
  var arr = node.arr;
  var rngs = clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node) ? clojure.core.rrb_vector.nodes.regular_ranges.call(null, shift, cnt) : clojure.core.rrb_vector.nodes.node_ranges.call(null, node);
  var cs = cljs.core.truth_(rngs) ? rngs[32] : clojure.core.rrb_vector.nodes.index_of_nil.call(null, arr);
  var cseq = function(arr, rngs, cs) {
    return function clojure$core$rrb_vector$rrbt$child_seq_$_cseq(c, r) {
      var arr__$1 = c.arr;
      var rngs__$1 = clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, c) ? clojure.core.rrb_vector.nodes.regular_ranges.call(null, shift - 5, r) : clojure.core.rrb_vector.nodes.node_ranges.call(null, c);
      var gcs = cljs.core.truth_(rngs__$1) ? rngs__$1[32] : clojure.core.rrb_vector.nodes.index_of_nil.call(null, arr__$1);
      return cljs.core.map.call(null, cljs.core.list, cljs.core.take.call(null, gcs, arr__$1), cljs.core.take.call(null, gcs, cljs.core.map.call(null, cljs.core._, rngs__$1, cljs.core.cons.call(null, 0, rngs__$1))));
    };
  }(arr, rngs, cs);
  return cljs.core.mapcat.call(null, cseq, cljs.core.take.call(null, cs, arr), cljs.core.take.call(null, cs, cljs.core.map.call(null, cljs.core._, rngs, cljs.core.cons.call(null, 0, rngs))));
};
clojure.core.rrb_vector.rrbt.rebalance = function clojure$core$rrb_vector$rrbt$rebalance(shift, n1, cnt1, n2, cnt2, transferred_leaves) {
  if (n2 == null) {
    return [n1, null];
  } else {
    var slc1 = clojure.core.rrb_vector.rrbt.slot_count.call(null, n1, shift);
    var slc2 = clojure.core.rrb_vector.rrbt.slot_count.call(null, n2, shift);
    var a = slc1 + slc2;
    var sbc1 = clojure.core.rrb_vector.rrbt.subtree_branch_count.call(null, n1, shift);
    var sbc2 = clojure.core.rrb_vector.rrbt.subtree_branch_count.call(null, n2, shift);
    var p = sbc1 + sbc2;
    var e = a - (cljs.core.quot.call(null, p - 1, 32) + 1);
    if (e <= 2) {
      return [n1, n2];
    } else {
      if (sbc1 + sbc2 <= 1024) {
        var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_n1 = cljs.core.__GT_VectorNode.call(null, null, new_arr);
        var i_2419 = 0;
        var bs_2420 = cljs.core.partition_all.call(null, 32, cljs.core.concat.call(null, clojure.core.rrb_vector.rrbt.child_seq.call(null, n1, shift, cnt1), clojure.core.rrb_vector.rrbt.child_seq.call(null, n2, shift, cnt2)));
        while (true) {
          var temp__5720__auto___2421 = cljs.core.seq.call(null, bs_2420);
          if (temp__5720__auto___2421) {
            var xs__6277__auto___2422 = temp__5720__auto___2421;
            var block_2423 = cljs.core.first.call(null, xs__6277__auto___2422);
            var a_2424__$1 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            var r_2425 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            a_2424__$1[32] = r_2425;
            r_2425[32] = cljs.core.count.call(null, block_2423);
            var i_2426__$1 = 0;
            var o_2427 = 0;
            var gcs_2428 = cljs.core.seq.call(null, block_2423);
            while (true) {
              var temp__5720__auto___2429__$1 = cljs.core.seq.call(null, gcs_2428);
              if (temp__5720__auto___2429__$1) {
                var xs__6277__auto___2430__$1 = temp__5720__auto___2429__$1;
                var vec__2413_2431 = cljs.core.first.call(null, xs__6277__auto___2430__$1);
                var gc_2432 = cljs.core.nth.call(null, vec__2413_2431, 0, null);
                var gcr_2433 = cljs.core.nth.call(null, vec__2413_2431, 1, null);
                a_2424__$1[i_2426__$1] = gc_2432;
                r_2425[i_2426__$1] = o_2427 + gcr_2433;
                var G__2434 = i_2426__$1 + 1;
                var G__2435 = o_2427 + gcr_2433;
                var G__2436 = cljs.core.next.call(null, gcs_2428);
                i_2426__$1 = G__2434;
                o_2427 = G__2435;
                gcs_2428 = G__2436;
                continue;
              } else {
              }
              break;
            }
            new_arr[i_2419] = cljs.core.__GT_VectorNode.call(null, null, a_2424__$1);
            new_rngs[i_2419] = r_2425[r_2425[32] - 1] + (i_2419 > 0 ? new_rngs[i_2419 - 1] : 0);
            new_rngs[32] = i_2419 + 1;
            var G__2437 = i_2419 + 1;
            var G__2438 = cljs.core.next.call(null, bs_2420);
            i_2419 = G__2437;
            bs_2420 = G__2438;
            continue;
          } else {
          }
          break;
        }
        new_arr[32] = new_rngs;
        transferred_leaves.val = cnt2;
        return [new_n1, null];
      } else {
        var new_arr1 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_arr2 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_rngs1 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_rngs2 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_n1 = cljs.core.__GT_VectorNode.call(null, null, new_arr1);
        var new_n2 = cljs.core.__GT_VectorNode.call(null, null, new_arr2);
        var i_2439 = 0;
        var bs_2440 = cljs.core.partition_all.call(null, 32, cljs.core.concat.call(null, clojure.core.rrb_vector.rrbt.child_seq.call(null, n1, shift, cnt1), clojure.core.rrb_vector.rrbt.child_seq.call(null, n2, shift, cnt2)));
        while (true) {
          var temp__5720__auto___2441 = cljs.core.seq.call(null, bs_2440);
          if (temp__5720__auto___2441) {
            var xs__6277__auto___2442 = temp__5720__auto___2441;
            var block_2443 = cljs.core.first.call(null, xs__6277__auto___2442);
            var a_2444__$1 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            var r_2445 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            a_2444__$1[32] = r_2445;
            r_2445[32] = cljs.core.count.call(null, block_2443);
            var i_2446__$1 = 0;
            var o_2447 = 0;
            var gcs_2448 = cljs.core.seq.call(null, block_2443);
            while (true) {
              var temp__5720__auto___2449__$1 = cljs.core.seq.call(null, gcs_2448);
              if (temp__5720__auto___2449__$1) {
                var xs__6277__auto___2450__$1 = temp__5720__auto___2449__$1;
                var vec__2416_2451 = cljs.core.first.call(null, xs__6277__auto___2450__$1);
                var gc_2452 = cljs.core.nth.call(null, vec__2416_2451, 0, null);
                var gcr_2453 = cljs.core.nth.call(null, vec__2416_2451, 1, null);
                a_2444__$1[i_2446__$1] = gc_2452;
                r_2445[i_2446__$1] = o_2447 + gcr_2453;
                var G__2454 = i_2446__$1 + 1;
                var G__2455 = o_2447 + gcr_2453;
                var G__2456 = cljs.core.next.call(null, gcs_2448);
                i_2446__$1 = G__2454;
                o_2447 = G__2455;
                gcs_2448 = G__2456;
                continue;
              } else {
              }
              break;
            }
            if (i_2439 < 32 && i_2439 * 32 + cljs.core.count.call(null, block_2443) > sbc1) {
              var tbs_2457 = i_2439 * 32 + cljs.core.count.call(null, block_2443) - sbc1;
              var li_2458 = r_2445[32] - 1;
              var d_2459 = tbs_2457 >= 32 ? r_2445[li_2458] : r_2445[li_2458] - r_2445[li_2458 - tbs_2457];
              transferred_leaves.val = transferred_leaves.val + d_2459;
            } else {
            }
            var new_arr_2460 = i_2439 < 32 ? new_arr1 : new_arr2;
            var new_rngs_2461 = i_2439 < 32 ? new_rngs1 : new_rngs2;
            var i_2462__$1 = cljs.core.mod.call(null, i_2439, 32);
            new_arr_2460[i_2462__$1] = cljs.core.__GT_VectorNode.call(null, null, a_2444__$1);
            new_rngs_2461[i_2462__$1] = r_2445[r_2445[32] - 1] + (i_2462__$1 > 0 ? new_rngs_2461[i_2462__$1 - 1] : 0);
            new_rngs_2461[32] = i_2462__$1 + 1;
            var G__2463 = i_2439 + 1;
            var G__2464 = cljs.core.next.call(null, bs_2440);
            i_2439 = G__2463;
            bs_2440 = G__2464;
            continue;
          } else {
          }
          break;
        }
        new_arr1[32] = new_rngs1;
        new_arr2[32] = new_rngs2;
        return [new_n1, new_n2];
      }
    }
  }
};
clojure.core.rrb_vector.rrbt.zippath = function clojure$core$rrb_vector$rrbt$zippath(shift, n1, cnt1, n2, cnt2, transferred_leaves) {
  if (shift === 5) {
    return clojure.core.rrb_vector.rrbt.rebalance_leaves.call(null, n1, cnt1, n2, cnt2, transferred_leaves);
  } else {
    var c1 = clojure.core.rrb_vector.nodes.last_child.call(null, n1);
    var c2 = clojure.core.rrb_vector.nodes.first_child.call(null, n2);
    var ccnt1 = clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, n1) ? function() {
      var m = cljs.core.mod.call(null, cnt1, 1 << shift);
      if (m === 0) {
        return 1 << shift;
      } else {
        return m;
      }
    }() : function() {
      var rngs = clojure.core.rrb_vector.nodes.node_ranges.call(null, n1);
      var i = rngs[32] - 1;
      if (i === 0) {
        return rngs[0];
      } else {
        return rngs[i] - rngs[i - 1];
      }
    }();
    var ccnt2 = clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, n2) ? function() {
      var m = cljs.core.mod.call(null, cnt2, 1 << shift);
      if (m === 0) {
        return 1 << shift;
      } else {
        return m;
      }
    }() : clojure.core.rrb_vector.nodes.node_ranges.call(null, n2)[0];
    var next_transferred_leaves = new cljs.core.Box(0);
    var vec__2465 = clojure.core.rrb_vector.rrbt.zippath.call(null, shift - 5, c1, ccnt1, c2, ccnt2, next_transferred_leaves);
    var new_c1 = cljs.core.nth.call(null, vec__2465, 0, null);
    var new_c2 = cljs.core.nth.call(null, vec__2465, 1, null);
    var d = next_transferred_leaves.val;
    transferred_leaves.val = transferred_leaves.val + d;
    return clojure.core.rrb_vector.rrbt.rebalance.call(null, shift, c1 === new_c1 ? n1 : clojure.core.rrb_vector.nodes.replace_rightmost_child.call(null, shift, n1, new_c1, d), cnt1 + d, cljs.core.truth_(new_c2) ? c2 === new_c2 ? n2 : clojure.core.rrb_vector.nodes.replace_leftmost_child.call(null, shift, n2, cnt2, new_c2, d) : clojure.core.rrb_vector.nodes.remove_leftmost_child.call(null, shift, n2), cnt2 - d, transferred_leaves);
  }
};
clojure.core.rrb_vector.rrbt.squash_nodes = function clojure$core$rrb_vector$rrbt$squash_nodes(shift, n1, cnt1, n2, cnt2) {
  var arr1 = n1.arr;
  var arr2 = n2.arr;
  var li1 = clojure.core.rrb_vector.nodes.index_of_nil.call(null, arr1);
  var li2 = clojure.core.rrb_vector.nodes.index_of_nil.call(null, arr2);
  var slots = cljs.core.concat.call(null, cljs.core.take.call(null, li1, arr1), cljs.core.take.call(null, li2, arr2));
  if (cljs.core.count.call(null, slots) > 32) {
    return [n1, n2];
  } else {
    var new_rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
    var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
    var rngs1 = cljs.core.take.call(null, li1, clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, n1) ? clojure.core.rrb_vector.nodes.regular_ranges.call(null, shift, cnt1) : clojure.core.rrb_vector.nodes.node_ranges.call(null, n1));
    var rngs2 = cljs.core.take.call(null, li2, clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, n2) ? clojure.core.rrb_vector.nodes.regular_ranges.call(null, shift, cnt2) : clojure.core.rrb_vector.nodes.node_ranges.call(null, n2));
    var rngs2__$1 = function() {
      var r = cljs.core.last.call(null, rngs1);
      return cljs.core.map.call(null, function(r, new_rngs, new_arr, rngs1, rngs2, arr1, arr2, li1, li2, slots) {
        return function(p1__2468_SHARP_) {
          return p1__2468_SHARP_ + r;
        };
      }(r, new_rngs, new_arr, rngs1, rngs2, arr1, arr2, li1, li2, slots), rngs2);
    }();
    var rngs = cljs.core.concat.call(null, rngs1, rngs2__$1);
    new_arr[32] = new_rngs;
    var i_2469 = 0;
    var cs_2470 = cljs.core.seq.call(null, slots);
    while (true) {
      if (cs_2470) {
        new_arr[i_2469] = cljs.core.first.call(null, cs_2470);
        var G__2471 = i_2469 + 1;
        var G__2472 = cljs.core.next.call(null, cs_2470);
        i_2469 = G__2471;
        cs_2470 = G__2472;
        continue;
      } else {
      }
      break;
    }
    var i_2473 = 0;
    var rngs_2474__$1 = cljs.core.seq.call(null, rngs);
    while (true) {
      if (rngs_2474__$1) {
        new_rngs[i_2473] = cljs.core.first.call(null, rngs_2474__$1);
        var G__2475 = i_2473 + 1;
        var G__2476 = cljs.core.next.call(null, rngs_2474__$1);
        i_2473 = G__2475;
        rngs_2474__$1 = G__2476;
        continue;
      } else {
        new_rngs[32] = i_2473;
      }
      break;
    }
    return [cljs.core.__GT_VectorNode.call(null, null, new_arr), null];
  }
};
clojure.core.rrb_vector.rrbt.peephole_optimization_config = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "debug-fn", "debug-fn", 777839250), null], null));
clojure.core.rrb_vector.rrbt.peephole_optimization_count = cljs.core.atom.call(null, 0);
clojure.core.rrb_vector.rrbt.child_nodes = function clojure$core$rrb_vector$rrbt$child_nodes(node) {
  return cljs.core.take.call(null, 32, cljs.core.take_while.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), node.arr));
};
clojure.core.rrb_vector.rrbt.bounded_grandchildren = function clojure$core$rrb_vector$rrbt$bounded_grandchildren(children) {
  return cljs.core.take.call(null, 33, cljs.core.mapcat.call(null, clojure.core.rrb_vector.rrbt.child_nodes, children));
};
clojure.core.rrb_vector.rrbt.last_non_nil_idx = function clojure$core$rrb_vector$rrbt$last_non_nil_idx(arr) {
  var i = arr.length - 1;
  while (true) {
    if (i < 0) {
      return i;
    } else {
      if (arr[i] == null) {
        var G__2477 = i - 1;
        i = G__2477;
        continue;
      } else {
        return i;
      }
    }
    break;
  }
};
clojure.core.rrb_vector.rrbt.count_vector_elements_beneath = function clojure$core$rrb_vector$rrbt$count_vector_elements_beneath(node, shift) {
  if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node)) {
    var node__$1 = node;
    var shift__$1 = shift;
    var acc = 0;
    while (true) {
      if (shift__$1 === 0) {
        if (node__$1 == null) {
          return acc;
        } else {
          return acc + 32;
        }
      } else {
        var arr = node__$1.arr;
        var max_child_idx = clojure.core.rrb_vector.rrbt.last_non_nil_idx.call(null, arr);
        var num_elems_in_full_child = 1 << shift__$1;
        if (max_child_idx < 0) {
          return acc;
        } else {
          var G__2478 = arr[max_child_idx];
          var G__2479 = shift__$1 - 5;
          var G__2480 = acc + max_child_idx * num_elems_in_full_child;
          node__$1 = G__2478;
          shift__$1 = G__2479;
          acc = G__2480;
          continue;
        }
      }
      break;
    }
  } else {
    var rngs = clojure.core.rrb_vector.nodes.node_ranges.call(null, node);
    return rngs[rngs[32] - 1];
  }
};
clojure.core.rrb_vector.rrbt.peephole_optimize_root = function clojure$core$rrb_vector$rrbt$peephole_optimize_root(v) {
  var config = cljs.core.deref.call(null, clojure.core.rrb_vector.rrbt.peephole_optimization_config);
  if (v.shift <= 10) {
    return v;
  } else {
    var root = v.root;
    var children = clojure.core.rrb_vector.rrbt.child_nodes.call(null, root);
    var grandchildren = clojure.core.rrb_vector.rrbt.bounded_grandchildren.call(null, children);
    var num_granchildren_bounded = cljs.core.count.call(null, grandchildren);
    var many_grandchildren_QMARK_ = num_granchildren_bounded > 32;
    if (many_grandchildren_QMARK_) {
      return v;
    } else {
      var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var new_rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var new_root = cljs.core.__GT_VectorNode.call(null, root.edit, new_arr);
      var shift = v.shift;
      var grandchild_shift = shift - 2 * 5;
      cljs.core.swap_BANG_.call(null, clojure.core.rrb_vector.rrbt.peephole_optimization_count, cljs.core.inc);
      var idx_2481 = 0;
      var remaining_gc_2482 = grandchildren;
      var elem_sum_2483 = 0;
      while (true) {
        var temp__5718__auto___2484 = cljs.core.seq.call(null, remaining_gc_2482);
        if (temp__5718__auto___2484) {
          var remaining_gc_2485__$1 = temp__5718__auto___2484;
          var grandchild_2486 = cljs.core.first.call(null, remaining_gc_2485__$1);
          var num_elems_this_grandchild_2487 = clojure.core.rrb_vector.rrbt.count_vector_elements_beneath.call(null, grandchild_2486, grandchild_shift);
          var next_elem_sum_2488 = elem_sum_2483 + num_elems_this_grandchild_2487;
          new_arr[idx_2481] = grandchild_2486;
          new_rngs[idx_2481] = next_elem_sum_2488;
          var G__2489 = idx_2481 + 1;
          var G__2490 = cljs.core.rest.call(null, remaining_gc_2485__$1);
          var G__2491 = next_elem_sum_2488;
          idx_2481 = G__2489;
          remaining_gc_2482 = G__2490;
          elem_sum_2483 = G__2491;
          continue;
        } else {
        }
        break;
      }
      new_rngs[32] = num_granchildren_bounded;
      new_arr[32] = new_rngs;
      var new_v = new clojure.core.rrb_vector.rrbt.Vector(v.cnt, shift - 5, new_root, v.tail, v.meta, null);
      if (cljs.core.truth_((new cljs.core.Keyword(null, "debug-fn", "debug-fn", 777839250)).cljs$core$IFn$_invoke$arity$1(config))) {
        (new cljs.core.Keyword(null, "debug-fn", "debug-fn", 777839250)).cljs$core$IFn$_invoke$arity$1(config).call(null, v, new_v);
      } else {
      }
      return new_v;
    }
  }
};
clojure.core.rrb_vector.rrbt.max_vector_elements = 2147483647;
clojure.core.rrb_vector.rrbt.shift_too_large_QMARK_ = function clojure$core$rrb_vector$rrbt$shift_too_large_QMARK_(v) {
  return v.shift > 30;
};
clojure.core.rrb_vector.rrbt.poor_branching_QMARK_ = function clojure$core$rrb_vector$rrbt$poor_branching_QMARK_(v) {
  var tail_off = clojure.core.rrb_vector.rrbt._tail_offset.call(null, v);
  if (tail_off === 0) {
    return false;
  } else {
    var shift_amount = v.shift - 5;
    var max_capacity_divided_by_1024 = 1 << shift_amount;
    return tail_off < max_capacity_divided_by_1024;
  }
};
clojure.core.rrb_vector.rrbt.fallback_config = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "debug-fn", "debug-fn", 777839250), null], null));
clojure.core.rrb_vector.rrbt.fallback_to_slow_splice_count1 = cljs.core.atom.call(null, 0);
clojure.core.rrb_vector.rrbt.fallback_to_slow_splice_count2 = cljs.core.atom.call(null, 0);
clojure.core.rrb_vector.rrbt.fallback_to_slow_splice_if_needed = function clojure$core$rrb_vector$rrbt$fallback_to_slow_splice_if_needed(v1, v2, splice_result) {
  var config = cljs.core.deref.call(null, clojure.core.rrb_vector.rrbt.fallback_config);
  if (clojure.core.rrb_vector.rrbt.shift_too_large_QMARK_.call(null, splice_result) || clojure.core.rrb_vector.rrbt.poor_branching_QMARK_.call(null, splice_result)) {
    if (clojure.core.rrb_vector.rrbt.poor_branching_QMARK_.call(null, v1)) {
      cljs.core.swap_BANG_.call(null, clojure.core.rrb_vector.rrbt.fallback_to_slow_splice_count1, cljs.core.inc);
      var new_splice_result = cljs.core.into.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, v1), v1), v2);
      if (cljs.core.truth_((new cljs.core.Keyword(null, "debug-fn", "debug-fn", 777839250)).cljs$core$IFn$_invoke$arity$1(config))) {
        (new cljs.core.Keyword(null, "debug-fn", "debug-fn", 777839250)).cljs$core$IFn$_invoke$arity$1(config).call(null, splice_result, new_splice_result);
      } else {
      }
      return new_splice_result;
    } else {
      var new_splice_result = cljs.core.into.call(null, v1, v2);
      cljs.core.swap_BANG_.call(null, clojure.core.rrb_vector.rrbt.fallback_to_slow_splice_count2, cljs.core.inc);
      if (cljs.core.truth_((new cljs.core.Keyword(null, "debug-fn", "debug-fn", 777839250)).cljs$core$IFn$_invoke$arity$1(config))) {
        (new cljs.core.Keyword(null, "debug-fn", "debug-fn", 777839250)).cljs$core$IFn$_invoke$arity$1(config).call(null, splice_result, new_splice_result);
      } else {
      }
      return new_splice_result;
    }
  } else {
    return splice_result;
  }
};
clojure.core.rrb_vector.rrbt.splice_rrbts_main = function clojure$core$rrb_vector$rrbt$splice_rrbts_main(v1, v2) {
  if (cljs.core.count.call(null, v1) === 0) {
    return v2;
  } else {
    if (cljs.core.count.call(null, v1) + cljs.core.count.call(null, v2) > clojure.core.rrb_vector.rrbt.max_vector_elements) {
      var c1 = cljs.core.count.call(null, v1);
      var c2 = cljs.core.count.call(null, v2);
      throw new Error(["Attempted to concatenate two vectors whose total", " number of elements is ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c1 + c2), ", which is", " larger than the maximum number of elements ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.core.rrb_vector.rrbt.max_vector_elements), " supported in a vector "].join(""));
    } else {
      if (cljs.core.count.call(null, v2) < 33) {
        return cljs.core.into.call(null, v1, v2);
      } else {
        var s1 = v1.shift;
        var s2 = v2.shift;
        var r1 = v1.root;
        var o_QMARK_ = clojure.core.rrb_vector.nodes.overflow_QMARK_.call(null, r1, s1, cljs.core.count.call(null, v1) + (32 - v1.tail.length));
        var r1__$1 = o_QMARK_ ? function() {
          var tail = v1.tail;
          var tail_node = cljs.core.__GT_VectorNode.call(null, null, tail);
          var reg_QMARK_ = clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, r1) && tail.length === 32;
          var arr = new Array(reg_QMARK_ ? 32 : 33);
          arr[0] = r1;
          arr[1] = clojure.core.rrb_vector.nodes.new_path_STAR_.call(null, s1, tail_node);
          if (!reg_QMARK_) {
            var rngs_2499 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            rngs_2499[32] = 2;
            rngs_2499[0] = cljs.core.count.call(null, v1) - tail.length;
            rngs_2499[1] = cljs.core.count.call(null, v1);
            arr[32] = rngs_2499;
          } else {
          }
          return cljs.core.__GT_VectorNode.call(null, null, arr);
        }() : clojure.core.rrb_vector.nodes.fold_tail.call(null, r1, s1, clojure.core.rrb_vector.rrbt._tail_offset.call(null, v1), v1.tail);
        var s1__$1 = o_QMARK_ ? s1 + 5 : s1;
        var r2 = v2.root;
        var s = function() {
          var x__4135__auto__ = s1__$1;
          var y__4136__auto__ = s2;
          return x__4135__auto__ > y__4136__auto__ ? x__4135__auto__ : y__4136__auto__;
        }();
        var r1__$2 = clojure.core.rrb_vector.rrbt.shift_from_to.call(null, r1__$1, s1__$1, s);
        var r2__$1 = clojure.core.rrb_vector.rrbt.shift_from_to.call(null, r2, s2, s);
        var transferred_leaves = new cljs.core.Box(0);
        var vec__2492 = clojure.core.rrb_vector.rrbt.zippath.call(null, s, r1__$2, cljs.core.count.call(null, v1), r2__$1, cljs.core.count.call(null, v2) - v2.tail.length, transferred_leaves);
        var n1 = cljs.core.nth.call(null, vec__2492, 0, null);
        var n2 = cljs.core.nth.call(null, vec__2492, 1, null);
        var d = transferred_leaves.val;
        var ncnt1 = cljs.core.count.call(null, v1) + d;
        var ncnt2 = cljs.core.count.call(null, v2) - v2.tail.length - d;
        var vec__2495 = n2 === r2__$1 ? clojure.core.rrb_vector.rrbt.squash_nodes.call(null, s, n1, ncnt1, n2, ncnt2) : [n1, n2];
        var n1__$1 = cljs.core.nth.call(null, vec__2495, 0, null);
        var n2__$1 = cljs.core.nth.call(null, vec__2495, 1, null);
        var ncnt1__$1 = cljs.core.truth_(n2__$1) ? ncnt1 : ncnt1 + ncnt2;
        var ncnt2__$1 = cljs.core.truth_(n2__$1) ? ncnt2 : 0;
        if (cljs.core.truth_(n2__$1)) {
          var arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
          var new_root = cljs.core.__GT_VectorNode.call(null, null, arr);
          arr[0] = n1__$1;
          arr[1] = n2__$1;
          arr[32] = function() {
            var G__2498 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            G__2498[0] = ncnt1__$1;
            G__2498[1] = ncnt1__$1 + ncnt2__$1;
            G__2498[32] = 2;
            return G__2498;
          }();
          return new clojure.core.rrb_vector.rrbt.Vector(cljs.core.count.call(null, v1) + cljs.core.count.call(null, v2), s + 5, new_root, v2.tail, null, null);
        } else {
          var r = n1__$1;
          var s__$1 = s;
          while (true) {
            if (s__$1 > 5 && r.arr[1] == null) {
              var G__2500 = r.arr[0];
              var G__2501 = s__$1 - 5;
              r = G__2500;
              s__$1 = G__2501;
              continue;
            } else {
              return new clojure.core.rrb_vector.rrbt.Vector(cljs.core.count.call(null, v1) + cljs.core.count.call(null, v2), s__$1, r, v2.tail, null, null);
            }
            break;
          }
        }
      }
    }
  }
};
clojure.core.rrb_vector.rrbt.splice_rrbts = function clojure$core$rrb_vector$rrbt$splice_rrbts(v1, v2) {
  var r1 = clojure.core.rrb_vector.rrbt.splice_rrbts_main.call(null, v1, v2);
  var r2 = clojure.core.rrb_vector.rrbt.peephole_optimize_root.call(null, r1);
  return clojure.core.rrb_vector.rrbt.fallback_to_slow_splice_if_needed.call(null, v1, v2, r2);
};
clojure.core.rrb_vector.rrbt.Transient = function(cnt, shift, root, tail, tidx) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.tidx = tidx;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
clojure.core.rrb_vector.rrbt.Transient.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.root.edit) {
    if (self__.tidx < 32) {
      self__.tail[self__.tidx] = o;
      self__.cnt = self__.cnt + 1;
      self__.tidx = self__.tidx + 1;
      return this$__$1;
    } else {
      var tail_node = cljs.core.__GT_VectorNode.call(null, self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      self__.tidx = 1;
      if (clojure.core.rrb_vector.nodes.overflow_QMARK_.call(null, self__.root, self__.shift, self__.cnt)) {
        if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, self__.root)) {
          var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
          var G__2502_2505 = new_arr;
          G__2502_2505[0] = self__.root;
          G__2502_2505[1] = clojure.core.rrb_vector.trees.new_path.call(null, self__.tail, self__.root.edit, self__.shift, tail_node);
          self__.root = cljs.core.__GT_VectorNode.call(null, self__.root.edit, new_arr);
          self__.shift = self__.shift + 5;
          self__.cnt = self__.cnt + 1;
          return this$__$1;
        } else {
          var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
          var new_rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
          var new_root = cljs.core.__GT_VectorNode.call(null, self__.root.edit, new_arr);
          var root_total_range = clojure.core.rrb_vector.nodes.node_ranges.call(null, self__.root)[31];
          var G__2503_2506 = new_arr;
          G__2503_2506[0] = self__.root;
          G__2503_2506[1] = clojure.core.rrb_vector.trees.new_path.call(null, self__.tail, self__.root.edit, self__.shift, tail_node);
          G__2503_2506[32] = new_rngs;
          var G__2504_2507 = new_rngs;
          G__2504_2507[0] = root_total_range;
          G__2504_2507[1] = root_total_range + 32;
          G__2504_2507[32] = 2;
          self__.root = new_root;
          self__.shift = self__.shift + 5;
          self__.cnt = self__.cnt + 1;
          return this$__$1;
        }
      } else {
        var new_root = clojure.core.rrb_vector.transients.push_tail_BANG_.call(null, self__.shift, self__.cnt, self__.root.edit, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return this$__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
clojure.core.rrb_vector.rrbt.Transient.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var trimmed_tail = new Array(self__.tidx);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, self__.tidx);
    return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt, self__.shift, self__.root, trimmed_tail, null, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
clojure.core.rrb_vector.rrbt.Transient.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(this$, key, val) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._assoc_n_BANG_.call(null, this$__$1, key, val);
};
clojure.core.rrb_vector.rrbt.Transient.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(this$, i, val) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.root.edit) {
    if (0 <= i && i < self__.cnt) {
      var tail_off = self__.cnt - self__.tidx;
      if (tail_off <= i) {
        self__.tail[i - tail_off] = val;
      } else {
        self__.root = clojure.core.rrb_vector.transients.do_assoc_BANG_.call(null, self__.shift, self__.root.edit, self__.root, i, val);
      }
      return this$__$1;
    } else {
      if (i === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, this$__$1, val);
      } else {
        return cljs.core.vector_index_out_of_bounds.call(null, i, self__.cnt);
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
clojure.core.rrb_vector.rrbt.Transient.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        self__.tidx = 0;
        self__.tail[0] = null;
        return this$__$1;
      } else {
        if (self__.tidx > 1) {
          self__.cnt = self__.cnt - 1;
          self__.tidx = self__.tidx - 1;
          self__.tail[self__.tidx] = null;
          return this$__$1;
        } else {
          var new_tail_base = clojure.core.rrb_vector.rrbt._array_for.call(null, this$__$1, self__.cnt - 2);
          var new_tail = clojure.core.rrb_vector.transients.editable_tail.call(null, new_tail_base);
          var new_tidx = new_tail_base.length;
          var new_root = clojure.core.rrb_vector.transients.pop_tail_BANG_.call(null, self__.shift, self__.cnt, self__.root.edit, self__.root);
          if (new_root == null) {
            self__.cnt = self__.cnt - 1;
            self__.root = clojure.core.rrb_vector.transients.ensure_editable.call(null, self__.root.edit, clojure.core.rrb_vector.nodes.empty_node);
            self__.tail = new_tail;
            self__.tidx = new_tidx;
            return this$__$1;
          } else {
            if (self__.shift > 5 && new_root.arr[1] == null) {
              self__.cnt = self__.cnt - 1;
              self__.shift = self__.shift - 5;
              self__.root = clojure.core.rrb_vector.transients.ensure_editable.call(null, self__.root.edit, new_root.arr[0]);
              self__.tail = new_tail;
              self__.tidx = new_tidx;
              return this$__$1;
            } else {
              self__.cnt = self__.cnt - 1;
              self__.root = new_root;
              self__.tail = new_tail;
              self__.tidx = new_tidx;
              return this$__$1;
            }
          }
        }
      }
    }
  } else {
    throw new Error("count after persistent!");
  }
};
clojure.core.rrb_vector.rrbt.Transient.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
clojure.core.rrb_vector.rrbt.Transient.prototype.clojure$core$rrb_vector$rrbt$IVecImpl$ = cljs.core.PROTOCOL_SENTINEL;
clojure.core.rrb_vector.rrbt.Transient.prototype.clojure$core$rrb_vector$rrbt$IVecImpl$_tail_offset$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.cnt - self__.tidx;
};
clojure.core.rrb_vector.rrbt.Transient.prototype.clojure$core$rrb_vector$rrbt$IVecImpl$_array_for$arity$2 = function(this$, i) {
  var self__ = this;
  var this$__$1 = this;
  if (0 <= i && i < self__.cnt) {
    if (i >= clojure.core.rrb_vector.rrbt._tail_offset.call(null, this$__$1)) {
      return self__.tail;
    } else {
      var i__$1 = i;
      var node = self__.root;
      var shift__$1 = self__.shift;
      while (true) {
        if (shift__$1 === 0) {
          return node.arr;
        } else {
          if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node)) {
            var node__$1 = node.arr[i__$1 >> shift__$1 & 31];
            var shift__$2 = shift__$1 - 5;
            while (true) {
              if (shift__$2 === 0) {
                return node__$1.arr;
              } else {
                var G__2508 = node__$1.arr[i__$1 >> shift__$2 & 31];
                var G__2509 = shift__$2 - 5;
                node__$1 = G__2508;
                shift__$2 = G__2509;
                continue;
              }
              break;
            }
          } else {
            var rngs = clojure.core.rrb_vector.nodes.node_ranges.call(null, node);
            var j = function() {
              var j = i__$1 >> shift__$1 & 31;
              while (true) {
                if (i__$1 < rngs[j]) {
                  return j;
                } else {
                  var G__2510 = j + 1;
                  j = G__2510;
                  continue;
                }
                break;
              }
            }();
            var i__$2 = j > 0 ? i__$1 - rngs[j - 1] : i__$1;
            var G__2511 = i__$2;
            var G__2512 = node.arr[j];
            var G__2513 = shift__$1 - 5;
            i__$1 = G__2511;
            node = G__2512;
            shift__$1 = G__2513;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, self__.cnt);
  }
};
clojure.core.rrb_vector.rrbt.Transient.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tidx", "tidx", 1939123455, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
clojure.core.rrb_vector.rrbt.Transient.cljs$lang$type = true;
clojure.core.rrb_vector.rrbt.Transient.cljs$lang$ctorStr = "clojure.core.rrb-vector.rrbt/Transient";
clojure.core.rrb_vector.rrbt.Transient.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write.call(null, writer__4291__auto__, "clojure.core.rrb-vector.rrbt/Transient");
};
clojure.core.rrb_vector.rrbt.__GT_Transient = function clojure$core$rrb_vector$rrbt$__GT_Transient(cnt, shift, root, tail, tidx) {
  return new clojure.core.rrb_vector.rrbt.Transient(cnt, shift, root, tail, tidx);
};
goog.provide("clojure.core.rrb_vector.interop");
goog.require("cljs.core");
goog.require("clojure.core.rrb_vector.protocols");
goog.require("clojure.core.rrb_vector.rrbt");
cljs.core.PersistentVector.prototype.clojure$core$rrb_vector$protocols$PSliceableVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.clojure$core$rrb_vector$protocols$PSliceableVector$_slicev$arity$3 = function(v, start, end) {
  var v__$1 = this;
  return clojure.core.rrb_vector.protocols._slicev.call(null, clojure.core.rrb_vector.rrbt._as_rrbt.call(null, v__$1), start, end);
};
cljs.core.Subvec.prototype.clojure$core$rrb_vector$protocols$PSliceableVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.clojure$core$rrb_vector$protocols$PSliceableVector$_slicev$arity$3 = function(v, start, end) {
  var v__$1 = this;
  return clojure.core.rrb_vector.protocols._slicev.call(null, clojure.core.rrb_vector.rrbt._as_rrbt.call(null, v__$1), start, end);
};
cljs.core.PersistentVector.prototype.clojure$core$rrb_vector$protocols$PSpliceableVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.clojure$core$rrb_vector$protocols$PSpliceableVector$_splicev$arity$2 = function(v1, v2) {
  var v1__$1 = this;
  return clojure.core.rrb_vector.protocols._splicev.call(null, clojure.core.rrb_vector.rrbt._as_rrbt.call(null, v1__$1), v2);
};
cljs.core.Subvec.prototype.clojure$core$rrb_vector$protocols$PSpliceableVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.clojure$core$rrb_vector$protocols$PSpliceableVector$_splicev$arity$2 = function(v1, v2) {
  var v1__$1 = this;
  return clojure.core.rrb_vector.protocols._splicev.call(null, clojure.core.rrb_vector.rrbt._as_rrbt.call(null, v1__$1), v2);
};
goog.provide("clojure.core.rrb_vector");
goog.require("cljs.core");
goog.require("clojure.core.rrb_vector.protocols");
goog.require("clojure.core.rrb_vector.rrbt");
goog.require("clojure.core.rrb_vector.interop");
clojure.core.rrb_vector.catvec = function clojure$core$rrb_vector$catvec(var_args) {
  var G__2558 = arguments.length;
  switch(G__2558) {
    case 0:
      return clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2560 = arguments.length;
      var i__4642__auto___2561 = 0;
      while (true) {
        if (i__4642__auto___2561 < len__4641__auto___2560) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2561]);
          var G__2562 = i__4642__auto___2561 + 1;
          i__4642__auto___2561 = G__2562;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(4), 0, null);
      return clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4663__auto__);
  }
};
clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$1 = function(v1) {
  return v1;
};
clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$2 = function(v1, v2) {
  return clojure.core.rrb_vector.protocols._splicev.call(null, v1, v2);
};
clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$3 = function(v1, v2, v3) {
  return clojure.core.rrb_vector.protocols._splicev.call(null, clojure.core.rrb_vector.protocols._splicev.call(null, v1, v2), v3);
};
clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$4 = function(v1, v2, v3, v4) {
  return clojure.core.rrb_vector.protocols._splicev.call(null, clojure.core.rrb_vector.protocols._splicev.call(null, v1, v2), clojure.core.rrb_vector.protocols._splicev.call(null, v3, v4));
};
clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$variadic = function(v1, v2, v3, v4, vn) {
  return clojure.core.rrb_vector.protocols._splicev.call(null, clojure.core.rrb_vector.protocols._splicev.call(null, clojure.core.rrb_vector.protocols._splicev.call(null, v1, v2), clojure.core.rrb_vector.protocols._splicev.call(null, v3, v4)), cljs.core.apply.call(null, clojure.core.rrb_vector.catvec, vn));
};
clojure.core.rrb_vector.catvec.cljs$lang$applyTo = function(seq2553) {
  var G__2554 = cljs.core.first.call(null, seq2553);
  var seq2553__$1 = cljs.core.next.call(null, seq2553);
  var G__2555 = cljs.core.first.call(null, seq2553__$1);
  var seq2553__$2 = cljs.core.next.call(null, seq2553__$1);
  var G__2556 = cljs.core.first.call(null, seq2553__$2);
  var seq2553__$3 = cljs.core.next.call(null, seq2553__$2);
  var G__2557 = cljs.core.first.call(null, seq2553__$3);
  var seq2553__$4 = cljs.core.next.call(null, seq2553__$3);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2554, G__2555, G__2556, G__2557, seq2553__$4);
};
clojure.core.rrb_vector.catvec.cljs$lang$maxFixedArity = 4;
clojure.core.rrb_vector.subvec = function clojure$core$rrb_vector$subvec(var_args) {
  var G__2564 = arguments.length;
  switch(G__2564) {
    case 2:
      return clojure.core.rrb_vector.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.core.rrb_vector.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.core.rrb_vector.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return clojure.core.rrb_vector.protocols._slicev.call(null, v, start, cljs.core.count.call(null, v));
};
clojure.core.rrb_vector.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return clojure.core.rrb_vector.protocols._slicev.call(null, v, start, end);
};
clojure.core.rrb_vector.subvec.cljs$lang$maxFixedArity = 3;
clojure.core.rrb_vector.vector = function clojure$core$rrb_vector$vector(var_args) {
  var G__2572 = arguments.length;
  switch(G__2572) {
    case 0:
      return clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2579 = arguments.length;
      var i__4642__auto___2580 = 0;
      while (true) {
        if (i__4642__auto___2580 < len__4641__auto___2579) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2580]);
          var G__2581 = i__4642__auto___2580 + 1;
          i__4642__auto___2580 = G__2581;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(4), 0, null);
      return clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4663__auto__);
  }
};
clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$0 = function() {
  var arr__2573 = [];
  return new clojure.core.rrb_vector.rrbt.Vector(0, 5, cljs.core.PersistentVector.EMPTY_NODE, arr__2573, null, null);
};
clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$1 = function(x1) {
  var arr__2574 = [null];
  arr__2574[0] = x1;
  return new clojure.core.rrb_vector.rrbt.Vector(1, 5, cljs.core.PersistentVector.EMPTY_NODE, arr__2574, null, null);
};
clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$2 = function(x1, x2) {
  var arr__2575 = [null, null];
  arr__2575[0] = x1;
  arr__2575[1] = x2;
  return new clojure.core.rrb_vector.rrbt.Vector(2, 5, cljs.core.PersistentVector.EMPTY_NODE, arr__2575, null, null);
};
clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$3 = function(x1, x2, x3) {
  var arr__2576 = [null, null, null];
  arr__2576[0] = x1;
  arr__2576[1] = x2;
  arr__2576[2] = x3;
  return new clojure.core.rrb_vector.rrbt.Vector(3, 5, cljs.core.PersistentVector.EMPTY_NODE, arr__2576, null, null);
};
clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$4 = function(x1, x2, x3, x4) {
  var arr__2577 = [null, null, null, null];
  arr__2577[0] = x1;
  arr__2577[1] = x2;
  arr__2577[2] = x3;
  arr__2577[3] = x4;
  return new clojure.core.rrb_vector.rrbt.Vector(4, 5, cljs.core.PersistentVector.EMPTY_NODE, arr__2577, null, null);
};
clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$variadic = function(x1, x2, x3, x4, xn) {
  return cljs.core.into.call(null, clojure.core.rrb_vector.vector.call(null, x1, x2, x3, x4), xn);
};
clojure.core.rrb_vector.vector.cljs$lang$applyTo = function(seq2567) {
  var G__2568 = cljs.core.first.call(null, seq2567);
  var seq2567__$1 = cljs.core.next.call(null, seq2567);
  var G__2569 = cljs.core.first.call(null, seq2567__$1);
  var seq2567__$2 = cljs.core.next.call(null, seq2567__$1);
  var G__2570 = cljs.core.first.call(null, seq2567__$2);
  var seq2567__$3 = cljs.core.next.call(null, seq2567__$2);
  var G__2571 = cljs.core.first.call(null, seq2567__$3);
  var seq2567__$4 = cljs.core.next.call(null, seq2567__$3);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2568, G__2569, G__2570, G__2571, seq2567__$4);
};
clojure.core.rrb_vector.vector.cljs$lang$maxFixedArity = 4;
clojure.core.rrb_vector.vec = function clojure$core$rrb_vector$vec(coll) {
  if (cljs.core.vector_QMARK_.call(null, coll)) {
    return clojure.core.rrb_vector.rrbt._as_rrbt.call(null, coll);
  } else {
    return cljs.core.apply.call(null, clojure.core.rrb_vector.vector, coll);
  }
};
goog.provide("fipp.deque");
goog.require("cljs.core");
goog.require("clojure.core.rrb_vector");
fipp.deque.create = cljs.core.vector;
fipp.deque.empty = cljs.core.PersistentVector.EMPTY;
fipp.deque.popl = function fipp$deque$popl(v) {
  return cljs.core.subvec.call(null, v, 1);
};
fipp.deque.conjr = cljs.core.fnil.call(null, cljs.core.conj, fipp.deque.empty);
fipp.deque.conjlr = function fipp$deque$conjlr(l, deque, r) {
  return clojure.core.rrb_vector.catvec.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [l], null), deque, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [r], null));
};
fipp.deque.concat = clojure.core.rrb_vector.catvec;
goog.provide("fipp.engine");
goog.require("cljs.core");
goog.require("fipp.deque");
if (typeof fipp !== "undefined" && typeof fipp.engine !== "undefined" && typeof fipp.engine.serialize_node !== "undefined") {
} else {
  fipp.engine.serialize_node = function() {
    var method_table__4524__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4525__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4526__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4527__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4528__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "fipp.engine", "serialize-node"), cljs.core.first, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4528__auto__, method_table__4524__auto__, prefer_table__4525__auto__, method_cache__4526__auto__, cached_hierarchy__4527__auto__);
  }();
}
fipp.engine.serialize = function fipp$engine$serialize(doc) {
  if (doc == null) {
    return null;
  } else {
    if (cljs.core.seq_QMARK_.call(null, doc)) {
      return cljs.core.mapcat.call(null, fipp.engine.serialize, doc);
    } else {
      if (typeof doc === "string") {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "text", "text", -1790561697), new cljs.core.Keyword(null, "text", "text", -1790561697), doc], null)], null);
      } else {
        if (doc instanceof cljs.core.Keyword) {
          return fipp.engine.serialize_node.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [doc], null));
        } else {
          if (cljs.core.vector_QMARK_.call(null, doc)) {
            return fipp.engine.serialize_node.call(null, doc);
          } else {
            throw cljs.core.ex_info.call(null, "Unexpected class for doc node", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "node", "node", 581201198), doc], null));
          }
        }
      }
    }
  }
};
cljs.core._add_method.call(null, fipp.engine.serialize_node, new cljs.core.Keyword(null, "text", "text", -1790561697), function(p__8831) {
  var vec__8832 = p__8831;
  var seq__8833 = cljs.core.seq.call(null, vec__8832);
  var first__8834 = cljs.core.first.call(null, seq__8833);
  var seq__8833__$1 = cljs.core.next.call(null, seq__8833);
  var _ = first__8834;
  var text = seq__8833__$1;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "text", "text", -1790561697), new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.apply.call(null, cljs.core.str, text)], null)], null);
});
cljs.core._add_method.call(null, fipp.engine.serialize_node, new cljs.core.Keyword(null, "pass", "pass", 1574159993), function(p__8835) {
  var vec__8836 = p__8835;
  var seq__8837 = cljs.core.seq.call(null, vec__8836);
  var first__8838 = cljs.core.first.call(null, seq__8837);
  var seq__8837__$1 = cljs.core.next.call(null, seq__8837);
  var _ = first__8838;
  var text = seq__8837__$1;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.apply.call(null, cljs.core.str, text)], null)], null);
});
cljs.core._add_method.call(null, fipp.engine.serialize_node, new cljs.core.Keyword(null, "escaped", "escaped", -1007929769), function(p__8839) {
  var vec__8840 = p__8839;
  var _ = cljs.core.nth.call(null, vec__8840, 0, null);
  var text = cljs.core.nth.call(null, vec__8840, 1, null);
  if (typeof text === "string") {
  } else {
    throw new Error("Assert failed: (string? text)");
  }
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "escaped", "escaped", -1007929769), new cljs.core.Keyword(null, "text", "text", -1790561697), text], null)], null);
});
cljs.core._add_method.call(null, fipp.engine.serialize_node, new cljs.core.Keyword(null, "span", "span", 1394872991), function(p__8843) {
  var vec__8844 = p__8843;
  var seq__8845 = cljs.core.seq.call(null, vec__8844);
  var first__8846 = cljs.core.first.call(null, seq__8845);
  var seq__8845__$1 = cljs.core.next.call(null, seq__8845);
  var _ = first__8846;
  var children = seq__8845__$1;
  return fipp.engine.serialize.call(null, children);
});
cljs.core._add_method.call(null, fipp.engine.serialize_node, new cljs.core.Keyword(null, "line", "line", 212345235), function(p__8847) {
  var vec__8848 = p__8847;
  var _ = cljs.core.nth.call(null, vec__8848, 0, null);
  var inline = cljs.core.nth.call(null, vec__8848, 1, null);
  var terminate = cljs.core.nth.call(null, vec__8848, 2, null);
  var inline__$1 = function() {
    var or__4047__auto__ = inline;
    if (cljs.core.truth_(or__4047__auto__)) {
      return or__4047__auto__;
    } else {
      return " ";
    }
  }();
  var terminate__$1 = function() {
    var or__4047__auto__ = terminate;
    if (cljs.core.truth_(or__4047__auto__)) {
      return or__4047__auto__;
    } else {
      return "";
    }
  }();
  if (typeof inline__$1 === "string") {
  } else {
    throw new Error("Assert failed: (string? inline)");
  }
  if (typeof terminate__$1 === "string") {
  } else {
    throw new Error("Assert failed: (string? terminate)");
  }
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "inline", "inline", 1399884222), inline__$1, new cljs.core.Keyword(null, "terminate", "terminate", 1256003496), terminate__$1], null)], null);
});
cljs.core._add_method.call(null, fipp.engine.serialize_node, new cljs.core.Keyword(null, "break", "break", 126570225), function() {
  var G__8851__delegate = function(_) {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "break", "break", 126570225)], null)], null);
  };
  var G__8851 = function(var_args) {
    var _ = null;
    if (arguments.length > 0) {
      var G__8852__i = 0, G__8852__a = new Array(arguments.length - 0);
      while (G__8852__i < G__8852__a.length) {
        G__8852__a[G__8852__i] = arguments[G__8852__i + 0];
        ++G__8852__i;
      }
      _ = new cljs.core.IndexedSeq(G__8852__a, 0, null);
    }
    return G__8851__delegate.call(this, _);
  };
  G__8851.cljs$lang$maxFixedArity = 0;
  G__8851.cljs$lang$applyTo = function(arglist__8853) {
    var _ = cljs.core.seq(arglist__8853);
    return G__8851__delegate(_);
  };
  G__8851.cljs$core$IFn$_invoke$arity$variadic = G__8851__delegate;
  return G__8851;
}());
cljs.core._add_method.call(null, fipp.engine.serialize_node, new cljs.core.Keyword(null, "group", "group", 582596132), function(p__8854) {
  var vec__8855 = p__8854;
  var seq__8856 = cljs.core.seq.call(null, vec__8855);
  var first__8857 = cljs.core.first.call(null, seq__8856);
  var seq__8856__$1 = cljs.core.next.call(null, seq__8856);
  var _ = first__8857;
  var children = seq__8856__$1;
  return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "begin", "begin", -319034319)], null)], null), fipp.engine.serialize.call(null, children), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "op", "op", 
  -1882987955), new cljs.core.Keyword(null, "end", "end", -268185958)], null)], null));
});
cljs.core._add_method.call(null, fipp.engine.serialize_node, new cljs.core.Keyword(null, "nest", "nest", -314993663), function(p__8858) {
  var vec__8859 = p__8858;
  var seq__8860 = cljs.core.seq.call(null, vec__8859);
  var first__8861 = cljs.core.first.call(null, seq__8860);
  var seq__8860__$1 = cljs.core.next.call(null, seq__8860);
  var _ = first__8861;
  var args = seq__8860__$1;
  var vec__8862 = typeof cljs.core.first.call(null, args) === "number" ? args : cljs.core.cons.call(null, 2, args);
  var seq__8863 = cljs.core.seq.call(null, vec__8862);
  var first__8864 = cljs.core.first.call(null, seq__8863);
  var seq__8863__$1 = cljs.core.next.call(null, seq__8863);
  var offset = first__8864;
  var children = seq__8863__$1;
  return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "nest", "nest", -314993663), new cljs.core.Keyword(null, "offset", "offset", 296498311), offset], null)], null), fipp.engine.serialize.call(null, children), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "outdent", "outdent", 467209411)], null)], null));
});
cljs.core._add_method.call(null, fipp.engine.serialize_node, new cljs.core.Keyword(null, "align", "align", 1964212802), function(p__8865) {
  var vec__8866 = p__8865;
  var seq__8867 = cljs.core.seq.call(null, vec__8866);
  var first__8868 = cljs.core.first.call(null, seq__8867);
  var seq__8867__$1 = cljs.core.next.call(null, seq__8867);
  var _ = first__8868;
  var args = seq__8867__$1;
  var vec__8869 = typeof cljs.core.first.call(null, args) === "number" ? args : cljs.core.cons.call(null, 0, args);
  var seq__8870 = cljs.core.seq.call(null, vec__8869);
  var first__8871 = cljs.core.first.call(null, seq__8870);
  var seq__8870__$1 = cljs.core.next.call(null, seq__8870);
  var offset = first__8871;
  var children = seq__8870__$1;
  return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "align", "align", 1964212802), new cljs.core.Keyword(null, "offset", "offset", 296498311), offset], null)], null), fipp.engine.serialize.call(null, children), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "outdent", "outdent", 467209411)], null)], null));
});
fipp.engine.annotate_rights = function fipp$engine$annotate_rights(rf) {
  var pos = cljs.core.volatile_BANG_.call(null, 0);
  return function(pos) {
    return function() {
      var G__8873 = null;
      var G__8873__0 = function() {
        return rf.call(null);
      };
      var G__8873__1 = function(res) {
        return rf.call(null, res);
      };
      var G__8873__2 = function(res, node) {
        var delta = function() {
          var G__8872 = (new cljs.core.Keyword(null, "op", "op", -1882987955)).cljs$core$IFn$_invoke$arity$1(node);
          var G__8872__$1 = G__8872 instanceof cljs.core.Keyword ? G__8872.fqn : null;
          switch(G__8872__$1) {
            case "text":
              return cljs.core.count.call(null, (new cljs.core.Keyword(null, "text", "text", -1790561697)).cljs$core$IFn$_invoke$arity$1(node));
              break;
            case "line":
              return cljs.core.count.call(null, (new cljs.core.Keyword(null, "inline", "inline", 1399884222)).cljs$core$IFn$_invoke$arity$1(node));
              break;
            case "escaped":
              return 1;
              break;
            default:
              return 0;
          }
        }();
        var p = cljs.core._vreset_BANG_.call(null, pos, cljs.core._deref.call(null, pos) + delta);
        return rf.call(null, res, cljs.core.assoc.call(null, node, new cljs.core.Keyword(null, "right", "right", -452581833), p));
      };
      G__8873 = function(res, node) {
        switch(arguments.length) {
          case 0:
            return G__8873__0.call(this);
          case 1:
            return G__8873__1.call(this, res);
          case 2:
            return G__8873__2.call(this, res, node);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__8873.cljs$core$IFn$_invoke$arity$0 = G__8873__0;
      G__8873.cljs$core$IFn$_invoke$arity$1 = G__8873__1;
      G__8873.cljs$core$IFn$_invoke$arity$2 = G__8873__2;
      return G__8873;
    }();
  }(pos);
};
fipp.engine.update_right = function fipp$engine$update_right(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___8878 = arguments.length;
  var i__4642__auto___8879 = 0;
  while (true) {
    if (i__4642__auto___8879 < len__4641__auto___8878) {
      args__4647__auto__.push(arguments[i__4642__auto___8879]);
      var G__8880 = i__4642__auto___8879 + 1;
      i__4642__auto___8879 = G__8880;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 2 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(2), 0, null) : null;
  return fipp.engine.update_right.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4648__auto__);
};
fipp.engine.update_right.cljs$core$IFn$_invoke$arity$variadic = function(deque, f, args) {
  return fipp.deque.conjr.call(null, cljs.core.pop.call(null, deque), cljs.core.apply.call(null, f, cljs.core.peek.call(null, deque), args));
};
fipp.engine.update_right.cljs$lang$maxFixedArity = 2;
fipp.engine.update_right.cljs$lang$applyTo = function(seq8875) {
  var G__8876 = cljs.core.first.call(null, seq8875);
  var seq8875__$1 = cljs.core.next.call(null, seq8875);
  var G__8877 = cljs.core.first.call(null, seq8875__$1);
  var seq8875__$2 = cljs.core.next.call(null, seq8875__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8876, G__8877, seq8875__$2);
};
fipp.engine.annotate_begins = function fipp$engine$annotate_begins(p__8881) {
  var map__8882 = p__8881;
  var map__8882__$1 = (!(map__8882 == null) ? map__8882.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8882.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8882) : map__8882;
  var options = map__8882__$1;
  var width = cljs.core.get.call(null, map__8882__$1, new cljs.core.Keyword(null, "width", "width", -384071477));
  return function(map__8882, map__8882__$1, options, width) {
    return function(rf) {
      var pos = cljs.core.volatile_BANG_.call(null, 0);
      var bufs = cljs.core.volatile_BANG_.call(null, fipp.deque.empty);
      return function(pos, bufs, map__8882, map__8882__$1, options, width) {
        return function() {
          var G__8887 = null;
          var G__8887__0 = function() {
            return rf.call(null);
          };
          var G__8887__1 = function(res) {
            return rf.call(null, res);
          };
          var G__8887__2 = function(res, p__8884) {
            var map__8885 = p__8884;
            var map__8885__$1 = (!(map__8885 == null) ? map__8885.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8885.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8885) : map__8885;
            var node = map__8885__$1;
            var op = cljs.core.get.call(null, map__8885__$1, new cljs.core.Keyword(null, "op", "op", -1882987955));
            var right = cljs.core.get.call(null, map__8885__$1, new cljs.core.Keyword(null, "right", "right", -452581833));
            var buffers = cljs.core.deref.call(null, bufs);
            if (cljs.core.empty_QMARK_.call(null, buffers)) {
              if (cljs.core._EQ_.call(null, op, new cljs.core.Keyword(null, "begin", "begin", -319034319))) {
                var position_STAR_ = right + width;
                var buffer = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "position", "position", -2011731912), position_STAR_, new cljs.core.Keyword(null, "nodes", "nodes", -2099585805), fipp.deque.empty], null);
                cljs.core.vreset_BANG_.call(null, pos, position_STAR_);
                cljs.core.vreset_BANG_.call(null, bufs, fipp.deque.create.call(null, buffer));
                return res;
              } else {
                return rf.call(null, res, node);
              }
            } else {
              if (cljs.core._EQ_.call(null, op, new cljs.core.Keyword(null, "end", "end", -268185958))) {
                var buffer = cljs.core.peek.call(null, buffers);
                var buffers_STAR_ = cljs.core.pop.call(null, buffers);
                var begin = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "begin", "begin", -319034319), new cljs.core.Keyword(null, "right", "right", -452581833), right], null);
                var nodes = fipp.deque.conjlr.call(null, begin, (new cljs.core.Keyword(null, "nodes", "nodes", -2099585805)).cljs$core$IFn$_invoke$arity$1(buffer), node);
                if (cljs.core.empty_QMARK_.call(null, buffers_STAR_)) {
                  cljs.core.vreset_BANG_.call(null, pos, 0);
                  cljs.core.vreset_BANG_.call(null, bufs, fipp.deque.empty);
                  return cljs.core.reduce.call(null, rf, res, nodes);
                } else {
                  if (cljs.core.vector_QMARK_.call(null, buffers_STAR_)) {
                  } else {
                    throw new Error("Assert failed: (vector? buffers*)");
                  }
                  if (cljs.core.vector_QMARK_.call(null, nodes)) {
                  } else {
                    throw new Error("Assert failed: (vector? nodes)");
                  }
                  cljs.core.vreset_BANG_.call(null, bufs, fipp.engine.update_right.call(null, buffers_STAR_, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "nodes", "nodes", -2099585805)], null), fipp.deque.concat, nodes));
                  return res;
                }
              } else {
                var buffers_STAR_ = cljs.core._EQ_.call(null, op, new cljs.core.Keyword(null, "begin", "begin", -319034319)) ? fipp.deque.conjr.call(null, buffers, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "position", "position", -2011731912), right + width, new cljs.core.Keyword(null, "nodes", "nodes", -2099585805), fipp.deque.empty], null)) : fipp.engine.update_right.call(null, buffers, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
                [new cljs.core.Keyword(null, "nodes", "nodes", -2099585805)], null), fipp.deque.conjr, node);
                var res__$1 = res;
                while (true) {
                  if (right <= cljs.core.deref.call(null, pos) && cljs.core.count.call(null, buffers_STAR_) <= width) {
                    cljs.core.vreset_BANG_.call(null, bufs, buffers_STAR_);
                    return res__$1;
                  } else {
                    var buffer = cljs.core.first.call(null, buffers_STAR_);
                    var buffers_STAR__STAR_ = fipp.deque.popl.call(null, buffers_STAR_);
                    var begin = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "begin", "begin", -319034319), new cljs.core.Keyword(null, "right", "right", -452581833), new cljs.core.Keyword(null, "too-far", "too-far", 85800617)], null);
                    var res_STAR_ = rf.call(null, res__$1, begin);
                    var res_STAR___$1 = cljs.core.reduce.call(null, rf, res_STAR_, (new cljs.core.Keyword(null, "nodes", "nodes", -2099585805)).cljs$core$IFn$_invoke$arity$1(buffer));
                    if (cljs.core.empty_QMARK_.call(null, buffers_STAR__STAR_)) {
                      cljs.core.vreset_BANG_.call(null, pos, 0);
                      cljs.core.vreset_BANG_.call(null, bufs, fipp.deque.empty);
                      return res_STAR___$1;
                    } else {
                      cljs.core.vreset_BANG_.call(null, pos, (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, buffers_STAR__STAR_)));
                      var G__8888 = buffers_STAR__STAR_;
                      var G__8889 = res_STAR___$1;
                      buffers_STAR_ = G__8888;
                      res__$1 = G__8889;
                      continue;
                    }
                  }
                  break;
                }
              }
            }
          };
          G__8887 = function(res, p__8884) {
            switch(arguments.length) {
              case 0:
                return G__8887__0.call(this);
              case 1:
                return G__8887__1.call(this, res);
              case 2:
                return G__8887__2.call(this, res, p__8884);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__8887.cljs$core$IFn$_invoke$arity$0 = G__8887__0;
          G__8887.cljs$core$IFn$_invoke$arity$1 = G__8887__1;
          G__8887.cljs$core$IFn$_invoke$arity$2 = G__8887__2;
          return G__8887;
        }();
      }(pos, bufs, map__8882, map__8882__$1, options, width);
    };
  }(map__8882, map__8882__$1, options, width);
};
fipp.engine.format_nodes = function fipp$engine$format_nodes(p__8890) {
  var map__8891 = p__8890;
  var map__8891__$1 = (!(map__8891 == null) ? map__8891.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8891.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8891) : map__8891;
  var options = map__8891__$1;
  var width = cljs.core.get.call(null, map__8891__$1, new cljs.core.Keyword(null, "width", "width", -384071477));
  return function(map__8891, map__8891__$1, options, width) {
    return function(rf) {
      var fits = cljs.core.volatile_BANG_.call(null, 0);
      var length = cljs.core.volatile_BANG_.call(null, width);
      var tab_stops = cljs.core.volatile_BANG_.call(null, cljs.core.list(0));
      var column = cljs.core.volatile_BANG_.call(null, 0);
      return function(fits, length, tab_stops, column, map__8891, map__8891__$1, options, width) {
        return function() {
          var G__8897 = null;
          var G__8897__0 = function() {
            return rf.call(null);
          };
          var G__8897__1 = function(res) {
            return rf.call(null, res);
          };
          var G__8897__2 = function(res, p__8893) {
            var map__8894 = p__8893;
            var map__8894__$1 = (!(map__8894 == null) ? map__8894.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8894.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8894) : map__8894;
            var node = map__8894__$1;
            var op = cljs.core.get.call(null, map__8894__$1, new cljs.core.Keyword(null, "op", "op", -1882987955));
            var right = cljs.core.get.call(null, map__8894__$1, new cljs.core.Keyword(null, "right", "right", -452581833));
            var indent = cljs.core.peek.call(null, cljs.core.deref.call(null, tab_stops));
            var format_text = function(indent, map__8894, map__8894__$1, node, op, right, fits, length, tab_stops, column, map__8891, map__8891__$1, options, width) {
              return function(text, width__$1) {
                var res_STAR_ = cljs.core.deref.call(null, column) === 0 ? function() {
                  cljs.core._vreset_BANG_.call(null, column, cljs.core._deref.call(null, column) + indent);
                  return rf.call(null, res, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, indent, " ")));
                }() : res;
                cljs.core._vreset_BANG_.call(null, column, cljs.core._deref.call(null, column) + width__$1);
                return rf.call(null, res_STAR_, text);
              };
            }(indent, map__8894, map__8894__$1, node, op, right, fits, length, tab_stops, column, map__8891, map__8891__$1, options, width);
            var G__8896 = op;
            var G__8896__$1 = G__8896 instanceof cljs.core.Keyword ? G__8896.fqn : null;
            switch(G__8896__$1) {
              case "text":
                var text = (new cljs.core.Keyword(null, "text", "text", -1790561697)).cljs$core$IFn$_invoke$arity$1(node);
                return format_text.call(null, text, cljs.core.count.call(null, text));
                break;
              case "escaped":
                return format_text.call(null, (new cljs.core.Keyword(null, "text", "text", -1790561697)).cljs$core$IFn$_invoke$arity$1(node), 1);
                break;
              case "pass":
                return format_text.call(null, (new cljs.core.Keyword(null, "text", "text", -1790561697)).cljs$core$IFn$_invoke$arity$1(node), 0);
                break;
              case "line":
                if (cljs.core.deref.call(null, fits) === 0) {
                  cljs.core.vreset_BANG_.call(null, length, right + width - indent);
                  cljs.core.vreset_BANG_.call(null, column, 0);
                  return rf.call(null, res, [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "terminate", "terminate", 1256003496)).cljs$core$IFn$_invoke$arity$1(node)), "\n"].join(""));
                } else {
                  var inline = (new cljs.core.Keyword(null, "inline", "inline", 1399884222)).cljs$core$IFn$_invoke$arity$1(node);
                  cljs.core._vreset_BANG_.call(null, column, cljs.core._deref.call(null, column) + cljs.core.count.call(null, inline));
                  return rf.call(null, res, inline);
                }
                break;
              case "break":
                cljs.core.vreset_BANG_.call(null, length, right + width - indent);
                cljs.core.vreset_BANG_.call(null, column, 0);
                return rf.call(null, res, "\n");
                break;
              case "nest":
                cljs.core._vreset_BANG_.call(null, tab_stops, cljs.core.conj.call(null, cljs.core._deref.call(null, tab_stops), indent + (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(node)));
                return res;
                break;
              case "align":
                cljs.core._vreset_BANG_.call(null, tab_stops, cljs.core.conj.call(null, cljs.core._deref.call(null, tab_stops), cljs.core.deref.call(null, column) + (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(node)));
                return res;
                break;
              case "outdent":
                cljs.core._vreset_BANG_.call(null, tab_stops, cljs.core.pop.call(null, cljs.core._deref.call(null, tab_stops)));
                return res;
                break;
              case "begin":
                cljs.core.vreset_BANG_.call(null, fits, cljs.core.deref.call(null, fits) > 0 ? cljs.core.deref.call(null, fits) + 1 : cljs.core._EQ_.call(null, right, new cljs.core.Keyword(null, "too-far", "too-far", 85800617)) ? 0 : right <= cljs.core.deref.call(null, length) ? 1 : 0);
                return res;
                break;
              case "end":
                cljs.core.vreset_BANG_.call(null, fits, function() {
                  var x__4135__auto__ = 0;
                  var y__4136__auto__ = cljs.core.deref.call(null, fits) - 1;
                  return x__4135__auto__ > y__4136__auto__ ? x__4135__auto__ : y__4136__auto__;
                }());
                return res;
                break;
              default:
                throw cljs.core.ex_info.call(null, "Unexpected node op", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "node", "node", 581201198), node], null));
            }
          };
          G__8897 = function(res, p__8893) {
            switch(arguments.length) {
              case 0:
                return G__8897__0.call(this);
              case 1:
                return G__8897__1.call(this, res);
              case 2:
                return G__8897__2.call(this, res, p__8893);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__8897.cljs$core$IFn$_invoke$arity$0 = G__8897__0;
          G__8897.cljs$core$IFn$_invoke$arity$1 = G__8897__1;
          G__8897.cljs$core$IFn$_invoke$arity$2 = G__8897__2;
          return G__8897;
        }();
      }(fits, length, tab_stops, column, map__8891, map__8891__$1, options, width);
    };
  }(map__8891, map__8891__$1, options, width);
};
fipp.engine.print_fns = function fipp$engine$print_fns(options) {
  var map__8900 = options;
  var map__8900__$1 = (!(map__8900 == null) ? map__8900.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8900.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8900) : map__8900;
  var print_fn = cljs.core.get.call(null, map__8900__$1, new cljs.core.Keyword(null, "print-fn", "print-fn", -1720960489), cljs.core._STAR_print_fn_STAR_);
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "print", "print", 1299562414), print_fn, new cljs.core.Keyword(null, "println", "println", 1920840330), function(map__8900, map__8900__$1, print_fn) {
    return function() {
      var _STAR_print_fn_STAR__orig_val__8902 = cljs.core._STAR_print_fn_STAR_;
      var _STAR_print_fn_STAR__temp_val__8903 = print_fn;
      cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__8903;
      try {
        return cljs.core.println.call(null);
      } finally {
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__8902;
      }
    };
  }(map__8900, map__8900__$1, print_fn)], null);
};
fipp.engine.pprint_document = function fipp$engine$pprint_document(var_args) {
  var G__8905 = arguments.length;
  switch(G__8905) {
    case 1:
      return fipp.engine.pprint_document.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return fipp.engine.pprint_document.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
fipp.engine.pprint_document.cljs$core$IFn$_invoke$arity$1 = function(document) {
  return fipp.engine.pprint_document.call(null, document, cljs.core.PersistentArrayMap.EMPTY);
};
fipp.engine.pprint_document.cljs$core$IFn$_invoke$arity$2 = function(document, options) {
  var options__$1 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "width", "width", -384071477), 70], null), options);
  var map__8906 = fipp.engine.print_fns.call(null, options__$1);
  var map__8906__$1 = (!(map__8906 == null) ? map__8906.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8906.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8906) : map__8906;
  var print = cljs.core.get.call(null, map__8906__$1, new cljs.core.Keyword(null, "print", "print", 1299562414));
  var println = cljs.core.get.call(null, map__8906__$1, new cljs.core.Keyword(null, "println", "println", 1920840330));
  cljs.core.run_BANG_.call(null, print, cljs.core.eduction.call(null, fipp.engine.annotate_rights, fipp.engine.annotate_begins.call(null, options__$1), fipp.engine.format_nodes.call(null, options__$1), fipp.engine.serialize.call(null, document)));
  return println.call(null);
};
fipp.engine.pprint_document.cljs$lang$maxFixedArity = 2;
goog.provide("fipp.edn");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("fipp.ednize");
goog.require("fipp.visit");
goog.require("fipp.engine");
fipp.edn.pretty_coll = function fipp$edn$pretty_coll(p__8956, open, xs, sep, close, f) {
  var map__8957 = p__8956;
  var map__8957__$1 = (!(map__8957 == null) ? map__8957.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8957.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8957) : map__8957;
  var printer = map__8957__$1;
  var print_level = cljs.core.get.call(null, map__8957__$1, new cljs.core.Keyword(null, "print-level", "print-level", -1825423733));
  var print_length = cljs.core.get.call(null, map__8957__$1, new cljs.core.Keyword(null, "print-length", "print-length", 1931866356));
  var printer__$1 = function() {
    var G__8959 = printer;
    if (cljs.core.truth_(print_level)) {
      return cljs.core.update.call(null, G__8959, new cljs.core.Keyword(null, "print-level", "print-level", -1825423733), cljs.core.dec);
    } else {
      return G__8959;
    }
  }();
  var xform = cljs.core.comp.call(null, cljs.core.truth_(print_length) ? cljs.core.take.call(null, print_length) : cljs.core.identity, cljs.core.map.call(null, function(printer__$1, map__8957, map__8957__$1, printer, print_level, print_length) {
    return function(p1__8955_SHARP_) {
      return f.call(null, printer__$1, p1__8955_SHARP_);
    };
  }(printer__$1, map__8957, map__8957__$1, printer, print_level, print_length)), cljs.core.interpose.call(null, sep));
  var ys = function() {
    var or__4047__auto__ = print_level;
    if (cljs.core.truth_(or__4047__auto__)) {
      return or__4047__auto__;
    } else {
      return 1;
    }
  }() > 0 ? cljs.core.sequence.call(null, xform, xs) : "#";
  var ellipsis = cljs.core.truth_(function() {
    var and__4036__auto__ = print_length;
    if (cljs.core.truth_(and__4036__auto__)) {
      return cljs.core.seq.call(null, cljs.core.drop.call(null, print_length, xs));
    } else {
      return and__4036__auto__;
    }
  }()) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), sep, "..."], null) : null;
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "group", "group", 582596132), open, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "align", "align", 1964212802), ys, ellipsis], null), close], null);
};
fipp.edn.EdnPrinter = function(symbols, print_meta, print_length, print_level, __meta, __extmap, __hash) {
  this.symbols = symbols;
  this.print_meta = print_meta;
  this.print_length = print_length;
  this.print_level = print_level;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
fipp.edn.EdnPrinter.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4301__auto__, k__4302__auto__) {
  var self__ = this;
  var this__4301__auto____$1 = this;
  return this__4301__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4302__auto__, null);
};
fipp.edn.EdnPrinter.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4303__auto__, k8961, else__4304__auto__) {
  var self__ = this;
  var this__4303__auto____$1 = this;
  var G__8965 = k8961;
  var G__8965__$1 = G__8965 instanceof cljs.core.Keyword ? G__8965.fqn : null;
  switch(G__8965__$1) {
    case "symbols":
      return self__.symbols;
      break;
    case "print-meta":
      return self__.print_meta;
      break;
    case "print-length":
      return self__.print_length;
      break;
    case "print-level":
      return self__.print_level;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k8961, else__4304__auto__);
  }
};
fipp.edn.EdnPrinter.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4320__auto__, f__4321__auto__, init__4322__auto__) {
  var self__ = this;
  var this__4320__auto____$1 = this;
  return cljs.core.reduce.call(null, function(this__4320__auto____$1) {
    return function(ret__4323__auto__, p__8966) {
      var vec__8967 = p__8966;
      var k__4324__auto__ = cljs.core.nth.call(null, vec__8967, 0, null);
      var v__4325__auto__ = cljs.core.nth.call(null, vec__8967, 1, null);
      return f__4321__auto__.call(null, ret__4323__auto__, k__4324__auto__, v__4325__auto__);
    };
  }(this__4320__auto____$1), init__4322__auto__, this__4320__auto____$1);
};
fipp.edn.EdnPrinter.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4315__auto__, writer__4316__auto__, opts__4317__auto__) {
  var self__ = this;
  var this__4315__auto____$1 = this;
  var pr_pair__4318__auto__ = function(this__4315__auto____$1) {
    return function(keyval__4319__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4316__auto__, cljs.core.pr_writer, "", " ", "", opts__4317__auto__, keyval__4319__auto__);
    };
  }(this__4315__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4316__auto__, pr_pair__4318__auto__, "#fipp.edn.EdnPrinter{", ", ", "}", opts__4317__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "symbols", "symbols", 1211743), self__.symbols], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598), self__.print_meta], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "print-length", "print-length", 1931866356), self__.print_length], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "print-level", "print-level", -1825423733), self__.print_level], null)], null), self__.__extmap));
};
fipp.edn.EdnPrinter.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__8960) {
  var self__ = this;
  var G__8960__$1 = this;
  return new cljs.core.RecordIter(0, G__8960__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "symbols", "symbols", 1211743), new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598), new cljs.core.Keyword(null, "print-length", "print-length", 1931866356), new cljs.core.Keyword(null, "print-level", "print-level", -1825423733)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : 
  cljs.core.nil_iter.call(null));
};
fipp.edn.EdnPrinter.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4299__auto__) {
  var self__ = this;
  var this__4299__auto____$1 = this;
  return self__.__meta;
};
fipp.edn.EdnPrinter.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4296__auto__) {
  var self__ = this;
  var this__4296__auto____$1 = this;
  return new fipp.edn.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, self__.print_level, self__.__meta, self__.__extmap, self__.__hash);
};
fipp.edn.EdnPrinter.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4305__auto__) {
  var self__ = this;
  var this__4305__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$ = cljs.core.PROTOCOL_SENTINEL;
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_record$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return fipp.visit.visit.call(null, this$__$1, fipp.ednize.record__GT_tagged.call(null, x));
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_meta$arity$3 = function(this$, m, x) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(self__.print_meta)) {
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "align", "align", 1964212802), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "^", fipp.visit.visit.call(null, this$__$1, m)], null), new cljs.core.Keyword(null, "line", "line", 212345235), fipp.visit.visit_STAR_.call(null, this$__$1, x)], null);
  } else {
    return fipp.visit.visit_STAR_.call(null, this$__$1, x);
  }
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_number$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  var _STAR_print_dup_STAR__orig_val__8970 = cljs.core._STAR_print_dup_STAR_;
  var _STAR_print_dup_STAR__temp_val__8971 = false;
  cljs.core._STAR_print_dup_STAR_ = _STAR_print_dup_STAR__temp_val__8971;
  try {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.pr_str.call(null, x)], null);
  } finally {
    cljs.core._STAR_print_dup_STAR_ = _STAR_print_dup_STAR__orig_val__8970;
  }
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_pattern$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.pr_str.call(null, x)], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_unknown$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return fipp.visit.visit.call(null, this$__$1, fipp.ednize.edn.call(null, x));
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_symbol$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_seq$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  var temp__5718__auto__ = self__.symbols.call(null, cljs.core.first.call(null, x));
  if (cljs.core.truth_(temp__5718__auto__)) {
    var pretty = temp__5718__auto__;
    return pretty.call(null, this$__$1, x);
  } else {
    return fipp.edn.pretty_coll.call(null, this$__$1, "(", x, new cljs.core.Keyword(null, "line", "line", 212345235), ")", fipp.visit.visit);
  }
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_boolean$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_tagged$arity$2 = function(this$, p__8972) {
  var self__ = this;
  var map__8973 = p__8972;
  var map__8973__$1 = (!(map__8973 == null) ? map__8973.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8973.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8973) : map__8973;
  var tag = cljs.core.get.call(null, map__8973__$1, new cljs.core.Keyword(null, "tag", "tag", -1290361223));
  var form = cljs.core.get.call(null, map__8973__$1, new cljs.core.Keyword(null, "form", "form", -1624062471));
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "group", "group", 582596132), "#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), cljs.core.truth_(function() {
    var or__4047__auto__ = function() {
      var and__4036__auto__ = self__.print_meta;
      if (cljs.core.truth_(and__4036__auto__)) {
        return cljs.core.meta.call(null, form);
      } else {
        return and__4036__auto__;
      }
    }();
    if (cljs.core.truth_(or__4047__auto__)) {
      return or__4047__auto__;
    } else {
      return !cljs.core.coll_QMARK_.call(null, form);
    }
  }()) ? " " : null, fipp.visit.visit.call(null, this$__$1, form)], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_keyword$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_map$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return fipp.edn.pretty_coll.call(null, this$__$1, "{", x, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), ",", new cljs.core.Keyword(null, "line", "line", 212345235)], null), "}", function(this$__$1) {
    return function(printer, p__8975) {
      var vec__8976 = p__8975;
      var k = cljs.core.nth.call(null, vec__8976, 0, null);
      var v = cljs.core.nth.call(null, vec__8976, 1, null);
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), fipp.visit.visit.call(null, printer, k), " ", fipp.visit.visit.call(null, printer, v)], null);
    };
  }(this$__$1));
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_nil$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "text", "text", -1790561697), "nil"], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_character$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "text", "text", -1790561697), function() {
    var _STAR_print_readably_STAR__orig_val__8979 = cljs.core._STAR_print_readably_STAR_;
    var _STAR_print_readably_STAR__temp_val__8980 = true;
    cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR__temp_val__8980;
    try {
      return cljs.core.pr_str.call(null, x);
    } finally {
      cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR__orig_val__8979;
    }
  }()], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_string$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "text", "text", -1790561697), function() {
    var _STAR_print_readably_STAR__orig_val__8981 = cljs.core._STAR_print_readably_STAR_;
    var _STAR_print_readably_STAR__temp_val__8982 = true;
    cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR__temp_val__8982;
    try {
      return cljs.core.pr_str.call(null, x);
    } finally {
      cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR__orig_val__8981;
    }
  }()], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_var$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_set$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return fipp.edn.pretty_coll.call(null, this$__$1, "#{", x, new cljs.core.Keyword(null, "line", "line", 212345235), "}", fipp.visit.visit);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_vector$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return fipp.edn.pretty_coll.call(null, this$__$1, "[", x, new cljs.core.Keyword(null, "line", "line", 212345235), "]", fipp.visit.visit);
};
fipp.edn.EdnPrinter.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4297__auto__) {
  var self__ = this;
  var this__4297__auto____$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = function(h__4159__auto__, this__4297__auto____$1) {
      return function(coll__4298__auto__) {
        return 222486956 ^ cljs.core.hash_unordered_coll.call(null, coll__4298__auto__);
      };
    }(h__4159__auto__, this__4297__auto____$1).call(null, this__4297__auto____$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
fipp.edn.EdnPrinter.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this8962, other8963) {
  var self__ = this;
  var this8962__$1 = this;
  return !(other8963 == null) && this8962__$1.constructor === other8963.constructor && cljs.core._EQ_.call(null, this8962__$1.symbols, other8963.symbols) && cljs.core._EQ_.call(null, this8962__$1.print_meta, other8963.print_meta) && cljs.core._EQ_.call(null, this8962__$1.print_length, other8963.print_length) && cljs.core._EQ_.call(null, this8962__$1.print_level, other8963.print_level) && cljs.core._EQ_.call(null, this8962__$1.__extmap, other8963.__extmap);
};
fipp.edn.EdnPrinter.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4310__auto__, k__4311__auto__) {
  var self__ = this;
  var this__4310__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598), null, new cljs.core.Keyword(null, "print-level", "print-level", -1825423733), null, new cljs.core.Keyword(null, "print-length", "print-length", 1931866356), null, new cljs.core.Keyword(null, "symbols", "symbols", 1211743), null], null), null), k__4311__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4310__auto____$1), self__.__meta), k__4311__auto__);
  } else {
    return new fipp.edn.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, self__.print_level, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4311__auto__)), null);
  }
};
fipp.edn.EdnPrinter.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4308__auto__, k__4309__auto__, G__8960) {
  var self__ = this;
  var this__4308__auto____$1 = this;
  var pred__8983 = cljs.core.keyword_identical_QMARK_;
  var expr__8984 = k__4309__auto__;
  if (cljs.core.truth_(pred__8983.call(null, new cljs.core.Keyword(null, "symbols", "symbols", 1211743), expr__8984))) {
    return new fipp.edn.EdnPrinter(G__8960, self__.print_meta, self__.print_length, self__.print_level, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__8983.call(null, new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598), expr__8984))) {
      return new fipp.edn.EdnPrinter(self__.symbols, G__8960, self__.print_length, self__.print_level, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__8983.call(null, new cljs.core.Keyword(null, "print-length", "print-length", 1931866356), expr__8984))) {
        return new fipp.edn.EdnPrinter(self__.symbols, self__.print_meta, G__8960, self__.print_level, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__8983.call(null, new cljs.core.Keyword(null, "print-level", "print-level", -1825423733), expr__8984))) {
          return new fipp.edn.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, G__8960, self__.__meta, self__.__extmap, null);
        } else {
          return new fipp.edn.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, self__.print_level, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4309__auto__, G__8960), null);
        }
      }
    }
  }
};
fipp.edn.EdnPrinter.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4313__auto__) {
  var self__ = this;
  var this__4313__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "symbols", "symbols", 1211743), self__.symbols, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598), self__.print_meta, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "print-length", "print-length", 1931866356), self__.print_length, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "print-level", "print-level", -1825423733), self__.print_level, null)], null), self__.__extmap));
};
fipp.edn.EdnPrinter.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4300__auto__, G__8960) {
  var self__ = this;
  var this__4300__auto____$1 = this;
  return new fipp.edn.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, self__.print_level, G__8960, self__.__extmap, self__.__hash);
};
fipp.edn.EdnPrinter.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4306__auto__, entry__4307__auto__) {
  var self__ = this;
  var this__4306__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4307__auto__)) {
    return this__4306__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4307__auto__, 0), cljs.core._nth.call(null, entry__4307__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4306__auto____$1, entry__4307__auto__);
  }
};
fipp.edn.EdnPrinter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "symbols", "symbols", 1641743270, null), new cljs.core.Symbol(null, "print-meta", "print-meta", -1620321171, null), new cljs.core.Symbol(null, "print-length", "print-length", -722569413, null), new cljs.core.Symbol(null, "print-level", "print-level", -184892206, null)], null);
};
fipp.edn.EdnPrinter.cljs$lang$type = true;
fipp.edn.EdnPrinter.cljs$lang$ctorPrSeq = function(this__4344__auto__) {
  return new cljs.core.List(null, "fipp.edn/EdnPrinter", null, 1, null);
};
fipp.edn.EdnPrinter.cljs$lang$ctorPrWriter = function(this__4344__auto__, writer__4345__auto__) {
  return cljs.core._write.call(null, writer__4345__auto__, "fipp.edn/EdnPrinter");
};
fipp.edn.__GT_EdnPrinter = function fipp$edn$__GT_EdnPrinter(symbols, print_meta, print_length, print_level) {
  return new fipp.edn.EdnPrinter(symbols, print_meta, print_length, print_level, null, null, null);
};
fipp.edn.map__GT_EdnPrinter = function fipp$edn$map__GT_EdnPrinter(G__8964) {
  var extmap__4340__auto__ = function() {
    var G__8986 = cljs.core.dissoc.call(null, G__8964, new cljs.core.Keyword(null, "symbols", "symbols", 1211743), new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598), new cljs.core.Keyword(null, "print-length", "print-length", 1931866356), new cljs.core.Keyword(null, "print-level", "print-level", -1825423733));
    if (cljs.core.record_QMARK_.call(null, G__8964)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__8986);
    } else {
      return G__8986;
    }
  }();
  return new fipp.edn.EdnPrinter((new cljs.core.Keyword(null, "symbols", "symbols", 1211743)).cljs$core$IFn$_invoke$arity$1(G__8964), (new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598)).cljs$core$IFn$_invoke$arity$1(G__8964), (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(G__8964), (new cljs.core.Keyword(null, "print-level", "print-level", -1825423733)).cljs$core$IFn$_invoke$arity$1(G__8964), null, cljs.core.not_empty.call(null, 
  extmap__4340__auto__), null);
};
fipp.edn.pretty = function fipp$edn$pretty(var_args) {
  var G__8989 = arguments.length;
  switch(G__8989) {
    case 1:
      return fipp.edn.pretty.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return fipp.edn.pretty.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
fipp.edn.pretty.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return fipp.edn.pretty.call(null, x, cljs.core.PersistentArrayMap.EMPTY);
};
fipp.edn.pretty.cljs$core$IFn$_invoke$arity$2 = function(x, options) {
  var defaults = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "symbols", "symbols", 1211743), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "print-length", "print-length", 1931866356), cljs.core._STAR_print_length_STAR_, new cljs.core.Keyword(null, "print-level", "print-level", -1825423733), cljs.core._STAR_print_level_STAR_, new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598), cljs.core._STAR_print_meta_STAR_], null);
  var printer = fipp.edn.map__GT_EdnPrinter.call(null, cljs.core.merge.call(null, defaults, options));
  var _STAR_print_meta_STAR__orig_val__8990 = cljs.core._STAR_print_meta_STAR_;
  var _STAR_print_meta_STAR__temp_val__8991 = false;
  cljs.core._STAR_print_meta_STAR_ = _STAR_print_meta_STAR__temp_val__8991;
  try {
    return fipp.visit.visit.call(null, printer, x);
  } finally {
    cljs.core._STAR_print_meta_STAR_ = _STAR_print_meta_STAR__orig_val__8990;
  }
};
fipp.edn.pretty.cljs$lang$maxFixedArity = 2;
fipp.edn.pprint = function fipp$edn$pprint(var_args) {
  var G__8994 = arguments.length;
  switch(G__8994) {
    case 1:
      return fipp.edn.pprint.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return fipp.edn.pprint.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
fipp.edn.pprint.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return fipp.edn.pprint.call(null, x, cljs.core.PersistentArrayMap.EMPTY);
};
fipp.edn.pprint.cljs$core$IFn$_invoke$arity$2 = function(x, options) {
  return fipp.engine.pprint_document.call(null, fipp.edn.pretty.call(null, x, options), options);
};
fipp.edn.pprint.cljs$lang$maxFixedArity = 2;
goog.provide("arrangement.core");
goog.require("cljs.core");
goog.require("cljs.core");
arrangement.core.type_predicates = new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.nil_QMARK_, cljs.core.false_QMARK_, cljs.core.true_QMARK_, cljs.core.number_QMARK_, cljs.core.char_QMARK_, cljs.core.string_QMARK_, cljs.core.keyword_QMARK_, cljs.core.symbol_QMARK_, cljs.core.list_QMARK_, cljs.core.vector_QMARK_, cljs.core.set_QMARK_, cljs.core.map_QMARK_], null);
arrangement.core.type_priority = function arrangement$core$type_priority(x) {
  var i = 0;
  while (true) {
    if (i < cljs.core.count.call(null, arrangement.core.type_predicates)) {
      var p = cljs.core.nth.call(null, arrangement.core.type_predicates, i);
      if (cljs.core.truth_(p.call(null, x))) {
        return i;
      } else {
        var G__8999 = i + 1;
        i = G__8999;
        continue;
      }
    } else {
      return i;
    }
    break;
  }
};
arrangement.core.directly_comparable_QMARK_ = function arrangement$core$directly_comparable_QMARK_(p) {
  return 3 <= p && p <= 7;
};
arrangement.core.type_name = function arrangement$core$type_name(x) {
  var t = cljs.core.type.call(null, x);
  var n = t.name;
  if (cljs.core.empty_QMARK_.call(null, n)) {
    return cljs.core.pr_str.call(null, t);
  } else {
    return n;
  }
};
arrangement.core.compare_seqs = function arrangement$core$compare_seqs(xs, ys) {
  while (true) {
    if (cljs.core.seq.call(null, xs) && cljs.core.seq.call(null, ys)) {
      var x = cljs.core.first.call(null, xs);
      var y = cljs.core.first.call(null, ys);
      var o = arrangement.core.rank.call(null, x, y);
      if (o === 0) {
        var G__9000 = cljs.core.next.call(null, xs);
        var G__9001 = cljs.core.next.call(null, ys);
        xs = G__9000;
        ys = G__9001;
        continue;
      } else {
        return o;
      }
    } else {
      return cljs.core.count.call(null, xs) - cljs.core.count.call(null, ys);
    }
    break;
  }
};
arrangement.core.rank = function arrangement$core$rank(a, b) {
  if (a === b) {
    return 0;
  } else {
    var pri_a = arrangement.core.type_priority.call(null, a);
    var pri_b = arrangement.core.type_priority.call(null, b);
    if (pri_a < pri_b) {
      return -1;
    } else {
      if (pri_a > pri_b) {
        return 1;
      } else {
        if (arrangement.core.directly_comparable_QMARK_.call(null, pri_a)) {
          return cljs.core.compare.call(null, a, b);
        } else {
          if (cljs.core.set_QMARK_.call(null, a)) {
            var size_diff = cljs.core.count.call(null, a) - cljs.core.count.call(null, b);
            if (size_diff === 0) {
              return arrangement.core.compare_seqs.call(null, cljs.core.sort.call(null, arrangement.core.rank, a), cljs.core.sort.call(null, arrangement.core.rank, b));
            } else {
              return size_diff;
            }
          } else {
            if (cljs.core.map_QMARK_.call(null, a)) {
              var size_diff = cljs.core.count.call(null, a) - cljs.core.count.call(null, b);
              if (size_diff === 0) {
                return arrangement.core.compare_seqs.call(null, cljs.core.sort_by.call(null, cljs.core.key, arrangement.core.rank, cljs.core.seq.call(null, a)), cljs.core.sort_by.call(null, cljs.core.key, arrangement.core.rank, cljs.core.seq.call(null, b)));
              } else {
                return size_diff;
              }
            } else {
              if (cljs.core.coll_QMARK_.call(null, a)) {
                return arrangement.core.compare_seqs.call(null, a, b);
              } else {
                var class_diff = cljs.core.compare.call(null, arrangement.core.type_name.call(null, a), arrangement.core.type_name.call(null, b));
                if (class_diff === 0) {
                  return cljs.core.compare.call(null, a, b);
                } else {
                  return class_diff;
                }
              }
            }
          }
        }
      }
    }
  }
};
goog.provide("malli.dev.virhe");
goog.require("cljs.core");
goog.require("arrangement.core");
goog.require("fipp.edn");
goog.require("fipp.ednize");
goog.require("fipp.engine");
goog.require("fipp.visit");
malli.dev.virhe._dark_colors = new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "title", "title", 636505583), 45, new cljs.core.Keyword(null, "title-dark", "title-dark", -1835322435), 32, new cljs.core.Keyword(null, "text", "text", -1790561697), 253, new cljs.core.Keyword(null, "link", "link", -1769163468), 255, new cljs.core.Keyword(null, "string", "string", -1989541586), 180, new cljs.core.Keyword(null, "constant", "constant", -379609303), 149, new cljs.core.Keyword(null, 
"type", "type", 1174270348), 123, new cljs.core.Keyword(null, "error", "error", -978969032), 196], null);
malli.dev.virhe._color = function malli$dev$virhe$_color(color, body, printer) {
  var colors = (new cljs.core.Keyword(null, "colors", "colors", 1157174732)).cljs$core$IFn$_invoke$arity$2(printer, malli.dev.virhe._dark_colors);
  var color__$1 = cljs.core.get.call(null, colors, color, (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(colors));
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pass", "pass", 1574159993), ["[38;5;", cljs.core.str.cljs$core$IFn$_invoke$arity$1(color__$1), "m"].join("")], null), body, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pass", 
  "pass", 1574159993), "[0m"], null)], null);
};
malli.dev.virhe.EdnPrinter = function(symbols, print_meta, print_length, print_level, unknown, __meta, __extmap, __hash) {
  this.symbols = symbols;
  this.print_meta = print_meta;
  this.print_length = print_length;
  this.print_level = print_level;
  this.unknown = unknown;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4301__auto__, k__4302__auto__) {
  var self__ = this;
  var this__4301__auto____$1 = this;
  return this__4301__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4302__auto__, null);
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4303__auto__, k9054, else__4304__auto__) {
  var self__ = this;
  var this__4303__auto____$1 = this;
  var G__9058 = k9054;
  var G__9058__$1 = G__9058 instanceof cljs.core.Keyword ? G__9058.fqn : null;
  switch(G__9058__$1) {
    case "symbols":
      return self__.symbols;
      break;
    case "print-meta":
      return self__.print_meta;
      break;
    case "print-length":
      return self__.print_length;
      break;
    case "print-level":
      return self__.print_level;
      break;
    case "unknown":
      return self__.unknown;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k9054, else__4304__auto__);
  }
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4320__auto__, f__4321__auto__, init__4322__auto__) {
  var self__ = this;
  var this__4320__auto____$1 = this;
  return cljs.core.reduce.call(null, function(this__4320__auto____$1) {
    return function(ret__4323__auto__, p__9059) {
      var vec__9060 = p__9059;
      var k__4324__auto__ = cljs.core.nth.call(null, vec__9060, 0, null);
      var v__4325__auto__ = cljs.core.nth.call(null, vec__9060, 1, null);
      return f__4321__auto__.call(null, ret__4323__auto__, k__4324__auto__, v__4325__auto__);
    };
  }(this__4320__auto____$1), init__4322__auto__, this__4320__auto____$1);
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4315__auto__, writer__4316__auto__, opts__4317__auto__) {
  var self__ = this;
  var this__4315__auto____$1 = this;
  var pr_pair__4318__auto__ = function(this__4315__auto____$1) {
    return function(keyval__4319__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4316__auto__, cljs.core.pr_writer, "", " ", "", opts__4317__auto__, keyval__4319__auto__);
    };
  }(this__4315__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4316__auto__, pr_pair__4318__auto__, "#malli.dev.virhe.EdnPrinter{", ", ", "}", opts__4317__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "symbols", "symbols", 1211743), self__.symbols], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598), self__.print_meta], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "print-length", "print-length", 1931866356), self__.print_length], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "print-level", "print-level", -1825423733), self__.print_level], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "unknown", "unknown", -935977881), self__.unknown], null)], null), self__.__extmap));
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__9053) {
  var self__ = this;
  var G__9053__$1 = this;
  return new cljs.core.RecordIter(0, G__9053__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "symbols", "symbols", 1211743), new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598), new cljs.core.Keyword(null, "print-length", "print-length", 1931866356), new cljs.core.Keyword(null, "print-level", "print-level", -1825423733), new cljs.core.Keyword(null, "unknown", "unknown", -935977881)], null), cljs.core.truth_(self__.__extmap) ? 
  cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4299__auto__) {
  var self__ = this;
  var this__4299__auto____$1 = this;
  return self__.__meta;
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4296__auto__) {
  var self__ = this;
  var this__4296__auto____$1 = this;
  return new malli.dev.virhe.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, self__.print_level, self__.unknown, self__.__meta, self__.__extmap, self__.__hash);
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4305__auto__) {
  var self__ = this;
  var this__4305__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$ = cljs.core.PROTOCOL_SENTINEL;
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_record$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return fipp.visit.visit.call(null, this$__$1, fipp.ednize.record__GT_tagged.call(null, x));
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_meta$arity$3 = function(this$, m, x) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(self__.print_meta)) {
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "align", "align", 1964212802), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "^", fipp.visit.visit.call(null, this$__$1, m)], null), new cljs.core.Keyword(null, "line", "line", 212345235), fipp.visit.visit_STAR_.call(null, this$__$1, x)], null);
  } else {
    return fipp.visit.visit_STAR_.call(null, this$__$1, x);
  }
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_number$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return malli.dev.virhe._color.call(null, new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.pr_str.call(null, x), this$__$1);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_pattern$arity$2 = function(_, x) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.pr_str.call(null, x)], null);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_unknown$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  var or__4047__auto__ = function() {
    var and__4036__auto__ = self__.unknown;
    if (cljs.core.truth_(and__4036__auto__)) {
      try {
        var G__9066 = self__.unknown.call(null, x);
        if (G__9066 == null) {
          return null;
        } else {
          return fipp.visit.visit.call(null, this$__$1, G__9066);
        }
      } catch (e9065) {
        if (e9065 instanceof Error) {
          var _ = e9065;
          return null;
        } else {
          throw e9065;
        }
      }
    } else {
      return and__4036__auto__;
    }
  }();
  if (cljs.core.truth_(or__4047__auto__)) {
    return or__4047__auto__;
  } else {
    return fipp.visit.visit.call(null, this$__$1, fipp.ednize.edn.call(null, x));
  }
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_symbol$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return malli.dev.virhe._color.call(null, new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), this$__$1);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_seq$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  var temp__5718__auto__ = self__.symbols.call(null, cljs.core.first.call(null, x));
  if (cljs.core.truth_(temp__5718__auto__)) {
    var pretty = temp__5718__auto__;
    return pretty.call(null, this$__$1, x);
  } else {
    return fipp.edn.pretty_coll.call(null, this$__$1, malli.dev.virhe._color.call(null, new cljs.core.Keyword(null, "text", "text", -1790561697), "(", this$__$1), x, new cljs.core.Keyword(null, "line", "line", 212345235), malli.dev.virhe._color.call(null, new cljs.core.Keyword(null, "text", "text", -1790561697), ")", this$__$1), fipp.visit.visit);
  }
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_boolean$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return malli.dev.virhe._color.call(null, new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), this$__$1);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_tagged$arity$2 = function(this$, p__9067) {
  var self__ = this;
  var map__9068 = p__9067;
  var map__9068__$1 = (!(map__9068 == null) ? map__9068.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9068.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9068) : map__9068;
  var tag = cljs.core.get.call(null, map__9068__$1, new cljs.core.Keyword(null, "tag", "tag", -1290361223));
  var form = cljs.core.get.call(null, map__9068__$1, new cljs.core.Keyword(null, "form", "form", -1624062471));
  var this$__$1 = this;
  var object_QMARK_ = cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "object", "object", -1179821820, null), tag);
  var tag_f = cljs.core.map_QMARK_.call(null, form) ? function(object_QMARK_, this$__$1, map__9068, map__9068__$1, tag, form) {
    return function(p1__9052_SHARP_) {
      return malli.dev.virhe._color.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), p1__9052_SHARP_, this$__$1);
    };
  }(object_QMARK_, this$__$1, map__9068, map__9068__$1, tag, form) : cljs.core.identity;
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "group", "group", 582596132), "#", tag_f.call(null, cljs.core.pr_str.call(null, tag)), cljs.core.truth_(function() {
    var or__4047__auto__ = function() {
      var and__4036__auto__ = self__.print_meta;
      if (cljs.core.truth_(and__4036__auto__)) {
        return cljs.core.meta.call(null, form);
      } else {
        return and__4036__auto__;
      }
    }();
    if (cljs.core.truth_(or__4047__auto__)) {
      return or__4047__auto__;
    } else {
      return !cljs.core.coll_QMARK_.call(null, form);
    }
  }()) ? " " : null, object_QMARK_ ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "group", "group", 582596132), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "align", "align", 1964212802), "[", fipp.visit.visit.call(null, this$__$1, cljs.core.last.call(null, form))], null), "]"], null) : fipp.visit.visit.call(null, this$__$1, form)], null);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_keyword$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return malli.dev.virhe._color.call(null, new cljs.core.Keyword(null, "constant", "constant", -379609303), cljs.core.pr_str.call(null, x), this$__$1);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_map$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  var xs = cljs.core.sort_by.call(null, cljs.core.identity, function(this$__$1) {
    return function(a, b) {
      return arrangement.core.rank.call(null, cljs.core.first.call(null, a), cljs.core.first.call(null, b));
    };
  }(this$__$1), x);
  return fipp.edn.pretty_coll.call(null, this$__$1, malli.dev.virhe._color.call(null, new cljs.core.Keyword(null, "text", "text", -1790561697), "{", this$__$1), xs, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), malli.dev.virhe._color.call(null, new cljs.core.Keyword(null, "text", "text", -1790561697), ",", this$__$1), new cljs.core.Keyword(null, "line", "line", 212345235)], null), malli.dev.virhe._color.call(null, 
  new cljs.core.Keyword(null, "text", "text", -1790561697), "}", this$__$1), function(xs, this$__$1) {
    return function(printer, p__9070) {
      var vec__9071 = p__9070;
      var k = cljs.core.nth.call(null, vec__9071, 0, null);
      var v = cljs.core.nth.call(null, vec__9071, 1, null);
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), fipp.visit.visit.call(null, printer, k), " ", fipp.visit.visit.call(null, printer, v)], null);
    };
  }(xs, this$__$1));
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_nil$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return malli.dev.virhe._color.call(null, new cljs.core.Keyword(null, "text", "text", -1790561697), "nil", this$__$1);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_character$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return malli.dev.virhe._color.call(null, new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.pr_str.call(null, x), this$__$1);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_string$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return malli.dev.virhe._color.call(null, new cljs.core.Keyword(null, "string", "string", -1989541586), cljs.core.pr_str.call(null, x), this$__$1);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_var$arity$2 = function(_, x) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)], null);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_set$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  var xs = cljs.core.sort_by.call(null, cljs.core.identity, function(this$__$1) {
    return function(a, b) {
      return arrangement.core.rank.call(null, a, b);
    };
  }(this$__$1), cljs.core.seq.call(null, x));
  return fipp.edn.pretty_coll.call(null, this$__$1, "#{", xs, new cljs.core.Keyword(null, "line", "line", 212345235), "}", fipp.visit.visit);
};
malli.dev.virhe.EdnPrinter.prototype.fipp$visit$IVisitor$visit_vector$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return fipp.edn.pretty_coll.call(null, this$__$1, malli.dev.virhe._color.call(null, new cljs.core.Keyword(null, "text", "text", -1790561697), "[", this$__$1), x, new cljs.core.Keyword(null, "line", "line", 212345235), malli.dev.virhe._color.call(null, new cljs.core.Keyword(null, "text", "text", -1790561697), "]", this$__$1), fipp.visit.visit);
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4297__auto__) {
  var self__ = this;
  var this__4297__auto____$1 = this;
  var h__4159__auto__ = self__.__hash;
  if (!(h__4159__auto__ == null)) {
    return h__4159__auto__;
  } else {
    var h__4159__auto____$1 = function(h__4159__auto__, this__4297__auto____$1) {
      return function(coll__4298__auto__) {
        return -1062596876 ^ cljs.core.hash_unordered_coll.call(null, coll__4298__auto__);
      };
    }(h__4159__auto__, this__4297__auto____$1).call(null, this__4297__auto____$1);
    self__.__hash = h__4159__auto____$1;
    return h__4159__auto____$1;
  }
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this9055, other9056) {
  var self__ = this;
  var this9055__$1 = this;
  return !(other9056 == null) && this9055__$1.constructor === other9056.constructor && cljs.core._EQ_.call(null, this9055__$1.symbols, other9056.symbols) && cljs.core._EQ_.call(null, this9055__$1.print_meta, other9056.print_meta) && cljs.core._EQ_.call(null, this9055__$1.print_length, other9056.print_length) && cljs.core._EQ_.call(null, this9055__$1.print_level, other9056.print_level) && cljs.core._EQ_.call(null, this9055__$1.unknown, other9056.unknown) && cljs.core._EQ_.call(null, this9055__$1.__extmap, 
  other9056.__extmap);
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4310__auto__, k__4311__auto__) {
  var self__ = this;
  var this__4310__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598), null, new cljs.core.Keyword(null, "unknown", "unknown", -935977881), null, new cljs.core.Keyword(null, "print-level", "print-level", -1825423733), null, new cljs.core.Keyword(null, "print-length", "print-length", 1931866356), null, new cljs.core.Keyword(null, "symbols", "symbols", 1211743), null], null), null), 
  k__4311__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4310__auto____$1), self__.__meta), k__4311__auto__);
  } else {
    return new malli.dev.virhe.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, self__.print_level, self__.unknown, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4311__auto__)), null);
  }
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4308__auto__, k__4309__auto__, G__9053) {
  var self__ = this;
  var this__4308__auto____$1 = this;
  var pred__9074 = cljs.core.keyword_identical_QMARK_;
  var expr__9075 = k__4309__auto__;
  if (cljs.core.truth_(pred__9074.call(null, new cljs.core.Keyword(null, "symbols", "symbols", 1211743), expr__9075))) {
    return new malli.dev.virhe.EdnPrinter(G__9053, self__.print_meta, self__.print_length, self__.print_level, self__.unknown, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__9074.call(null, new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598), expr__9075))) {
      return new malli.dev.virhe.EdnPrinter(self__.symbols, G__9053, self__.print_length, self__.print_level, self__.unknown, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__9074.call(null, new cljs.core.Keyword(null, "print-length", "print-length", 1931866356), expr__9075))) {
        return new malli.dev.virhe.EdnPrinter(self__.symbols, self__.print_meta, G__9053, self__.print_level, self__.unknown, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__9074.call(null, new cljs.core.Keyword(null, "print-level", "print-level", -1825423733), expr__9075))) {
          return new malli.dev.virhe.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, G__9053, self__.unknown, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__9074.call(null, new cljs.core.Keyword(null, "unknown", "unknown", -935977881), expr__9075))) {
            return new malli.dev.virhe.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, self__.print_level, G__9053, self__.__meta, self__.__extmap, null);
          } else {
            return new malli.dev.virhe.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, self__.print_level, self__.unknown, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4309__auto__, G__9053), null);
          }
        }
      }
    }
  }
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4313__auto__) {
  var self__ = this;
  var this__4313__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "symbols", "symbols", 1211743), self__.symbols, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598), self__.print_meta, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "print-length", "print-length", 1931866356), self__.print_length, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "print-level", "print-level", -1825423733), self__.print_level, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "unknown", "unknown", -935977881), self__.unknown, null)], null), self__.__extmap));
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4300__auto__, G__9053) {
  var self__ = this;
  var this__4300__auto____$1 = this;
  return new malli.dev.virhe.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, self__.print_level, self__.unknown, G__9053, self__.__extmap, self__.__hash);
};
malli.dev.virhe.EdnPrinter.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4306__auto__, entry__4307__auto__) {
  var self__ = this;
  var this__4306__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4307__auto__)) {
    return this__4306__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4307__auto__, 0), cljs.core._nth.call(null, entry__4307__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4306__auto____$1, entry__4307__auto__);
  }
};
malli.dev.virhe.EdnPrinter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "symbols", "symbols", 1641743270, null), new cljs.core.Symbol(null, "print-meta", "print-meta", -1620321171, null), new cljs.core.Symbol(null, "print-length", "print-length", -722569413, null), new cljs.core.Symbol(null, "print-level", "print-level", -184892206, null), new cljs.core.Symbol(null, "unknown", "unknown", 704553646, null)], null);
};
malli.dev.virhe.EdnPrinter.cljs$lang$type = true;
malli.dev.virhe.EdnPrinter.cljs$lang$ctorPrSeq = function(this__4344__auto__) {
  return new cljs.core.List(null, "malli.dev.virhe/EdnPrinter", null, 1, null);
};
malli.dev.virhe.EdnPrinter.cljs$lang$ctorPrWriter = function(this__4344__auto__, writer__4345__auto__) {
  return cljs.core._write.call(null, writer__4345__auto__, "malli.dev.virhe/EdnPrinter");
};
malli.dev.virhe.__GT_EdnPrinter = function malli$dev$virhe$__GT_EdnPrinter(symbols, print_meta, print_length, print_level, unknown) {
  return new malli.dev.virhe.EdnPrinter(symbols, print_meta, print_length, print_level, unknown, null, null, null);
};
malli.dev.virhe.map__GT_EdnPrinter = function malli$dev$virhe$map__GT_EdnPrinter(G__9057) {
  var extmap__4340__auto__ = function() {
    var G__9077 = cljs.core.dissoc.call(null, G__9057, new cljs.core.Keyword(null, "symbols", "symbols", 1211743), new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598), new cljs.core.Keyword(null, "print-length", "print-length", 1931866356), new cljs.core.Keyword(null, "print-level", "print-level", -1825423733), new cljs.core.Keyword(null, "unknown", "unknown", -935977881));
    if (cljs.core.record_QMARK_.call(null, G__9057)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__9077);
    } else {
      return G__9077;
    }
  }();
  return new malli.dev.virhe.EdnPrinter((new cljs.core.Keyword(null, "symbols", "symbols", 1211743)).cljs$core$IFn$_invoke$arity$1(G__9057), (new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598)).cljs$core$IFn$_invoke$arity$1(G__9057), (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(G__9057), (new cljs.core.Keyword(null, "print-level", "print-level", -1825423733)).cljs$core$IFn$_invoke$arity$1(G__9057), (new cljs.core.Keyword(null, 
  "unknown", "unknown", -935977881)).cljs$core$IFn$_invoke$arity$1(G__9057), null, cljs.core.not_empty.call(null, extmap__4340__auto__), null);
};
malli.dev.virhe._printer = function malli$dev$virhe$_printer(var_args) {
  var G__9080 = arguments.length;
  switch(G__9080) {
    case 0:
      return malli.dev.virhe._printer.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.dev.virhe._printer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.dev.virhe._printer.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.dev.virhe._printer.call(null, null);
};
malli.dev.virhe._printer.cljs$core$IFn$_invoke$arity$1 = function(options) {
  var defaults = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "width", "width", -384071477), 80, new cljs.core.Keyword(null, "symbols", "symbols", 1211743), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "colors", "colors", 1157174732), malli.dev.virhe._dark_colors, new cljs.core.Keyword(null, "print-length", "print-length", 1931866356), cljs.core._STAR_print_length_STAR_, new cljs.core.Keyword(null, "print-level", "print-level", -1825423733), cljs.core._STAR_print_level_STAR_, 
  new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598), cljs.core._STAR_print_meta_STAR_], null);
  return malli.dev.virhe.map__GT_EdnPrinter.call(null, function() {
    var G__9081 = options;
    if (cljs.core.truth_(defaults)) {
      return cljs.core.merge.call(null, defaults, G__9081);
    } else {
      return G__9081;
    }
  }());
};
malli.dev.virhe._printer.cljs$lang$maxFixedArity = 1;
malli.dev.virhe._pprint = function malli$dev$virhe$_pprint(var_args) {
  var G__9084 = arguments.length;
  switch(G__9084) {
    case 1:
      return malli.dev.virhe._pprint.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.dev.virhe._pprint.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.dev.virhe._pprint.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return malli.dev.virhe._pprint.call(null, x, malli.dev.virhe._printer.call(null));
};
malli.dev.virhe._pprint.cljs$core$IFn$_invoke$arity$2 = function(x, printer) {
  var printer__$1 = cljs.core.dissoc.call(null, printer, new cljs.core.Keyword(null, "margin", "margin", -995903681));
  var margin = cljs.core.apply.call(null, cljs.core.str, cljs.core.take.call(null, (new cljs.core.Keyword(null, "margin", "margin", -995903681)).cljs$core$IFn$_invoke$arity$2(printer__$1, 0), cljs.core.repeat.call(null, " ")));
  var _STAR_print_meta_STAR__orig_val__9085 = cljs.core._STAR_print_meta_STAR_;
  var _STAR_print_meta_STAR__temp_val__9086 = false;
  cljs.core._STAR_print_meta_STAR_ = _STAR_print_meta_STAR__temp_val__9086;
  try {
    return fipp.engine.pprint_document.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "group", "group", 582596132), margin, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "group", "group", 582596132), fipp.visit.visit.call(null, printer__$1, x)], null)], null), printer__$1);
  } finally {
    cljs.core._STAR_print_meta_STAR_ = _STAR_print_meta_STAR__orig_val__9085;
  }
};
malli.dev.virhe._pprint.cljs$lang$maxFixedArity = 2;
malli.dev.virhe._print_doc = function malli$dev$virhe$_print_doc(doc, printer) {
  return fipp.engine.pprint_document.call(null, doc, printer);
};
malli.dev.virhe._visit = function malli$dev$virhe$_visit(x, printer) {
  return fipp.visit.visit.call(null, printer, x);
};
malli.dev.virhe._title = function malli$dev$virhe$_title(message, source, p__9088) {
  var map__9089 = p__9088;
  var map__9089__$1 = (!(map__9089 == null) ? map__9089.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9089.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9089) : map__9089;
  var printer = map__9089__$1;
  var width = cljs.core.get.call(null, map__9089__$1, new cljs.core.Keyword(null, "width", "width", -384071477));
  var between = width - cljs.core.count.call(null, message) - 8 - cljs.core.count.call(null, source);
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "group", "group", 582596132), malli.dev.virhe._color.call(null, new cljs.core.Keyword(null, "title-dark", "title-dark", -1835322435), "-- ", printer), malli.dev.virhe._color.call(null, new cljs.core.Keyword(null, "title", "title", 636505583), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), 
  message, " "], null), printer), malli.dev.virhe._color.call(null, new cljs.core.Keyword(null, "title-dark", "title-dark", -1835322435), cljs.core.apply.call(null, cljs.core.str, cljs.core.take.call(null, between, cljs.core.repeat.call(null, "-"))), printer), cljs.core.truth_(source) ? malli.dev.virhe._color.call(null, new cljs.core.Keyword(null, "title", "title", 636505583), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 
  1394872991), " ", source, " "], null), printer) : malli.dev.virhe._color.call(null, new cljs.core.Keyword(null, "title-dark", "title-dark", -1835322435), "--", printer), malli.dev.virhe._color.call(null, new cljs.core.Keyword(null, "title-dark", "title-dark", -1835322435), "--", printer)], null);
};
malli.dev.virhe._footer = function malli$dev$virhe$_footer(p__9091) {
  var map__9092 = p__9091;
  var map__9092__$1 = (!(map__9092 == null) ? map__9092.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9092.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9092) : map__9092;
  var printer = map__9092__$1;
  var width = cljs.core.get.call(null, map__9092__$1, new cljs.core.Keyword(null, "width", "width", -384071477));
  return malli.dev.virhe._color.call(null, new cljs.core.Keyword(null, "title-dark", "title-dark", -1835322435), cljs.core.apply.call(null, cljs.core.str, cljs.core.take.call(null, width, cljs.core.repeat.call(null, "-"))), printer);
};
malli.dev.virhe._text = function malli$dev$virhe$_text(body, printer) {
  return malli.dev.virhe._color.call(null, new cljs.core.Keyword(null, "text", "text", -1790561697), body, printer);
};
malli.dev.virhe._section = function malli$dev$virhe$_section(title, location, body, printer) {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "group", "group", 582596132), malli.dev.virhe._title.call(null, title, location, printer), new cljs.core.Keyword(null, "break", "break", 126570225), new cljs.core.Keyword(null, "break", "break", 126570225), body, new cljs.core.Keyword(null, "break", "break", 126570225), new cljs.core.Keyword(null, "break", "break", 126570225), malli.dev.virhe._footer.call(null, printer)], null);
};
if (typeof malli !== "undefined" && typeof malli.dev !== "undefined" && typeof malli.dev.virhe !== "undefined" && typeof malli.dev.virhe._format !== "undefined") {
} else {
  malli.dev.virhe._format = function() {
    var method_table__4524__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4525__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4526__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4527__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4528__auto__ = cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "default", "default", -1987822328), new cljs.core.Keyword("malli.dev.virhe", "default", "malli.dev.virhe/default", 1530256530)], null), new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "malli.dev.virhe", "-format"), function(method_table__4524__auto__, prefer_table__4525__auto__, method_cache__4526__auto__, cached_hierarchy__4527__auto__, hierarchy__4528__auto__) {
      return function(type, _, ___$1, ___$2) {
        return type;
      };
    }(method_table__4524__auto__, prefer_table__4525__auto__, method_cache__4526__auto__, cached_hierarchy__4527__auto__, hierarchy__4528__auto__), new cljs.core.Keyword("malli.dev.virhe", "default", "malli.dev.virhe/default", 1530256530), hierarchy__4528__auto__, method_table__4524__auto__, prefer_table__4525__auto__, method_cache__4526__auto__, cached_hierarchy__4527__auto__);
  }();
}
cljs.core._add_method.call(null, malli.dev.virhe._format, new cljs.core.Keyword("malli.dev.virhe", "default", "malli.dev.virhe/default", 1530256530), function(_, message, data, printer) {
  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "body", "body", -2049205669), cljs.core.into.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "group", "group", 582596132), malli.dev.virhe._text.call(null, function() {
    var or__4047__auto__ = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(data);
    if (cljs.core.truth_(or__4047__auto__)) {
      return or__4047__auto__;
    } else {
      return message;
    }
  }(), printer)], null), cljs.core.truth_(data) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "break", "break", 126570225), new cljs.core.Keyword(null, "break", "break", 126570225), malli.dev.virhe._visit.call(null, data, printer)], null) : null)], null);
});
malli.dev.virhe._exception_doc = function malli$dev$virhe$_exception_doc(e, printer) {
  var map__9094 = cljs.core.ex_data.call(null, e);
  var map__9094__$1 = (!(map__9094 == null) ? map__9094.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9094.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9094) : map__9094;
  var type = cljs.core.get.call(null, map__9094__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
  var data = cljs.core.get.call(null, map__9094__$1, new cljs.core.Keyword(null, "data", "data", -232669377));
  var map__9095 = malli.dev.virhe._format.call(null, type, cljs.core.ex_message.call(null, e), data, printer);
  var map__9095__$1 = (!(map__9095 == null) ? map__9095.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9095.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9095) : map__9095;
  var title = cljs.core.get.call(null, map__9095__$1, new cljs.core.Keyword(null, "title", "title", 636505583), (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(printer));
  var body = cljs.core.get.call(null, map__9095__$1, new cljs.core.Keyword(null, "body", "body", -2049205669));
  var location = null;
  return malli.dev.virhe._section.call(null, title, location, body, printer);
};
goog.provide("malli.impl.util");
goog.require("cljs.core");
malli.impl.util._PLUS_max_size_PLUS_ = Number.MAX_VALUE;
malli.impl.util._tagged = function malli$impl$util$_tagged(k, v) {
  return new cljs.core.MapEntry(k, v, null);
};
malli.impl.util._tagged_QMARK_ = function malli$impl$util$_tagged_QMARK_(v) {
  return v instanceof cljs.core.MapEntry;
};
malli.impl.util._invalid_QMARK_ = function malli$impl$util$_invalid_QMARK_(x) {
  return cljs.core.keyword_identical_QMARK_.call(null, x, new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900));
};
malli.impl.util._map_valid = function malli$impl$util$_map_valid(f, v) {
  if (malli.impl.util._invalid_QMARK_.call(null, v)) {
    return v;
  } else {
    return f.call(null, v);
  }
};
malli.impl.util._map_invalid = function malli$impl$util$_map_invalid(f, v) {
  if (malli.impl.util._invalid_QMARK_.call(null, v)) {
    return f.call(null, v);
  } else {
    return v;
  }
};
malli.impl.util._error = function malli$impl$util$_error(var_args) {
  var G__2585 = arguments.length;
  switch(G__2585) {
    case 4:
      return malli.impl.util._error.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return malli.impl.util._error.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.impl.util._error.cljs$core$IFn$_invoke$arity$4 = function(path, in$, schema, value) {
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "in", "in", -1531184865), in$, new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema, new cljs.core.Keyword(null, "value", "value", 305978217), value], null);
};
malli.impl.util._error.cljs$core$IFn$_invoke$arity$5 = function(path, in$, schema, value, type) {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "in", "in", -1531184865), in$, new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema, new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "type", "type", 1174270348), type], null);
};
malli.impl.util._error.cljs$lang$maxFixedArity = 5;
malli.impl.util._vmap = function malli$impl$util$_vmap(var_args) {
  var G__2588 = arguments.length;
  switch(G__2588) {
    case 1:
      return malli.impl.util._vmap.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.impl.util._vmap.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.impl.util._vmap.cljs$core$IFn$_invoke$arity$1 = function(os) {
  return malli.impl.util._vmap.call(null, cljs.core.identity, os);
};
malli.impl.util._vmap.cljs$core$IFn$_invoke$arity$2 = function(f, os) {
  return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f), os);
};
malli.impl.util._vmap.cljs$lang$maxFixedArity = 2;
malli.impl.util._every_pred = function malli$impl$util$_every_pred(preds) {
  return function(m) {
    return cljs.core.boolean$.call(null, cljs.core.reduce.call(null, function(p1__2594_SHARP_, p2__2593_SHARP_) {
      var or__4047__auto__ = p2__2593_SHARP_.call(null, m);
      if (cljs.core.truth_(or__4047__auto__)) {
        return or__4047__auto__;
      } else {
        return cljs.core.reduced.call(null, false);
      }
    }, true, preds));
  };
};
malli.impl.util._some_pred = function malli$impl$util$_some_pred(preds) {
  return function(x) {
    return cljs.core.boolean$.call(null, cljs.core.some.call(null, function(p1__2595_SHARP_) {
      return p1__2595_SHARP_.call(null, x);
    }, preds));
  };
};
goog.provide("malli.impl.regex");
goog.require("cljs.core");
goog.require("malli.impl.util");
malli.impl.regex.Driver = function() {
};
malli.impl.regex.succeed_BANG_ = function malli$impl$regex$succeed_BANG_(self) {
  if (!(self == null) && !(self.malli$impl$regex$Driver$succeed_BANG_$arity$1 == null)) {
    return self.malli$impl$regex$Driver$succeed_BANG_$arity$1(self);
  } else {
    var x__4347__auto__ = self == null ? null : self;
    var m__4348__auto__ = malli.impl.regex.succeed_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, self);
    } else {
      var m__4348__auto____$1 = malli.impl.regex.succeed_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, self);
      } else {
        throw cljs.core.missing_protocol.call(null, "Driver.succeed!", self);
      }
    }
  }
};
malli.impl.regex.succeeded_QMARK_ = function malli$impl$regex$succeeded_QMARK_(self) {
  if (!(self == null) && !(self.malli$impl$regex$Driver$succeeded_QMARK_$arity$1 == null)) {
    return self.malli$impl$regex$Driver$succeeded_QMARK_$arity$1(self);
  } else {
    var x__4347__auto__ = self == null ? null : self;
    var m__4348__auto__ = malli.impl.regex.succeeded_QMARK_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, self);
    } else {
      var m__4348__auto____$1 = malli.impl.regex.succeeded_QMARK_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, self);
      } else {
        throw cljs.core.missing_protocol.call(null, "Driver.succeeded?", self);
      }
    }
  }
};
malli.impl.regex.pop_thunk_BANG_ = function malli$impl$regex$pop_thunk_BANG_(self) {
  if (!(self == null) && !(self.malli$impl$regex$Driver$pop_thunk_BANG_$arity$1 == null)) {
    return self.malli$impl$regex$Driver$pop_thunk_BANG_$arity$1(self);
  } else {
    var x__4347__auto__ = self == null ? null : self;
    var m__4348__auto__ = malli.impl.regex.pop_thunk_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, self);
    } else {
      var m__4348__auto____$1 = malli.impl.regex.pop_thunk_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, self);
      } else {
        throw cljs.core.missing_protocol.call(null, "Driver.pop-thunk!", self);
      }
    }
  }
};
malli.impl.regex.IValidationDriver = function() {
};
malli.impl.regex.noncaching_park_validator_BANG_ = function malli$impl$regex$noncaching_park_validator_BANG_(driver, validator, regs, pos, coll, k) {
  if (!(driver == null) && !(driver.malli$impl$regex$IValidationDriver$noncaching_park_validator_BANG_$arity$6 == null)) {
    return driver.malli$impl$regex$IValidationDriver$noncaching_park_validator_BANG_$arity$6(driver, validator, regs, pos, coll, k);
  } else {
    var x__4347__auto__ = driver == null ? null : driver;
    var m__4348__auto__ = malli.impl.regex.noncaching_park_validator_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, driver, validator, regs, pos, coll, k);
    } else {
      var m__4348__auto____$1 = malli.impl.regex.noncaching_park_validator_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, driver, validator, regs, pos, coll, k);
      } else {
        throw cljs.core.missing_protocol.call(null, "IValidationDriver.noncaching-park-validator!", driver);
      }
    }
  }
};
malli.impl.regex.park_validator_BANG_ = function malli$impl$regex$park_validator_BANG_(driver, validator, regs, pos, coll, k) {
  if (!(driver == null) && !(driver.malli$impl$regex$IValidationDriver$park_validator_BANG_$arity$6 == null)) {
    return driver.malli$impl$regex$IValidationDriver$park_validator_BANG_$arity$6(driver, validator, regs, pos, coll, k);
  } else {
    var x__4347__auto__ = driver == null ? null : driver;
    var m__4348__auto__ = malli.impl.regex.park_validator_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, driver, validator, regs, pos, coll, k);
    } else {
      var m__4348__auto____$1 = malli.impl.regex.park_validator_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, driver, validator, regs, pos, coll, k);
      } else {
        throw cljs.core.missing_protocol.call(null, "IValidationDriver.park-validator!", driver);
      }
    }
  }
};
malli.impl.regex.IExplanationDriver = function() {
};
malli.impl.regex.noncaching_park_explainer_BANG_ = function malli$impl$regex$noncaching_park_explainer_BANG_(driver, explainer, regs, pos, coll, k) {
  if (!(driver == null) && !(driver.malli$impl$regex$IExplanationDriver$noncaching_park_explainer_BANG_$arity$6 == null)) {
    return driver.malli$impl$regex$IExplanationDriver$noncaching_park_explainer_BANG_$arity$6(driver, explainer, regs, pos, coll, k);
  } else {
    var x__4347__auto__ = driver == null ? null : driver;
    var m__4348__auto__ = malli.impl.regex.noncaching_park_explainer_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, driver, explainer, regs, pos, coll, k);
    } else {
      var m__4348__auto____$1 = malli.impl.regex.noncaching_park_explainer_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, driver, explainer, regs, pos, coll, k);
      } else {
        throw cljs.core.missing_protocol.call(null, "IExplanationDriver.noncaching-park-explainer!", driver);
      }
    }
  }
};
malli.impl.regex.park_explainer_BANG_ = function malli$impl$regex$park_explainer_BANG_(driver, explainer, regs, pos, coll, k) {
  if (!(driver == null) && !(driver.malli$impl$regex$IExplanationDriver$park_explainer_BANG_$arity$6 == null)) {
    return driver.malli$impl$regex$IExplanationDriver$park_explainer_BANG_$arity$6(driver, explainer, regs, pos, coll, k);
  } else {
    var x__4347__auto__ = driver == null ? null : driver;
    var m__4348__auto__ = malli.impl.regex.park_explainer_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, driver, explainer, regs, pos, coll, k);
    } else {
      var m__4348__auto____$1 = malli.impl.regex.park_explainer_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, driver, explainer, regs, pos, coll, k);
      } else {
        throw cljs.core.missing_protocol.call(null, "IExplanationDriver.park-explainer!", driver);
      }
    }
  }
};
malli.impl.regex.value_path = function malli$impl$regex$value_path(self, pos) {
  if (!(self == null) && !(self.malli$impl$regex$IExplanationDriver$value_path$arity$2 == null)) {
    return self.malli$impl$regex$IExplanationDriver$value_path$arity$2(self, pos);
  } else {
    var x__4347__auto__ = self == null ? null : self;
    var m__4348__auto__ = malli.impl.regex.value_path[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, self, pos);
    } else {
      var m__4348__auto____$1 = malli.impl.regex.value_path["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, self, pos);
      } else {
        throw cljs.core.missing_protocol.call(null, "IExplanationDriver.value-path", self);
      }
    }
  }
};
malli.impl.regex.fail_BANG_ = function malli$impl$regex$fail_BANG_(self, pos, errors_STAR_) {
  if (!(self == null) && !(self.malli$impl$regex$IExplanationDriver$fail_BANG_$arity$3 == null)) {
    return self.malli$impl$regex$IExplanationDriver$fail_BANG_$arity$3(self, pos, errors_STAR_);
  } else {
    var x__4347__auto__ = self == null ? null : self;
    var m__4348__auto__ = malli.impl.regex.fail_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, self, pos, errors_STAR_);
    } else {
      var m__4348__auto____$1 = malli.impl.regex.fail_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, self, pos, errors_STAR_);
      } else {
        throw cljs.core.missing_protocol.call(null, "IExplanationDriver.fail!", self);
      }
    }
  }
};
malli.impl.regex.latest_errors = function malli$impl$regex$latest_errors(self) {
  if (!(self == null) && !(self.malli$impl$regex$IExplanationDriver$latest_errors$arity$1 == null)) {
    return self.malli$impl$regex$IExplanationDriver$latest_errors$arity$1(self);
  } else {
    var x__4347__auto__ = self == null ? null : self;
    var m__4348__auto__ = malli.impl.regex.latest_errors[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, self);
    } else {
      var m__4348__auto____$1 = malli.impl.regex.latest_errors["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, self);
      } else {
        throw cljs.core.missing_protocol.call(null, "IExplanationDriver.latest-errors", self);
      }
    }
  }
};
malli.impl.regex.IParseDriver = function() {
};
malli.impl.regex.noncaching_park_transformer_BANG_ = function malli$impl$regex$noncaching_park_transformer_BANG_(driver, transformer, regs, coll_STAR_, pos, coll, k) {
  if (!(driver == null) && !(driver.malli$impl$regex$IParseDriver$noncaching_park_transformer_BANG_$arity$7 == null)) {
    return driver.malli$impl$regex$IParseDriver$noncaching_park_transformer_BANG_$arity$7(driver, transformer, regs, coll_STAR_, pos, coll, k);
  } else {
    var x__4347__auto__ = driver == null ? null : driver;
    var m__4348__auto__ = malli.impl.regex.noncaching_park_transformer_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, driver, transformer, regs, coll_STAR_, pos, coll, k);
    } else {
      var m__4348__auto____$1 = malli.impl.regex.noncaching_park_transformer_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, driver, transformer, regs, coll_STAR_, pos, coll, k);
      } else {
        throw cljs.core.missing_protocol.call(null, "IParseDriver.noncaching-park-transformer!", driver);
      }
    }
  }
};
malli.impl.regex.park_transformer_BANG_ = function malli$impl$regex$park_transformer_BANG_(driver, transformer, regs, coll_STAR_, pos, coll, k) {
  if (!(driver == null) && !(driver.malli$impl$regex$IParseDriver$park_transformer_BANG_$arity$7 == null)) {
    return driver.malli$impl$regex$IParseDriver$park_transformer_BANG_$arity$7(driver, transformer, regs, coll_STAR_, pos, coll, k);
  } else {
    var x__4347__auto__ = driver == null ? null : driver;
    var m__4348__auto__ = malli.impl.regex.park_transformer_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, driver, transformer, regs, coll_STAR_, pos, coll, k);
    } else {
      var m__4348__auto____$1 = malli.impl.regex.park_transformer_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, driver, transformer, regs, coll_STAR_, pos, coll, k);
      } else {
        throw cljs.core.missing_protocol.call(null, "IParseDriver.park-transformer!", driver);
      }
    }
  }
};
malli.impl.regex.succeed_with_BANG_ = function malli$impl$regex$succeed_with_BANG_(self, v) {
  if (!(self == null) && !(self.malli$impl$regex$IParseDriver$succeed_with_BANG_$arity$2 == null)) {
    return self.malli$impl$regex$IParseDriver$succeed_with_BANG_$arity$2(self, v);
  } else {
    var x__4347__auto__ = self == null ? null : self;
    var m__4348__auto__ = malli.impl.regex.succeed_with_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, self, v);
    } else {
      var m__4348__auto____$1 = malli.impl.regex.succeed_with_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, self, v);
      } else {
        throw cljs.core.missing_protocol.call(null, "IParseDriver.succeed-with!", self);
      }
    }
  }
};
malli.impl.regex.success_result = function malli$impl$regex$success_result(self) {
  if (!(self == null) && !(self.malli$impl$regex$IParseDriver$success_result$arity$1 == null)) {
    return self.malli$impl$regex$IParseDriver$success_result$arity$1(self);
  } else {
    var x__4347__auto__ = self == null ? null : self;
    var m__4348__auto__ = malli.impl.regex.success_result[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, self);
    } else {
      var m__4348__auto____$1 = malli.impl.regex.success_result["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, self);
      } else {
        throw cljs.core.missing_protocol.call(null, "IParseDriver.success-result", self);
      }
    }
  }
};
malli.impl.regex.item_validator = function malli$impl$regex$item_validator(valid_QMARK_) {
  return function(_, ___$1, pos, coll, k) {
    if (cljs.core.truth_(function() {
      var and__4036__auto__ = cljs.core.seq.call(null, coll);
      if (and__4036__auto__) {
        return valid_QMARK_.call(null, cljs.core.first.call(null, coll));
      } else {
        return and__4036__auto__;
      }
    }())) {
      return k.call(null, pos + 1, cljs.core.rest.call(null, coll));
    } else {
      return null;
    }
  };
};
malli.impl.regex.item_explainer = function malli$impl$regex$item_explainer(path, schema, schema_explainer) {
  return function(driver, _, pos, coll, k) {
    var in$ = malli.impl.regex.value_path.call(null, driver, pos);
    if (cljs.core.seq.call(null, coll)) {
      var errors = schema_explainer.call(null, cljs.core.first.call(null, coll), in$, cljs.core.PersistentVector.EMPTY);
      if (cljs.core.seq.call(null, errors)) {
        return malli.impl.regex.fail_BANG_.call(null, driver, pos, errors);
      } else {
        return k.call(null, pos + 1, cljs.core.rest.call(null, coll));
      }
    } else {
      return malli.impl.regex.fail_BANG_.call(null, driver, pos, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [malli.impl.util._error.call(null, path, in$, schema, null, new cljs.core.Keyword("malli.core", "end-of-input", "malli.core/end-of-input", -491237771))], null));
    }
  };
};
malli.impl.regex.item_parser = function malli$impl$regex$item_parser(parse) {
  return function(_, ___$1, pos, coll, k) {
    if (cljs.core.seq.call(null, coll)) {
      var v = parse.call(null, cljs.core.first.call(null, coll));
      if (cljs.core._EQ_.call(null, v, new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900))) {
        return null;
      } else {
        return k.call(null, v, pos + 1, cljs.core.rest.call(null, coll));
      }
    } else {
      return null;
    }
  };
};
malli.impl.regex.item_unparser = function malli$impl$regex$item_unparser(unparse) {
  return function(v) {
    return malli.impl.util._map_valid.call(null, cljs.core.vector, unparse.call(null, v));
  };
};
malli.impl.regex.item_encoder = function malli$impl$regex$item_encoder(valid_QMARK_, encode) {
  return function(_, ___$1, coll_STAR_, pos, coll, k) {
    if (cljs.core.seq.call(null, coll)) {
      var v = cljs.core.first.call(null, coll);
      if (cljs.core.truth_(valid_QMARK_.call(null, v))) {
        return k.call(null, cljs.core.conj.call(null, coll_STAR_, encode.call(null, v)), pos + 1, cljs.core.rest.call(null, coll));
      } else {
        return null;
      }
    } else {
      return null;
    }
  };
};
malli.impl.regex.item_decoder = function malli$impl$regex$item_decoder(decode, valid_QMARK_) {
  return function(_, ___$1, coll_STAR_, pos, coll, k) {
    if (cljs.core.seq.call(null, coll)) {
      var v = decode.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(valid_QMARK_.call(null, v))) {
        return k.call(null, cljs.core.conj.call(null, coll_STAR_, v), pos + 1, cljs.core.rest.call(null, coll));
      } else {
        return null;
      }
    } else {
      return null;
    }
  };
};
malli.impl.regex.item_transformer = function malli$impl$regex$item_transformer(method, validator, t) {
  var G__2709 = method;
  var G__2709__$1 = G__2709 instanceof cljs.core.Keyword ? G__2709.fqn : null;
  switch(G__2709__$1) {
    case "encode":
      return malli.impl.regex.item_encoder.call(null, validator, t);
      break;
    case "decode":
      return malli.impl.regex.item_decoder.call(null, t, validator);
      break;
    default:
      throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__2709__$1)].join(""));
  }
};
malli.impl.regex.end_validator = function malli$impl$regex$end_validator() {
  return function(_, ___$1, pos, coll, k) {
    if (cljs.core.empty_QMARK_.call(null, coll)) {
      return k.call(null, pos, coll);
    } else {
      return null;
    }
  };
};
malli.impl.regex.end_explainer = function malli$impl$regex$end_explainer(schema, path) {
  return function(driver, _, pos, coll, k) {
    if (cljs.core.empty_QMARK_.call(null, coll)) {
      return k.call(null, pos, coll);
    } else {
      return malli.impl.regex.fail_BANG_.call(null, driver, pos, new cljs.core.List(null, malli.impl.util._error.call(null, path, malli.impl.regex.value_path.call(null, driver, pos), schema, cljs.core.first.call(null, coll), new cljs.core.Keyword("malli.core", "input-remaining", "malli.core/input-remaining", 372310422)), null, 1, null));
    }
  };
};
malli.impl.regex.end_parser = function malli$impl$regex$end_parser() {
  return function(_, ___$1, pos, coll, k) {
    if (cljs.core.empty_QMARK_.call(null, coll)) {
      return k.call(null, null, pos, coll);
    } else {
      return null;
    }
  };
};
malli.impl.regex.end_transformer = function malli$impl$regex$end_transformer() {
  return function(_, ___$1, coll_STAR_, pos, coll, k) {
    if (cljs.core.empty_QMARK_.call(null, coll)) {
      return k.call(null, coll_STAR_, pos, coll);
    } else {
      return null;
    }
  };
};
malli.impl.regex.pure_parser = function malli$impl$regex$pure_parser(v) {
  return function(_, ___$1, pos, coll, k) {
    return k.call(null, v, pos, coll);
  };
};
malli.impl.regex.pure_unparser = function malli$impl$regex$pure_unparser(_) {
  return cljs.core.PersistentVector.EMPTY;
};
malli.impl.regex.fmap_parser = function malli$impl$regex$fmap_parser(f, p) {
  return function(driver, regs, pos, coll, k) {
    return p.call(null, driver, regs, pos, coll, function(v, pos__$1, coll__$1) {
      return k.call(null, f.call(null, v), pos__$1, coll__$1);
    });
  };
};
malli.impl.regex.entry__GT_regex = function malli$impl$regex$entry__GT_regex(_QMARK_kr) {
  if (cljs.core.vector_QMARK_.call(null, _QMARK_kr)) {
    return cljs.core.get.call(null, _QMARK_kr, 1);
  } else {
    return _QMARK_kr;
  }
};
malli.impl.regex.cat_validator = function malli$impl$regex$cat_validator(var_args) {
  var G__2714 = arguments.length;
  switch(G__2714) {
    case 0:
      return malli.impl.regex.cat_validator.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2716 = arguments.length;
      var i__4642__auto___2717 = 0;
      while (true) {
        if (i__4642__auto___2717 < len__4641__auto___2716) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2717]);
          var G__2718 = i__4642__auto___2717 + 1;
          i__4642__auto___2717 = G__2718;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(1), 0, null);
      return malli.impl.regex.cat_validator.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4663__auto__);
  }
};
malli.impl.regex.cat_validator.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(_, ___$1, pos, coll, k) {
    return k.call(null, pos, coll);
  };
};
malli.impl.regex.cat_validator.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_kr, _QMARK_krs) {
  return cljs.core.reduce.call(null, function(acc, _QMARK_kr__$1) {
    var r_STAR_ = malli.impl.regex.entry__GT_regex.call(null, _QMARK_kr__$1);
    return function(r_STAR_) {
      return function(driver, regs, pos, coll, k) {
        return acc.call(null, driver, regs, pos, coll, function(r_STAR_) {
          return function(pos__$1, coll__$1) {
            return r_STAR_.call(null, driver, regs, pos__$1, coll__$1, k);
          };
        }(r_STAR_));
      };
    }(r_STAR_);
  }, malli.impl.regex.entry__GT_regex.call(null, _QMARK_kr), _QMARK_krs);
};
malli.impl.regex.cat_validator.cljs$lang$applyTo = function(seq2712) {
  var G__2713 = cljs.core.first.call(null, seq2712);
  var seq2712__$1 = cljs.core.next.call(null, seq2712);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2713, seq2712__$1);
};
malli.impl.regex.cat_validator.cljs$lang$maxFixedArity = 1;
malli.impl.regex.cat_explainer = function malli$impl$regex$cat_explainer(var_args) {
  var G__2722 = arguments.length;
  switch(G__2722) {
    case 0:
      return malli.impl.regex.cat_explainer.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2724 = arguments.length;
      var i__4642__auto___2725 = 0;
      while (true) {
        if (i__4642__auto___2725 < len__4641__auto___2724) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2725]);
          var G__2726 = i__4642__auto___2725 + 1;
          i__4642__auto___2725 = G__2726;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(1), 0, null);
      return malli.impl.regex.cat_explainer.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4663__auto__);
  }
};
malli.impl.regex.cat_explainer.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(_, ___$1, pos, coll, k) {
    return k.call(null, pos, coll);
  };
};
malli.impl.regex.cat_explainer.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_kr, _QMARK_krs) {
  return cljs.core.reduce.call(null, function(acc, _QMARK_kr__$1) {
    var r_STAR_ = malli.impl.regex.entry__GT_regex.call(null, _QMARK_kr__$1);
    return function(r_STAR_) {
      return function(driver, regs, pos, coll, k) {
        return acc.call(null, driver, regs, pos, coll, function(r_STAR_) {
          return function(pos__$1, coll__$1) {
            return r_STAR_.call(null, driver, regs, pos__$1, coll__$1, k);
          };
        }(r_STAR_));
      };
    }(r_STAR_);
  }, malli.impl.regex.entry__GT_regex.call(null, _QMARK_kr), _QMARK_krs);
};
malli.impl.regex.cat_explainer.cljs$lang$applyTo = function(seq2720) {
  var G__2721 = cljs.core.first.call(null, seq2720);
  var seq2720__$1 = cljs.core.next.call(null, seq2720);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2721, seq2720__$1);
};
malli.impl.regex.cat_explainer.cljs$lang$maxFixedArity = 1;
malli.impl.regex.cat_parser = function malli$impl$regex$cat_parser(var_args) {
  var G__2730 = arguments.length;
  switch(G__2730) {
    case 0:
      return malli.impl.regex.cat_parser.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2732 = arguments.length;
      var i__4642__auto___2733 = 0;
      while (true) {
        if (i__4642__auto___2733 < len__4641__auto___2732) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2733]);
          var G__2734 = i__4642__auto___2733 + 1;
          i__4642__auto___2733 = G__2734;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(1), 0, null);
      return malli.impl.regex.cat_parser.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4663__auto__);
  }
};
malli.impl.regex.cat_parser.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(_, ___$1, pos, coll, k) {
    return k.call(null, cljs.core.PersistentVector.EMPTY, pos, coll);
  };
};
malli.impl.regex.cat_parser.cljs$core$IFn$_invoke$arity$variadic = function(r, rs) {
  var sp = cljs.core.reduce.call(null, function(acc, r__$1) {
    return function(driver, regs, coll_STAR_, pos, coll, k) {
      return r__$1.call(null, driver, regs, pos, coll, function(v, pos__$1, coll__$1) {
        return acc.call(null, driver, regs, cljs.core.conj.call(null, coll_STAR_, v), pos__$1, coll__$1, k);
      });
    };
  }, function(_, ___$1, coll_STAR_, pos, coll, k) {
    return k.call(null, coll_STAR_, pos, coll);
  }, cljs.core.reverse.call(null, cljs.core.cons.call(null, r, rs)));
  return function(sp) {
    return function(driver, regs, pos, coll, k) {
      return sp.call(null, driver, regs, cljs.core.PersistentVector.EMPTY, pos, coll, k);
    };
  }(sp);
};
malli.impl.regex.cat_parser.cljs$lang$applyTo = function(seq2728) {
  var G__2729 = cljs.core.first.call(null, seq2728);
  var seq2728__$1 = cljs.core.next.call(null, seq2728);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2729, seq2728__$1);
};
malli.impl.regex.cat_parser.cljs$lang$maxFixedArity = 1;
malli.impl.regex.catn_parser = function malli$impl$regex$catn_parser(var_args) {
  var G__2738 = arguments.length;
  switch(G__2738) {
    case 0:
      return malli.impl.regex.catn_parser.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2744 = arguments.length;
      var i__4642__auto___2745 = 0;
      while (true) {
        if (i__4642__auto___2745 < len__4641__auto___2744) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2745]);
          var G__2746 = i__4642__auto___2745 + 1;
          i__4642__auto___2745 = G__2746;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(1), 0, null);
      return malli.impl.regex.catn_parser.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4663__auto__);
  }
};
malli.impl.regex.catn_parser.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(_, ___$1, pos, coll, k) {
    return k.call(null, cljs.core.PersistentArrayMap.EMPTY, pos, coll);
  };
};
malli.impl.regex.catn_parser.cljs$core$IFn$_invoke$arity$variadic = function(kr, krs) {
  var sp = cljs.core.reduce.call(null, function(acc, p__2739) {
    var vec__2740 = p__2739;
    var tag = cljs.core.nth.call(null, vec__2740, 0, null);
    var r = cljs.core.nth.call(null, vec__2740, 1, null);
    return function(vec__2740, tag, r) {
      return function(driver, regs, m, pos, coll, k) {
        return r.call(null, driver, regs, pos, coll, function(vec__2740, tag, r) {
          return function(v, pos__$1, coll__$1) {
            return acc.call(null, driver, regs, cljs.core.assoc.call(null, m, tag, v), pos__$1, coll__$1, k);
          };
        }(vec__2740, tag, r));
      };
    }(vec__2740, tag, r);
  }, function(_, ___$1, m, pos, coll, k) {
    return k.call(null, m, pos, coll);
  }, cljs.core.reverse.call(null, cljs.core.cons.call(null, kr, krs)));
  return function(sp) {
    return function(driver, regs, pos, coll, k) {
      return sp.call(null, driver, regs, cljs.core.PersistentArrayMap.EMPTY, pos, coll, k);
    };
  }(sp);
};
malli.impl.regex.catn_parser.cljs$lang$applyTo = function(seq2736) {
  var G__2737 = cljs.core.first.call(null, seq2736);
  var seq2736__$1 = cljs.core.next.call(null, seq2736);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2737, seq2736__$1);
};
malli.impl.regex.catn_parser.cljs$lang$maxFixedArity = 1;
malli.impl.regex.cat_unparser = function malli$impl$regex$cat_unparser(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___2749 = arguments.length;
  var i__4642__auto___2750 = 0;
  while (true) {
    if (i__4642__auto___2750 < len__4641__auto___2749) {
      args__4647__auto__.push(arguments[i__4642__auto___2750]);
      var G__2751 = i__4642__auto___2750 + 1;
      i__4642__auto___2750 = G__2751;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.cat_unparser.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
malli.impl.regex.cat_unparser.cljs$core$IFn$_invoke$arity$variadic = function(unparsers) {
  var unparsers__$1 = cljs.core.vec.call(null, unparsers);
  return function(unparsers__$1) {
    return function(tup) {
      if (cljs.core.vector_QMARK_.call(null, tup) && cljs.core._EQ_.call(null, cljs.core.count.call(null, tup), cljs.core.count.call(null, unparsers__$1))) {
        return cljs.core.reduce_kv.call(null, function(unparsers__$1) {
          return function(coll, i, unparser) {
            return malli.impl.util._map_valid.call(null, function(unparsers__$1) {
              return function(p1__2747_SHARP_) {
                return cljs.core.into.call(null, coll, p1__2747_SHARP_);
              };
            }(unparsers__$1), unparser.call(null, cljs.core.get.call(null, tup, i)));
          };
        }(unparsers__$1), cljs.core.PersistentVector.EMPTY, unparsers__$1);
      } else {
        return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
      }
    };
  }(unparsers__$1);
};
malli.impl.regex.cat_unparser.cljs$lang$maxFixedArity = 0;
malli.impl.regex.cat_unparser.cljs$lang$applyTo = function(seq2748) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2748));
};
malli.impl.regex.catn_unparser = function malli$impl$regex$catn_unparser(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___2754 = arguments.length;
  var i__4642__auto___2755 = 0;
  while (true) {
    if (i__4642__auto___2755 < len__4641__auto___2754) {
      args__4647__auto__.push(arguments[i__4642__auto___2755]);
      var G__2756 = i__4642__auto___2755 + 1;
      i__4642__auto___2755 = G__2756;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.catn_unparser.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
malli.impl.regex.catn_unparser.cljs$core$IFn$_invoke$arity$variadic = function(unparsers) {
  var unparsers__$1 = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, unparsers);
  return function(unparsers__$1) {
    return function(m) {
      if (cljs.core.map_QMARK_.call(null, m) && cljs.core._EQ_.call(null, cljs.core.count.call(null, m), cljs.core.count.call(null, unparsers__$1))) {
        return cljs.core.reduce_kv.call(null, function(unparsers__$1) {
          return function(coll, tag, unparser) {
            var temp__5722__auto__ = cljs.core.find.call(null, m, tag);
            if (temp__5722__auto__ == null) {
              return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
            } else {
              var kv = temp__5722__auto__;
              return malli.impl.util._map_valid.call(null, function(kv, temp__5722__auto__, unparsers__$1) {
                return function(p1__2752_SHARP_) {
                  return cljs.core.into.call(null, coll, p1__2752_SHARP_);
                };
              }(kv, temp__5722__auto__, unparsers__$1), unparser.call(null, cljs.core.val.call(null, kv)));
            }
          };
        }(unparsers__$1), cljs.core.PersistentVector.EMPTY, unparsers__$1);
      } else {
        return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
      }
    };
  }(unparsers__$1);
};
malli.impl.regex.catn_unparser.cljs$lang$maxFixedArity = 0;
malli.impl.regex.catn_unparser.cljs$lang$applyTo = function(seq2753) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2753));
};
malli.impl.regex.cat_transformer = function malli$impl$regex$cat_transformer(var_args) {
  var G__2760 = arguments.length;
  switch(G__2760) {
    case 0:
      return malli.impl.regex.cat_transformer.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___2762 = arguments.length;
      var i__4642__auto___2763 = 0;
      while (true) {
        if (i__4642__auto___2763 < len__4641__auto___2762) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___2763]);
          var G__2764 = i__4642__auto___2763 + 1;
          i__4642__auto___2763 = G__2764;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(1), 0, null);
      return malli.impl.regex.cat_transformer.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4663__auto__);
  }
};
malli.impl.regex.cat_transformer.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(_, ___$1, coll_STAR_, pos, coll, k) {
    return k.call(null, coll_STAR_, pos, coll);
  };
};
malli.impl.regex.cat_transformer.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_kr, _QMARK_krs) {
  return cljs.core.reduce.call(null, function(acc, _QMARK_kr__$1) {
    var r = malli.impl.regex.entry__GT_regex.call(null, _QMARK_kr__$1);
    return function(r) {
      return function(driver, regs, coll_STAR_, pos, coll, k) {
        return acc.call(null, driver, regs, coll_STAR_, pos, coll, function(r) {
          return function(coll_STAR___$1, pos__$1, coll__$1) {
            return r.call(null, driver, regs, coll_STAR___$1, pos__$1, coll__$1, k);
          };
        }(r));
      };
    }(r);
  }, malli.impl.regex.entry__GT_regex.call(null, _QMARK_kr), _QMARK_krs);
};
malli.impl.regex.cat_transformer.cljs$lang$applyTo = function(seq2758) {
  var G__2759 = cljs.core.first.call(null, seq2758);
  var seq2758__$1 = cljs.core.next.call(null, seq2758);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2759, seq2758__$1);
};
malli.impl.regex.cat_transformer.cljs$lang$maxFixedArity = 1;
malli.impl.regex.alt_validator = function malli$impl$regex$alt_validator(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___2766 = arguments.length;
  var i__4642__auto___2767 = 0;
  while (true) {
    if (i__4642__auto___2767 < len__4641__auto___2766) {
      args__4647__auto__.push(arguments[i__4642__auto___2767]);
      var G__2768 = i__4642__auto___2767 + 1;
      i__4642__auto___2767 = G__2768;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.alt_validator.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
malli.impl.regex.alt_validator.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_krs) {
  return cljs.core.reduce.call(null, function(acc, _QMARK_kr) {
    var r = malli.impl.regex.entry__GT_regex.call(null, acc);
    var r_STAR_ = malli.impl.regex.entry__GT_regex.call(null, _QMARK_kr);
    return function(r, r_STAR_) {
      return function(driver, regs, pos, coll, k) {
        malli.impl.regex.park_validator_BANG_.call(null, driver, r_STAR_, regs, pos, coll, k);
        return malli.impl.regex.park_validator_BANG_.call(null, driver, r, regs, pos, coll, k);
      };
    }(r, r_STAR_);
  }, _QMARK_krs);
};
malli.impl.regex.alt_validator.cljs$lang$maxFixedArity = 0;
malli.impl.regex.alt_validator.cljs$lang$applyTo = function(seq2765) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2765));
};
malli.impl.regex.alt_explainer = function malli$impl$regex$alt_explainer(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___2770 = arguments.length;
  var i__4642__auto___2771 = 0;
  while (true) {
    if (i__4642__auto___2771 < len__4641__auto___2770) {
      args__4647__auto__.push(arguments[i__4642__auto___2771]);
      var G__2772 = i__4642__auto___2771 + 1;
      i__4642__auto___2771 = G__2772;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.alt_explainer.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
malli.impl.regex.alt_explainer.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_krs) {
  return cljs.core.reduce.call(null, function(acc, _QMARK_kr) {
    var r = malli.impl.regex.entry__GT_regex.call(null, acc);
    var r_STAR_ = malli.impl.regex.entry__GT_regex.call(null, _QMARK_kr);
    return function(r, r_STAR_) {
      return function(driver, regs, pos, coll, k) {
        malli.impl.regex.park_explainer_BANG_.call(null, driver, r_STAR_, regs, pos, coll, k);
        return malli.impl.regex.park_explainer_BANG_.call(null, driver, r, regs, pos, coll, k);
      };
    }(r, r_STAR_);
  }, _QMARK_krs);
};
malli.impl.regex.alt_explainer.cljs$lang$maxFixedArity = 0;
malli.impl.regex.alt_explainer.cljs$lang$applyTo = function(seq2769) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2769));
};
malli.impl.regex.alt_parser = function malli$impl$regex$alt_parser(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___2774 = arguments.length;
  var i__4642__auto___2775 = 0;
  while (true) {
    if (i__4642__auto___2775 < len__4641__auto___2774) {
      args__4647__auto__.push(arguments[i__4642__auto___2775]);
      var G__2776 = i__4642__auto___2775 + 1;
      i__4642__auto___2775 = G__2776;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.alt_parser.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
malli.impl.regex.alt_parser.cljs$core$IFn$_invoke$arity$variadic = function(rs) {
  return cljs.core.reduce.call(null, function(r, r_STAR_) {
    return function(driver, regs, pos, coll, k) {
      malli.impl.regex.park_validator_BANG_.call(null, driver, r_STAR_, regs, pos, coll, k);
      return malli.impl.regex.park_validator_BANG_.call(null, driver, r, regs, pos, coll, k);
    };
  }, rs);
};
malli.impl.regex.alt_parser.cljs$lang$maxFixedArity = 0;
malli.impl.regex.alt_parser.cljs$lang$applyTo = function(seq2773) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2773));
};
malli.impl.regex.altn_parser = function malli$impl$regex$altn_parser(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___2786 = arguments.length;
  var i__4642__auto___2787 = 0;
  while (true) {
    if (i__4642__auto___2787 < len__4641__auto___2786) {
      args__4647__auto__.push(arguments[i__4642__auto___2787]);
      var G__2788 = i__4642__auto___2787 + 1;
      i__4642__auto___2787 = G__2788;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 1 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(1), 0, null) : null;
  return malli.impl.regex.altn_parser.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4648__auto__);
};
malli.impl.regex.altn_parser.cljs$core$IFn$_invoke$arity$variadic = function(kr, krs) {
  return cljs.core.reduce.call(null, function(r, p__2779) {
    var vec__2780 = p__2779;
    var tag = cljs.core.nth.call(null, vec__2780, 0, null);
    var r_STAR_ = cljs.core.nth.call(null, vec__2780, 1, null);
    var r_STAR___$1 = malli.impl.regex.fmap_parser.call(null, function(vec__2780, tag, r_STAR_) {
      return function(v) {
        return malli.impl.util._tagged.call(null, tag, v);
      };
    }(vec__2780, tag, r_STAR_), r_STAR_);
    return function(r_STAR___$1, vec__2780, tag, r_STAR_) {
      return function(driver, regs, pos, coll, k) {
        malli.impl.regex.park_validator_BANG_.call(null, driver, r_STAR___$1, regs, pos, coll, k);
        return malli.impl.regex.park_validator_BANG_.call(null, driver, r, regs, pos, coll, k);
      };
    }(r_STAR___$1, vec__2780, tag, r_STAR_);
  }, function() {
    var vec__2783 = kr;
    var tag = cljs.core.nth.call(null, vec__2783, 0, null);
    var r = cljs.core.nth.call(null, vec__2783, 1, null);
    return malli.impl.regex.fmap_parser.call(null, function(vec__2783, tag, r) {
      return function(v) {
        return malli.impl.util._tagged.call(null, tag, v);
      };
    }(vec__2783, tag, r), r);
  }(), krs);
};
malli.impl.regex.altn_parser.cljs$lang$maxFixedArity = 1;
malli.impl.regex.altn_parser.cljs$lang$applyTo = function(seq2777) {
  var G__2778 = cljs.core.first.call(null, seq2777);
  var seq2777__$1 = cljs.core.next.call(null, seq2777);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2778, seq2777__$1);
};
malli.impl.regex.alt_unparser = function malli$impl$regex$alt_unparser(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___2790 = arguments.length;
  var i__4642__auto___2791 = 0;
  while (true) {
    if (i__4642__auto___2791 < len__4641__auto___2790) {
      args__4647__auto__.push(arguments[i__4642__auto___2791]);
      var G__2792 = i__4642__auto___2791 + 1;
      i__4642__auto___2791 = G__2792;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.alt_unparser.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
malli.impl.regex.alt_unparser.cljs$core$IFn$_invoke$arity$variadic = function(unparsers) {
  return function(x) {
    return cljs.core.reduce.call(null, function(_, unparse) {
      return malli.impl.util._map_valid.call(null, cljs.core.reduced, unparse.call(null, x));
    }, new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900), unparsers);
  };
};
malli.impl.regex.alt_unparser.cljs$lang$maxFixedArity = 0;
malli.impl.regex.alt_unparser.cljs$lang$applyTo = function(seq2789) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2789));
};
malli.impl.regex.altn_unparser = function malli$impl$regex$altn_unparser(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___2794 = arguments.length;
  var i__4642__auto___2795 = 0;
  while (true) {
    if (i__4642__auto___2795 < len__4641__auto___2794) {
      args__4647__auto__.push(arguments[i__4642__auto___2795]);
      var G__2796 = i__4642__auto___2795 + 1;
      i__4642__auto___2795 = G__2796;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.altn_unparser.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
malli.impl.regex.altn_unparser.cljs$core$IFn$_invoke$arity$variadic = function(unparsers) {
  var unparsers__$1 = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, unparsers);
  return function(unparsers__$1) {
    return function(x) {
      if (malli.impl.util._tagged_QMARK_.call(null, x)) {
        var temp__5722__auto__ = cljs.core.find.call(null, unparsers__$1, cljs.core.key.call(null, x));
        if (temp__5722__auto__ == null) {
          return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
        } else {
          var kv = temp__5722__auto__;
          return cljs.core.val.call(null, kv).call(null, cljs.core.val.call(null, x));
        }
      } else {
        return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
      }
    };
  }(unparsers__$1);
};
malli.impl.regex.altn_unparser.cljs$lang$maxFixedArity = 0;
malli.impl.regex.altn_unparser.cljs$lang$applyTo = function(seq2793) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2793));
};
malli.impl.regex.alt_transformer = function malli$impl$regex$alt_transformer(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___2798 = arguments.length;
  var i__4642__auto___2799 = 0;
  while (true) {
    if (i__4642__auto___2799 < len__4641__auto___2798) {
      args__4647__auto__.push(arguments[i__4642__auto___2799]);
      var G__2800 = i__4642__auto___2799 + 1;
      i__4642__auto___2799 = G__2800;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.alt_transformer.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
malli.impl.regex.alt_transformer.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_krs) {
  return cljs.core.reduce.call(null, function(acc, _QMARK_kr) {
    var r = malli.impl.regex.entry__GT_regex.call(null, acc);
    var r_STAR_ = malli.impl.regex.entry__GT_regex.call(null, _QMARK_kr);
    return function(r, r_STAR_) {
      return function(driver, regs, coll_STAR_, pos, coll, k) {
        malli.impl.regex.park_transformer_BANG_.call(null, driver, r_STAR_, regs, coll_STAR_, pos, coll, k);
        return malli.impl.regex.park_transformer_BANG_.call(null, driver, r, regs, coll_STAR_, pos, coll, k);
      };
    }(r, r_STAR_);
  }, _QMARK_krs);
};
malli.impl.regex.alt_transformer.cljs$lang$maxFixedArity = 0;
malli.impl.regex.alt_transformer.cljs$lang$applyTo = function(seq2797) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2797));
};
malli.impl.regex._QMARK__validator = function malli$impl$regex$_QMARK__validator(p) {
  return malli.impl.regex.alt_validator.call(null, p, malli.impl.regex.cat_validator.call(null));
};
malli.impl.regex._QMARK__explainer = function malli$impl$regex$_QMARK__explainer(p) {
  return malli.impl.regex.alt_explainer.call(null, p, malli.impl.regex.cat_explainer.call(null));
};
malli.impl.regex._QMARK__parser = function malli$impl$regex$_QMARK__parser(p) {
  return malli.impl.regex.alt_parser.call(null, p, malli.impl.regex.pure_parser.call(null, null));
};
malli.impl.regex._QMARK__unparser = function malli$impl$regex$_QMARK__unparser(p) {
  return malli.impl.regex.alt_unparser.call(null, p, malli.impl.regex.pure_unparser);
};
malli.impl.regex._QMARK__transformer = function malli$impl$regex$_QMARK__transformer(p) {
  return malli.impl.regex.alt_transformer.call(null, p, malli.impl.regex.cat_transformer.call(null));
};
malli.impl.regex._STAR__validator = function malli$impl$regex$_STAR__validator(p) {
  var _STAR_p_epsilon = malli.impl.regex.cat_validator.call(null);
  return function(_STAR_p_epsilon) {
    return function malli$impl$regex$_STAR__validator_$__STAR_p(driver, regs, pos, coll, k) {
      malli.impl.regex.park_validator_BANG_.call(null, driver, _STAR_p_epsilon, regs, pos, coll, k);
      return p.call(null, driver, regs, pos, coll, function(_STAR_p_epsilon) {
        return function(pos__$1, coll__$1) {
          return malli.impl.regex.park_validator_BANG_.call(null, driver, malli$impl$regex$_STAR__validator_$__STAR_p, regs, pos__$1, coll__$1, k);
        };
      }(_STAR_p_epsilon));
    };
  }(_STAR_p_epsilon);
};
malli.impl.regex._STAR__explainer = function malli$impl$regex$_STAR__explainer(p) {
  var _STAR_p_epsilon = malli.impl.regex.cat_explainer.call(null);
  return function(_STAR_p_epsilon) {
    return function malli$impl$regex$_STAR__explainer_$__STAR_p(driver, regs, pos, coll, k) {
      malli.impl.regex.park_explainer_BANG_.call(null, driver, _STAR_p_epsilon, regs, pos, coll, k);
      return p.call(null, driver, regs, pos, coll, function(_STAR_p_epsilon) {
        return function(pos__$1, coll__$1) {
          return malli.impl.regex.park_explainer_BANG_.call(null, driver, malli$impl$regex$_STAR__explainer_$__STAR_p, regs, pos__$1, coll__$1, k);
        };
      }(_STAR_p_epsilon));
    };
  }(_STAR_p_epsilon);
};
malli.impl.regex._STAR__parser = function malli$impl$regex$_STAR__parser(p) {
  var _STAR_p_epsilon = function(_, ___$1, coll_STAR_, pos, coll, k) {
    return k.call(null, coll_STAR_, pos, coll);
  };
  return function(_STAR_p_epsilon) {
    return function() {
      var malli$impl$regex$_STAR__parser_$__STAR_p = null;
      var malli$impl$regex$_STAR__parser_$__STAR_p__5 = function(driver, regs, pos, coll, k) {
        return malli$impl$regex$_STAR__parser_$__STAR_p.call(null, driver, regs, cljs.core.PersistentVector.EMPTY, pos, coll, k);
      };
      var malli$impl$regex$_STAR__parser_$__STAR_p__6 = function(driver, regs, coll_STAR_, pos, coll, k) {
        malli.impl.regex.park_transformer_BANG_.call(null, driver, _STAR_p_epsilon, regs, coll_STAR_, pos, coll, k);
        return p.call(null, driver, regs, pos, coll, function(_STAR_p_epsilon) {
          return function(v, pos__$1, coll__$1) {
            return malli.impl.regex.park_transformer_BANG_.call(null, driver, malli$impl$regex$_STAR__parser_$__STAR_p, regs, cljs.core.conj.call(null, coll_STAR_, v), pos__$1, coll__$1, k);
          };
        }(_STAR_p_epsilon));
      };
      malli$impl$regex$_STAR__parser_$__STAR_p = function(driver, regs, coll_STAR_, pos, coll, k) {
        switch(arguments.length) {
          case 5:
            return malli$impl$regex$_STAR__parser_$__STAR_p__5.call(this, driver, regs, coll_STAR_, pos, coll);
          case 6:
            return malli$impl$regex$_STAR__parser_$__STAR_p__6.call(this, driver, regs, coll_STAR_, pos, coll, k);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      malli$impl$regex$_STAR__parser_$__STAR_p.cljs$core$IFn$_invoke$arity$5 = malli$impl$regex$_STAR__parser_$__STAR_p__5;
      malli$impl$regex$_STAR__parser_$__STAR_p.cljs$core$IFn$_invoke$arity$6 = malli$impl$regex$_STAR__parser_$__STAR_p__6;
      return malli$impl$regex$_STAR__parser_$__STAR_p;
    }();
  }(_STAR_p_epsilon);
};
malli.impl.regex._STAR__unparser = function malli$impl$regex$_STAR__unparser(up) {
  return function(v) {
    return cljs.core.reduce.call(null, function(acc, v__$1) {
      var result = up.call(null, v__$1);
      if (malli.impl.util._invalid_QMARK_.call(null, result)) {
        return cljs.core.reduced.call(null, result);
      } else {
        return cljs.core.into.call(null, acc, result);
      }
    }, cljs.core.PersistentVector.EMPTY, v);
  };
};
malli.impl.regex._STAR__transformer = function malli$impl$regex$_STAR__transformer(p) {
  var _STAR_p_epsilon = malli.impl.regex.cat_transformer.call(null);
  return function(_STAR_p_epsilon) {
    return function malli$impl$regex$_STAR__transformer_$__STAR_p(driver, regs, coll_STAR_, pos, coll, k) {
      malli.impl.regex.park_transformer_BANG_.call(null, driver, _STAR_p_epsilon, regs, coll_STAR_, pos, coll, k);
      return p.call(null, driver, regs, coll_STAR_, pos, coll, function(_STAR_p_epsilon) {
        return function(coll_STAR___$1, pos__$1, coll__$1) {
          return malli.impl.regex.park_transformer_BANG_.call(null, driver, malli$impl$regex$_STAR__transformer_$__STAR_p, regs, coll_STAR___$1, pos__$1, coll__$1, k);
        };
      }(_STAR_p_epsilon));
    };
  }(_STAR_p_epsilon);
};
malli.impl.regex._PLUS__validator = function malli$impl$regex$_PLUS__validator(p) {
  return malli.impl.regex.cat_validator.call(null, p, malli.impl.regex._STAR__validator.call(null, p));
};
malli.impl.regex._PLUS__explainer = function malli$impl$regex$_PLUS__explainer(p) {
  return malli.impl.regex.cat_explainer.call(null, p, malli.impl.regex._STAR__explainer.call(null, p));
};
malli.impl.regex._PLUS__parser = function malli$impl$regex$_PLUS__parser(p) {
  return malli.impl.regex.fmap_parser.call(null, function(p__2801) {
    var vec__2802 = p__2801;
    var v = cljs.core.nth.call(null, vec__2802, 0, null);
    var vs = cljs.core.nth.call(null, vec__2802, 1, null);
    return cljs.core.into.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [v], null), vs);
  }, malli.impl.regex.cat_parser.call(null, p, malli.impl.regex._STAR__parser.call(null, p)));
};
malli.impl.regex._PLUS__unparser = function malli$impl$regex$_PLUS__unparser(up) {
  var up_STAR_ = malli.impl.regex._STAR__unparser.call(null, up);
  return function(up_STAR_) {
    return function(x) {
      if (cljs.core.vector_QMARK_.call(null, x) && 1 <= cljs.core.count.call(null, x)) {
        return up_STAR_.call(null, x);
      } else {
        return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
      }
    };
  }(up_STAR_);
};
malli.impl.regex._PLUS__transformer = function malli$impl$regex$_PLUS__transformer(p) {
  return malli.impl.regex.cat_transformer.call(null, p, malli.impl.regex._STAR__transformer.call(null, p));
};
malli.impl.regex.repeat_validator = function malli$impl$regex$repeat_validator(min, max, p) {
  var rep_epsilon = malli.impl.regex.cat_validator.call(null);
  var compulsories = function(rep_epsilon) {
    return function malli$impl$regex$repeat_validator_$_compulsories(driver, regs, pos, coll, k) {
      if (cljs.core.peek.call(null, regs) < min) {
        return p.call(null, driver, regs, pos, coll, function(rep_epsilon) {
          return function(pos__$1, coll__$1) {
            return malli.impl.regex.noncaching_park_validator_BANG_.call(null, driver, function(rep_epsilon) {
              return function(driver__$1, stack, pos__$2, coll__$2, k__$1) {
                return malli$impl$regex$repeat_validator_$_compulsories.call(null, driver__$1, cljs.core.conj.call(null, cljs.core.pop.call(null, stack), cljs.core.peek.call(null, stack) + 1), pos__$2, coll__$2, k__$1);
              };
            }(rep_epsilon), regs, pos__$1, coll__$1, k);
          };
        }(rep_epsilon));
      } else {
        return optionals.call(null, driver, regs, pos, coll, k);
      }
    };
  }(rep_epsilon);
  var optionals = function(rep_epsilon) {
    return function malli$impl$regex$repeat_validator_$_optionals(driver, regs, pos, coll, k) {
      if (cljs.core.peek.call(null, regs) < max) {
        malli.impl.regex.park_validator_BANG_.call(null, driver, rep_epsilon, regs, pos, coll, k);
        return p.call(null, driver, regs, pos, coll, function(rep_epsilon) {
          return function(pos__$1, coll__$1) {
            return malli.impl.regex.noncaching_park_validator_BANG_.call(null, driver, function(rep_epsilon) {
              return function(driver__$1, regs__$1, pos__$2, coll__$2, k__$1) {
                return malli$impl$regex$repeat_validator_$_optionals.call(null, driver__$1, cljs.core.conj.call(null, cljs.core.pop.call(null, regs__$1), cljs.core.peek.call(null, regs__$1) + 1), pos__$2, coll__$2, k__$1);
              };
            }(rep_epsilon), regs, pos__$1, coll__$1, k);
          };
        }(rep_epsilon));
      } else {
        return k.call(null, pos, coll);
      }
    };
  }(rep_epsilon);
  return function(rep_epsilon) {
    return function(driver, regs, pos, coll, k) {
      return compulsories.call(null, driver, cljs.core.conj.call(null, regs, 0), pos, coll, k);
    };
  }(rep_epsilon);
};
malli.impl.regex.repeat_explainer = function malli$impl$regex$repeat_explainer(min, max, p) {
  var rep_epsilon = malli.impl.regex.cat_explainer.call(null);
  var compulsories = function(rep_epsilon) {
    return function malli$impl$regex$repeat_explainer_$_compulsories(driver, regs, pos, coll, k) {
      if (cljs.core.peek.call(null, regs) < min) {
        return p.call(null, driver, regs, pos, coll, function(rep_epsilon) {
          return function(pos__$1, coll__$1) {
            return malli.impl.regex.noncaching_park_explainer_BANG_.call(null, driver, function(rep_epsilon) {
              return function(driver__$1, regs__$1, pos__$2, coll__$2, k__$1) {
                return malli$impl$regex$repeat_explainer_$_compulsories.call(null, driver__$1, cljs.core.conj.call(null, cljs.core.pop.call(null, regs__$1), cljs.core.peek.call(null, regs__$1) + 1), pos__$2, coll__$2, k__$1);
              };
            }(rep_epsilon), regs, pos__$1, coll__$1, k);
          };
        }(rep_epsilon));
      } else {
        return optionals.call(null, driver, regs, pos, coll, k);
      }
    };
  }(rep_epsilon);
  var optionals = function(rep_epsilon) {
    return function malli$impl$regex$repeat_explainer_$_optionals(driver, regs, pos, coll, k) {
      if (cljs.core.peek.call(null, regs) < max) {
        malli.impl.regex.park_explainer_BANG_.call(null, driver, rep_epsilon, regs, pos, coll, k);
        return p.call(null, driver, regs, pos, coll, function(rep_epsilon) {
          return function(pos__$1, coll__$1) {
            return malli.impl.regex.noncaching_park_explainer_BANG_.call(null, driver, function(rep_epsilon) {
              return function(driver__$1, regs__$1, pos__$2, coll__$2, k__$1) {
                return malli$impl$regex$repeat_explainer_$_optionals.call(null, driver__$1, cljs.core.conj.call(null, cljs.core.pop.call(null, regs__$1), cljs.core.peek.call(null, regs__$1) + 1), pos__$2, coll__$2, k__$1);
              };
            }(rep_epsilon), regs, pos__$1, coll__$1, k);
          };
        }(rep_epsilon));
      } else {
        return k.call(null, pos, coll);
      }
    };
  }(rep_epsilon);
  return function(rep_epsilon) {
    return function(driver, regs, pos, coll, k) {
      return compulsories.call(null, driver, cljs.core.conj.call(null, regs, 0), pos, coll, k);
    };
  }(rep_epsilon);
};
malli.impl.regex.repeat_parser = function malli$impl$regex$repeat_parser(min, max, p) {
  var rep_epsilon = function(_, ___$1, coll_STAR_, pos, coll, k) {
    return k.call(null, coll_STAR_, pos, coll);
  };
  var compulsories = function(rep_epsilon) {
    return function malli$impl$regex$repeat_parser_$_compulsories(driver, regs, coll_STAR_, pos, coll, k) {
      if (cljs.core.peek.call(null, regs) < min) {
        return p.call(null, driver, regs, pos, coll, function(rep_epsilon) {
          return function(v, pos__$1, coll__$1) {
            return malli.impl.regex.noncaching_park_transformer_BANG_.call(null, driver, function(rep_epsilon) {
              return function(driver__$1, regs__$1, coll_STAR___$1, pos__$2, coll__$2, k__$1) {
                return malli$impl$regex$repeat_parser_$_compulsories.call(null, driver__$1, cljs.core.conj.call(null, cljs.core.pop.call(null, regs__$1), cljs.core.peek.call(null, regs__$1) + 1), cljs.core.conj.call(null, coll_STAR___$1, v), pos__$2, coll__$2, k__$1);
              };
            }(rep_epsilon), regs, coll_STAR_, pos__$1, coll__$1, k);
          };
        }(rep_epsilon));
      } else {
        return optionals.call(null, driver, regs, coll_STAR_, pos, coll, k);
      }
    };
  }(rep_epsilon);
  var optionals = function(rep_epsilon) {
    return function malli$impl$regex$repeat_parser_$_optionals(driver, regs, coll_STAR_, pos, coll, k) {
      if (cljs.core.peek.call(null, regs) < max) {
        malli.impl.regex.park_transformer_BANG_.call(null, driver, rep_epsilon, regs, coll_STAR_, pos, coll, k);
        return p.call(null, driver, regs, pos, coll, function(rep_epsilon) {
          return function(v, pos__$1, coll__$1) {
            return malli.impl.regex.noncaching_park_transformer_BANG_.call(null, driver, function(rep_epsilon) {
              return function(driver__$1, regs__$1, coll_STAR___$1, pos__$2, coll__$2, k__$1) {
                return malli$impl$regex$repeat_parser_$_optionals.call(null, driver__$1, cljs.core.conj.call(null, cljs.core.pop.call(null, regs__$1), cljs.core.peek.call(null, regs__$1) + 1), cljs.core.conj.call(null, coll_STAR___$1, v), pos__$2, coll__$2, k__$1);
              };
            }(rep_epsilon), regs, coll_STAR_, pos__$1, coll__$1, k);
          };
        }(rep_epsilon));
      } else {
        return k.call(null, coll_STAR_, pos, coll);
      }
    };
  }(rep_epsilon);
  return function(rep_epsilon) {
    return function(driver, regs, pos, coll, k) {
      return compulsories.call(null, driver, cljs.core.conj.call(null, regs, 0), cljs.core.PersistentVector.EMPTY, pos, coll, k);
    };
  }(rep_epsilon);
};
malli.impl.regex.repeat_unparser = function malli$impl$regex$repeat_unparser(min, max, up) {
  var up_STAR_ = malli.impl.regex._STAR__unparser.call(null, up);
  return function(up_STAR_) {
    return function(v) {
      if (cljs.core.vector_QMARK_.call(null, v) && (min <= cljs.core.count.call(null, v) && cljs.core.count.call(null, v) <= max)) {
        return up_STAR_.call(null, v);
      } else {
        return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
      }
    };
  }(up_STAR_);
};
malli.impl.regex.repeat_transformer = function malli$impl$regex$repeat_transformer(min, max, p) {
  var rep_epsilon = malli.impl.regex.cat_transformer.call(null);
  var compulsories = function(rep_epsilon) {
    return function malli$impl$regex$repeat_transformer_$_compulsories(driver, regs, coll_STAR_, pos, coll, k) {
      if (cljs.core.peek.call(null, regs) < min) {
        return p.call(null, driver, regs, coll_STAR_, pos, coll, function(rep_epsilon) {
          return function(coll_STAR___$1, pos__$1, coll__$1) {
            return malli.impl.regex.noncaching_park_transformer_BANG_.call(null, driver, function(rep_epsilon) {
              return function(driver__$1, regs__$1, coll_STAR___$2, pos__$2, coll__$2, k__$1) {
                return malli$impl$regex$repeat_transformer_$_compulsories.call(null, driver__$1, cljs.core.conj.call(null, cljs.core.pop.call(null, regs__$1), cljs.core.peek.call(null, regs__$1) + 1), coll_STAR___$2, pos__$2, coll__$2, k__$1);
              };
            }(rep_epsilon), regs, coll_STAR___$1, pos__$1, coll__$1, k);
          };
        }(rep_epsilon));
      } else {
        return optionals.call(null, driver, regs, coll_STAR_, pos, coll, k);
      }
    };
  }(rep_epsilon);
  var optionals = function(rep_epsilon) {
    return function malli$impl$regex$repeat_transformer_$_optionals(driver, regs, coll_STAR_, pos, coll, k) {
      if (cljs.core.peek.call(null, regs) < max) {
        malli.impl.regex.park_transformer_BANG_.call(null, driver, rep_epsilon, regs, coll_STAR_, pos, coll, k);
        return p.call(null, driver, regs, coll_STAR_, pos, coll, function(rep_epsilon) {
          return function(coll_STAR___$1, pos__$1, coll__$1) {
            return malli.impl.regex.noncaching_park_transformer_BANG_.call(null, driver, function(rep_epsilon) {
              return function(driver__$1, regs__$1, coll_STAR___$2, pos__$2, coll__$2, k__$1) {
                return malli$impl$regex$repeat_transformer_$_optionals.call(null, driver__$1, cljs.core.conj.call(null, cljs.core.pop.call(null, regs__$1), cljs.core.peek.call(null, regs__$1) + 1), coll_STAR___$2, pos__$2, coll__$2, k__$1);
              };
            }(rep_epsilon), regs, coll_STAR___$1, pos__$1, coll__$1, k);
          };
        }(rep_epsilon));
      } else {
        return k.call(null, coll_STAR_, pos, coll);
      }
    };
  }(rep_epsilon);
  return function(rep_epsilon) {
    return function(driver, regs, coll_STAR_, pos, coll, k) {
      return compulsories.call(null, driver, cljs.core.conj.call(null, regs, 0), coll_STAR_, pos, coll, k);
    };
  }(rep_epsilon);
};
malli.impl.regex.make_stack = function malli$impl$regex$make_stack() {
  return [];
};
malli.impl.regex.empty_stack_QMARK_ = function malli$impl$regex$empty_stack_QMARK_(stack) {
  return stack.length === 0;
};
malli.impl.regex.ICache = function() {
};
malli.impl.regex.ensure_cached_BANG_ = function malli$impl$regex$ensure_cached_BANG_(cache, f, pos, regs) {
  if (!(cache == null) && !(cache.malli$impl$regex$ICache$ensure_cached_BANG_$arity$4 == null)) {
    return cache.malli$impl$regex$ICache$ensure_cached_BANG_$arity$4(cache, f, pos, regs);
  } else {
    var x__4347__auto__ = cache == null ? null : cache;
    var m__4348__auto__ = malli.impl.regex.ensure_cached_BANG_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, cache, f, pos, regs);
    } else {
      var m__4348__auto____$1 = malli.impl.regex.ensure_cached_BANG_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, cache, f, pos, regs);
      } else {
        throw cljs.core.missing_protocol.call(null, "ICache.ensure-cached!", cache);
      }
    }
  }
};
malli.impl.regex.CacheEntry = function(hash, f, pos, regs) {
  this.hash = hash;
  this.f = f;
  this.pos = pos;
  this.regs = regs;
};
malli.impl.regex.CacheEntry.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "hash", "hash", 1626749931, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "long", "long", 1469079434, null)], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "pos", "pos", 775924307, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "long", "long", 1469079434, null)], null)), new cljs.core.Symbol(null, "regs", "regs", -1837635361, null)], null);
};
malli.impl.regex.CacheEntry.cljs$lang$type = true;
malli.impl.regex.CacheEntry.cljs$lang$ctorStr = "malli.impl.regex/CacheEntry";
malli.impl.regex.CacheEntry.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write.call(null, writer__4291__auto__, "malli.impl.regex/CacheEntry");
};
malli.impl.regex.__GT_CacheEntry = function malli$impl$regex$__GT_CacheEntry(hash, f, pos, regs) {
  return new malli.impl.regex.CacheEntry(hash, f, pos, regs);
};
malli.impl.regex.Cache = function(values, size) {
  this.values = values;
  this.size = size;
};
malli.impl.regex.Cache.prototype.malli$impl$regex$ICache$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.Cache.prototype.malli$impl$regex$ICache$ensure_cached_BANG_$arity$4 = function(_, f, pos, regs) {
  var self__ = this;
  var ___$1 = this;
  if (self__.size + 1 > self__.values.length >> 1) {
    var capacity_STAR__2805 = self__.values.length << 1;
    var values_STAR__2806 = cljs.core.object_array.call(null, capacity_STAR__2805);
    var max_index_2807 = capacity_STAR__2805 - 1;
    var a__4515__auto___2808 = self__.values;
    var l__4516__auto___2809 = a__4515__auto___2808.length;
    var i_2810 = 0;
    var __2811__$2 = null;
    while (true) {
      if (i_2810 < l__4516__auto___2809) {
        var G__2812 = i_2810 + 1;
        var G__2813 = function() {
          var temp__5724__auto__ = self__.values[i_2810];
          if (temp__5724__auto__ == null) {
            return null;
          } else {
            var v = temp__5724__auto__;
            var i_STAR_ = v.hash & max_index_2807;
            var collisions = 0;
            while (true) {
              if (cljs.core.truth_(values_STAR__2806[i_STAR_])) {
                var collisions__$1 = collisions + 1;
                var G__2814 = i_STAR_ + collisions__$1 & max_index_2807;
                var G__2815 = collisions__$1;
                i_STAR_ = G__2814;
                collisions = G__2815;
                continue;
              } else {
                return values_STAR__2806[i_STAR_] = v;
              }
              break;
            }
          }
        }();
        i_2810 = G__2812;
        __2811__$2 = G__2813;
        continue;
      } else {
      }
      break;
    }
    self__.values = values_STAR__2806;
  } else {
  }
  var capacity = self__.values.length;
  var max_index = capacity - 1;
  var h = cljs.core.hash_combine.call(null, cljs.core.hash_combine.call(null, cljs.core.hash.call(null, f), cljs.core.hash.call(null, pos)), cljs.core.hash.call(null, regs));
  var i = h & max_index;
  var collisions = 0;
  while (true) {
    var temp__5722__auto__ = self__.values[i];
    if (temp__5722__auto__ == null) {
      self__.values[i] = new malli.impl.regex.CacheEntry(h, f, pos, regs);
      self__.size = self__.size + 1;
      return false;
    } else {
      var entry = temp__5722__auto__;
      var or__4047__auto__ = cljs.core._EQ_.call(null, entry.hash, h) && cljs.core._EQ_.call(null, entry.f, f) && cljs.core._EQ_.call(null, entry.pos, pos) && cljs.core._EQ_.call(null, entry.regs, regs);
      if (or__4047__auto__) {
        return or__4047__auto__;
      } else {
        var collisions__$1 = collisions + 1;
        var G__2816 = i + collisions__$1 & max_index;
        var G__2817 = collisions__$1;
        i = G__2816;
        collisions = G__2817;
        continue;
      }
    }
    break;
  }
};
malli.impl.regex.Cache.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "values", "values", 2013177083, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "size", "size", -1555742762, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], 
  null);
};
malli.impl.regex.Cache.cljs$lang$type = true;
malli.impl.regex.Cache.cljs$lang$ctorStr = "malli.impl.regex/Cache";
malli.impl.regex.Cache.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write.call(null, writer__4291__auto__, "malli.impl.regex/Cache");
};
malli.impl.regex.__GT_Cache = function malli$impl$regex$__GT_Cache(values, size) {
  return new malli.impl.regex.Cache(values, size);
};
malli.impl.regex.make_cache = function malli$impl$regex$make_cache() {
  return new malli.impl.regex.Cache(cljs.core.object_array.call(null, 2), 0);
};
malli.impl.regex.CheckDriver = function(success, stack, cache) {
  this.success = success;
  this.stack = stack;
  this.cache = cache;
};
malli.impl.regex.CheckDriver.prototype.malli$impl$regex$Driver$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.CheckDriver.prototype.malli$impl$regex$Driver$succeed_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.success = cljs.core.boolean$.call(null, true);
};
malli.impl.regex.CheckDriver.prototype.malli$impl$regex$Driver$succeeded_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.success;
};
malli.impl.regex.CheckDriver.prototype.malli$impl$regex$Driver$pop_thunk_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (malli.impl.regex.empty_stack_QMARK_.call(null, self__.stack)) {
    return null;
  } else {
    return self__.stack.pop();
  }
};
malli.impl.regex.CheckDriver.prototype.malli$impl$regex$IValidationDriver$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.CheckDriver.prototype.malli$impl$regex$IValidationDriver$noncaching_park_validator_BANG_$arity$6 = function(self, validator, regs, pos, coll, k) {
  var self__ = this;
  var self__$1 = this;
  return self__.stack.push(function(self__$1) {
    return function() {
      return validator.call(null, self__$1, regs, pos, coll, k);
    };
  }(self__$1));
};
malli.impl.regex.CheckDriver.prototype.malli$impl$regex$IValidationDriver$park_validator_BANG_$arity$6 = function(self, validator, regs, pos, coll, k) {
  var self__ = this;
  var self__$1 = this;
  if (cljs.core.truth_(malli.impl.regex.ensure_cached_BANG_.call(null, self__.cache, validator, pos, regs))) {
    return null;
  } else {
    return malli.impl.regex.noncaching_park_validator_BANG_.call(null, self__$1, validator, regs, pos, coll, k);
  }
};
malli.impl.regex.CheckDriver.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "success", "success", -763789863, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null)], null);
};
malli.impl.regex.CheckDriver.cljs$lang$type = true;
malli.impl.regex.CheckDriver.cljs$lang$ctorStr = "malli.impl.regex/CheckDriver";
malli.impl.regex.CheckDriver.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write.call(null, writer__4291__auto__, "malli.impl.regex/CheckDriver");
};
malli.impl.regex.__GT_CheckDriver = function malli$impl$regex$__GT_CheckDriver(success, stack, cache) {
  return new malli.impl.regex.CheckDriver(success, stack, cache);
};
malli.impl.regex.ParseDriver = function(success, stack, cache, result) {
  this.success = success;
  this.stack = stack;
  this.cache = cache;
  this.result = result;
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$Driver$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$Driver$succeed_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.success = cljs.core.boolean$.call(null, true);
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$Driver$succeeded_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.success;
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$Driver$pop_thunk_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (malli.impl.regex.empty_stack_QMARK_.call(null, self__.stack)) {
    return null;
  } else {
    return self__.stack.pop();
  }
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IValidationDriver$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IValidationDriver$noncaching_park_validator_BANG_$arity$6 = function(self, validator, regs, pos, coll, k) {
  var self__ = this;
  var self__$1 = this;
  return self__.stack.push(function(self__$1) {
    return function() {
      return validator.call(null, self__$1, regs, pos, coll, k);
    };
  }(self__$1));
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IValidationDriver$park_validator_BANG_$arity$6 = function(self, validator, regs, pos, coll, k) {
  var self__ = this;
  var self__$1 = this;
  if (cljs.core.truth_(malli.impl.regex.ensure_cached_BANG_.call(null, self__.cache, validator, pos, regs))) {
    return null;
  } else {
    return malli.impl.regex.noncaching_park_validator_BANG_.call(null, self__$1, validator, regs, pos, coll, k);
  }
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IParseDriver$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IParseDriver$noncaching_park_transformer_BANG_$arity$7 = function(driver, transformer, regs, coll_STAR_, pos, coll, k) {
  var self__ = this;
  var driver__$1 = this;
  return self__.stack.push(function(driver__$1) {
    return function() {
      return transformer.call(null, driver__$1, regs, coll_STAR_, pos, coll, k);
    };
  }(driver__$1));
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IParseDriver$park_transformer_BANG_$arity$7 = function(driver, transformer, regs, coll_STAR_, pos, coll, k) {
  var self__ = this;
  var driver__$1 = this;
  if (cljs.core.truth_(malli.impl.regex.ensure_cached_BANG_.call(null, self__.cache, transformer, pos, regs))) {
    return null;
  } else {
    return malli.impl.regex.noncaching_park_transformer_BANG_.call(null, driver__$1, transformer, regs, coll_STAR_, pos, coll, k);
  }
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IParseDriver$succeed_with_BANG_$arity$2 = function(self, v) {
  var self__ = this;
  var self__$1 = this;
  malli.impl.regex.succeed_BANG_.call(null, self__$1);
  return self__.result = v;
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IParseDriver$success_result$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.result;
};
malli.impl.regex.ParseDriver.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "success", "success", -763789863, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), cljs.core.with_meta(new cljs.core.Symbol(null, "result", "result", -1239343558, 
  null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
malli.impl.regex.ParseDriver.cljs$lang$type = true;
malli.impl.regex.ParseDriver.cljs$lang$ctorStr = "malli.impl.regex/ParseDriver";
malli.impl.regex.ParseDriver.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write.call(null, writer__4291__auto__, "malli.impl.regex/ParseDriver");
};
malli.impl.regex.__GT_ParseDriver = function malli$impl$regex$__GT_ParseDriver(success, stack, cache, result) {
  return new malli.impl.regex.ParseDriver(success, stack, cache, result);
};
malli.impl.regex.validator = function malli$impl$regex$validator(p) {
  var p__$1 = malli.impl.regex.cat_validator.call(null, p, malli.impl.regex.end_validator.call(null));
  return function(p__$1) {
    return function(coll) {
      var and__4036__auto__ = cljs.core.sequential_QMARK_.call(null, coll);
      if (and__4036__auto__) {
        var driver = new malli.impl.regex.CheckDriver(false, malli.impl.regex.make_stack.call(null), malli.impl.regex.make_cache.call(null));
        p__$1.call(null, driver, cljs.core.List.EMPTY, 0, coll, function(driver, and__4036__auto__, p__$1) {
          return function(_, ___$1) {
            return malli.impl.regex.succeed_BANG_.call(null, driver);
          };
        }(driver, and__4036__auto__, p__$1));
        var or__4047__auto__ = malli.impl.regex.succeeded_QMARK_.call(null, driver);
        if (cljs.core.truth_(or__4047__auto__)) {
          return or__4047__auto__;
        } else {
          while (true) {
            var temp__5722__auto__ = malli.impl.regex.pop_thunk_BANG_.call(null, driver);
            if (temp__5722__auto__ == null) {
              return false;
            } else {
              var thunk = temp__5722__auto__;
              thunk.call(null);
              var or__4047__auto____$1 = malli.impl.regex.succeeded_QMARK_.call(null, driver);
              if (cljs.core.truth_(or__4047__auto____$1)) {
                return or__4047__auto____$1;
              } else {
                continue;
              }
            }
            break;
          }
        }
      } else {
        return and__4036__auto__;
      }
    };
  }(p__$1);
};
malli.impl.regex.ExplanationDriver = function(success, stack, cache, in$, errors_max_pos, errors) {
  this.success = success;
  this.stack = stack;
  this.cache = cache;
  this.in$ = in$;
  this.errors_max_pos = errors_max_pos;
  this.errors = errors;
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$Driver$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$Driver$succeed_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.success = cljs.core.boolean$.call(null, true);
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$Driver$succeeded_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.success;
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$Driver$pop_thunk_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (malli.impl.regex.empty_stack_QMARK_.call(null, self__.stack)) {
    return null;
  } else {
    return self__.stack.pop();
  }
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$IExplanationDriver$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$IExplanationDriver$noncaching_park_explainer_BANG_$arity$6 = function(self, validator, regs, pos, coll, k) {
  var self__ = this;
  var self__$1 = this;
  return self__.stack.push(function(self__$1) {
    return function() {
      return validator.call(null, self__$1, regs, pos, coll, k);
    };
  }(self__$1));
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$IExplanationDriver$park_explainer_BANG_$arity$6 = function(self, validator, regs, pos, coll, k) {
  var self__ = this;
  var self__$1 = this;
  if (cljs.core.truth_(malli.impl.regex.ensure_cached_BANG_.call(null, self__.cache, validator, pos, regs))) {
    return null;
  } else {
    return malli.impl.regex.noncaching_park_explainer_BANG_.call(null, self__$1, validator, regs, pos, coll, k);
  }
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$IExplanationDriver$value_path$arity$2 = function(_, pos) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.conj.call(null, self__.in$, pos);
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$IExplanationDriver$fail_BANG_$arity$3 = function(_, pos, errors_STAR_) {
  var self__ = this;
  var ___$1 = this;
  if (pos > self__.errors_max_pos) {
    self__.errors_max_pos = pos;
    return self__.errors = errors_STAR_;
  } else {
    if (cljs.core._EQ_.call(null, pos, self__.errors_max_pos)) {
      return self__.errors = cljs.core.into.call(null, self__.errors, errors_STAR_);
    } else {
      return null;
    }
  }
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$IExplanationDriver$latest_errors$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.errors;
};
malli.impl.regex.ExplanationDriver.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "success", "success", -763789863, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "in", "in", 109346662, null), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "errors-max-pos", "errors-max-pos", 798451976, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "errors", "errors", 731740809, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
malli.impl.regex.ExplanationDriver.cljs$lang$type = true;
malli.impl.regex.ExplanationDriver.cljs$lang$ctorStr = "malli.impl.regex/ExplanationDriver";
malli.impl.regex.ExplanationDriver.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write.call(null, writer__4291__auto__, "malli.impl.regex/ExplanationDriver");
};
malli.impl.regex.__GT_ExplanationDriver = function malli$impl$regex$__GT_ExplanationDriver(success, stack, cache, in$, errors_max_pos, errors) {
  return new malli.impl.regex.ExplanationDriver(success, stack, cache, in$, errors_max_pos, errors);
};
malli.impl.regex.explainer = function malli$impl$regex$explainer(schema, path, p) {
  var p__$1 = malli.impl.regex.cat_explainer.call(null, p, malli.impl.regex.end_explainer.call(null, schema, path));
  return function(p__$1) {
    return function(coll, in$, errors) {
      if (cljs.core.sequential_QMARK_.call(null, coll)) {
        var pos = 0;
        var driver = new malli.impl.regex.ExplanationDriver(false, malli.impl.regex.make_stack.call(null), malli.impl.regex.make_cache.call(null), in$, pos, cljs.core.PersistentVector.EMPTY);
        p__$1.call(null, driver, cljs.core.List.EMPTY, pos, coll, function(pos, driver, p__$1) {
          return function(_, ___$1) {
            return malli.impl.regex.succeed_BANG_.call(null, driver);
          };
        }(pos, driver, p__$1));
        if (cljs.core.truth_(malli.impl.regex.succeeded_QMARK_.call(null, driver))) {
          return errors;
        } else {
          while (true) {
            var temp__5722__auto__ = malli.impl.regex.pop_thunk_BANG_.call(null, driver);
            if (temp__5722__auto__ == null) {
              return cljs.core.into.call(null, errors, malli.impl.regex.latest_errors.call(null, driver));
            } else {
              var thunk = temp__5722__auto__;
              thunk.call(null);
              if (cljs.core.truth_(malli.impl.regex.succeeded_QMARK_.call(null, driver))) {
                return errors;
              } else {
                continue;
              }
            }
            break;
          }
        }
      } else {
        return cljs.core.conj.call(null, errors, malli.impl.util._error.call(null, path, in$, schema, coll, new cljs.core.Keyword("malli.core", "invalid-type", "malli.core/invalid-type", -1367388450)));
      }
    };
  }(p__$1);
};
malli.impl.regex.parser = function malli$impl$regex$parser(p) {
  var p__$1 = malli.impl.regex.cat_parser.call(null, p, malli.impl.regex.end_parser.call(null));
  return function(p__$1) {
    return function(coll) {
      if (cljs.core.sequential_QMARK_.call(null, coll)) {
        var driver = new malli.impl.regex.ParseDriver(false, malli.impl.regex.make_stack.call(null), malli.impl.regex.make_cache.call(null), null);
        p__$1.call(null, driver, cljs.core.List.EMPTY, 0, coll, function(driver, p__$1) {
          return function(v, _, ___$1) {
            return malli.impl.regex.succeed_with_BANG_.call(null, driver, v);
          };
        }(driver, p__$1));
        if (cljs.core.truth_(malli.impl.regex.succeeded_QMARK_.call(null, driver))) {
          return cljs.core.first.call(null, malli.impl.regex.success_result.call(null, driver));
        } else {
          while (true) {
            var temp__5722__auto__ = malli.impl.regex.pop_thunk_BANG_.call(null, driver);
            if (temp__5722__auto__ == null) {
              return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
            } else {
              var thunk = temp__5722__auto__;
              thunk.call(null);
              if (cljs.core.truth_(malli.impl.regex.succeeded_QMARK_.call(null, driver))) {
                return cljs.core.first.call(null, malli.impl.regex.success_result.call(null, driver));
              } else {
                continue;
              }
            }
            break;
          }
        }
      } else {
        return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
      }
    };
  }(p__$1);
};
malli.impl.regex.transformer = function malli$impl$regex$transformer(p) {
  var p__$1 = malli.impl.regex.cat_transformer.call(null, p, malli.impl.regex.end_transformer.call(null));
  return function(p__$1) {
    return function(coll) {
      if (cljs.core.sequential_QMARK_.call(null, coll)) {
        var driver = new malli.impl.regex.ParseDriver(false, malli.impl.regex.make_stack.call(null), malli.impl.regex.make_cache.call(null), null);
        p__$1.call(null, driver, cljs.core.List.EMPTY, cljs.core.PersistentVector.EMPTY, 0, coll, function(driver, p__$1) {
          return function(coll_STAR_, _, ___$1) {
            return malli.impl.regex.succeed_with_BANG_.call(null, driver, coll_STAR_);
          };
        }(driver, p__$1));
        if (cljs.core.truth_(malli.impl.regex.succeeded_QMARK_.call(null, driver))) {
          return malli.impl.regex.success_result.call(null, driver);
        } else {
          while (true) {
            var temp__5722__auto__ = malli.impl.regex.pop_thunk_BANG_.call(null, driver);
            if (temp__5722__auto__ == null) {
              return coll;
            } else {
              var thunk = temp__5722__auto__;
              thunk.call(null);
              if (cljs.core.truth_(malli.impl.regex.succeeded_QMARK_.call(null, driver))) {
                return malli.impl.regex.success_result.call(null, driver);
              } else {
                continue;
              }
            }
            break;
          }
        }
      } else {
        return coll;
      }
    };
  }(p__$1);
};
goog.provide("malli.registry");
goog.require("cljs.core");
goog.define("malli.registry.mode", "default");
goog.define("malli.registry.type", "default");
malli.registry.Registry = function() {
};
malli.registry._schema = function malli$registry$_schema(this$, type) {
  if (!(this$ == null) && !(this$.malli$registry$Registry$_schema$arity$2 == null)) {
    return this$.malli$registry$Registry$_schema$arity$2(this$, type);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.registry._schema[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, type);
    } else {
      var m__4348__auto____$1 = malli.registry._schema["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, type);
      } else {
        throw cljs.core.missing_protocol.call(null, "Registry.-schema", this$);
      }
    }
  }
};
malli.registry._schemas = function malli$registry$_schemas(this$) {
  if (!(this$ == null) && !(this$.malli$registry$Registry$_schemas$arity$1 == null)) {
    return this$.malli$registry$Registry$_schemas$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.registry._schemas[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.registry._schemas["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Registry.-schemas", this$);
      }
    }
  }
};
malli.registry.registry_QMARK_ = function malli$registry$registry_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$registry$Registry$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.registry.fast_registry = function malli$registry$fast_registry(m) {
  var fm = m;
  if (typeof malli !== "undefined" && typeof malli.registry !== "undefined" && typeof malli.registry.t_malli$registry2821 !== "undefined") {
  } else {
    malli.registry.t_malli$registry2821 = function(m, fm, meta2822) {
      this.m = m;
      this.fm = fm;
      this.meta2822 = meta2822;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.registry.t_malli$registry2821.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(fm) {
      return function(_2823, meta2822__$1) {
        var self__ = this;
        var _2823__$1 = this;
        return new malli.registry.t_malli$registry2821(self__.m, self__.fm, meta2822__$1);
      };
    }(fm);
    malli.registry.t_malli$registry2821.prototype.cljs$core$IMeta$_meta$arity$1 = function(fm) {
      return function(_2823) {
        var self__ = this;
        var _2823__$1 = this;
        return self__.meta2822;
      };
    }(fm);
    malli.registry.t_malli$registry2821.prototype.malli$registry$Registry$ = cljs.core.PROTOCOL_SENTINEL;
    malli.registry.t_malli$registry2821.prototype.malli$registry$Registry$_schema$arity$2 = function(fm) {
      return function(_, type) {
        var self__ = this;
        var ___$1 = this;
        return self__.fm.get(type);
      };
    }(fm);
    malli.registry.t_malli$registry2821.prototype.malli$registry$Registry$_schemas$arity$1 = function(fm) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.m;
      };
    }(fm);
    malli.registry.t_malli$registry2821.getBasis = function(fm) {
      return function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "m", "m", -1021758608, null), new cljs.core.Symbol(null, "fm", "fm", -1190690268, null), new cljs.core.Symbol(null, "meta2822", "meta2822", -1715627419, null)], null);
      };
    }(fm);
    malli.registry.t_malli$registry2821.cljs$lang$type = true;
    malli.registry.t_malli$registry2821.cljs$lang$ctorStr = "malli.registry/t_malli$registry2821";
    malli.registry.t_malli$registry2821.cljs$lang$ctorPrWriter = function(fm) {
      return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
        return cljs.core._write.call(null, writer__4291__auto__, "malli.registry/t_malli$registry2821");
      };
    }(fm);
    malli.registry.__GT_t_malli$registry2821 = function(fm) {
      return function malli$registry$fast_registry_$___GT_t_malli$registry2821(m__$1, fm__$1, meta2822) {
        return new malli.registry.t_malli$registry2821(m__$1, fm__$1, meta2822);
      };
    }(fm);
  }
  return new malli.registry.t_malli$registry2821(m, fm, cljs.core.PersistentArrayMap.EMPTY);
};
malli.registry.simple_registry = function malli$registry$simple_registry(m) {
  if (typeof malli !== "undefined" && typeof malli.registry !== "undefined" && typeof malli.registry.t_malli$registry2824 !== "undefined") {
  } else {
    malli.registry.t_malli$registry2824 = function(m, meta2825) {
      this.m = m;
      this.meta2825 = meta2825;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.registry.t_malli$registry2824.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_2826, meta2825__$1) {
      var self__ = this;
      var _2826__$1 = this;
      return new malli.registry.t_malli$registry2824(self__.m, meta2825__$1);
    };
    malli.registry.t_malli$registry2824.prototype.cljs$core$IMeta$_meta$arity$1 = function(_2826) {
      var self__ = this;
      var _2826__$1 = this;
      return self__.meta2825;
    };
    malli.registry.t_malli$registry2824.prototype.malli$registry$Registry$ = cljs.core.PROTOCOL_SENTINEL;
    malli.registry.t_malli$registry2824.prototype.malli$registry$Registry$_schema$arity$2 = function(_, type) {
      var self__ = this;
      var ___$1 = this;
      return self__.m.call(null, type);
    };
    malli.registry.t_malli$registry2824.prototype.malli$registry$Registry$_schemas$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.m;
    };
    malli.registry.t_malli$registry2824.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "m", "m", -1021758608, null), new cljs.core.Symbol(null, "meta2825", "meta2825", -245378452, null)], null);
    };
    malli.registry.t_malli$registry2824.cljs$lang$type = true;
    malli.registry.t_malli$registry2824.cljs$lang$ctorStr = "malli.registry/t_malli$registry2824";
    malli.registry.t_malli$registry2824.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
      return cljs.core._write.call(null, writer__4291__auto__, "malli.registry/t_malli$registry2824");
    };
    malli.registry.__GT_t_malli$registry2824 = function malli$registry$simple_registry_$___GT_t_malli$registry2824(m__$1, meta2825) {
      return new malli.registry.t_malli$registry2824(m__$1, meta2825);
    };
  }
  return new malli.registry.t_malli$registry2824(m, cljs.core.PersistentArrayMap.EMPTY);
};
malli.registry.registry = function malli$registry$registry(_QMARK_registry) {
  if (_QMARK_registry == null) {
    return null;
  } else {
    if (malli.registry.registry_QMARK_.call(null, _QMARK_registry)) {
      return _QMARK_registry;
    } else {
      if (cljs.core.map_QMARK_.call(null, _QMARK_registry)) {
        return malli.registry.simple_registry.call(null, _QMARK_registry);
      } else {
        if (!(_QMARK_registry == null) ? false || cljs.core.PROTOCOL_SENTINEL === _QMARK_registry.malli$registry$Registry$ ? true : !_QMARK_registry.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, malli.registry.Registry, _QMARK_registry) : false : cljs.core.native_satisfies_QMARK_.call(null, malli.registry.Registry, _QMARK_registry)) {
          return _QMARK_registry;
        } else {
          return null;
        }
      }
    }
  }
};
malli.registry.registry_STAR_ = cljs.core.atom.call(null, malli.registry.simple_registry.call(null, cljs.core.PersistentArrayMap.EMPTY));
malli.registry.set_default_registry_BANG_ = function malli$registry$set_default_registry_BANG_(_QMARK_registry) {
  if (!(malli.registry.mode === "strict")) {
    return cljs.core.reset_BANG_.call(null, malli.registry.registry_STAR_, malli.registry.registry.call(null, _QMARK_registry));
  } else {
    throw cljs.core.ex_info.call(null, "can't set default registry, invalid mode", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "mode", "mode", 654403691), malli.registry.mode, new cljs.core.Keyword(null, "type", "type", 1174270348), malli.registry.type], null));
  }
};
malli.registry.custom_default_registry = function malli$registry$custom_default_registry() {
  if (typeof malli !== "undefined" && typeof malli.registry !== "undefined" && typeof malli.registry.t_malli$registry2828 !== "undefined") {
  } else {
    malli.registry.t_malli$registry2828 = function(meta2829) {
      this.meta2829 = meta2829;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.registry.t_malli$registry2828.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_2830, meta2829__$1) {
      var self__ = this;
      var _2830__$1 = this;
      return new malli.registry.t_malli$registry2828(meta2829__$1);
    };
    malli.registry.t_malli$registry2828.prototype.cljs$core$IMeta$_meta$arity$1 = function(_2830) {
      var self__ = this;
      var _2830__$1 = this;
      return self__.meta2829;
    };
    malli.registry.t_malli$registry2828.prototype.malli$registry$Registry$ = cljs.core.PROTOCOL_SENTINEL;
    malli.registry.t_malli$registry2828.prototype.malli$registry$Registry$_schema$arity$2 = function(_, type) {
      var self__ = this;
      var ___$1 = this;
      return malli.registry._schema.call(null, cljs.core.deref.call(null, malli.registry.registry_STAR_), type);
    };
    malli.registry.t_malli$registry2828.prototype.malli$registry$Registry$_schemas$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return malli.registry._schemas.call(null, cljs.core.deref.call(null, malli.registry.registry_STAR_));
    };
    malli.registry.t_malli$registry2828.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta2829", "meta2829", 568358598, null)], null);
    };
    malli.registry.t_malli$registry2828.cljs$lang$type = true;
    malli.registry.t_malli$registry2828.cljs$lang$ctorStr = "malli.registry/t_malli$registry2828";
    malli.registry.t_malli$registry2828.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
      return cljs.core._write.call(null, writer__4291__auto__, "malli.registry/t_malli$registry2828");
    };
    malli.registry.__GT_t_malli$registry2828 = function malli$registry$custom_default_registry_$___GT_t_malli$registry2828(meta2829) {
      return new malli.registry.t_malli$registry2828(meta2829);
    };
  }
  return new malli.registry.t_malli$registry2828(cljs.core.PersistentArrayMap.EMPTY);
};
malli.registry.composite_registry = function malli$registry$composite_registry(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___2836 = arguments.length;
  var i__4642__auto___2837 = 0;
  while (true) {
    if (i__4642__auto___2837 < len__4641__auto___2836) {
      args__4647__auto__.push(arguments[i__4642__auto___2837]);
      var G__2838 = i__4642__auto___2837 + 1;
      i__4642__auto___2837 = G__2838;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return malli.registry.composite_registry.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
malli.registry.composite_registry.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_registries) {
  var registries = cljs.core.mapv.call(null, malli.registry.registry, _QMARK_registries);
  if (typeof malli !== "undefined" && typeof malli.registry !== "undefined" && typeof malli.registry.t_malli$registry2833 !== "undefined") {
  } else {
    malli.registry.t_malli$registry2833 = function(_QMARK_registries, registries, meta2834) {
      this._QMARK_registries = _QMARK_registries;
      this.registries = registries;
      this.meta2834 = meta2834;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.registry.t_malli$registry2833.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(registries) {
      return function(_2835, meta2834__$1) {
        var self__ = this;
        var _2835__$1 = this;
        return new malli.registry.t_malli$registry2833(self__._QMARK_registries, self__.registries, meta2834__$1);
      };
    }(registries);
    malli.registry.t_malli$registry2833.prototype.cljs$core$IMeta$_meta$arity$1 = function(registries) {
      return function(_2835) {
        var self__ = this;
        var _2835__$1 = this;
        return self__.meta2834;
      };
    }(registries);
    malli.registry.t_malli$registry2833.prototype.malli$registry$Registry$ = cljs.core.PROTOCOL_SENTINEL;
    malli.registry.t_malli$registry2833.prototype.malli$registry$Registry$_schema$arity$2 = function(registries) {
      return function(_, type) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.some.call(null, function(___$1, registries) {
          return function(p1__2831_SHARP_) {
            return malli.registry._schema.call(null, p1__2831_SHARP_, type);
          };
        }(___$1, registries), self__.registries);
      };
    }(registries);
    malli.registry.t_malli$registry2833.prototype.malli$registry$Registry$_schemas$arity$1 = function(registries) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.reduce.call(null, cljs.core.merge, cljs.core.map.call(null, malli.registry._schemas, cljs.core.reverse.call(null, self__.registries)));
      };
    }(registries);
    malli.registry.t_malli$registry2833.getBasis = function(registries) {
      return function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?registries", "?registries", 2135368100, null), new cljs.core.Symbol(null, "registries", "registries", -1366064418, null), new cljs.core.Symbol(null, "meta2834", "meta2834", -1644537172, null)], null);
      };
    }(registries);
    malli.registry.t_malli$registry2833.cljs$lang$type = true;
    malli.registry.t_malli$registry2833.cljs$lang$ctorStr = "malli.registry/t_malli$registry2833";
    malli.registry.t_malli$registry2833.cljs$lang$ctorPrWriter = function(registries) {
      return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
        return cljs.core._write.call(null, writer__4291__auto__, "malli.registry/t_malli$registry2833");
      };
    }(registries);
    malli.registry.__GT_t_malli$registry2833 = function(registries) {
      return function malli$registry$__GT_t_malli$registry2833(_QMARK_registries__$1, registries__$1, meta2834) {
        return new malli.registry.t_malli$registry2833(_QMARK_registries__$1, registries__$1, meta2834);
      };
    }(registries);
  }
  return new malli.registry.t_malli$registry2833(_QMARK_registries, registries, cljs.core.PersistentArrayMap.EMPTY);
};
malli.registry.composite_registry.cljs$lang$maxFixedArity = 0;
malli.registry.composite_registry.cljs$lang$applyTo = function(seq2832) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2832));
};
malli.registry.mutable_registry = function malli$registry$mutable_registry(db) {
  if (typeof malli !== "undefined" && typeof malli.registry !== "undefined" && typeof malli.registry.t_malli$registry2839 !== "undefined") {
  } else {
    malli.registry.t_malli$registry2839 = function(db, meta2840) {
      this.db = db;
      this.meta2840 = meta2840;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.registry.t_malli$registry2839.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_2841, meta2840__$1) {
      var self__ = this;
      var _2841__$1 = this;
      return new malli.registry.t_malli$registry2839(self__.db, meta2840__$1);
    };
    malli.registry.t_malli$registry2839.prototype.cljs$core$IMeta$_meta$arity$1 = function(_2841) {
      var self__ = this;
      var _2841__$1 = this;
      return self__.meta2840;
    };
    malli.registry.t_malli$registry2839.prototype.malli$registry$Registry$ = cljs.core.PROTOCOL_SENTINEL;
    malli.registry.t_malli$registry2839.prototype.malli$registry$Registry$_schema$arity$2 = function(_, type) {
      var self__ = this;
      var ___$1 = this;
      return malli.registry._schema.call(null, malli.registry.registry.call(null, cljs.core.deref.call(null, self__.db)), type);
    };
    malli.registry.t_malli$registry2839.prototype.malli$registry$Registry$_schemas$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return malli.registry._schemas.call(null, malli.registry.registry.call(null, cljs.core.deref.call(null, self__.db)));
    };
    malli.registry.t_malli$registry2839.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "db", "db", -1661185010, null), new cljs.core.Symbol(null, "meta2840", "meta2840", 212322304, null)], null);
    };
    malli.registry.t_malli$registry2839.cljs$lang$type = true;
    malli.registry.t_malli$registry2839.cljs$lang$ctorStr = "malli.registry/t_malli$registry2839";
    malli.registry.t_malli$registry2839.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
      return cljs.core._write.call(null, writer__4291__auto__, "malli.registry/t_malli$registry2839");
    };
    malli.registry.__GT_t_malli$registry2839 = function malli$registry$mutable_registry_$___GT_t_malli$registry2839(db__$1, meta2840) {
      return new malli.registry.t_malli$registry2839(db__$1, meta2840);
    };
  }
  return new malli.registry.t_malli$registry2839(db, cljs.core.PersistentArrayMap.EMPTY);
};
malli.registry._STAR_registry_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
malli.registry.dynamic_registry = function malli$registry$dynamic_registry() {
  if (typeof malli !== "undefined" && typeof malli.registry !== "undefined" && typeof malli.registry.t_malli$registry2842 !== "undefined") {
  } else {
    malli.registry.t_malli$registry2842 = function(meta2843) {
      this.meta2843 = meta2843;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.registry.t_malli$registry2842.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_2844, meta2843__$1) {
      var self__ = this;
      var _2844__$1 = this;
      return new malli.registry.t_malli$registry2842(meta2843__$1);
    };
    malli.registry.t_malli$registry2842.prototype.cljs$core$IMeta$_meta$arity$1 = function(_2844) {
      var self__ = this;
      var _2844__$1 = this;
      return self__.meta2843;
    };
    malli.registry.t_malli$registry2842.prototype.malli$registry$Registry$ = cljs.core.PROTOCOL_SENTINEL;
    malli.registry.t_malli$registry2842.prototype.malli$registry$Registry$_schema$arity$2 = function(_, type) {
      var self__ = this;
      var ___$1 = this;
      return malli.registry._schema.call(null, malli.registry.registry.call(null, malli.registry._STAR_registry_STAR_), type);
    };
    malli.registry.t_malli$registry2842.prototype.malli$registry$Registry$_schemas$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return malli.registry._schemas.call(null, malli.registry.registry.call(null, malli.registry._STAR_registry_STAR_));
    };
    malli.registry.t_malli$registry2842.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta2843", "meta2843", -637351645, null)], null);
    };
    malli.registry.t_malli$registry2842.cljs$lang$type = true;
    malli.registry.t_malli$registry2842.cljs$lang$ctorStr = "malli.registry/t_malli$registry2842";
    malli.registry.t_malli$registry2842.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
      return cljs.core._write.call(null, writer__4291__auto__, "malli.registry/t_malli$registry2842");
    };
    malli.registry.__GT_t_malli$registry2842 = function malli$registry$dynamic_registry_$___GT_t_malli$registry2842(meta2843) {
      return new malli.registry.t_malli$registry2842(meta2843);
    };
  }
  return new malli.registry.t_malli$registry2842(cljs.core.PersistentArrayMap.EMPTY);
};
malli.registry.lazy_registry = function malli$registry$lazy_registry(default_registry, provider) {
  var cache_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var registry_STAR_ = cljs.core.atom.call(null, default_registry);
  return cljs.core.reset_BANG_.call(null, registry_STAR_, malli.registry.composite_registry.call(null, default_registry, function() {
    if (typeof malli !== "undefined" && typeof malli.registry !== "undefined" && typeof malli.registry.t_malli$registry2845 !== "undefined") {
    } else {
      malli.registry.t_malli$registry2845 = function(default_registry, provider, cache_STAR_, registry_STAR_, meta2846) {
        this.default_registry = default_registry;
        this.provider = provider;
        this.cache_STAR_ = cache_STAR_;
        this.registry_STAR_ = registry_STAR_;
        this.meta2846 = meta2846;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      malli.registry.t_malli$registry2845.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cache_STAR_, registry_STAR_) {
        return function(_2847, meta2846__$1) {
          var self__ = this;
          var _2847__$1 = this;
          return new malli.registry.t_malli$registry2845(self__.default_registry, self__.provider, self__.cache_STAR_, self__.registry_STAR_, meta2846__$1);
        };
      }(cache_STAR_, registry_STAR_);
      malli.registry.t_malli$registry2845.prototype.cljs$core$IMeta$_meta$arity$1 = function(cache_STAR_, registry_STAR_) {
        return function(_2847) {
          var self__ = this;
          var _2847__$1 = this;
          return self__.meta2846;
        };
      }(cache_STAR_, registry_STAR_);
      malli.registry.t_malli$registry2845.prototype.malli$registry$Registry$ = cljs.core.PROTOCOL_SENTINEL;
      malli.registry.t_malli$registry2845.prototype.malli$registry$Registry$_schema$arity$2 = function(cache_STAR_, registry_STAR_) {
        return function(_, name) {
          var self__ = this;
          var ___$1 = this;
          var or__4047__auto__ = cljs.core.deref.call(null, self__.cache_STAR_).call(null, name);
          if (cljs.core.truth_(or__4047__auto__)) {
            return or__4047__auto__;
          } else {
            var temp__5720__auto__ = self__.provider.call(null, name, cljs.core.deref.call(null, self__.registry_STAR_));
            if (cljs.core.truth_(temp__5720__auto__)) {
              var schema = temp__5720__auto__;
              cljs.core.swap_BANG_.call(null, self__.cache_STAR_, cljs.core.assoc, name, schema);
              return schema;
            } else {
              return null;
            }
          }
        };
      }(cache_STAR_, registry_STAR_);
      malli.registry.t_malli$registry2845.prototype.malli$registry$Registry$_schemas$arity$1 = function(cache_STAR_, registry_STAR_) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref.call(null, self__.cache_STAR_);
        };
      }(cache_STAR_, registry_STAR_);
      malli.registry.t_malli$registry2845.getBasis = function(cache_STAR_, registry_STAR_) {
        return function() {
          return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "default-registry", "default-registry", 732204441, null), new cljs.core.Symbol(null, "provider", "provider", 1338474627, null), new cljs.core.Symbol(null, "cache*", "cache*", -548597526, null), new cljs.core.Symbol(null, "registry*", "registry*", -268031273, null), new cljs.core.Symbol(null, "meta2846", "meta2846", -268428181, null)], null);
        };
      }(cache_STAR_, registry_STAR_);
      malli.registry.t_malli$registry2845.cljs$lang$type = true;
      malli.registry.t_malli$registry2845.cljs$lang$ctorStr = "malli.registry/t_malli$registry2845";
      malli.registry.t_malli$registry2845.cljs$lang$ctorPrWriter = function(cache_STAR_, registry_STAR_) {
        return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
          return cljs.core._write.call(null, writer__4291__auto__, "malli.registry/t_malli$registry2845");
        };
      }(cache_STAR_, registry_STAR_);
      malli.registry.__GT_t_malli$registry2845 = function(cache_STAR_, registry_STAR_) {
        return function malli$registry$lazy_registry_$___GT_t_malli$registry2845(default_registry__$1, provider__$1, cache_STAR___$1, registry_STAR___$1, meta2846) {
          return new malli.registry.t_malli$registry2845(default_registry__$1, provider__$1, cache_STAR___$1, registry_STAR___$1, meta2846);
        };
      }(cache_STAR_, registry_STAR_);
    }
    return new malli.registry.t_malli$registry2845(default_registry, provider, cache_STAR_, registry_STAR_, cljs.core.PersistentArrayMap.EMPTY);
  }()));
};
malli.registry.schema = function malli$registry$schema(registry, type) {
  return malli.registry._schema.call(null, registry, type);
};
malli.registry.schemas = function malli$registry$schemas(registry) {
  return malli.registry._schemas.call(null, registry);
};
goog.provide("borkdude.dynaload");
goog.require("cljs.core");
borkdude.dynaload.LazyVar = function(f, cached) {
  this.f = f;
  this.cached = cached;
  this.cljs$lang$protocol_mask$partition0$ = 32769;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!(self__.cached == null)) {
    return self__.cached;
  } else {
    var x = self__.f.call(null);
    if (x == null) {
    } else {
      self__.cached = x;
    }
    return x;
  }
};
borkdude.dynaload.LazyVar.prototype.call = function() {
  var G__2900 = null;
  var G__2900__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null);
  };
  var G__2900__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a);
  };
  var G__2900__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b);
  };
  var G__2900__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c);
  };
  var G__2900__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d);
  };
  var G__2900__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e);
  };
  var G__2900__7 = function(self__, a, b, c, d, e, f__$1) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1);
  };
  var G__2900__8 = function(self__, a, b, c, d, e, f__$1, g) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g);
  };
  var G__2900__9 = function(self__, a, b, c, d, e, f__$1, g, h) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h);
  };
  var G__2900__10 = function(self__, a, b, c, d, e, f__$1, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i);
  };
  var G__2900__11 = function(self__, a, b, c, d, e, f__$1, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j);
  };
  var G__2900__12 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k);
  };
  var G__2900__13 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l);
  };
  var G__2900__14 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
  };
  var G__2900__15 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
  };
  var G__2900__16 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
  };
  var G__2900__17 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
  };
  var G__2900__18 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__2900__19 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__2900__20 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__2900__21 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__2900__22 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.apply.call(null, cljs.core.deref.call(null, this$), a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__2900 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__2900__1.call(this, self__);
      case 2:
        return G__2900__2.call(this, self__, a);
      case 3:
        return G__2900__3.call(this, self__, a, b);
      case 4:
        return G__2900__4.call(this, self__, a, b, c);
      case 5:
        return G__2900__5.call(this, self__, a, b, c, d);
      case 6:
        return G__2900__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__2900__7.call(this, self__, a, b, c, d, e, f__$1);
      case 8:
        return G__2900__8.call(this, self__, a, b, c, d, e, f__$1, g);
      case 9:
        return G__2900__9.call(this, self__, a, b, c, d, e, f__$1, g, h);
      case 10:
        return G__2900__10.call(this, self__, a, b, c, d, e, f__$1, g, h, i);
      case 11:
        return G__2900__11.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j);
      case 12:
        return G__2900__12.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j, k);
      case 13:
        return G__2900__13.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j, k, l);
      case 14:
        return G__2900__14.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
      case 15:
        return G__2900__15.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
      case 16:
        return G__2900__16.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__2900__17.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__2900__18.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__2900__19.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__2900__20.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__2900__21.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__2900__22.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2900.cljs$core$IFn$_invoke$arity$1 = G__2900__1;
  G__2900.cljs$core$IFn$_invoke$arity$2 = G__2900__2;
  G__2900.cljs$core$IFn$_invoke$arity$3 = G__2900__3;
  G__2900.cljs$core$IFn$_invoke$arity$4 = G__2900__4;
  G__2900.cljs$core$IFn$_invoke$arity$5 = G__2900__5;
  G__2900.cljs$core$IFn$_invoke$arity$6 = G__2900__6;
  G__2900.cljs$core$IFn$_invoke$arity$7 = G__2900__7;
  G__2900.cljs$core$IFn$_invoke$arity$8 = G__2900__8;
  G__2900.cljs$core$IFn$_invoke$arity$9 = G__2900__9;
  G__2900.cljs$core$IFn$_invoke$arity$10 = G__2900__10;
  G__2900.cljs$core$IFn$_invoke$arity$11 = G__2900__11;
  G__2900.cljs$core$IFn$_invoke$arity$12 = G__2900__12;
  G__2900.cljs$core$IFn$_invoke$arity$13 = G__2900__13;
  G__2900.cljs$core$IFn$_invoke$arity$14 = G__2900__14;
  G__2900.cljs$core$IFn$_invoke$arity$15 = G__2900__15;
  G__2900.cljs$core$IFn$_invoke$arity$16 = G__2900__16;
  G__2900.cljs$core$IFn$_invoke$arity$17 = G__2900__17;
  G__2900.cljs$core$IFn$_invoke$arity$18 = G__2900__18;
  G__2900.cljs$core$IFn$_invoke$arity$19 = G__2900__19;
  G__2900.cljs$core$IFn$_invoke$arity$20 = G__2900__20;
  G__2900.cljs$core$IFn$_invoke$arity$21 = G__2900__21;
  G__2900.cljs$core$IFn$_invoke$arity$22 = G__2900__22;
  return G__2900;
}();
borkdude.dynaload.LazyVar.prototype.apply = function(self__, args2899) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args2899)));
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f__$1) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f__$1, g) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f__$1, g, h) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f__$1, g, h, i) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f__$1, g, h, i, j) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f__$1, g, h, i, j, k) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var this$ = this;
  return cljs.core.apply.call(null, cljs.core.deref.call(null, this$), a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
borkdude.dynaload.LazyVar.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cached", "cached", -1216707864, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
borkdude.dynaload.LazyVar.cljs$lang$type = true;
borkdude.dynaload.LazyVar.cljs$lang$ctorStr = "borkdude.dynaload/LazyVar";
borkdude.dynaload.LazyVar.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
  return cljs.core._write.call(null, writer__4291__auto__, "borkdude.dynaload/LazyVar");
};
borkdude.dynaload.__GT_LazyVar = function borkdude$dynaload$__GT_LazyVar(f, cached) {
  return new borkdude.dynaload.LazyVar(f, cached);
};
var ret__4684__auto___2907 = function() {
  borkdude.dynaload._QMARK_ = function borkdude$dynaload$_QMARK_(var_args) {
    var args__4647__auto__ = [];
    var len__4641__auto___2908 = arguments.length;
    var i__4642__auto___2909 = 0;
    while (true) {
      if (i__4642__auto___2909 < len__4641__auto___2908) {
        args__4647__auto__.push(arguments[i__4642__auto___2909]);
        var G__2910 = i__4642__auto___2909 + 1;
        i__4642__auto___2909 = G__2910;
        continue;
      } else {
      }
      break;
    }
    var argseq__4648__auto__ = 2 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(2), 0, null) : null;
    return borkdude.dynaload._QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4648__auto__);
  };
  borkdude.dynaload._QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__2904) {
    var map__2905 = p__2904;
    var map__2905__$1 = (!(map__2905 == null) ? map__2905.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__2905.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__2905) : map__2905;
    var cljs__$1 = cljs.core.get.call(null, map__2905__$1, new cljs.core.Keyword(null, "cljs", "cljs", 1492417629));
    var clj = cljs.core.get.call(null, map__2905__$1, new cljs.core.Keyword(null, "clj", "clj", -660495428));
    if (cljs.core.contains_QMARK_.call(null, _AMPERSAND_env, new cljs.core.Symbol(null, "\x26env", "\x26env", -919163083, null))) {
      return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Keyword(null, "ns", "ns", 441598760), null, 1, null), new cljs.core.List(null, new cljs.core.Symbol(null, "\x26env", "\x26env", -919163083, null), null, 1, null)))), 
      null, 1, null), new cljs.core.List(null, cljs__$1, null, 1, null), new cljs.core.List(null, clj, null, 1, null))));
    } else {
      return cljs__$1;
    }
  };
  borkdude.dynaload._QMARK_.cljs$lang$maxFixedArity = 2;
  borkdude.dynaload._QMARK_.cljs$lang$applyTo = function(seq2901) {
    var G__2902 = cljs.core.first.call(null, seq2901);
    var seq2901__$1 = cljs.core.next.call(null, seq2901);
    var G__2903 = cljs.core.first.call(null, seq2901__$1);
    var seq2901__$2 = cljs.core.next.call(null, seq2901__$1);
    var self__4628__auto__ = this;
    return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2902, G__2903, seq2901__$2);
  };
  return null;
}();
borkdude.dynaload._QMARK_.cljs$lang$macro = true;
var ret__4684__auto___2921 = function() {
  borkdude.dynaload.dynaload = function borkdude$dynaload$dynaload(var_args) {
    var G__2916 = arguments.length;
    switch(G__2916) {
      case 3:
        return borkdude.dynaload.dynaload.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
        break;
      case 4:
        return borkdude.dynaload.dynaload.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
        break;
      default:
        throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 2)].join(""));
    }
  };
  borkdude.dynaload.dynaload.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, s) {
    return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("borkdude.dynaload", "dynaload", "borkdude.dynaload/dynaload", -1199857489, null), null, 1, null), new cljs.core.List(null, s, null, 1, null), new cljs.core.List(null, cljs.core.apply.call(null, cljs.core.array_map, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null)))), null, 1, null))));
  };
  borkdude.dynaload.dynaload.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, p__2917, opts) {
    var vec__2918 = p__2917;
    var _quote = cljs.core.nth.call(null, vec__2918, 0, null);
    var s = cljs.core.nth.call(null, vec__2918, 1, null);
    return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("borkdude.dynaload", "LazyVar.", "borkdude.dynaload/LazyVar.", -691687377, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null), null, 1, null), new cljs.core.List(null, cljs.core.vec.call(null, 
    cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null)))), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("borkdude.dynaload", "?", "borkdude.dynaload/?", 720647962, null), null, 1, null), new cljs.core.List(null, new cljs.core.Keyword(null, "clj", "clj", -660495428), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
    cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "if-let", "cljs.core/if-let", 1346583165, null), null, 1, null), new cljs.core.List(null, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "v__2913__auto__", "v__2913__auto__", -1953485894, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
    new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "or", "cljs.core/or", 1201033885, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("borkdude.dynaload", "resolve*", "borkdude.dynaload/resolve*", -886230185, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, 
    new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, 1, null), new cljs.core.List(null, s, null, 1, null)))), null, 1, null)))), null, 1, null)))), null, 1, null))))), null, 1, null), new cljs.core.List(null, new cljs.core.Symbol(null, "v__2913__auto__", "v__2913__auto__", -1953485894, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "if-let", 
    "cljs.core/if-let", 1346583165, null), null, 1, null), new cljs.core.List(null, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "e__2914__auto__", "e__2914__auto__", -1788971580, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "find", "cljs.core/find", 
    656179788, null), null, 1, null), new cljs.core.List(null, opts, null, 1, null), new cljs.core.List(null, new cljs.core.Keyword(null, "default", "default", -1987822328), null, 1, null)))), null, 1, null))))), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "val", "cljs.core/val", 833354142, null), null, 1, null), new cljs.core.List(null, new cljs.core.Symbol(null, 
    "e__2914__auto__", "e__2914__auto__", -1788971580, null), null, 1, null)))), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "ex-info", "cljs.core/ex-info", 
    -409744395, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "str", "cljs.core/str", -1971828991, null), null, 1, null), new cljs.core.List(null, "Var ", null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
    null), null, 1, null), new cljs.core.List(null, s, null, 1, null)))), null, 1, null), new cljs.core.List(null, " does not exist, ", null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "namespace", "cljs.core/namespace", 1653264270, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, 
    new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, 1, null), new cljs.core.List(null, s, null, 1, null)))), null, 1, null)))), null, 1, null), new cljs.core.List(null, " never required", null, 1, null)))), null, 1, null), new cljs.core.List(null, cljs.core.apply.call(null, cljs.core.array_map, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null)))), null, 1, null)))), null, 1, null)))), null, 1, null)))), null, 1, null)))), null, 1, null), new cljs.core.List(null, 
    new cljs.core.Keyword(null, "cljs", "cljs", 1492417629), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "exists?", "cljs.core/exists?", 1852387968, null), 
    null, 1, null), new cljs.core.List(null, s, null, 1, null)))), null, 1, null), new cljs.core.List(null, cljs.core.vary_meta.call(null, s, cljs.core.assoc, new cljs.core.Keyword("cljs.analyzer", "no-resolve", "cljs.analyzer/no-resolve", -1872351017), true), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "if-let", "cljs.core/if-let", 1346583165, null), null, 1, 
    null), new cljs.core.List(null, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "e__2914__auto__", "e__2914__auto__", -1788971580, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "find", "cljs.core/find", 656179788, null), null, 1, null), new cljs.core.List(null, 
    opts, null, 1, null), new cljs.core.List(null, new cljs.core.Keyword(null, "default", "default", -1987822328), null, 1, null)))), null, 1, null))))), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "val", "cljs.core/val", 833354142, null), null, 1, null), new cljs.core.List(null, new cljs.core.Symbol(null, "e__2914__auto__", "e__2914__auto__", -1788971580, null), 
    null, 1, null)))), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("js", "Error.", "js/Error.", 750655924, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, 
    cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "str", "cljs.core/str", -1971828991, null), null, 1, null), new cljs.core.List(null, "Var ", null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, 1, null), new cljs.core.List(null, s, null, 1, null)))), null, 1, null), 
    new cljs.core.List(null, " does not exist, ", null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "namespace", "cljs.core/namespace", 1653264270, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), 
    null, 1, null), new cljs.core.List(null, s, null, 1, null)))), null, 1, null)))), null, 1, null), new cljs.core.List(null, " never required", null, 1, null)))), null, 1, null)))), null, 1, null)))), null, 1, null)))), null, 1, null)))), null, 1, null)))), null, 1, null)))), null, 1, null), new cljs.core.List(null, null, null, 1, null))));
  };
  borkdude.dynaload.dynaload.cljs$lang$maxFixedArity = 4;
  return null;
}();
borkdude.dynaload.dynaload.cljs$lang$macro = true;
goog.provide("malli.sci");
goog.require("cljs.core");
goog.require("borkdude.dynaload");
malli.sci.evaluator = function malli$sci$evaluator(options, fail_BANG_) {
  var eval_string_STAR_ = new borkdude.dynaload.LazyVar(function() {
    if (typeof sci !== "undefined" && typeof sci.core !== "undefined" && typeof sci.core.eval_string_STAR_ !== "undefined") {
      return sci.core.eval_string_STAR_;
    } else {
      var temp__5718__auto__ = cljs.core.find.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "default", "default", -1987822328), null], null), new cljs.core.Keyword(null, "default", "default", -1987822328));
      if (cljs.core.truth_(temp__5718__auto__)) {
        var e__2887__auto__ = temp__5718__auto__;
        return cljs.core.val.call(null, e__2887__auto__);
      } else {
        throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("sci.core", "eval-string*", "sci.core/eval-string*", 2134763594, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("sci.core", "eval-string*", "sci.core/eval-string*", 2134763594, null))), " never required"].join(""));
      }
    }
  }, null);
  var init = new borkdude.dynaload.LazyVar(function(eval_string_STAR_) {
    return function() {
      if (typeof sci !== "undefined" && typeof sci.core !== "undefined" && typeof sci.core.init !== "undefined") {
        return sci.core.init;
      } else {
        var temp__5718__auto__ = cljs.core.find.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "default", "default", -1987822328), null], null), new cljs.core.Keyword(null, "default", "default", -1987822328));
        if (cljs.core.truth_(temp__5718__auto__)) {
          var e__2887__auto__ = temp__5718__auto__;
          return cljs.core.val.call(null, e__2887__auto__);
        } else {
          throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("sci.core", "init", "sci.core/init", -622666095, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("sci.core", "init", "sci.core/init", -622666095, null))), " never required"].join(""));
        }
      }
    };
  }(eval_string_STAR_), null);
  var fork = new borkdude.dynaload.LazyVar(function(eval_string_STAR_, init) {
    return function() {
      if (typeof sci !== "undefined" && typeof sci.core !== "undefined" && typeof sci.core.fork !== "undefined") {
        return sci.core.fork;
      } else {
        var temp__5718__auto__ = cljs.core.find.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "default", "default", -1987822328), null], null), new cljs.core.Keyword(null, "default", "default", -1987822328));
        if (cljs.core.truth_(temp__5718__auto__)) {
          var e__2887__auto__ = temp__5718__auto__;
          return cljs.core.val.call(null, e__2887__auto__);
        } else {
          throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("sci.core", "fork", "sci.core/fork", -1806691042, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("sci.core", "fork", "sci.core/fork", -1806691042, null))), " never required"].join(""));
        }
      }
    };
  }(eval_string_STAR_, init), null);
  return function(eval_string_STAR_, init, fork) {
    return function() {
      if (cljs.core.truth_(function() {
        var and__4036__auto__ = cljs.core.deref.call(null, eval_string_STAR_);
        if (cljs.core.truth_(and__4036__auto__)) {
          var and__4036__auto____$1 = cljs.core.deref.call(null, init);
          if (cljs.core.truth_(and__4036__auto____$1)) {
            return cljs.core.deref.call(null, fork);
          } else {
            return and__4036__auto____$1;
          }
        } else {
          return and__4036__auto__;
        }
      }())) {
        var ctx = init.call(null, options);
        eval_string_STAR_.call(null, ctx, "(alias 'm 'malli.core)");
        return function(ctx, eval_string_STAR_, init, fork) {
          return function malli$sci$evaluator_$_eval(s) {
            return eval_string_STAR_.call(null, fork.call(null, ctx), cljs.core.str.cljs$core$IFn$_invoke$arity$1(s));
          };
        }(ctx, eval_string_STAR_, init, fork);
      } else {
        return fail_BANG_;
      }
    };
  }(eval_string_STAR_, init, fork);
};
goog.provide("malli.core");
goog.require("cljs.core");
goog.require("cljs.core");
goog.require("malli.impl.regex");
goog.require("malli.impl.util");
goog.require("malli.registry");
goog.require("malli.sci");
malli.core.IntoSchema = function() {
};
malli.core._type = function malli$core$_type(this$) {
  if (!(this$ == null) && !(this$.malli$core$IntoSchema$_type$arity$1 == null)) {
    return this$.malli$core$IntoSchema$_type$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._type[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._type["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IntoSchema.-type", this$);
      }
    }
  }
};
malli.core._type_properties = function malli$core$_type_properties(this$) {
  if (!(this$ == null) && !(this$.malli$core$IntoSchema$_type_properties$arity$1 == null)) {
    return this$.malli$core$IntoSchema$_type_properties$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._type_properties[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._type_properties["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IntoSchema.-type-properties", this$);
      }
    }
  }
};
malli.core._properties_schema = function malli$core$_properties_schema(this$, options) {
  if (!(this$ == null) && !(this$.malli$core$IntoSchema$_properties_schema$arity$2 == null)) {
    return this$.malli$core$IntoSchema$_properties_schema$arity$2(this$, options);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._properties_schema[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, options);
    } else {
      var m__4348__auto____$1 = malli.core._properties_schema["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "IntoSchema.-properties-schema", this$);
      }
    }
  }
};
malli.core._children_schema = function malli$core$_children_schema(this$, options) {
  if (!(this$ == null) && !(this$.malli$core$IntoSchema$_children_schema$arity$2 == null)) {
    return this$.malli$core$IntoSchema$_children_schema$arity$2(this$, options);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._children_schema[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, options);
    } else {
      var m__4348__auto____$1 = malli.core._children_schema["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "IntoSchema.-children-schema", this$);
      }
    }
  }
};
malli.core._into_schema = function malli$core$_into_schema(this$, properties, children, options) {
  if (!(this$ == null) && !(this$.malli$core$IntoSchema$_into_schema$arity$4 == null)) {
    return this$.malli$core$IntoSchema$_into_schema$arity$4(this$, properties, children, options);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._into_schema[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, properties, children, options);
    } else {
      var m__4348__auto____$1 = malli.core._into_schema["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, properties, children, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "IntoSchema.-into-schema", this$);
      }
    }
  }
};
malli.core.Schema = function() {
};
malli.core._validator = function malli$core$_validator(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_validator$arity$1 == null)) {
    return this$.malli$core$Schema$_validator$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._validator[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._validator["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.-validator", this$);
      }
    }
  }
};
malli.core._explainer = function malli$core$_explainer(this$, path) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_explainer$arity$2 == null)) {
    return this$.malli$core$Schema$_explainer$arity$2(this$, path);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._explainer[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, path);
    } else {
      var m__4348__auto____$1 = malli.core._explainer["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, path);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.-explainer", this$);
      }
    }
  }
};
malli.core._parser = function malli$core$_parser(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_parser$arity$1 == null)) {
    return this$.malli$core$Schema$_parser$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._parser[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._parser["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.-parser", this$);
      }
    }
  }
};
malli.core._unparser = function malli$core$_unparser(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_unparser$arity$1 == null)) {
    return this$.malli$core$Schema$_unparser$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._unparser[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._unparser["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.-unparser", this$);
      }
    }
  }
};
malli.core._transformer = function malli$core$_transformer(this$, transformer, method, options) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_transformer$arity$4 == null)) {
    return this$.malli$core$Schema$_transformer$arity$4(this$, transformer, method, options);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._transformer[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, transformer, method, options);
    } else {
      var m__4348__auto____$1 = malli.core._transformer["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, transformer, method, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.-transformer", this$);
      }
    }
  }
};
malli.core._walk = function malli$core$_walk(this$, walker, path, options) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_walk$arity$4 == null)) {
    return this$.malli$core$Schema$_walk$arity$4(this$, walker, path, options);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._walk[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, walker, path, options);
    } else {
      var m__4348__auto____$1 = malli.core._walk["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, walker, path, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.-walk", this$);
      }
    }
  }
};
malli.core._properties = function malli$core$_properties(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_properties$arity$1 == null)) {
    return this$.malli$core$Schema$_properties$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._properties[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._properties["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.-properties", this$);
      }
    }
  }
};
malli.core._options = function malli$core$_options(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_options$arity$1 == null)) {
    return this$.malli$core$Schema$_options$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._options[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._options["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.-options", this$);
      }
    }
  }
};
malli.core._children = function malli$core$_children(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_children$arity$1 == null)) {
    return this$.malli$core$Schema$_children$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._children[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._children["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.-children", this$);
      }
    }
  }
};
malli.core._parent = function malli$core$_parent(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_parent$arity$1 == null)) {
    return this$.malli$core$Schema$_parent$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._parent[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._parent["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.-parent", this$);
      }
    }
  }
};
malli.core._form = function malli$core$_form(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_form$arity$1 == null)) {
    return this$.malli$core$Schema$_form$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._form[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._form["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.-form", this$);
      }
    }
  }
};
malli.core.AST = function() {
};
malli.core._to_ast = function malli$core$_to_ast(this$, options) {
  if (!(this$ == null) && !(this$.malli$core$AST$_to_ast$arity$2 == null)) {
    return this$.malli$core$AST$_to_ast$arity$2(this$, options);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._to_ast[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, options);
    } else {
      var m__4348__auto____$1 = malli.core._to_ast["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "AST.-to-ast", this$);
      }
    }
  }
};
malli.core._from_ast = function malli$core$_from_ast(this$, ast, options) {
  if (!(this$ == null) && !(this$.malli$core$AST$_from_ast$arity$3 == null)) {
    return this$.malli$core$AST$_from_ast$arity$3(this$, ast, options);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._from_ast[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, ast, options);
    } else {
      var m__4348__auto____$1 = malli.core._from_ast["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, ast, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "AST.-from-ast", this$);
      }
    }
  }
};
malli.core.EntryParser = function() {
};
malli.core._entry_keyset = function malli$core$_entry_keyset(this$) {
  if (!(this$ == null) && !(this$.malli$core$EntryParser$_entry_keyset$arity$1 == null)) {
    return this$.malli$core$EntryParser$_entry_keyset$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._entry_keyset[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._entry_keyset["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "EntryParser.-entry-keyset", this$);
      }
    }
  }
};
malli.core._entry_children = function malli$core$_entry_children(this$) {
  if (!(this$ == null) && !(this$.malli$core$EntryParser$_entry_children$arity$1 == null)) {
    return this$.malli$core$EntryParser$_entry_children$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._entry_children[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._entry_children["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "EntryParser.-entry-children", this$);
      }
    }
  }
};
malli.core._entry_entries = function malli$core$_entry_entries(this$) {
  if (!(this$ == null) && !(this$.malli$core$EntryParser$_entry_entries$arity$1 == null)) {
    return this$.malli$core$EntryParser$_entry_entries$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._entry_entries[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._entry_entries["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "EntryParser.-entry-entries", this$);
      }
    }
  }
};
malli.core._entry_forms = function malli$core$_entry_forms(this$) {
  if (!(this$ == null) && !(this$.malli$core$EntryParser$_entry_forms$arity$1 == null)) {
    return this$.malli$core$EntryParser$_entry_forms$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._entry_forms[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._entry_forms["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "EntryParser.-entry-forms", this$);
      }
    }
  }
};
malli.core.EntrySchema = function() {
};
malli.core._entries = function malli$core$_entries(this$) {
  if (!(this$ == null) && !(this$.malli$core$EntrySchema$_entries$arity$1 == null)) {
    return this$.malli$core$EntrySchema$_entries$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._entries[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._entries["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "EntrySchema.-entries", this$);
      }
    }
  }
};
malli.core._entry_parser = function malli$core$_entry_parser(this$) {
  if (!(this$ == null) && !(this$.malli$core$EntrySchema$_entry_parser$arity$1 == null)) {
    return this$.malli$core$EntrySchema$_entry_parser$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._entry_parser[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._entry_parser["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "EntrySchema.-entry-parser", this$);
      }
    }
  }
};
malli.core.Cached = function() {
};
malli.core._cache = function malli$core$_cache(this$) {
  if (!(this$ == null) && !(this$.malli$core$Cached$_cache$arity$1 == null)) {
    return this$.malli$core$Cached$_cache$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._cache[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._cache["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Cached.-cache", this$);
      }
    }
  }
};
malli.core.LensSchema = function() {
};
malli.core._keep = function malli$core$_keep(this$) {
  if (!(this$ == null) && !(this$.malli$core$LensSchema$_keep$arity$1 == null)) {
    return this$.malli$core$LensSchema$_keep$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._keep[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._keep["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "LensSchema.-keep", this$);
      }
    }
  }
};
malli.core._get = function malli$core$_get(this$, key, default$) {
  if (!(this$ == null) && !(this$.malli$core$LensSchema$_get$arity$3 == null)) {
    return this$.malli$core$LensSchema$_get$arity$3(this$, key, default$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._get[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, key, default$);
    } else {
      var m__4348__auto____$1 = malli.core._get["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, key, default$);
      } else {
        throw cljs.core.missing_protocol.call(null, "LensSchema.-get", this$);
      }
    }
  }
};
malli.core._set = function malli$core$_set(this$, key, value) {
  if (!(this$ == null) && !(this$.malli$core$LensSchema$_set$arity$3 == null)) {
    return this$.malli$core$LensSchema$_set$arity$3(this$, key, value);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._set[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, key, value);
    } else {
      var m__4348__auto____$1 = malli.core._set["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, key, value);
      } else {
        throw cljs.core.missing_protocol.call(null, "LensSchema.-set", this$);
      }
    }
  }
};
malli.core.RefSchema = function() {
};
malli.core._ref = function malli$core$_ref(this$) {
  if (!(this$ == null) && !(this$.malli$core$RefSchema$_ref$arity$1 == null)) {
    return this$.malli$core$RefSchema$_ref$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._ref[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._ref["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "RefSchema.-ref", this$);
      }
    }
  }
};
malli.core._deref = function malli$core$_deref(this$) {
  if (!(this$ == null) && !(this$.malli$core$RefSchema$_deref$arity$1 == null)) {
    return this$.malli$core$RefSchema$_deref$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._deref[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._deref["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "RefSchema.-deref", this$);
      }
    }
  }
};
malli.core.Walker = function() {
};
malli.core._accept = function malli$core$_accept(this$, schema, path, options) {
  if (!(this$ == null) && !(this$.malli$core$Walker$_accept$arity$4 == null)) {
    return this$.malli$core$Walker$_accept$arity$4(this$, schema, path, options);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._accept[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, schema, path, options);
    } else {
      var m__4348__auto____$1 = malli.core._accept["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, schema, path, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "Walker.-accept", this$);
      }
    }
  }
};
malli.core._inner = function malli$core$_inner(this$, schema, path, options) {
  if (!(this$ == null) && !(this$.malli$core$Walker$_inner$arity$4 == null)) {
    return this$.malli$core$Walker$_inner$arity$4(this$, schema, path, options);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._inner[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, schema, path, options);
    } else {
      var m__4348__auto____$1 = malli.core._inner["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, schema, path, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "Walker.-inner", this$);
      }
    }
  }
};
malli.core._outer = function malli$core$_outer(this$, schema, path, children, options) {
  if (!(this$ == null) && !(this$.malli$core$Walker$_outer$arity$5 == null)) {
    return this$.malli$core$Walker$_outer$arity$5(this$, schema, path, children, options);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._outer[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, schema, path, children, options);
    } else {
      var m__4348__auto____$1 = malli.core._outer["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, schema, path, children, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "Walker.-outer", this$);
      }
    }
  }
};
malli.core.Transformer = function() {
};
malli.core._transformer_chain = function malli$core$_transformer_chain(this$) {
  if (!(this$ == null) && !(this$.malli$core$Transformer$_transformer_chain$arity$1 == null)) {
    return this$.malli$core$Transformer$_transformer_chain$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._transformer_chain[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._transformer_chain["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Transformer.-transformer-chain", this$);
      }
    }
  }
};
malli.core._value_transformer = function malli$core$_value_transformer(this$, schema, method, options) {
  if (!(this$ == null) && !(this$.malli$core$Transformer$_value_transformer$arity$4 == null)) {
    return this$.malli$core$Transformer$_value_transformer$arity$4(this$, schema, method, options);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._value_transformer[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, schema, method, options);
    } else {
      var m__4348__auto____$1 = malli.core._value_transformer["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, schema, method, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "Transformer.-value-transformer", this$);
      }
    }
  }
};
malli.core.RegexSchema = function() {
};
malli.core._regex_op_QMARK_ = function malli$core$_regex_op_QMARK_(this$) {
  if (!(this$ == null) && !(this$.malli$core$RegexSchema$_regex_op_QMARK_$arity$1 == null)) {
    return this$.malli$core$RegexSchema$_regex_op_QMARK_$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._regex_op_QMARK_[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._regex_op_QMARK_["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "RegexSchema.-regex-op?", this$);
      }
    }
  }
};
malli.core._regex_validator = function malli$core$_regex_validator(this$) {
  if (!(this$ == null) && !(this$.malli$core$RegexSchema$_regex_validator$arity$1 == null)) {
    return this$.malli$core$RegexSchema$_regex_validator$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._regex_validator[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._regex_validator["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "RegexSchema.-regex-validator", this$);
      }
    }
  }
};
malli.core._regex_explainer = function malli$core$_regex_explainer(this$, path) {
  if (!(this$ == null) && !(this$.malli$core$RegexSchema$_regex_explainer$arity$2 == null)) {
    return this$.malli$core$RegexSchema$_regex_explainer$arity$2(this$, path);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._regex_explainer[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, path);
    } else {
      var m__4348__auto____$1 = malli.core._regex_explainer["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, path);
      } else {
        throw cljs.core.missing_protocol.call(null, "RegexSchema.-regex-explainer", this$);
      }
    }
  }
};
malli.core._regex_unparser = function malli$core$_regex_unparser(this$) {
  if (!(this$ == null) && !(this$.malli$core$RegexSchema$_regex_unparser$arity$1 == null)) {
    return this$.malli$core$RegexSchema$_regex_unparser$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._regex_unparser[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._regex_unparser["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "RegexSchema.-regex-unparser", this$);
      }
    }
  }
};
malli.core._regex_parser = function malli$core$_regex_parser(this$) {
  if (!(this$ == null) && !(this$.malli$core$RegexSchema$_regex_parser$arity$1 == null)) {
    return this$.malli$core$RegexSchema$_regex_parser$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._regex_parser[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._regex_parser["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "RegexSchema.-regex-parser", this$);
      }
    }
  }
};
malli.core._regex_transformer = function malli$core$_regex_transformer(this$, transformer, method, options) {
  if (!(this$ == null) && !(this$.malli$core$RegexSchema$_regex_transformer$arity$4 == null)) {
    return this$.malli$core$RegexSchema$_regex_transformer$arity$4(this$, transformer, method, options);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._regex_transformer[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$, transformer, method, options);
    } else {
      var m__4348__auto____$1 = malli.core._regex_transformer["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$, transformer, method, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "RegexSchema.-regex-transformer", this$);
      }
    }
  }
};
malli.core._regex_min_max = function malli$core$_regex_min_max(this$) {
  if (!(this$ == null) && !(this$.malli$core$RegexSchema$_regex_min_max$arity$1 == null)) {
    return this$.malli$core$RegexSchema$_regex_min_max$arity$1(this$);
  } else {
    var x__4347__auto__ = this$ == null ? null : this$;
    var m__4348__auto__ = malli.core._regex_min_max[goog.typeOf(x__4347__auto__)];
    if (!(m__4348__auto__ == null)) {
      return m__4348__auto__.call(null, this$);
    } else {
      var m__4348__auto____$1 = malli.core._regex_min_max["_"];
      if (!(m__4348__auto____$1 == null)) {
        return m__4348__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "RegexSchema.-regex-min-max", this$);
      }
    }
  }
};
malli.core._ref_schema_QMARK_ = function malli$core$_ref_schema_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$RefSchema$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.core._entry_parser_QMARK_ = function malli$core$_entry_parser_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$EntryParser$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.core._entry_schema_QMARK_ = function malli$core$_entry_schema_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$EntrySchema$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.core._cached_QMARK_ = function malli$core$_cached_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$Cached$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.core._ast_QMARK_ = function malli$core$_ast_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$AST$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.core._transformer_QMARK_ = function malli$core$_transformer_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$Transformer$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
goog.object.set(malli.core.RegexSchema, "_", true);
goog.object.set(malli.core._regex_op_QMARK_, "_", function(_) {
  return false;
});
goog.object.set(malli.core._regex_validator, "_", function(this$) {
  if (malli.core._ref_schema_QMARK_.call(null, this$)) {
    return malli.core._regex_validator.call(null, malli.core._deref.call(null, this$));
  } else {
    return malli.impl.regex.item_validator.call(null, malli.core._validator.call(null, this$));
  }
});
goog.object.set(malli.core._regex_explainer, "_", function(this$, path) {
  if (malli.core._ref_schema_QMARK_.call(null, this$)) {
    return malli.core._regex_explainer.call(null, malli.core._deref.call(null, this$), path);
  } else {
    return malli.impl.regex.item_explainer.call(null, path, this$, malli.core._explainer.call(null, this$, path));
  }
});
goog.object.set(malli.core._regex_parser, "_", function(this$) {
  if (malli.core._ref_schema_QMARK_.call(null, this$)) {
    return malli.core._regex_parser.call(null, malli.core._deref.call(null, this$));
  } else {
    return malli.impl.regex.item_parser.call(null, malli.core.parser.call(null, this$));
  }
});
goog.object.set(malli.core._regex_unparser, "_", function(this$) {
  if (malli.core._ref_schema_QMARK_.call(null, this$)) {
    return malli.core._regex_unparser.call(null, malli.core._deref.call(null, this$));
  } else {
    return malli.impl.regex.item_unparser.call(null, malli.core.unparser.call(null, this$));
  }
});
goog.object.set(malli.core._regex_transformer, "_", function(this$, transformer, method, options) {
  if (malli.core._ref_schema_QMARK_.call(null, this$)) {
    return malli.core._regex_transformer.call(null, malli.core._deref.call(null, this$), transformer, method, options);
  } else {
    return malli.impl.regex.item_transformer.call(null, method, malli.core._validator.call(null, this$), function() {
      var or__4047__auto__ = malli.core._transformer.call(null, this$, transformer, method, options);
      if (cljs.core.truth_(or__4047__auto__)) {
        return or__4047__auto__;
      } else {
        return cljs.core.identity;
      }
    }());
  }
});
goog.object.set(malli.core._regex_min_max, "_", function(_) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min", "min", 444991522), 1, new cljs.core.Keyword(null, "max", "max", 61366548), 1], null);
});
malli.core._deprecated_BANG_ = function malli$core$_deprecated_BANG_(x) {
  return cljs.core.println.call(null, "DEPRECATED:", x);
};
malli.core._fail_BANG_ = function malli$core$_fail_BANG_(var_args) {
  var G__7462 = arguments.length;
  switch(G__7462) {
    case 1:
      return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$1 = function(type) {
  return malli.core._fail_BANG_.call(null, type, null);
};
malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2 = function(type, data) {
  throw cljs.core.ex_info.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(type), " ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, data))].join(""), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), type, new cljs.core.Keyword(null, "message", "message", -406056002), type, new cljs.core.Keyword(null, "data", "data", -232669377), data], null));
};
malli.core._fail_BANG_.cljs$lang$maxFixedArity = 2;
malli.core._safe_pred = function malli$core$_safe_pred(f) {
  return function(p1__7464_SHARP_) {
    try {
      return cljs.core.boolean$.call(null, f.call(null, p1__7464_SHARP_));
    } catch (e7465) {
      if (e7465 instanceof Error) {
        var _ = e7465;
        return false;
      } else {
        throw e7465;
      }
    }
  };
};
malli.core._keyword__GT_string = function malli$core$_keyword__GT_string(x) {
  if (x instanceof cljs.core.Keyword) {
    var temp__5718__auto__ = cljs.core.namespace.call(null, x);
    if (cljs.core.truth_(temp__5718__auto__)) {
      var nn = temp__5718__auto__;
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(nn), "/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, x))].join("");
    } else {
      return cljs.core.name.call(null, x);
    }
  } else {
    return x;
  }
};
malli.core._guard = function malli$core$_guard(pred, tf) {
  if (cljs.core.truth_(tf)) {
    return function(x) {
      if (cljs.core.truth_(pred.call(null, x))) {
        return tf.call(null, x);
      } else {
        return x;
      }
    };
  } else {
    return null;
  }
};
malli.core._unlift_keys = function malli$core$_unlift_keys(m, prefix) {
  return cljs.core.reduce_kv.call(null, function(p1__7467_SHARP_, p2__7466_SHARP_, p3__7468_SHARP_) {
    if (cljs.core._EQ_.call(null, cljs.core.name.call(null, prefix), cljs.core.namespace.call(null, p2__7466_SHARP_))) {
      return cljs.core.assoc.call(null, p1__7467_SHARP_, cljs.core.keyword.call(null, cljs.core.name.call(null, p2__7466_SHARP_)), p3__7468_SHARP_);
    } else {
      return p1__7467_SHARP_;
    }
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
malli.core._check_children_QMARK_ = function malli$core$_check_children_QMARK_() {
  return true;
};
malli.core._check_children_BANG_ = function malli$core$_check_children_BANG_(var_args) {
  var G__7470 = arguments.length;
  switch(G__7470) {
    case 4:
      return malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$4 = function(type, properties, children, props) {
  malli.core._deprecated_BANG_.call(null, "use (m/-check-children! type properties children min max) instead.");
  return malli.core._check_children_BANG_.call(null, type, properties, children, (new cljs.core.Keyword(null, "min", "min", 444991522)).cljs$core$IFn$_invoke$arity$1(props), (new cljs.core.Keyword(null, "max", "max", 61366548)).cljs$core$IFn$_invoke$arity$1(props));
};
malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5 = function(type, properties, children, min, max) {
  if (malli.core._check_children_QMARK_.call(null)) {
    var temp__5720__auto__ = function() {
      var and__4036__auto__ = cljs.core.sequential_QMARK_.call(null, children) || children == null;
      if (and__4036__auto__) {
        return cljs.core.count.call(null, children);
      } else {
        return and__4036__auto__;
      }
    }();
    if (cljs.core.truth_(temp__5720__auto__)) {
      var size = temp__5720__auto__;
      if (cljs.core.truth_(function() {
        var or__4047__auto__ = function() {
          var and__4036__auto__ = min;
          if (cljs.core.truth_(and__4036__auto__)) {
            return size < min;
          } else {
            return and__4036__auto__;
          }
        }();
        if (cljs.core.truth_(or__4047__auto__)) {
          return or__4047__auto__;
        } else {
          var and__4036__auto__ = max;
          if (cljs.core.truth_(and__4036__auto__)) {
            return size > max;
          } else {
            return and__4036__auto__;
          }
        }
      }())) {
        return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "child-error", "malli.core/child-error", -473817473), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), type, new cljs.core.Keyword(null, "properties", "properties", 685819552), properties, new cljs.core.Keyword(null, "children", "children", -940561982), children, new cljs.core.Keyword(null, "min", "min", 444991522), min, new cljs.core.Keyword(null, "max", "max", 
        61366548), max], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  } else {
    return null;
  }
};
malli.core._check_children_BANG_.cljs$lang$maxFixedArity = 5;
malli.core._pointer = function malli$core$_pointer(id, schema, options) {
  return malli.core._into_schema.call(null, malli.core._schema_schema.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", -1388402092), id], null)), null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema], null), options);
};
malli.core._reference_QMARK_ = function malli$core$_reference_QMARK_(_QMARK_schema) {
  return typeof _QMARK_schema === "string" || cljs.core.qualified_keyword_QMARK_.call(null, _QMARK_schema);
};
malli.core._lazy = function malli$core$_lazy(ref, options) {
  return malli.core._into_schema.call(null, malli.core._ref_schema.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "lazy", "lazy", -424547181), true], null)), null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ref], null), options);
};
malli.core._boolean_fn = function malli$core$_boolean_fn(x) {
  if (cljs.core.boolean_QMARK_.call(null, x)) {
    return cljs.core.constantly.call(null, x);
  } else {
    if (cljs.core.ifn_QMARK_.call(null, x)) {
      return x;
    } else {
      return cljs.core.constantly.call(null, false);
    }
  }
};
malli.core._comp = function malli$core$_comp(var_args) {
  var G__7477 = arguments.length;
  switch(G__7477) {
    case 0:
      return malli.core._comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.core._comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core._comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core._comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4662__auto__ = [];
      var len__4641__auto___7479 = arguments.length;
      var i__4642__auto___7480 = 0;
      while (true) {
        if (i__4642__auto___7480 < len__4641__auto___7479) {
          args_arr__4662__auto__.push(arguments[i__4642__auto___7480]);
          var G__7481 = i__4642__auto___7480 + 1;
          i__4642__auto___7480 = G__7481;
          continue;
        } else {
        }
        break;
      }
      var argseq__4663__auto__ = new cljs.core.IndexedSeq(args_arr__4662__auto__.slice(3), 0, null);
      return malli.core._comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4663__auto__);
  }
};
malli.core._comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
malli.core._comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
malli.core._comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function(x) {
    return f.call(null, g.call(null, x));
  };
};
malli.core._comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function(x) {
    return f.call(null, g.call(null, h.call(null, x)));
  };
};
malli.core._comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  return malli.core._comp.call(null, cljs.core.apply.call(null, malli.core._comp, fs), function(x) {
    return f1.call(null, f2.call(null, f3.call(null, x)));
  });
};
malli.core._comp.cljs$lang$applyTo = function(seq7473) {
  var G__7474 = cljs.core.first.call(null, seq7473);
  var seq7473__$1 = cljs.core.next.call(null, seq7473);
  var G__7475 = cljs.core.first.call(null, seq7473__$1);
  var seq7473__$2 = cljs.core.next.call(null, seq7473__$1);
  var G__7476 = cljs.core.first.call(null, seq7473__$2);
  var seq7473__$3 = cljs.core.next.call(null, seq7473__$2);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7474, G__7475, G__7476, seq7473__$3);
};
malli.core._comp.cljs$lang$maxFixedArity = 3;
malli.core._update = function malli$core$_update(x, k, f) {
  return cljs.core.assoc.call(null, x, k, f.call(null, cljs.core.get.call(null, x, k)));
};
malli.core._equals = function malli$core$_equals(x, y) {
  return x === y || cljs.core._EQ_.call(null, x, y);
};
malli.core._vmap = function malli$core$_vmap(var_args) {
  var G__7483 = arguments.length;
  switch(G__7483) {
    case 1:
      return malli.core._vmap.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core._vmap.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._vmap.cljs$core$IFn$_invoke$arity$1 = function(os) {
  return malli.impl.util._vmap.call(null, cljs.core.identity, os);
};
malli.core._vmap.cljs$core$IFn$_invoke$arity$2 = function(f, os) {
  return malli.impl.util._vmap.call(null, f, os);
};
malli.core._vmap.cljs$lang$maxFixedArity = 2;
malli.core._memoize = function malli$core$_memoize(f) {
  var value = cljs.core.atom.call(null, null);
  return function(value) {
    return function() {
      var or__4047__auto__ = cljs.core.deref.call(null, value);
      if (cljs.core.truth_(or__4047__auto__)) {
        return or__4047__auto__;
      } else {
        return cljs.core.reset_BANG_.call(null, value, f.call(null));
      }
    };
  }(value);
};
malli.core._function_info = function malli$core$_function_info(schema) {
  if (cljs.core._EQ_.call(null, malli.core.type.call(null, schema), new cljs.core.Keyword(null, "\x3d\x3e", "\x3d\x3e", 1841166128))) {
    var vec__7485 = malli.core._children.call(null, schema);
    var input = cljs.core.nth.call(null, vec__7485, 0, null);
    var output = cljs.core.nth.call(null, vec__7485, 1, null);
    var map__7488 = malli.core._regex_min_max.call(null, input);
    var map__7488__$1 = (!(map__7488 == null) ? map__7488.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7488.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7488) : map__7488;
    var min = cljs.core.get.call(null, map__7488__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
    var max = cljs.core.get.call(null, map__7488__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
    var G__7490 = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "min", "min", 444991522), min, new cljs.core.Keyword(null, "arity", "arity", -1808556135), cljs.core._EQ_.call(null, min, max) ? min : new cljs.core.Keyword(null, "varargs", "varargs", 1030150858), new cljs.core.Keyword(null, "input", "input", 556931961), input, new cljs.core.Keyword(null, "output", "output", -1105869043), output], null);
    if (cljs.core.truth_(max)) {
      return cljs.core.assoc.call(null, G__7490, new cljs.core.Keyword(null, "max", "max", 61366548), max);
    } else {
      return G__7490;
    }
  } else {
    return null;
  }
};
malli.core._group_by_arity_BANG_ = function malli$core$_group_by_arity_BANG_(infos) {
  var aritys = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
  return cljs.core.reduce.call(null, function(aritys) {
    return function(acc, p__7491) {
      var map__7492 = p__7491;
      var map__7492__$1 = (!(map__7492 == null) ? map__7492.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7492.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7492) : map__7492;
      var info = map__7492__$1;
      var min = cljs.core.get.call(null, map__7492__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
      var arity = cljs.core.get.call(null, map__7492__$1, new cljs.core.Keyword(null, "arity", "arity", -1808556135));
      var vararg = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "varargs", "varargs", 1030150858), arity);
      var min__$1 = cljs.core.truth_(function() {
        var and__4036__auto__ = vararg;
        if (and__4036__auto__) {
          return cljs.core.deref.call(null, aritys).call(null, min);
        } else {
          return and__4036__auto__;
        }
      }()) ? cljs.core.apply.call(null, cljs.core.max, cljs.core.filter.call(null, cljs.core.int_QMARK_, cljs.core.deref.call(null, aritys))) + 1 : min;
      if (cljs.core.truth_(function() {
        var and__4036__auto__ = vararg;
        if (and__4036__auto__) {
          return cljs.core.deref.call(null, aritys).call(null, arity);
        } else {
          return and__4036__auto__;
        }
      }())) {
        return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "multiple-varargs", "malli.core/multiple-varargs", 1982057671), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "infos", "infos", -927309652), infos], null));
      } else {
        if (cljs.core.truth_(cljs.core.deref.call(null, aritys).call(null, min__$1))) {
          return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "duplicate-arities", "malli.core/duplicate-arities", -374423504), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "infos", "infos", -927309652), infos], null));
        } else {
          cljs.core.swap_BANG_.call(null, aritys, cljs.core.conj, arity);
          return cljs.core.assoc.call(null, acc, arity, cljs.core.assoc.call(null, info, new cljs.core.Keyword(null, "min", "min", 444991522), min__$1));
        }
      }
    };
  }(aritys), cljs.core.PersistentArrayMap.EMPTY, infos);
};
malli.core._re_min_max = function malli$core$_re_min_max(f, p__7494, child) {
  var map__7495 = p__7494;
  var map__7495__$1 = (!(map__7495 == null) ? map__7495.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7495.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7495) : map__7495;
  var min_SINGLEQUOTE_ = cljs.core.get.call(null, map__7495__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
  var max_SINGLEQUOTE_ = cljs.core.get.call(null, map__7495__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
  var map__7497 = malli.core._regex_min_max.call(null, child);
  var map__7497__$1 = (!(map__7497 == null) ? map__7497.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7497.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7497) : map__7497;
  var min_SINGLEQUOTE__SINGLEQUOTE_ = cljs.core.get.call(null, map__7497__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
  var max_SINGLEQUOTE__SINGLEQUOTE_ = cljs.core.get.call(null, map__7497__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
  var G__7499 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "min", "min", 444991522), f.call(null, function() {
    var or__4047__auto__ = min_SINGLEQUOTE_;
    if (cljs.core.truth_(or__4047__auto__)) {
      return or__4047__auto__;
    } else {
      return 0;
    }
  }(), min_SINGLEQUOTE__SINGLEQUOTE_)], null);
  if (cljs.core.truth_(function() {
    var and__4036__auto__ = max_SINGLEQUOTE_;
    if (cljs.core.truth_(and__4036__auto__)) {
      return max_SINGLEQUOTE__SINGLEQUOTE_;
    } else {
      return and__4036__auto__;
    }
  }())) {
    return cljs.core.assoc.call(null, G__7499, new cljs.core.Keyword(null, "max", "max", 61366548), f.call(null, max_SINGLEQUOTE_, max_SINGLEQUOTE__SINGLEQUOTE_));
  } else {
    return G__7499;
  }
};
malli.core._re_alt_min_max = function malli$core$_re_alt_min_max(p__7500, child) {
  var map__7501 = p__7500;
  var map__7501__$1 = (!(map__7501 == null) ? map__7501.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7501.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7501) : map__7501;
  var min_SINGLEQUOTE_ = cljs.core.get.call(null, map__7501__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
  var max_SINGLEQUOTE_ = cljs.core.get.call(null, map__7501__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
  var map__7503 = malli.core._regex_min_max.call(null, child);
  var map__7503__$1 = (!(map__7503 == null) ? map__7503.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7503.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7503) : map__7503;
  var min_SINGLEQUOTE__SINGLEQUOTE_ = cljs.core.get.call(null, map__7503__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
  var max_SINGLEQUOTE__SINGLEQUOTE_ = cljs.core.get.call(null, map__7503__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
  var G__7505 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "min", "min", 444991522), function() {
    var x__4138__auto__ = function() {
      var or__4047__auto__ = min_SINGLEQUOTE_;
      if (cljs.core.truth_(or__4047__auto__)) {
        return or__4047__auto__;
      } else {
        return malli.impl.util._PLUS_max_size_PLUS_;
      }
    }();
    var y__4139__auto__ = min_SINGLEQUOTE__SINGLEQUOTE_;
    return x__4138__auto__ < y__4139__auto__ ? x__4138__auto__ : y__4139__auto__;
  }()], null);
  if (cljs.core.truth_(function() {
    var and__4036__auto__ = max_SINGLEQUOTE_;
    if (cljs.core.truth_(and__4036__auto__)) {
      return max_SINGLEQUOTE__SINGLEQUOTE_;
    } else {
      return and__4036__auto__;
    }
  }())) {
    return cljs.core.assoc.call(null, G__7505, new cljs.core.Keyword(null, "max", "max", 61366548), function() {
      var x__4135__auto__ = max_SINGLEQUOTE_;
      var y__4136__auto__ = max_SINGLEQUOTE__SINGLEQUOTE_;
      return x__4135__auto__ > y__4136__auto__ ? x__4135__auto__ : y__4136__auto__;
    }());
  } else {
    return G__7505;
  }
};
malli.core._register_var = function malli$core$_register_var(registry, _QMARK_v) {
  var vec__7506 = cljs.core.vector_QMARK_.call(null, _QMARK_v) ? _QMARK_v : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_v, cljs.core.deref.call(null, _QMARK_v)], null);
  var v = cljs.core.nth.call(null, vec__7506, 0, null);
  var pred = cljs.core.nth.call(null, vec__7506, 1, null);
  var name = (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
  var schema = malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), name, new cljs.core.Keyword(null, "pred", "pred", 1927423397), pred], null));
  return cljs.core.assoc.call(null, cljs.core.assoc.call(null, registry, name, schema), cljs.core.deref.call(null, v), schema);
};
malli.core._registry = function malli$core$_registry(var_args) {
  var G__7510 = arguments.length;
  switch(G__7510) {
    case 0:
      return malli.core._registry.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.core._registry.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._registry.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.core.default_registry;
};
malli.core._registry.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  var or__4047__auto__ = cljs.core.truth_(opts) ? malli.registry.registry.call(null, opts.call(null, new cljs.core.Keyword(null, "registry", "registry", 1021159018))) : null;
  if (cljs.core.truth_(or__4047__auto__)) {
    return or__4047__auto__;
  } else {
    return malli.core.default_registry;
  }
};
malli.core._registry.cljs$lang$maxFixedArity = 1;
malli.core._property_registry = function malli$core$_property_registry(m, options, f) {
  var options__$1 = cljs.core.assoc.call(null, options, new cljs.core.Keyword("malli.core", "allow-invalid-refs", "malli.core/allow-invalid-refs", -1863169617), true);
  return cljs.core.reduce_kv.call(null, function(options__$1) {
    return function(acc, k, v) {
      return cljs.core.assoc.call(null, acc, k, f.call(null, malli.core.schema.call(null, v, options__$1)));
    };
  }(options__$1), cljs.core.PersistentArrayMap.EMPTY, m);
};
malli.core._delayed_registry = function malli$core$_delayed_registry(m, f) {
  return cljs.core.reduce_kv.call(null, function(acc, k, v) {
    return cljs.core.assoc.call(null, acc, k, function() {
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7512 !== "undefined") {
      } else {
        malli.core.t_malli$core7512 = function(m, f, acc, k, v, meta7513) {
          this.m = m;
          this.f = f;
          this.acc = acc;
          this.k = k;
          this.v = v;
          this.meta7513 = meta7513;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core7512.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7514, meta7513__$1) {
          var self__ = this;
          var _7514__$1 = this;
          return new malli.core.t_malli$core7512(self__.m, self__.f, self__.acc, self__.k, self__.v, meta7513__$1);
        };
        malli.core.t_malli$core7512.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7514) {
          var self__ = this;
          var _7514__$1 = this;
          return self__.meta7513;
        };
        malli.core.t_malli$core7512.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7512.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(_, ___$1, ___$2, options) {
          var self__ = this;
          var ___$3 = this;
          return self__.f.call(null, self__.v, options);
        };
        malli.core.t_malli$core7512.getBasis = function() {
          return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "m", "m", -1021758608, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "acc", "acc", -1815869457, null), new cljs.core.Symbol(null, "k", "k", -505765866, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "meta7513", "meta7513", 409243228, null)], null);
        };
        malli.core.t_malli$core7512.cljs$lang$type = true;
        malli.core.t_malli$core7512.cljs$lang$ctorStr = "malli.core/t_malli$core7512";
        malli.core.t_malli$core7512.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
          return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7512");
        };
        malli.core.__GT_t_malli$core7512 = function malli$core$_delayed_registry_$___GT_t_malli$core7512(m__$1, f__$1, acc__$1, k__$1, v__$1, meta7513) {
          return new malli.core.t_malli$core7512(m__$1, f__$1, acc__$1, k__$1, v__$1, meta7513);
        };
      }
      return new malli.core.t_malli$core7512(m, f, acc, k, v, cljs.core.PersistentArrayMap.EMPTY);
    }());
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
malli.core._lookup = function malli$core$_lookup(_QMARK_schema, options) {
  var registry = malli.core._registry.call(null, options);
  var or__4047__auto__ = malli.registry._schema.call(null, registry, _QMARK_schema);
  if (cljs.core.truth_(or__4047__auto__)) {
    return or__4047__auto__;
  } else {
    var G__7515 = registry;
    var G__7515__$1 = G__7515 == null ? null : malli.registry._schema.call(null, G__7515, cljs.core.type.call(null, _QMARK_schema));
    if (G__7515__$1 == null) {
      return null;
    } else {
      return malli.core._into_schema.call(null, G__7515__$1, null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_schema], null), options);
    }
  }
};
malli.core._lookup_BANG_ = function malli$core$_lookup_BANG_(_QMARK_schema, f, options) {
  var or__4047__auto__ = function() {
    var and__4036__auto__ = f;
    if (cljs.core.truth_(and__4036__auto__)) {
      var and__4036__auto____$1 = f.call(null, _QMARK_schema);
      if (cljs.core.truth_(and__4036__auto____$1)) {
        return _QMARK_schema;
      } else {
        return and__4036__auto____$1;
      }
    } else {
      return and__4036__auto__;
    }
  }();
  if (cljs.core.truth_(or__4047__auto__)) {
    return or__4047__auto__;
  } else {
    var or__4047__auto____$1 = malli.core._lookup.call(null, _QMARK_schema, options);
    if (cljs.core.truth_(or__4047__auto____$1)) {
      return or__4047__auto____$1;
    } else {
      return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "invalid-schema", "malli.core/invalid-schema", 1923990979), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), _QMARK_schema], null));
    }
  }
};
malli.core._properties_and_options = function malli$core$_properties_and_options(properties, options, f) {
  var temp__5718__auto__ = (new cljs.core.Keyword(null, "registry", "registry", 1021159018)).cljs$core$IFn$_invoke$arity$1(properties);
  if (cljs.core.truth_(temp__5718__auto__)) {
    var r = temp__5718__auto__;
    var options__$1 = malli.core._update.call(null, options, new cljs.core.Keyword(null, "registry", "registry", 1021159018), function(r, temp__5718__auto__) {
      return function(p1__7516_SHARP_) {
        return malli.registry.composite_registry.call(null, r, function() {
          var or__4047__auto__ = p1__7516_SHARP_;
          if (cljs.core.truth_(or__4047__auto__)) {
            return or__4047__auto__;
          } else {
            return malli.core._registry.call(null, options);
          }
        }());
      };
    }(r, temp__5718__auto__));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, properties, new cljs.core.Keyword(null, "registry", "registry", 1021159018), malli.core._property_registry.call(null, r, options__$1, f)), options__$1], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [properties, options], null);
  }
};
malli.core._create_cache = function malli$core$_create_cache(_options) {
  return cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
};
malli.core._cached = function malli$core$_cached(s, k, f) {
  if (malli.core._cached_QMARK_.call(null, s)) {
    var c = malli.core._cache.call(null, s);
    var or__4047__auto__ = cljs.core.deref.call(null, c).call(null, k);
    if (cljs.core.truth_(or__4047__auto__)) {
      return or__4047__auto__;
    } else {
      return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, k, f.call(null, s)).call(null, k);
    }
  } else {
    return f.call(null, s);
  }
};
malli.core._create_form = function malli$core$_create_form(type, properties, children, options) {
  var has_children = cljs.core.seq.call(null, children);
  var has_properties = cljs.core.seq.call(null, properties);
  var properties__$1 = has_properties ? function() {
    var registry = (new cljs.core.Keyword(null, "registry", "registry", 1021159018)).cljs$core$IFn$_invoke$arity$1(properties);
    var G__7517 = properties;
    if (cljs.core.truth_(registry)) {
      return cljs.core.assoc.call(null, G__7517, new cljs.core.Keyword(null, "registry", "registry", 1021159018), malli.core._property_registry.call(null, registry, options, malli.core._form));
    } else {
      return G__7517;
    }
  }() : null;
  if (has_properties && has_children) {
    return cljs.core.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [type, properties__$1], null), children);
  } else {
    if (has_properties) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [type, properties__$1], null);
    } else {
      if (has_children) {
        return cljs.core.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [type], null), children);
      } else {
        return type;
      }
    }
  }
};
malli.core._simple_form = function malli$core$_simple_form(parent, properties, children, f, options) {
  return malli.core._create_form.call(null, malli.core._type.call(null, parent), properties, malli.core._vmap.call(null, f, children), options);
};
malli.core._create_entry_form = function malli$core$_create_entry_form(parent, properties, entry_parser, options) {
  return malli.core._create_form.call(null, malli.core._type.call(null, parent), properties, malli.core._entry_forms.call(null, entry_parser), options);
};
malli.core._inner_indexed = function malli$core$_inner_indexed(walker, path, children, options) {
  return malli.core._vmap.call(null, function(p__7518) {
    var vec__7519 = p__7518;
    var i = cljs.core.nth.call(null, vec__7519, 0, null);
    var c = cljs.core.nth.call(null, vec__7519, 1, null);
    return malli.core._inner.call(null, walker, c, cljs.core.conj.call(null, path, i), options);
  }, cljs.core.map_indexed.call(null, cljs.core.vector, children));
};
malli.core._inner_entries = function malli$core$_inner_entries(walker, path, entries, options) {
  return malli.core._vmap.call(null, function(p__7522) {
    var vec__7523 = p__7522;
    var k = cljs.core.nth.call(null, vec__7523, 0, null);
    var s = cljs.core.nth.call(null, vec__7523, 1, null);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._properties.call(null, s), malli.core._inner.call(null, walker, s, cljs.core.conj.call(null, path, k), options)], null);
  }, entries);
};
malli.core._walk_entries = function malli$core$_walk_entries(schema, walker, path, options) {
  if (cljs.core.truth_(malli.core._accept.call(null, walker, schema, path, options))) {
    return malli.core._outer.call(null, walker, schema, path, malli.core._inner_entries.call(null, walker, path, malli.core._entries.call(null, schema), options), options);
  } else {
    return null;
  }
};
malli.core._walk_indexed = function malli$core$_walk_indexed(schema, walker, path, options) {
  if (cljs.core.truth_(malli.core._accept.call(null, walker, schema, path, options))) {
    return malli.core._outer.call(null, walker, schema, path, malli.core._inner_indexed.call(null, walker, path, malli.core._children.call(null, schema), options), options);
  } else {
    return null;
  }
};
malli.core._walk_leaf = function malli$core$_walk_leaf(schema, walker, path, options) {
  if (cljs.core.truth_(malli.core._accept.call(null, walker, schema, path, options))) {
    return malli.core._outer.call(null, walker, schema, path, malli.core._children.call(null, schema), options);
  } else {
    return null;
  }
};
malli.core._set_children = function malli$core$_set_children(schema, children) {
  if (malli.core._equals.call(null, children, malli.core._children.call(null, schema))) {
    return schema;
  } else {
    return malli.core._into_schema.call(null, malli.core._parent.call(null, schema), malli.core._properties.call(null, schema), children, malli.core._options.call(null, schema));
  }
};
malli.core._set_properties = function malli$core$_set_properties(schema, properties) {
  if (malli.core._equals.call(null, properties, malli.core._properties.call(null, schema))) {
    return schema;
  } else {
    return malli.core._into_schema.call(null, malli.core._parent.call(null, schema), properties, function() {
      var or__4047__auto__ = function() {
        var and__4036__auto__ = malli.core._entry_schema_QMARK_.call(null, schema);
        if (and__4036__auto__) {
          return malli.core._entry_parser.call(null, schema);
        } else {
          return and__4036__auto__;
        }
      }();
      if (cljs.core.truth_(or__4047__auto__)) {
        return or__4047__auto__;
      } else {
        return malli.core._children.call(null, schema);
      }
    }(), malli.core._options.call(null, schema));
  }
};
malli.core._update_options = function malli$core$_update_options(schema, f) {
  return malli.core._into_schema.call(null, malli.core._parent.call(null, schema), malli.core._properties.call(null, schema), malli.core._children.call(null, schema), f.call(null, malli.core._options.call(null, schema)));
};
malli.core._set_assoc_children = function malli$core$_set_assoc_children(schema, key, value) {
  return malli.core._set_children.call(null, schema, cljs.core.assoc.call(null, malli.core._children.call(null, schema), key, value));
};
malli.core._get_entries = function malli$core$_get_entries(schema, key, default$) {
  var or__4047__auto__ = cljs.core.some.call(null, cljs.core.vector_QMARK_.call(null, key) && cljs.core._EQ_.call(null, new cljs.core.Keyword("malli.core", "find", "malli.core/find", 163301512), cljs.core.nth.call(null, key, 0)) ? function(e) {
    if (cljs.core._EQ_.call(null, cljs.core.nth.call(null, e, 0), cljs.core.nth.call(null, key, 1))) {
      return e;
    } else {
      return null;
    }
  } : function(e) {
    if (cljs.core._EQ_.call(null, cljs.core.nth.call(null, e, 0), key)) {
      return cljs.core.nth.call(null, e, 2);
    } else {
      return null;
    }
  }, malli.core._children.call(null, schema));
  if (cljs.core.truth_(or__4047__auto__)) {
    return or__4047__auto__;
  } else {
    return default$;
  }
};
malli.core._simple_entry_parser = function malli$core$_simple_entry_parser(keyset, children, forms) {
  var entries = cljs.core.map.call(null, function(p__7526) {
    var vec__7527 = p__7526;
    var k = cljs.core.nth.call(null, vec__7527, 0, null);
    var p = cljs.core.nth.call(null, vec__7527, 1, null);
    var s = cljs.core.nth.call(null, vec__7527, 2, null);
    return malli.impl.util._tagged.call(null, k, malli.core._val_schema.call(null, s, p));
  }, children);
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7530 !== "undefined") {
  } else {
    malli.core.t_malli$core7530 = function(keyset, children, forms, entries, meta7531) {
      this.keyset = keyset;
      this.children = children;
      this.forms = forms;
      this.entries = entries;
      this.meta7531 = meta7531;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7530.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(entries) {
      return function(_7532, meta7531__$1) {
        var self__ = this;
        var _7532__$1 = this;
        return new malli.core.t_malli$core7530(self__.keyset, self__.children, self__.forms, self__.entries, meta7531__$1);
      };
    }(entries);
    malli.core.t_malli$core7530.prototype.cljs$core$IMeta$_meta$arity$1 = function(entries) {
      return function(_7532) {
        var self__ = this;
        var _7532__$1 = this;
        return self__.meta7531;
      };
    }(entries);
    malli.core.t_malli$core7530.prototype.malli$core$EntryParser$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7530.prototype.malli$core$EntryParser$_entry_keyset$arity$1 = function(entries) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.keyset;
      };
    }(entries);
    malli.core.t_malli$core7530.prototype.malli$core$EntryParser$_entry_children$arity$1 = function(entries) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.children;
      };
    }(entries);
    malli.core.t_malli$core7530.prototype.malli$core$EntryParser$_entry_entries$arity$1 = function(entries) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.entries;
      };
    }(entries);
    malli.core.t_malli$core7530.prototype.malli$core$EntryParser$_entry_forms$arity$1 = function(entries) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.forms;
      };
    }(entries);
    malli.core.t_malli$core7530.getBasis = function(entries) {
      return function() {
        return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "keyset", "keyset", 2135291099, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "forms", "forms", -608443419, null), new cljs.core.Symbol(null, "entries", "entries", 1553588366, null), new cljs.core.Symbol(null, "meta7531", "meta7531", -1329909958, null)], null);
      };
    }(entries);
    malli.core.t_malli$core7530.cljs$lang$type = true;
    malli.core.t_malli$core7530.cljs$lang$ctorStr = "malli.core/t_malli$core7530";
    malli.core.t_malli$core7530.cljs$lang$ctorPrWriter = function(entries) {
      return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
        return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7530");
      };
    }(entries);
    malli.core.__GT_t_malli$core7530 = function(entries) {
      return function malli$core$_simple_entry_parser_$___GT_t_malli$core7530(keyset__$1, children__$1, forms__$1, entries__$1, meta7531) {
        return new malli.core.t_malli$core7530(keyset__$1, children__$1, forms__$1, entries__$1, meta7531);
      };
    }(entries);
  }
  return new malli.core.t_malli$core7530(keyset, children, forms, entries, cljs.core.PersistentArrayMap.EMPTY);
};
malli.core._update_parsed = function malli$core$_update_parsed(entry_parser, _QMARK_key, value, options) {
  var vec__7533 = cljs.core.truth_(function() {
    var and__4036__auto__ = cljs.core.vector_QMARK_.call(null, _QMARK_key);
    if (and__4036__auto__) {
      return cljs.core.nth.call(null, _QMARK_key, 0);
    } else {
      return and__4036__auto__;
    }
  }()) ? cljs.core.cons.call(null, true, _QMARK_key) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false, _QMARK_key], null);
  var override = cljs.core.nth.call(null, vec__7533, 0, null);
  var k = cljs.core.nth.call(null, vec__7533, 1, null);
  var p = cljs.core.nth.call(null, vec__7533, 2, null);
  var keyset = malli.core._entry_keyset.call(null, entry_parser);
  var children = malli.core._entry_children.call(null, entry_parser);
  var forms = malli.core._entry_forms.call(null, entry_parser);
  var s = cljs.core.truth_(value) ? malli.core.schema.call(null, value, options) : null;
  var i = (new cljs.core.Keyword(null, "order", "order", -1254677256)).cljs$core$IFn$_invoke$arity$1(keyset.call(null, k));
  if (s == null) {
    var cut = function(vec__7533, override, k, p, keyset, children, forms, s, i) {
      return function malli$core$_update_parsed_$_cut(v) {
        return cljs.core.into.call(null, cljs.core.subvec.call(null, v, 0, i), cljs.core.subvec.call(null, v, i + 1));
      };
    }(vec__7533, override, k, p, keyset, children, forms, s, i);
    return malli.core._simple_entry_parser.call(null, cljs.core.dissoc.call(null, keyset, k), cut.call(null, children), cut.call(null, forms));
  } else {
    var c = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, p, s], null);
    var p__$1 = cljs.core.truth_(i) ? cljs.core.truth_(override) ? p : cljs.core.nth.call(null, children.call(null, i), 1) : p;
    var f = cljs.core.seq.call(null, p__$1) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, p__$1, malli.core._form.call(null, s)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._form.call(null, s)], null);
    if (cljs.core.truth_(i)) {
      return malli.core._simple_entry_parser.call(null, keyset, cljs.core.assoc.call(null, children, i, c), cljs.core.assoc.call(null, forms, i, f));
    } else {
      var size = cljs.core.count.call(null, keyset) + 1;
      return malli.core._simple_entry_parser.call(null, cljs.core.assoc.call(null, keyset, k, size), cljs.core.conj.call(null, children, c), cljs.core.conj.call(null, forms, f));
    }
  }
};
malli.core._set_entries = function malli$core$_set_entries(schema, _QMARK_key, value) {
  var temp__5718__auto__ = malli.core._entry_parser.call(null, schema);
  if (cljs.core.truth_(temp__5718__auto__)) {
    var entry_parser = temp__5718__auto__;
    return malli.core._set_children.call(null, schema, malli.core._update_parsed.call(null, entry_parser, _QMARK_key, value, malli.core._options.call(null, schema)));
  } else {
    var found = cljs.core.atom.call(null, null);
    var vec__7536 = cljs.core.vector_QMARK_.call(null, _QMARK_key) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.nth.call(null, _QMARK_key, 0), cljs.core.second.call(null, _QMARK_key), true], null) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_key], null);
    var key = cljs.core.nth.call(null, vec__7536, 0, null);
    var props = cljs.core.nth.call(null, vec__7536, 1, null);
    var override = cljs.core.nth.call(null, vec__7536, 2, null);
    var children = function() {
      var G__7539 = malli.core._vmap.call(null, function(found, vec__7536, key, props, override, temp__5718__auto__) {
        return function(p__7540) {
          var vec__7541 = p__7540;
          var k = cljs.core.nth.call(null, vec__7541, 0, null);
          var p = cljs.core.nth.call(null, vec__7541, 1, null);
          var entry = vec__7541;
          if (cljs.core._EQ_.call(null, key, k)) {
            cljs.core.reset_BANG_.call(null, found, true);
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, cljs.core.truth_(override) ? props : p, value], null);
          } else {
            return entry;
          }
        };
      }(found, vec__7536, key, props, override, temp__5718__auto__), malli.core._children.call(null, schema));
      var G__7539__$1 = cljs.core.not.call(null, cljs.core.deref.call(null, found)) ? cljs.core.conj.call(null, G__7539, cljs.core.truth_(key) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, props, value], null) : malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "key-missing", "malli.core/key-missing", -161579801))) : G__7539;
      return cljs.core.filter.call(null, function(G__7539, G__7539__$1, found, vec__7536, key, props, override, temp__5718__auto__) {
        return function(e) {
          return !(cljs.core.last.call(null, e) == null);
        };
      }(G__7539, G__7539__$1, found, vec__7536, key, props, override, temp__5718__auto__), G__7539__$1);
    }();
    return malli.core._set_children.call(null, schema, children);
  }
};
malli.core._parse_entry = function malli$core$_parse_entry(e, naked_keys, lazy_refs, options, i, _children, _forms, _keyset) {
  var _collect = function malli$core$_parse_entry_$__collect(k, c, f, i__$1) {
    var i__$2 = i__$1 | 0;
    _keyset[2 * i__$2] = k;
    _keyset[2 * i__$2 + 1] = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "order", "order", -1254677256), i__$2], null);
    _children[i__$2] = c;
    _forms[i__$2] = f;
    return i__$2 + 1;
  };
  var _schema = function malli$core$_parse_entry_$__schema(e__$1) {
    return malli.core.schema.call(null, function() {
      var G__7545 = e__$1;
      if (cljs.core.truth_(function() {
        var and__4036__auto__ = malli.core._reference_QMARK_.call(null, e__$1);
        if (and__4036__auto__) {
          return lazy_refs;
        } else {
          return and__4036__auto__;
        }
      }())) {
        return malli.core._lazy.call(null, G__7545, options);
      } else {
        return G__7545;
      }
    }(), options);
  };
  var _parse_ref_entry = function malli$core$_parse_entry_$__parse_ref_entry(e__$1) {
    var s = _schema.call(null, e__$1);
    var c = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e__$1, null, s], null);
    return _collect.call(null, e__$1, c, e__$1, i);
  };
  var _parse_ref_vector1 = function malli$core$_parse_entry_$__parse_ref_vector1(e__$1, e0) {
    var s = _schema.call(null, e0);
    var c = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e0, null, s], null);
    return _collect.call(null, e0, c, e__$1, i);
  };
  var _parse_ref_vector2 = function malli$core$_parse_entry_$__parse_ref_vector2(e__$1, e0, e1) {
    var s = _schema.call(null, e0);
    var c = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e0, e1, s], null);
    return _collect.call(null, e0, c, e__$1, i);
  };
  var _parse_entry_else2 = function malli$core$_parse_entry_$__parse_entry_else2(e0, e1) {
    var s = _schema.call(null, e1);
    var f = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e0, malli.core._form.call(null, s)], null);
    var c = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e0, null, s], null);
    return _collect.call(null, e0, c, f, i);
  };
  var _parse_entry_else3 = function malli$core$_parse_entry_$__parse_entry_else3(e0, e1, e2) {
    var s = _schema.call(null, e2);
    var f_SINGLEQUOTE_ = malli.core._form.call(null, s);
    var f = cljs.core.truth_(e1) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e0, e1, f_SINGLEQUOTE_], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e0, f_SINGLEQUOTE_], null);
    var c = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e0, e1, s], null);
    return _collect.call(null, e0, c, f, i);
  };
  if (cljs.core.vector_QMARK_.call(null, e)) {
    var ea = cljs.core.object_array.call(null, e);
    var n = ea.length;
    var e0 = ea[0];
    if (n === 1) {
      if (cljs.core.truth_(function() {
        var and__4036__auto__ = malli.core._reference_QMARK_.call(null, e0);
        if (and__4036__auto__) {
          return naked_keys;
        } else {
          return and__4036__auto__;
        }
      }())) {
        return _parse_ref_vector1.call(null, e, e0);
      } else {
        return i;
      }
    } else {
      var e1 = ea[1];
      if (n === 2) {
        if (malli.core._reference_QMARK_.call(null, e0) && cljs.core.map_QMARK_.call(null, e1)) {
          if (cljs.core.truth_(naked_keys)) {
            return _parse_ref_vector2.call(null, e, e0, e1);
          } else {
            return i;
          }
        } else {
          return _parse_entry_else2.call(null, e0, e1);
        }
      } else {
        var e2 = ea[2];
        return _parse_entry_else3.call(null, e0, e1, e2);
      }
    }
  } else {
    if (cljs.core.truth_(function() {
      var and__4036__auto__ = naked_keys;
      if (cljs.core.truth_(and__4036__auto__)) {
        return malli.core._reference_QMARK_.call(null, e);
      } else {
        return and__4036__auto__;
      }
    }())) {
      return _parse_ref_entry.call(null, e);
    } else {
      return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "invalid-ref", "malli.core/invalid-ref", -1109933109), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ref", "ref", 1289896967), e], null));
    }
  }
};
malli.core._eager_entry_parser = function malli$core$_eager_entry_parser(children, props, options) {
  var _vec = function malli$core$_eager_entry_parser_$__vec(arr) {
    return cljs.core.vec.call(null, arr);
  };
  var _map = function malli$core$_eager_entry_parser_$__map(arr) {
    var m = cljs.core.apply.call(null, cljs.core.array_map, arr);
    if (cljs.core._EQ_.call(null, 2 * cljs.core.count.call(null, m), cljs.core.count.call(null, arr))) {
    } else {
      malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "duplicate-keys", "malli.core/duplicate-keys", 1684166326));
    }
    return m;
  };
  var _arange = function malli$core$_eager_entry_parser_$__arange(arr, to) {
    return arr.slice(0, to);
  };
  var map__7547 = props;
  var map__7547__$1 = (!(map__7547 == null) ? map__7547.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7547.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7547) : map__7547;
  var naked_keys = cljs.core.get.call(null, map__7547__$1, new cljs.core.Keyword(null, "naked-keys", "naked-keys", -90769828));
  var lazy_refs = cljs.core.get.call(null, map__7547__$1, new cljs.core.Keyword(null, "lazy-refs", "lazy-refs", 409178818));
  var ca = cljs.core.object_array.call(null, children);
  var n = ca.length;
  var _children = cljs.core.object_array.call(null, n);
  var _forms = cljs.core.object_array.call(null, n);
  var _keyset = cljs.core.object_array.call(null, 2 * n);
  var i = 0 | 0;
  var ci = 0 | 0;
  while (true) {
    if (ci === n) {
      var f = ci === i ? _vec : function(i, ci, map__7547, map__7547__$1, naked_keys, lazy_refs, ca, n, _children, _forms, _keyset) {
        return function(p1__7546_SHARP_) {
          return _vec.call(null, _arange.call(null, p1__7546_SHARP_, i));
        };
      }(i, ci, map__7547, map__7547__$1, naked_keys, lazy_refs, ca, n, _children, _forms, _keyset);
      return malli.core._simple_entry_parser.call(null, _map.call(null, _keyset), f.call(null, _children), f.call(null, _forms));
    } else {
      var G__7549 = malli.core._parse_entry.call(null, ca[i], naked_keys, lazy_refs, options, i, _children, _forms, _keyset) | 0;
      var G__7550 = ci + 1;
      i = G__7549;
      ci = G__7550;
      continue;
    }
    break;
  }
};
malli.core._lazy_entry_parser = function malli$core$_lazy_entry_parser(_QMARK_children, props, options) {
  var parser = new cljs.core.Delay(function() {
    return malli.core._eager_entry_parser.call(null, _QMARK_children, props, options);
  }, null);
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7551 !== "undefined") {
  } else {
    malli.core.t_malli$core7551 = function(_QMARK_children, props, options, parser, meta7552) {
      this._QMARK_children = _QMARK_children;
      this.props = props;
      this.options = options;
      this.parser = parser;
      this.meta7552 = meta7552;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7551.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(parser) {
      return function(_7553, meta7552__$1) {
        var self__ = this;
        var _7553__$1 = this;
        return new malli.core.t_malli$core7551(self__._QMARK_children, self__.props, self__.options, self__.parser, meta7552__$1);
      };
    }(parser);
    malli.core.t_malli$core7551.prototype.cljs$core$IMeta$_meta$arity$1 = function(parser) {
      return function(_7553) {
        var self__ = this;
        var _7553__$1 = this;
        return self__.meta7552;
      };
    }(parser);
    malli.core.t_malli$core7551.prototype.malli$core$EntryParser$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7551.prototype.malli$core$EntryParser$_entry_keyset$arity$1 = function(parser) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return malli.core._entry_keyset.call(null, cljs.core.deref.call(null, self__.parser));
      };
    }(parser);
    malli.core.t_malli$core7551.prototype.malli$core$EntryParser$_entry_children$arity$1 = function(parser) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return malli.core._entry_children.call(null, cljs.core.deref.call(null, self__.parser));
      };
    }(parser);
    malli.core.t_malli$core7551.prototype.malli$core$EntryParser$_entry_entries$arity$1 = function(parser) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return malli.core._entry_entries.call(null, cljs.core.deref.call(null, self__.parser));
      };
    }(parser);
    malli.core.t_malli$core7551.prototype.malli$core$EntryParser$_entry_forms$arity$1 = function(parser) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return malli.core._entry_forms.call(null, cljs.core.deref.call(null, self__.parser));
      };
    }(parser);
    malli.core.t_malli$core7551.getBasis = function(parser) {
      return function() {
        return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?children", "?children", 2075030425, null), new cljs.core.Symbol(null, "props", "props", 2093813254, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "parser", "parser", 97036217, null), new cljs.core.Symbol(null, "meta7552", "meta7552", 1934039200, null)], null);
      };
    }(parser);
    malli.core.t_malli$core7551.cljs$lang$type = true;
    malli.core.t_malli$core7551.cljs$lang$ctorStr = "malli.core/t_malli$core7551";
    malli.core.t_malli$core7551.cljs$lang$ctorPrWriter = function(parser) {
      return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
        return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7551");
      };
    }(parser);
    malli.core.__GT_t_malli$core7551 = function(parser) {
      return function malli$core$_lazy_entry_parser_$___GT_t_malli$core7551(_QMARK_children__$1, props__$1, options__$1, parser__$1, meta7552) {
        return new malli.core.t_malli$core7551(_QMARK_children__$1, props__$1, options__$1, parser__$1, meta7552);
      };
    }(parser);
  }
  return new malli.core.t_malli$core7551(_QMARK_children, props, options, parser, cljs.core.PersistentArrayMap.EMPTY);
};
malli.core._create_entry_parser = function malli$core$_create_entry_parser(_QMARK_children, props, options) {
  if (malli.core._entry_parser_QMARK_.call(null, _QMARK_children)) {
    return _QMARK_children;
  } else {
    if (cljs.core.truth_(function() {
      var or__4047__auto__ = (new cljs.core.Keyword(null, "lazy", "lazy", -424547181)).cljs$core$IFn$_invoke$arity$1(props);
      if (cljs.core.truth_(or__4047__auto__)) {
        return or__4047__auto__;
      } else {
        return (new cljs.core.Keyword("malli.core", "lazy-entries", "malli.core/lazy-entries", 762112361)).cljs$core$IFn$_invoke$arity$1(options);
      }
    }())) {
      return malli.core._lazy_entry_parser.call(null, _QMARK_children, props, options);
    } else {
      return malli.core._eager_entry_parser.call(null, _QMARK_children, props, options);
    }
  }
};
malli.core._intercepting = function malli$core$_intercepting(var_args) {
  var G__7555 = arguments.length;
  switch(G__7555) {
    case 1:
      return malli.core._intercepting.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core._intercepting.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._intercepting.cljs$core$IFn$_invoke$arity$1 = function(interceptor) {
  return malli.core._intercepting.call(null, interceptor, null);
};
malli.core._intercepting.cljs$core$IFn$_invoke$arity$2 = function(p__7556, f) {
  var map__7557 = p__7556;
  var map__7557__$1 = (!(map__7557 == null) ? map__7557.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7557.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7557) : map__7557;
  var enter = cljs.core.get.call(null, map__7557__$1, new cljs.core.Keyword(null, "enter", "enter", 1792452624));
  var leave = cljs.core.get.call(null, map__7557__$1, new cljs.core.Keyword(null, "leave", "leave", 1022579443));
  var G__7559 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [leave, f, enter], null);
  var G__7559__$1 = G__7559 == null ? null : cljs.core.keep.call(null, cljs.core.identity, G__7559);
  var G__7559__$2 = G__7559__$1 == null ? null : cljs.core.seq.call(null, G__7559__$1);
  if (G__7559__$2 == null) {
    return null;
  } else {
    return cljs.core.apply.call(null, malli.core._comp, G__7559__$2);
  }
};
malli.core._intercepting.cljs$lang$maxFixedArity = 2;
malli.core._into_transformer = function malli$core$_into_transformer(x) {
  if (malli.core._transformer_QMARK_.call(null, x)) {
    return x;
  } else {
    if (cljs.core.fn_QMARK_.call(null, x)) {
      return malli.core._into_transformer.call(null, x.call(null));
    } else {
      return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "invalid-transformer", "malli.core/invalid-transformer", 962129811), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), x], null));
    }
  }
};
malli.core._parent_children_transformer = function malli$core$_parent_children_transformer(parent, children, transformer, method, options) {
  var parent_transformer = malli.core._value_transformer.call(null, transformer, parent, method, options);
  var child_transformers = cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.keep.call(null, function(parent_transformer) {
    return function(p1__7561_SHARP_) {
      return malli.core._transformer.call(null, p1__7561_SHARP_, transformer, method, options);
    };
  }(parent_transformer)), children);
  var child_transformer = cljs.core.seq.call(null, child_transformers) ? cljs.core.apply.call(null, malli.core._comp, cljs.core.rseq.call(null, child_transformers)) : null;
  return malli.core._intercepting.call(null, parent_transformer, child_transformer);
};
malli.core._map_transformer = function malli$core$_map_transformer(ts) {
  return function(x) {
    return cljs.core.reduce.call(null, function malli$core$_map_transformer_$_child_transformer(m, p__7562) {
      var vec__7563 = p__7562;
      var k = cljs.core.nth.call(null, vec__7563, 0, null);
      var t = cljs.core.nth.call(null, vec__7563, 1, null);
      var temp__5718__auto__ = cljs.core.find.call(null, m, k);
      if (cljs.core.truth_(temp__5718__auto__)) {
        var entry = temp__5718__auto__;
        return cljs.core.assoc.call(null, m, k, t.call(null, cljs.core.val.call(null, entry)));
      } else {
        return m;
      }
    }, x, ts);
  };
};
malli.core._tuple_transformer = function malli$core$_tuple_transformer(ts) {
  return function(x) {
    return cljs.core.reduce_kv.call(null, malli.core._update, x, ts);
  };
};
malli.core._collection_transformer = function malli$core$_collection_transformer(t, empty) {
  return function(x) {
    return cljs.core.into.call(null, cljs.core.truth_(x) ? empty : null, cljs.core.map.call(null, t), x);
  };
};
malli.core._parse_entry_ast = function malli$core$_parse_entry_ast(ast, options) {
  var ast_entry_order = (new cljs.core.Keyword("malli.core", "ast-entry-order", "malli.core/ast-entry-order", -659579476)).cljs$core$IFn$_invoke$arity$1(options);
  var keyset = (new cljs.core.Keyword(null, "keys", "keys", 1068423698)).cljs$core$IFn$_invoke$arity$1(ast);
  var __GT_child = function(ast_entry_order, keyset) {
    return function(p__7567) {
      var vec__7568 = p__7567;
      var k = cljs.core.nth.call(null, vec__7568, 0, null);
      var v = cljs.core.nth.call(null, vec__7568, 1, null);
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, (new cljs.core.Keyword(null, "properties", "properties", 685819552)).cljs$core$IFn$_invoke$arity$1(v), malli.core.from_ast.call(null, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(v), options)], null);
    };
  }(ast_entry_order, keyset);
  var children = new cljs.core.Delay(function(ast_entry_order, keyset, __GT_child) {
    return function() {
      return malli.core._vmap.call(null, __GT_child, function() {
        var G__7571 = keyset;
        if (cljs.core.truth_(ast_entry_order)) {
          return cljs.core.sort_by.call(null, function(G__7571, ast_entry_order, keyset, __GT_child) {
            return function(p1__7566_SHARP_) {
              return (new cljs.core.Keyword(null, "order", "order", -1254677256)).cljs$core$IFn$_invoke$arity$1(cljs.core.val.call(null, p1__7566_SHARP_));
            };
          }(G__7571, ast_entry_order, keyset, __GT_child), keyset, G__7571);
        } else {
          return G__7571;
        }
      }());
    };
  }(ast_entry_order, keyset, __GT_child), null);
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7572 !== "undefined") {
  } else {
    malli.core.t_malli$core7572 = function(ast, options, ast_entry_order, keyset, __GT_child, children, meta7573) {
      this.ast = ast;
      this.options = options;
      this.ast_entry_order = ast_entry_order;
      this.keyset = keyset;
      this.__GT_child = __GT_child;
      this.children = children;
      this.meta7573 = meta7573;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7572.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(ast_entry_order, keyset, __GT_child, children) {
      return function(_7574, meta7573__$1) {
        var self__ = this;
        var _7574__$1 = this;
        return new malli.core.t_malli$core7572(self__.ast, self__.options, self__.ast_entry_order, self__.keyset, self__.__GT_child, self__.children, meta7573__$1);
      };
    }(ast_entry_order, keyset, __GT_child, children);
    malli.core.t_malli$core7572.prototype.cljs$core$IMeta$_meta$arity$1 = function(ast_entry_order, keyset, __GT_child, children) {
      return function(_7574) {
        var self__ = this;
        var _7574__$1 = this;
        return self__.meta7573;
      };
    }(ast_entry_order, keyset, __GT_child, children);
    malli.core.t_malli$core7572.prototype.malli$core$EntryParser$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7572.prototype.malli$core$EntryParser$_entry_keyset$arity$1 = function(ast_entry_order, keyset, __GT_child, children) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.keyset;
      };
    }(ast_entry_order, keyset, __GT_child, children);
    malli.core.t_malli$core7572.prototype.malli$core$EntryParser$_entry_children$arity$1 = function(ast_entry_order, keyset, __GT_child, children) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.children);
      };
    }(ast_entry_order, keyset, __GT_child, children);
    malli.core.t_malli$core7572.prototype.malli$core$EntryParser$_entry_entries$arity$1 = function(ast_entry_order, keyset, __GT_child, children) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return malli.core._vmap.call(null, function(___$1, ast_entry_order, keyset, __GT_child, children) {
          return function(p__7575) {
            var vec__7576 = p__7575;
            var k = cljs.core.nth.call(null, vec__7576, 0, null);
            var p = cljs.core.nth.call(null, vec__7576, 1, null);
            var s = cljs.core.nth.call(null, vec__7576, 2, null);
            return malli.impl.util._tagged.call(null, k, malli.core._val_schema.call(null, s, p));
          };
        }(___$1, ast_entry_order, keyset, __GT_child, children), cljs.core.deref.call(null, self__.children));
      };
    }(ast_entry_order, keyset, __GT_child, children);
    malli.core.t_malli$core7572.prototype.malli$core$EntryParser$_entry_forms$arity$1 = function(ast_entry_order, keyset, __GT_child, children) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return malli.core._vmap.call(null, function(___$1, ast_entry_order, keyset, __GT_child, children) {
          return function(p__7579) {
            var vec__7580 = p__7579;
            var k = cljs.core.nth.call(null, vec__7580, 0, null);
            var p = cljs.core.nth.call(null, vec__7580, 1, null);
            var v = cljs.core.nth.call(null, vec__7580, 2, null);
            if (cljs.core.truth_(p)) {
              return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, p, malli.core._form.call(null, v)], null);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._form.call(null, v)], null);
            }
          };
        }(___$1, ast_entry_order, keyset, __GT_child, children), cljs.core.deref.call(null, self__.children));
      };
    }(ast_entry_order, keyset, __GT_child, children);
    malli.core.t_malli$core7572.getBasis = function(ast_entry_order, keyset, __GT_child, children) {
      return function() {
        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ast", "ast", 780197459, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "ast-entry-order", "ast-entry-order", 825309915, null), new cljs.core.Symbol(null, "keyset", "keyset", 2135291099, null), new cljs.core.Symbol(null, "-\x3echild", "-\x3echild", -1245989531, null), new cljs.core.Symbol(null, "children", "children", 699969545, 
        null), new cljs.core.Symbol(null, "meta7573", "meta7573", -1756562321, null)], null);
      };
    }(ast_entry_order, keyset, __GT_child, children);
    malli.core.t_malli$core7572.cljs$lang$type = true;
    malli.core.t_malli$core7572.cljs$lang$ctorStr = "malli.core/t_malli$core7572";
    malli.core.t_malli$core7572.cljs$lang$ctorPrWriter = function(ast_entry_order, keyset, __GT_child, children) {
      return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
        return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7572");
      };
    }(ast_entry_order, keyset, __GT_child, children);
    malli.core.__GT_t_malli$core7572 = function(ast_entry_order, keyset, __GT_child, children) {
      return function malli$core$_parse_entry_ast_$___GT_t_malli$core7572(ast__$1, options__$1, ast_entry_order__$1, keyset__$1, __GT_child__$1, children__$1, meta7573) {
        return new malli.core.t_malli$core7572(ast__$1, options__$1, ast_entry_order__$1, keyset__$1, __GT_child__$1, children__$1, meta7573);
      };
    }(ast_entry_order, keyset, __GT_child, children);
  }
  return new malli.core.t_malli$core7572(ast, options, ast_entry_order, keyset, __GT_child, children, cljs.core.PersistentArrayMap.EMPTY);
};
malli.core._from_entry_ast = function malli$core$_from_entry_ast(parent, ast, options) {
  return malli.core._into_schema.call(null, parent, (new cljs.core.Keyword(null, "properties", "properties", 685819552)).cljs$core$IFn$_invoke$arity$1(ast), malli.core._parse_entry_ast.call(null, ast, options), options);
};
malli.core._ast = function malli$core$_ast(acc, properties, options) {
  var registry = function() {
    var temp__5720__auto__ = (new cljs.core.Keyword(null, "registry", "registry", 1021159018)).cljs$core$IFn$_invoke$arity$1(properties);
    if (cljs.core.truth_(temp__5720__auto__)) {
      var registry = temp__5720__auto__;
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(registry, temp__5720__auto__) {
        return function(p__7583) {
          var vec__7584 = p__7583;
          var k = cljs.core.nth.call(null, vec__7584, 0, null);
          var v = cljs.core.nth.call(null, vec__7584, 1, null);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core.ast.call(null, v, options)], null);
        };
      }(registry, temp__5720__auto__)), registry);
    } else {
      return null;
    }
  }();
  var properties__$1 = cljs.core.not_empty.call(null, function() {
    var G__7587 = properties;
    if (cljs.core.truth_(registry)) {
      return cljs.core.dissoc.call(null, G__7587, new cljs.core.Keyword(null, "registry", "registry", 1021159018));
    } else {
      return G__7587;
    }
  }());
  var G__7588 = acc;
  var G__7588__$1 = cljs.core.truth_(properties__$1) ? cljs.core.assoc.call(null, G__7588, new cljs.core.Keyword(null, "properties", "properties", 685819552), properties__$1) : G__7588;
  if (cljs.core.truth_(registry)) {
    return cljs.core.assoc.call(null, G__7588__$1, new cljs.core.Keyword(null, "registry", "registry", 1021159018), registry);
  } else {
    return G__7588__$1;
  }
};
malli.core._entry_ast = function malli$core$_entry_ast(schema, keyset) {
  return malli.core._ast.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), malli.core.type.call(null, schema), new cljs.core.Keyword(null, "keys", "keys", 1068423698), cljs.core.reduce.call(null, function(acc, p__7589) {
    var vec__7590 = p__7589;
    var k = cljs.core.nth.call(null, vec__7590, 0, null);
    var p = cljs.core.nth.call(null, vec__7590, 1, null);
    var s = cljs.core.nth.call(null, vec__7590, 2, null);
    return cljs.core.assoc.call(null, acc, k, function() {
      var G__7593 = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "order", "order", -1254677256), (new cljs.core.Keyword(null, "order", "order", -1254677256)).cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, keyset, k)), new cljs.core.Keyword(null, "value", "value", 305978217), malli.core.ast.call(null, s)], null);
      if (cljs.core.truth_(p)) {
        return cljs.core.assoc.call(null, G__7593, new cljs.core.Keyword(null, "properties", "properties", 685819552), p);
      } else {
        return G__7593;
      }
    }());
  }, cljs.core.PersistentArrayMap.EMPTY, malli.core._children.call(null, schema))], null), malli.core._properties.call(null, schema), malli.core._options.call(null, schema));
};
malli.core._from_child_ast = function malli$core$_from_child_ast(parent, ast, options) {
  return malli.core._into_schema.call(null, parent, (new cljs.core.Keyword(null, "properties", "properties", 685819552)).cljs$core$IFn$_invoke$arity$1(ast), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [malli.core.from_ast.call(null, (new cljs.core.Keyword(null, "child", "child", 623967545)).cljs$core$IFn$_invoke$arity$1(ast), options)], null), options);
};
malli.core._to_child_ast = function malli$core$_to_child_ast(schema) {
  return malli.core._ast.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), malli.core.type.call(null, schema), new cljs.core.Keyword(null, "child", "child", 623967545), malli.core.ast.call(null, cljs.core.nth.call(null, malli.core._children.call(null, schema), 0))], null), malli.core._properties.call(null, schema), malli.core._options.call(null, schema));
};
malli.core._from_value_ast = function malli$core$_from_value_ast(parent, ast, options) {
  return malli.core._into_schema.call(null, parent, (new cljs.core.Keyword(null, "properties", "properties", 685819552)).cljs$core$IFn$_invoke$arity$1(ast), function() {
    var temp__5720__auto__ = (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(ast);
    if (cljs.core.truth_(temp__5720__auto__)) {
      var value = temp__5720__auto__;
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null);
    } else {
      return null;
    }
  }(), options);
};
malli.core._to_value_ast = function malli$core$_to_value_ast(schema) {
  return malli.core._ast.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), malli.core.type.call(null, schema), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.nth.call(null, malli.core._children.call(null, schema), 0)], null), malli.core._properties.call(null, schema), malli.core._options.call(null, schema));
};
malli.core._from_type_ast = function malli$core$_from_type_ast(parent, ast, options) {
  return malli.core._into_schema.call(null, parent, (new cljs.core.Keyword(null, "properties", "properties", 685819552)).cljs$core$IFn$_invoke$arity$1(ast), null, options);
};
malli.core._to_type_ast = function malli$core$_to_type_ast(schema) {
  return malli.core._ast.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), malli.core.type.call(null, schema)], null), malli.core._properties.call(null, schema), malli.core._options.call(null, schema));
};
malli.core._min_max_pred = function malli$core$_min_max_pred(f) {
  return function(p__7594) {
    var map__7595 = p__7594;
    var map__7595__$1 = (!(map__7595 == null) ? map__7595.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7595.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7595) : map__7595;
    var min = cljs.core.get.call(null, map__7595__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
    var max = cljs.core.get.call(null, map__7595__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
    if (cljs.core.not.call(null, function() {
      var or__4047__auto__ = min;
      if (cljs.core.truth_(or__4047__auto__)) {
        return or__4047__auto__;
      } else {
        return max;
      }
    }())) {
      return null;
    } else {
      if (cljs.core.truth_(function() {
        var and__4036__auto__ = function() {
          var and__4036__auto__ = min;
          if (cljs.core.truth_(and__4036__auto__)) {
            return max;
          } else {
            return and__4036__auto__;
          }
        }();
        if (cljs.core.truth_(and__4036__auto__)) {
          return f;
        } else {
          return and__4036__auto__;
        }
      }())) {
        return function(map__7595, map__7595__$1, min, max) {
          return function(x) {
            var size = f.call(null, x);
            return min <= size && size <= max;
          };
        }(map__7595, map__7595__$1, min, max);
      } else {
        if (cljs.core.truth_(function() {
          var and__4036__auto__ = min;
          if (cljs.core.truth_(and__4036__auto__)) {
            return max;
          } else {
            return and__4036__auto__;
          }
        }())) {
          return function(map__7595, map__7595__$1, min, max) {
            return function(x) {
              return min <= x && x <= max;
            };
          }(map__7595, map__7595__$1, min, max);
        } else {
          if (cljs.core.truth_(function() {
            var and__4036__auto__ = min;
            if (cljs.core.truth_(and__4036__auto__)) {
              return f;
            } else {
              return and__4036__auto__;
            }
          }())) {
            return function(map__7595, map__7595__$1, min, max) {
              return function(x) {
                return min <= f.call(null, x);
              };
            }(map__7595, map__7595__$1, min, max);
          } else {
            if (cljs.core.truth_(min)) {
              return function(map__7595, map__7595__$1, min, max) {
                return function(x) {
                  return min <= x;
                };
              }(map__7595, map__7595__$1, min, max);
            } else {
              if (cljs.core.truth_(function() {
                var and__4036__auto__ = max;
                if (cljs.core.truth_(and__4036__auto__)) {
                  return f;
                } else {
                  return and__4036__auto__;
                }
              }())) {
                return function(map__7595, map__7595__$1, min, max) {
                  return function(x) {
                    return f.call(null, x) <= max;
                  };
                }(map__7595, map__7595__$1, min, max);
              } else {
                if (cljs.core.truth_(max)) {
                  return function(map__7595, map__7595__$1, min, max) {
                    return function(x) {
                      return x <= max;
                    };
                  }(map__7595, map__7595__$1, min, max);
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  };
};
malli.core._validate_limits = function malli$core$_validate_limits(min, max) {
  var or__4047__auto__ = malli.core._min_max_pred.call(null, cljs.core.count).call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min", "min", 444991522), min, new cljs.core.Keyword(null, "max", "max", 61366548), max], null));
  if (cljs.core.truth_(or__4047__auto__)) {
    return or__4047__auto__;
  } else {
    return cljs.core.constantly.call(null, true);
  }
};
malli.core._qualified_keyword_pred = function malli$core$_qualified_keyword_pred(properties) {
  var temp__5720__auto__ = function() {
    var G__7597 = properties;
    var G__7597__$1 = G__7597 == null ? null : (new cljs.core.Keyword(null, "namespace", "namespace", -377510372)).cljs$core$IFn$_invoke$arity$1(G__7597);
    if (G__7597__$1 == null) {
      return null;
    } else {
      return cljs.core.name.call(null, G__7597__$1);
    }
  }();
  if (cljs.core.truth_(temp__5720__auto__)) {
    var ns_name = temp__5720__auto__;
    return function(ns_name, temp__5720__auto__) {
      return function(x) {
        return cljs.core._EQ_.call(null, cljs.core.namespace.call(null, x), ns_name);
      };
    }(ns_name, temp__5720__auto__);
  } else {
    return null;
  }
};
malli.core._simple_schema = function malli$core$_simple_schema(_QMARK_props) {
  var map__7598 = cljs.core.map_QMARK_.call(null, _QMARK_props) ? _QMARK_props : null;
  var map__7598__$1 = (!(map__7598 == null) ? map__7598.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7598.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7598) : map__7598;
  var type = cljs.core.get.call(null, map__7598__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
  var type_properties = cljs.core.get.call(null, map__7598__$1, new cljs.core.Keyword(null, "type-properties", "type-properties", -1728352126));
  var pred = cljs.core.get.call(null, map__7598__$1, new cljs.core.Keyword(null, "pred", "pred", 1927423397));
  var property_pred = cljs.core.get.call(null, map__7598__$1, new cljs.core.Keyword(null, "property-pred", "property-pred", 1813304729));
  var min = cljs.core.get.call(null, map__7598__$1, new cljs.core.Keyword(null, "min", "min", 444991522), 0);
  var max = cljs.core.get.call(null, map__7598__$1, new cljs.core.Keyword(null, "max", "max", 61366548), 0);
  var from_ast = cljs.core.get.call(null, map__7598__$1, new cljs.core.Keyword(null, "from-ast", "from-ast", -246238449), malli.core._from_value_ast);
  var to_ast = cljs.core.get.call(null, map__7598__$1, new cljs.core.Keyword(null, "to-ast", "to-ast", -21935298), malli.core._to_type_ast);
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7600 !== "undefined") {
  } else {
    malli.core.t_malli$core7600 = function(property_pred, to_ast, min, type_properties, pred, map__7598, type, from_ast, _QMARK_props, max, meta7601) {
      this.property_pred = property_pred;
      this.to_ast = to_ast;
      this.min = min;
      this.type_properties = type_properties;
      this.pred = pred;
      this.map__7598 = map__7598;
      this.type = type;
      this.from_ast = from_ast;
      this._QMARK_props = _QMARK_props;
      this.max = max;
      this.meta7601 = meta7601;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7600.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
      return function(_7602, meta7601__$1) {
        var self__ = this;
        var _7602__$1 = this;
        return new malli.core.t_malli$core7600(self__.property_pred, self__.to_ast, self__.min, self__.type_properties, self__.pred, self__.map__7598, self__.type, self__.from_ast, self__._QMARK_props, self__.max, meta7601__$1);
      };
    }(map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
    malli.core.t_malli$core7600.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
      return function(_7602) {
        var self__ = this;
        var _7602__$1 = this;
        return self__.meta7601;
      };
    }(map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
    malli.core.t_malli$core7600.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7600.prototype.malli$core$AST$_from_ast$arity$3 = function(map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
      return function(parent, ast, options) {
        var self__ = this;
        var parent__$1 = this;
        return self__.from_ast.call(null, parent__$1, ast, options);
      };
    }(map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
    malli.core.t_malli$core7600.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7600.prototype.malli$core$IntoSchema$_type$arity$1 = function(map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.type;
      };
    }(map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
    malli.core.t_malli$core7600.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.type_properties;
      };
    }(map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
    malli.core.t_malli$core7600.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
      return function(_, ___$1) {
        var self__ = this;
        var ___$2 = this;
        return null;
      };
    }(map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
    malli.core.t_malli$core7600.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
      return function(_, ___$1) {
        var self__ = this;
        var ___$2 = this;
        return null;
      };
    }(map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
    malli.core.t_malli$core7600.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
      return function(parent, properties, children, options) {
        var self__ = this;
        var parent__$1 = this;
        if (cljs.core.fn_QMARK_.call(null, self__._QMARK_props)) {
          return malli.core._into_schema.call(null, malli.core._simple_schema.call(null, self__._QMARK_props.call(null, properties, children)), properties, children, options);
        } else {
          var form = new cljs.core.Delay(function(parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
            return function() {
              return malli.core._simple_form.call(null, parent__$1, properties, children, cljs.core.identity, options);
            };
          }(parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast), null);
          var cache = malli.core._create_cache.call(null, options);
          malli.core._check_children_BANG_.call(null, self__.type, properties, children, self__.min, self__.max);
          if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7603 !== "undefined") {
          } else {
            malli.core.t_malli$core7603 = function(form, options, property_pred, meta7601, to_ast, properties, children, min, type_properties, parent, pred, map__7598, type, from_ast, cache, _QMARK_props, max, meta7604) {
              this.form = form;
              this.options = options;
              this.property_pred = property_pred;
              this.meta7601 = meta7601;
              this.to_ast = to_ast;
              this.properties = properties;
              this.children = children;
              this.min = min;
              this.type_properties = type_properties;
              this.parent = parent;
              this.pred = pred;
              this.map__7598 = map__7598;
              this.type = type;
              this.from_ast = from_ast;
              this.cache = cache;
              this._QMARK_props = _QMARK_props;
              this.max = max;
              this.meta7604 = meta7604;
              this.cljs$lang$protocol_mask$partition0$ = 393216;
              this.cljs$lang$protocol_mask$partition1$ = 0;
            };
            malli.core.t_malli$core7603.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
              return function(_7605, meta7604__$1) {
                var self__ = this;
                var _7605__$1 = this;
                return new malli.core.t_malli$core7603(self__.form, self__.options, self__.property_pred, self__.meta7601, self__.to_ast, self__.properties, self__.children, self__.min, self__.type_properties, self__.parent, self__.pred, self__.map__7598, self__.type, self__.from_ast, self__.cache, self__._QMARK_props, self__.max, meta7604__$1);
              };
            }(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
            malli.core.t_malli$core7603.prototype.cljs$core$IMeta$_meta$arity$1 = function(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
              return function(_7605) {
                var self__ = this;
                var _7605__$1 = this;
                return self__.meta7604;
              };
            }(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
            malli.core.t_malli$core7603.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
            malli.core.t_malli$core7603.prototype.malli$core$AST$_to_ast$arity$2 = function(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
              return function(this$, _) {
                var self__ = this;
                var this$__$1 = this;
                return self__.to_ast.call(null, this$__$1);
              };
            }(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
            malli.core.t_malli$core7603.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
            malli.core.t_malli$core7603.prototype.malli$core$Schema$_validator$arity$1 = function(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                var temp__5718__auto__ = cljs.core.truth_(self__.property_pred) ? self__.property_pred.call(null, self__.properties) : null;
                if (cljs.core.truth_(temp__5718__auto__)) {
                  var pvalidator = temp__5718__auto__;
                  return function(pvalidator, temp__5718__auto__, ___$1, form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
                    return function(x) {
                      var and__4036__auto__ = self__.pred.call(null, x);
                      if (cljs.core.truth_(and__4036__auto__)) {
                        return pvalidator.call(null, x);
                      } else {
                        return and__4036__auto__;
                      }
                    };
                  }(pvalidator, temp__5718__auto__, ___$1, form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
                } else {
                  return self__.pred;
                }
              };
            }(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
            malli.core.t_malli$core7603.prototype.malli$core$Schema$_options$arity$1 = function(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return self__.options;
              };
            }(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
            malli.core.t_malli$core7603.prototype.malli$core$Schema$_transformer$arity$4 = function(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
              return function(this$, transformer, method, options__$1) {
                var self__ = this;
                var this$__$1 = this;
                return malli.core._intercepting.call(null, malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1));
              };
            }(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
            malli.core.t_malli$core7603.prototype.malli$core$Schema$_walk$arity$4 = function(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
              return function(this$, walker, path, options__$1) {
                var self__ = this;
                var this$__$1 = this;
                return malli.core._walk_leaf.call(null, this$__$1, walker, path, options__$1);
              };
            }(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
            malli.core.t_malli$core7603.prototype.malli$core$Schema$_parser$arity$1 = function(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
              return function(this$) {
                var self__ = this;
                var this$__$1 = this;
                var validator = malli.core._validator.call(null, this$__$1);
                return function(validator, this$__$1, form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
                  return function(x) {
                    if (cljs.core.truth_(validator.call(null, x))) {
                      return x;
                    } else {
                      return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
                    }
                  };
                }(validator, this$__$1, form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
              };
            }(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
            malli.core.t_malli$core7603.prototype.malli$core$Schema$_properties$arity$1 = function(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return self__.properties;
              };
            }(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
            malli.core.t_malli$core7603.prototype.malli$core$Schema$_children$arity$1 = function(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return self__.children;
              };
            }(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
            malli.core.t_malli$core7603.prototype.malli$core$Schema$_form$arity$1 = function(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return cljs.core.deref.call(null, self__.form);
              };
            }(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
            malli.core.t_malli$core7603.prototype.malli$core$Schema$_explainer$arity$2 = function(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
              return function(this$, path) {
                var self__ = this;
                var this$__$1 = this;
                var validator = malli.core._validator.call(null, this$__$1);
                return function(validator, this$__$1, form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
                  return function malli$core$_simple_schema_$_explain(x, in$, acc) {
                    if (cljs.core.not.call(null, validator.call(null, x))) {
                      return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x));
                    } else {
                      return acc;
                    }
                  };
                }(validator, this$__$1, form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
              };
            }(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
            malli.core.t_malli$core7603.prototype.malli$core$Schema$_unparser$arity$1 = function(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
              return function(this$) {
                var self__ = this;
                var this$__$1 = this;
                return malli.core._parser.call(null, this$__$1);
              };
            }(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
            malli.core.t_malli$core7603.prototype.malli$core$Schema$_parent$arity$1 = function(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return self__.parent;
              };
            }(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
            malli.core.t_malli$core7603.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
            malli.core.t_malli$core7603.prototype.malli$core$Cached$_cache$arity$1 = function(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return self__.cache;
              };
            }(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
            malli.core.t_malli$core7603.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
            malli.core.t_malli$core7603.prototype.malli$core$LensSchema$_keep$arity$1 = function(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return null;
              };
            }(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
            malli.core.t_malli$core7603.prototype.malli$core$LensSchema$_get$arity$3 = function(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
              return function(_, ___$1, default$) {
                var self__ = this;
                var ___$2 = this;
                return default$;
              };
            }(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
            malli.core.t_malli$core7603.prototype.malli$core$LensSchema$_set$arity$3 = function(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
              return function(this$, key, _) {
                var self__ = this;
                var this$__$1 = this;
                return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "non-associative-schema", "malli.core/non-associative-schema", -588379948), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), this$__$1, new cljs.core.Keyword(null, "key", "key", -1516042587), key], null));
              };
            }(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
            malli.core.t_malli$core7603.getBasis = function(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
              return function() {
                return new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "property-pred", "property-pred", -841131040, null), new cljs.core.Symbol(null, "meta7601", "meta7601", -2140001915, null), new cljs.core.Symbol(null, "to-ast", "to-ast", 1618596229, null), new cljs.core.Symbol(null, "properties", "properties", 
                -1968616217, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "min", "min", 2085523049, null), new cljs.core.Symbol(null, "type-properties", "type-properties", -87820599, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core7600", "malli.core/t_malli$core7600", 
                -1887590347, null)], null)), new cljs.core.Symbol(null, "pred", "pred", -727012372, null), new cljs.core.Symbol(null, "map__7598", "map__7598", -571875917, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "from-ast", "from-ast", 1394293078, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "?props", "?props", 561193402, null), new cljs.core.Symbol(null, "max", "max", 1701898075, null), new cljs.core.Symbol(null, 
                "meta7604", "meta7604", -1618059173, null)], null);
              };
            }(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
            malli.core.t_malli$core7603.cljs$lang$type = true;
            malli.core.t_malli$core7603.cljs$lang$ctorStr = "malli.core/t_malli$core7603";
            malli.core.t_malli$core7603.cljs$lang$ctorPrWriter = function(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
              return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
                return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7603");
              };
            }(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
            malli.core.__GT_t_malli$core7603 = function(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
              return function malli$core$_simple_schema_$___GT_t_malli$core7603(form__$1, options__$1, property_pred__$1, meta7601__$1, to_ast__$1, properties__$1, children__$1, min__$1, type_properties__$1, parent__$2, pred__$1, map__7598__$1, type__$1, from_ast__$1, cache__$1, _QMARK_props__$1, max__$1, meta7604) {
                return new malli.core.t_malli$core7603(form__$1, options__$1, property_pred__$1, meta7601__$1, to_ast__$1, properties__$1, children__$1, min__$1, type_properties__$1, parent__$2, pred__$1, map__7598__$1, type__$1, from_ast__$1, cache__$1, _QMARK_props__$1, max__$1, meta7604);
              };
            }(form, cache, parent__$1, map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
          }
          return new malli.core.t_malli$core7603(form, options, self__.property_pred, self__.meta7601, self__.to_ast, properties, children, self__.min, self__.type_properties, parent__$1, self__.pred, self__.map__7598, self__.type, self__.from_ast, cache, self__._QMARK_props, self__.max, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
        }
      };
    }(map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
    malli.core.t_malli$core7600.getBasis = function(map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
      return function() {
        return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "property-pred", "property-pred", -841131040, null), new cljs.core.Symbol(null, "to-ast", "to-ast", 1618596229, null), new cljs.core.Symbol(null, "min", "min", 2085523049, null), new cljs.core.Symbol(null, "type-properties", "type-properties", -87820599, null), new cljs.core.Symbol(null, "pred", "pred", -727012372, null), new cljs.core.Symbol(null, "map__7598", "map__7598", 
        -571875917, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "from-ast", "from-ast", 1394293078, null), new cljs.core.Symbol(null, "?props", "?props", 561193402, null), new cljs.core.Symbol(null, "max", "max", 1701898075, null), new cljs.core.Symbol(null, "meta7601", "meta7601", -2140001915, null)], null);
      };
    }(map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
    malli.core.t_malli$core7600.cljs$lang$type = true;
    malli.core.t_malli$core7600.cljs$lang$ctorStr = "malli.core/t_malli$core7600";
    malli.core.t_malli$core7600.cljs$lang$ctorPrWriter = function(map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
      return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
        return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7600");
      };
    }(map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
    malli.core.__GT_t_malli$core7600 = function(map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast) {
      return function malli$core$_simple_schema_$___GT_t_malli$core7600(property_pred__$1, to_ast__$1, min__$1, type_properties__$1, pred__$1, map__7598__$2, type__$1, from_ast__$1, _QMARK_props__$1, max__$1, meta7601) {
        return new malli.core.t_malli$core7600(property_pred__$1, to_ast__$1, min__$1, type_properties__$1, pred__$1, map__7598__$2, type__$1, from_ast__$1, _QMARK_props__$1, max__$1, meta7601);
      };
    }(map__7598, map__7598__$1, type, type_properties, pred, property_pred, min, max, from_ast, to_ast);
  }
  return new malli.core.t_malli$core7600(property_pred, to_ast, min, type_properties, pred, map__7598__$1, type, from_ast, _QMARK_props, max, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._nil_schema = function malli$core$_nil_schema() {
  return malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "nil", "nil", 99600501), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.nil_QMARK_], null));
};
malli.core._any_schema = function malli$core$_any_schema() {
  return malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "any", "any", 1705907423), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.any_QMARK_], null));
};
malli.core._string_schema = function malli$core$_string_schema() {
  return malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "string", "string", -1989541586), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.string_QMARK_, new cljs.core.Keyword(null, "property-pred", "property-pred", 1813304729), malli.core._min_max_pred.call(null, cljs.core.count)], null));
};
malli.core._int_schema = function malli$core$_int_schema() {
  return malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "int", "int", -1741416922), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.int_QMARK_, new cljs.core.Keyword(null, "property-pred", "property-pred", 1813304729), malli.core._min_max_pred.call(null, null)], null));
};
malli.core._double_schema = function malli$core$_double_schema() {
  return malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "double", "double", 884886883), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.double_QMARK_, new cljs.core.Keyword(null, "property-pred", "property-pred", 1813304729), malli.core._min_max_pred.call(null, null)], null));
};
malli.core._boolean_schema = function malli$core$_boolean_schema() {
  return malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "boolean", "boolean", -1919418404), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.boolean_QMARK_], null));
};
malli.core._keyword_schema = function malli$core$_keyword_schema() {
  return malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "keyword", "keyword", 811389747), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.keyword_QMARK_], null));
};
malli.core._symbol_schema = function malli$core$_symbol_schema() {
  return malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.symbol_QMARK_], null));
};
malli.core._qualified_keyword_schema = function malli$core$_qualified_keyword_schema() {
  return malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "qualified-keyword", "qualified-keyword", 736041675), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.qualified_keyword_QMARK_, new cljs.core.Keyword(null, "property-pred", "property-pred", 1813304729), malli.core._qualified_keyword_pred], null));
};
malli.core._qualified_symbol_schema = function malli$core$_qualified_symbol_schema() {
  return malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "qualified-symbol", "qualified-symbol", -665513695), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.qualified_symbol_QMARK_], null));
};
malli.core._uuid_schema = function malli$core$_uuid_schema() {
  return malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "uuid", "uuid", -2145095719), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.uuid_QMARK_], null));
};
malli.core._and_schema = function malli$core$_and_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7608 !== "undefined") {
  } else {
    malli.core.t_malli$core7608 = function(meta7609) {
      this.meta7609 = meta7609;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7608.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7610, meta7609__$1) {
      var self__ = this;
      var _7610__$1 = this;
      return new malli.core.t_malli$core7608(meta7609__$1);
    };
    malli.core.t_malli$core7608.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7610) {
      var self__ = this;
      var _7610__$1 = this;
      return self__.meta7609;
    };
    malli.core.t_malli$core7608.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7608.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "and", "and", -971899817);
    };
    malli.core.t_malli$core7608.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core7608.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core7608.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core7608.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "and", "and", -971899817), properties, children, 1, null);
      var children__$1 = malli.core._vmap.call(null, function(parent__$1) {
        return function(p1__7606_SHARP_) {
          return malli.core.schema.call(null, p1__7606_SHARP_, options);
        };
      }(parent__$1), children);
      var form = new cljs.core.Delay(function(children__$1, parent__$1) {
        return function() {
          return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
        };
      }(children__$1, parent__$1), null);
      var cache = malli.core._create_cache.call(null, options);
      var __GT_parser = function(children__$1, form, cache, parent__$1) {
        return function(f, m) {
          var parsers = m.call(null, malli.core._vmap.call(null, f, children__$1));
          return function(parsers, children__$1, form, cache, parent__$1) {
            return function(p1__7607_SHARP_) {
              return cljs.core.reduce.call(null, function(parsers, children__$1, form, cache, parent__$1) {
                return function(x, parser) {
                  return malli.impl.util._map_invalid.call(null, cljs.core.reduced, parser.call(null, x));
                };
              }(parsers, children__$1, form, cache, parent__$1), p1__7607_SHARP_, parsers);
            };
          }(parsers, children__$1, form, cache, parent__$1);
        };
      }(children__$1, form, cache, parent__$1);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7611 !== "undefined") {
      } else {
        malli.core.t_malli$core7611 = function(meta7609, parent, properties, children, options, form, cache, __GT_parser, meta7612) {
          this.meta7609 = meta7609;
          this.parent = parent;
          this.properties = properties;
          this.children = children;
          this.options = options;
          this.form = form;
          this.cache = cache;
          this.__GT_parser = __GT_parser;
          this.meta7612 = meta7612;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core7611.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_7613, meta7612__$1) {
            var self__ = this;
            var _7613__$1 = this;
            return new malli.core.t_malli$core7611(self__.meta7609, self__.parent, self__.properties, self__.children, self__.options, self__.form, self__.cache, self__.__GT_parser, meta7612__$1);
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7611.prototype.cljs$core$IMeta$_meta$arity$1 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_7613) {
            var self__ = this;
            var _7613__$1 = this;
            return self__.meta7612;
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7611.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7611.prototype.malli$core$Schema$_validator$arity$1 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            var validators = malli.core._vmap.call(null, malli.core._validator, self__.children);
            return malli.impl.util._every_pred.call(null, validators);
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7611.prototype.malli$core$Schema$_options$arity$1 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.options;
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7611.prototype.malli$core$Schema$_transformer$arity$4 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(this$, transformer, method, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._parent_children_transformer.call(null, this$__$1, self__.children, transformer, method, options__$1);
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7611.prototype.malli$core$Schema$_walk$arity$4 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(this$, walker, path, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._walk_indexed.call(null, this$__$1, walker, path, options__$1);
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7611.prototype.malli$core$Schema$_parser$arity$1 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.__GT_parser.call(null, malli.core._parser, cljs.core.seq);
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7611.prototype.malli$core$Schema$_properties$arity$1 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.properties;
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7611.prototype.malli$core$Schema$_children$arity$1 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.children;
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7611.prototype.malli$core$Schema$_form$arity$1 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.deref.call(null, self__.form);
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7611.prototype.malli$core$Schema$_explainer$arity$2 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_, path) {
            var self__ = this;
            var ___$1 = this;
            var explainers = malli.core._vmap.call(null, function(___$1, children__$1, form, cache, __GT_parser, parent__$1) {
              return function(p__7614) {
                var vec__7615 = p__7614;
                var i = cljs.core.nth.call(null, vec__7615, 0, null);
                var c = cljs.core.nth.call(null, vec__7615, 1, null);
                return malli.core._explainer.call(null, c, cljs.core.conj.call(null, path, i));
              };
            }(___$1, children__$1, form, cache, __GT_parser, parent__$1), cljs.core.map_indexed.call(null, cljs.core.vector, self__.children));
            return function(explainers, ___$1, children__$1, form, cache, __GT_parser, parent__$1) {
              return function malli$core$_and_schema_$_explain(x, in$, acc) {
                return cljs.core.reduce.call(null, function(explainers, ___$1, children__$1, form, cache, __GT_parser, parent__$1) {
                  return function(acc_SINGLEQUOTE_, explainer) {
                    return explainer.call(null, x, in$, acc_SINGLEQUOTE_);
                  };
                }(explainers, ___$1, children__$1, form, cache, __GT_parser, parent__$1), acc, explainers);
              };
            }(explainers, ___$1, children__$1, form, cache, __GT_parser, parent__$1);
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7611.prototype.malli$core$Schema$_unparser$arity$1 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.__GT_parser.call(null, malli.core._unparser, cljs.core.rseq);
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7611.prototype.malli$core$Schema$_parent$arity$1 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.parent;
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7611.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7611.prototype.malli$core$Cached$_cache$arity$1 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.cache;
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7611.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7611.prototype.malli$core$LensSchema$_keep$arity$1 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return null;
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7611.prototype.malli$core$LensSchema$_get$arity$3 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_, key, default$) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.get.call(null, self__.children, key, default$);
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7611.prototype.malli$core$LensSchema$_set$arity$3 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(this$, key, value) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._set_assoc_children.call(null, this$__$1, key, value);
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7611.getBasis = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function() {
            return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta7609", "meta7609", 1311594866, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core7608", "malli.core/t_malli$core7608", 1262519543, null)], null)), new cljs.core.Symbol(null, "properties", 
            "properties", -1968616217, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "-\x3eparser", "-\x3eparser", 1105019639, null), new cljs.core.Symbol(null, "meta7612", "meta7612", -1769664660, null)], null);
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7611.cljs$lang$type = true;
        malli.core.t_malli$core7611.cljs$lang$ctorStr = "malli.core/t_malli$core7611";
        malli.core.t_malli$core7611.cljs$lang$ctorPrWriter = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
            return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7611");
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.__GT_t_malli$core7611 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function malli$core$_and_schema_$___GT_t_malli$core7611(meta7609__$1, parent__$2, properties__$1, children__$2, options__$1, form__$1, cache__$1, __GT_parser__$1, meta7612) {
            return new malli.core.t_malli$core7611(meta7609__$1, parent__$2, properties__$1, children__$2, options__$1, form__$1, cache__$1, __GT_parser__$1, meta7612);
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
      }
      return new malli.core.t_malli$core7611(self__.meta7609, parent__$1, properties, children__$1, options, form, cache, __GT_parser, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core7608.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta7609", "meta7609", 1311594866, null)], null);
    };
    malli.core.t_malli$core7608.cljs$lang$type = true;
    malli.core.t_malli$core7608.cljs$lang$ctorStr = "malli.core/t_malli$core7608";
    malli.core.t_malli$core7608.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
      return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7608");
    };
    malli.core.__GT_t_malli$core7608 = function malli$core$_and_schema_$___GT_t_malli$core7608(meta7609) {
      return new malli.core.t_malli$core7608(meta7609);
    };
  }
  return new malli.core.t_malli$core7608(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._or_schema = function malli$core$_or_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7621 !== "undefined") {
  } else {
    malli.core.t_malli$core7621 = function(meta7622) {
      this.meta7622 = meta7622;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7621.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7623, meta7622__$1) {
      var self__ = this;
      var _7623__$1 = this;
      return new malli.core.t_malli$core7621(meta7622__$1);
    };
    malli.core.t_malli$core7621.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7623) {
      var self__ = this;
      var _7623__$1 = this;
      return self__.meta7622;
    };
    malli.core.t_malli$core7621.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7621.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "or", "or", 235744169);
    };
    malli.core.t_malli$core7621.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core7621.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core7621.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core7621.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "or", "or", 235744169), properties, children, 1, null);
      var children__$1 = malli.core._vmap.call(null, function(parent__$1) {
        return function(p1__7618_SHARP_) {
          return malli.core.schema.call(null, p1__7618_SHARP_, options);
        };
      }(parent__$1), children);
      var form = new cljs.core.Delay(function(children__$1, parent__$1) {
        return function() {
          return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
        };
      }(children__$1, parent__$1), null);
      var cache = malli.core._create_cache.call(null, options);
      var __GT_parser = function(children__$1, form, cache, parent__$1) {
        return function(f) {
          var parsers = malli.core._vmap.call(null, f, children__$1);
          return function(parsers, children__$1, form, cache, parent__$1) {
            return function(p1__7619_SHARP_) {
              return cljs.core.reduce.call(null, function(parsers, children__$1, form, cache, parent__$1) {
                return function(_, parser) {
                  return malli.impl.util._map_valid.call(null, cljs.core.reduced, parser.call(null, p1__7619_SHARP_));
                };
              }(parsers, children__$1, form, cache, parent__$1), new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900), parsers);
            };
          }(parsers, children__$1, form, cache, parent__$1);
        };
      }(children__$1, form, cache, parent__$1);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7624 !== "undefined") {
      } else {
        malli.core.t_malli$core7624 = function(meta7622, parent, properties, children, options, form, cache, __GT_parser, meta7625) {
          this.meta7622 = meta7622;
          this.parent = parent;
          this.properties = properties;
          this.children = children;
          this.options = options;
          this.form = form;
          this.cache = cache;
          this.__GT_parser = __GT_parser;
          this.meta7625 = meta7625;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core7624.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_7626, meta7625__$1) {
            var self__ = this;
            var _7626__$1 = this;
            return new malli.core.t_malli$core7624(self__.meta7622, self__.parent, self__.properties, self__.children, self__.options, self__.form, self__.cache, self__.__GT_parser, meta7625__$1);
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7624.prototype.cljs$core$IMeta$_meta$arity$1 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_7626) {
            var self__ = this;
            var _7626__$1 = this;
            return self__.meta7625;
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7624.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7624.prototype.malli$core$Schema$_validator$arity$1 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            var validators = malli.core._vmap.call(null, malli.core._validator, self__.children);
            return malli.impl.util._some_pred.call(null, validators);
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7624.prototype.malli$core$Schema$_options$arity$1 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.options;
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7624.prototype.malli$core$Schema$_transformer$arity$4 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(this$, transformer, method, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            var this_transformer = malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1);
            if (cljs.core.seq.call(null, self__.children)) {
              var transformers = malli.core._vmap.call(null, function(this_transformer, this$__$1, children__$1, form, cache, __GT_parser, parent__$1) {
                return function(p1__7620_SHARP_) {
                  var or__4047__auto__ = malli.core._transformer.call(null, p1__7620_SHARP_, transformer, method, options__$1);
                  if (cljs.core.truth_(or__4047__auto__)) {
                    return or__4047__auto__;
                  } else {
                    return cljs.core.identity;
                  }
                };
              }(this_transformer, this$__$1, children__$1, form, cache, __GT_parser, parent__$1), self__.children);
              var validators = malli.core._vmap.call(null, malli.core._validator, self__.children);
              return malli.core._intercepting.call(null, this_transformer, cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "decode", "decode", -1306165281), method) ? function(transformers, validators, this_transformer, this$__$1, children__$1, form, cache, __GT_parser, parent__$1) {
                return function(x) {
                  return cljs.core.reduce_kv.call(null, function(transformers, validators, this_transformer, this$__$1, children__$1, form, cache, __GT_parser, parent__$1) {
                    return function(x__$1, i, transformer__$1) {
                      var x_STAR_ = transformer__$1.call(null, x__$1);
                      if (cljs.core.truth_(cljs.core.nth.call(null, validators, i).call(null, x_STAR_))) {
                        return cljs.core.reduced.call(null, x_STAR_);
                      } else {
                        return x__$1;
                      }
                    };
                  }(transformers, validators, this_transformer, this$__$1, children__$1, form, cache, __GT_parser, parent__$1), x, transformers);
                };
              }(transformers, validators, this_transformer, this$__$1, children__$1, form, cache, __GT_parser, parent__$1) : function(transformers, validators, this_transformer, this$__$1, children__$1, form, cache, __GT_parser, parent__$1) {
                return function(x) {
                  return cljs.core.reduce_kv.call(null, function(transformers, validators, this_transformer, this$__$1, children__$1, form, cache, __GT_parser, parent__$1) {
                    return function(x__$1, i, validator) {
                      if (cljs.core.truth_(validator.call(null, x__$1))) {
                        return cljs.core.reduced.call(null, cljs.core.nth.call(null, transformers, i).call(null, x__$1));
                      } else {
                        return x__$1;
                      }
                    };
                  }(transformers, validators, this_transformer, this$__$1, children__$1, form, cache, __GT_parser, parent__$1), x, validators);
                };
              }(transformers, validators, this_transformer, this$__$1, children__$1, form, cache, __GT_parser, parent__$1));
            } else {
              return malli.core._intercepting.call(null, this_transformer);
            }
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7624.prototype.malli$core$Schema$_walk$arity$4 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(this$, walker, path, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._walk_indexed.call(null, this$__$1, walker, path, options__$1);
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7624.prototype.malli$core$Schema$_parser$arity$1 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.__GT_parser.call(null, malli.core._parser);
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7624.prototype.malli$core$Schema$_properties$arity$1 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.properties;
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7624.prototype.malli$core$Schema$_children$arity$1 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.children;
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7624.prototype.malli$core$Schema$_form$arity$1 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.deref.call(null, self__.form);
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7624.prototype.malli$core$Schema$_explainer$arity$2 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_, path) {
            var self__ = this;
            var ___$1 = this;
            var explainers = malli.core._vmap.call(null, function(___$1, children__$1, form, cache, __GT_parser, parent__$1) {
              return function(p__7627) {
                var vec__7628 = p__7627;
                var i = cljs.core.nth.call(null, vec__7628, 0, null);
                var c = cljs.core.nth.call(null, vec__7628, 1, null);
                return malli.core._explainer.call(null, c, cljs.core.conj.call(null, path, i));
              };
            }(___$1, children__$1, form, cache, __GT_parser, parent__$1), cljs.core.map_indexed.call(null, cljs.core.vector, self__.children));
            return function(explainers, ___$1, children__$1, form, cache, __GT_parser, parent__$1) {
              return function malli$core$_or_schema_$_explain(x, in$, acc) {
                return cljs.core.reduce.call(null, function(explainers, ___$1, children__$1, form, cache, __GT_parser, parent__$1) {
                  return function(acc_SINGLEQUOTE_, explainer) {
                    var acc_SINGLEQUOTE__SINGLEQUOTE_ = explainer.call(null, x, in$, acc_SINGLEQUOTE_);
                    if (acc_SINGLEQUOTE_ === acc_SINGLEQUOTE__SINGLEQUOTE_) {
                      return cljs.core.reduced.call(null, acc);
                    } else {
                      return acc_SINGLEQUOTE__SINGLEQUOTE_;
                    }
                  };
                }(explainers, ___$1, children__$1, form, cache, __GT_parser, parent__$1), acc, explainers);
              };
            }(explainers, ___$1, children__$1, form, cache, __GT_parser, parent__$1);
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7624.prototype.malli$core$Schema$_unparser$arity$1 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.__GT_parser.call(null, malli.core._unparser);
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7624.prototype.malli$core$Schema$_parent$arity$1 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.parent;
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7624.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7624.prototype.malli$core$Cached$_cache$arity$1 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.cache;
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7624.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7624.prototype.malli$core$LensSchema$_keep$arity$1 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return null;
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7624.prototype.malli$core$LensSchema$_get$arity$3 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_, key, default$) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.get.call(null, self__.children, key, default$);
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7624.prototype.malli$core$LensSchema$_set$arity$3 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(this$, key, value) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._set_assoc_children.call(null, this$__$1, key, value);
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7624.getBasis = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function() {
            return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta7622", "meta7622", 1061184248, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core7621", "malli.core/t_malli$core7621", 582838580, null)], null)), new cljs.core.Symbol(null, "properties", 
            "properties", -1968616217, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "-\x3eparser", "-\x3eparser", 1105019639, null), new cljs.core.Symbol(null, "meta7625", "meta7625", -454440686, null)], null);
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7624.cljs$lang$type = true;
        malli.core.t_malli$core7624.cljs$lang$ctorStr = "malli.core/t_malli$core7624";
        malli.core.t_malli$core7624.cljs$lang$ctorPrWriter = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
            return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7624");
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.__GT_t_malli$core7624 = function(children__$1, form, cache, __GT_parser, parent__$1) {
          return function malli$core$_or_schema_$___GT_t_malli$core7624(meta7622__$1, parent__$2, properties__$1, children__$2, options__$1, form__$1, cache__$1, __GT_parser__$1, meta7625) {
            return new malli.core.t_malli$core7624(meta7622__$1, parent__$2, properties__$1, children__$2, options__$1, form__$1, cache__$1, __GT_parser__$1, meta7625);
          };
        }(children__$1, form, cache, __GT_parser, parent__$1);
      }
      return new malli.core.t_malli$core7624(self__.meta7622, parent__$1, properties, children__$1, options, form, cache, __GT_parser, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core7621.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta7622", "meta7622", 1061184248, null)], null);
    };
    malli.core.t_malli$core7621.cljs$lang$type = true;
    malli.core.t_malli$core7621.cljs$lang$ctorStr = "malli.core/t_malli$core7621";
    malli.core.t_malli$core7621.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
      return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7621");
    };
    malli.core.__GT_t_malli$core7621 = function malli$core$_or_schema_$___GT_t_malli$core7621(meta7622) {
      return new malli.core.t_malli$core7621(meta7622);
    };
  }
  return new malli.core.t_malli$core7621(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._orn_schema = function malli$core$_orn_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7632 !== "undefined") {
  } else {
    malli.core.t_malli$core7632 = function(meta7633) {
      this.meta7633 = meta7633;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7632.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7634, meta7633__$1) {
      var self__ = this;
      var _7634__$1 = this;
      return new malli.core.t_malli$core7632(meta7633__$1);
    };
    malli.core.t_malli$core7632.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7634) {
      var self__ = this;
      var _7634__$1 = this;
      return self__.meta7633;
    };
    malli.core.t_malli$core7632.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7632.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_entry_ast.call(null, parent__$1, ast, options);
    };
    malli.core.t_malli$core7632.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7632.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "orn", "orn", 738436484);
    };
    malli.core.t_malli$core7632.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core7632.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core7632.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core7632.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "orn", "orn", 738436484), properties, children, 1, null);
      var entry_parser = malli.core._create_entry_parser.call(null, children, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "naked-keys", "naked-keys", -90769828), true], null), options);
      var form = new cljs.core.Delay(function(entry_parser, parent__$1) {
        return function() {
          return malli.core._create_entry_form.call(null, parent__$1, properties, entry_parser, options);
        };
      }(entry_parser, parent__$1), null);
      var cache = malli.core._create_cache.call(null, options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7635 !== "undefined") {
      } else {
        malli.core.t_malli$core7635 = function(meta7633, parent, properties, children, options, entry_parser, form, cache, meta7636) {
          this.meta7633 = meta7633;
          this.parent = parent;
          this.properties = properties;
          this.children = children;
          this.options = options;
          this.entry_parser = entry_parser;
          this.form = form;
          this.cache = cache;
          this.meta7636 = meta7636;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core7635.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(entry_parser, form, cache, parent__$1) {
          return function(_7637, meta7636__$1) {
            var self__ = this;
            var _7637__$1 = this;
            return new malli.core.t_malli$core7635(self__.meta7633, self__.parent, self__.properties, self__.children, self__.options, self__.entry_parser, self__.form, self__.cache, meta7636__$1);
          };
        }(entry_parser, form, cache, parent__$1);
        malli.core.t_malli$core7635.prototype.cljs$core$IMeta$_meta$arity$1 = function(entry_parser, form, cache, parent__$1) {
          return function(_7637) {
            var self__ = this;
            var _7637__$1 = this;
            return self__.meta7636;
          };
        }(entry_parser, form, cache, parent__$1);
        malli.core.t_malli$core7635.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7635.prototype.malli$core$AST$_to_ast$arity$2 = function(entry_parser, form, cache, parent__$1) {
          return function(this$, _) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._entry_ast.call(null, this$__$1, malli.core._entry_keyset.call(null, self__.entry_parser));
          };
        }(entry_parser, form, cache, parent__$1);
        malli.core.t_malli$core7635.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7635.prototype.malli$core$Schema$_validator$arity$1 = function(entry_parser, form, cache, parent__$1) {
          return function(this$) {
            var self__ = this;
            var this$__$1 = this;
            return malli.impl.util._some_pred.call(null, malli.core._vmap.call(null, function(this$__$1, entry_parser, form, cache, parent__$1) {
              return function(p__7638) {
                var vec__7639 = p__7638;
                var _ = cljs.core.nth.call(null, vec__7639, 0, null);
                var ___$1 = cljs.core.nth.call(null, vec__7639, 1, null);
                var c = cljs.core.nth.call(null, vec__7639, 2, null);
                return malli.core._validator.call(null, c);
              };
            }(this$__$1, entry_parser, form, cache, parent__$1), malli.core._children.call(null, this$__$1)));
          };
        }(entry_parser, form, cache, parent__$1);
        malli.core.t_malli$core7635.prototype.malli$core$Schema$_options$arity$1 = function(entry_parser, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.options;
          };
        }(entry_parser, form, cache, parent__$1);
        malli.core.t_malli$core7635.prototype.malli$core$Schema$_transformer$arity$4 = function(entry_parser, form, cache, parent__$1) {
          return function(this$, transformer, method, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            var this_transformer = malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1);
            if (cljs.core.seq.call(null, malli.core._children.call(null, this$__$1))) {
              var transformers = malli.core._vmap.call(null, function(this_transformer, this$__$1, entry_parser, form, cache, parent__$1) {
                return function(p__7642) {
                  var vec__7643 = p__7642;
                  var _ = cljs.core.nth.call(null, vec__7643, 0, null);
                  var ___$1 = cljs.core.nth.call(null, vec__7643, 1, null);
                  var c = cljs.core.nth.call(null, vec__7643, 2, null);
                  var or__4047__auto__ = malli.core._transformer.call(null, c, transformer, method, options__$1);
                  if (cljs.core.truth_(or__4047__auto__)) {
                    return or__4047__auto__;
                  } else {
                    return cljs.core.identity;
                  }
                };
              }(this_transformer, this$__$1, entry_parser, form, cache, parent__$1), malli.core._children.call(null, this$__$1));
              var validators = malli.core._vmap.call(null, function(transformers, this_transformer, this$__$1, entry_parser, form, cache, parent__$1) {
                return function(p__7646) {
                  var vec__7647 = p__7646;
                  var _ = cljs.core.nth.call(null, vec__7647, 0, null);
                  var ___$1 = cljs.core.nth.call(null, vec__7647, 1, null);
                  var c = cljs.core.nth.call(null, vec__7647, 2, null);
                  return malli.core._validator.call(null, c);
                };
              }(transformers, this_transformer, this$__$1, entry_parser, form, cache, parent__$1), malli.core._children.call(null, this$__$1));
              return malli.core._intercepting.call(null, this_transformer, cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "decode", "decode", -1306165281), method) ? function(transformers, validators, this_transformer, this$__$1, entry_parser, form, cache, parent__$1) {
                return function(x) {
                  return cljs.core.reduce_kv.call(null, function(transformers, validators, this_transformer, this$__$1, entry_parser, form, cache, parent__$1) {
                    return function(x__$1, i, transformer__$1) {
                      var x_STAR_ = transformer__$1.call(null, x__$1);
                      if (cljs.core.truth_(cljs.core.nth.call(null, validators, i).call(null, x_STAR_))) {
                        return cljs.core.reduced.call(null, x_STAR_);
                      } else {
                        return x__$1;
                      }
                    };
                  }(transformers, validators, this_transformer, this$__$1, entry_parser, form, cache, parent__$1), x, transformers);
                };
              }(transformers, validators, this_transformer, this$__$1, entry_parser, form, cache, parent__$1) : function(transformers, validators, this_transformer, this$__$1, entry_parser, form, cache, parent__$1) {
                return function(x) {
                  return cljs.core.reduce_kv.call(null, function(transformers, validators, this_transformer, this$__$1, entry_parser, form, cache, parent__$1) {
                    return function(x__$1, i, validator) {
                      if (cljs.core.truth_(validator.call(null, x__$1))) {
                        return cljs.core.reduced.call(null, cljs.core.nth.call(null, transformers, i).call(null, x__$1));
                      } else {
                        return x__$1;
                      }
                    };
                  }(transformers, validators, this_transformer, this$__$1, entry_parser, form, cache, parent__$1), x, validators);
                };
              }(transformers, validators, this_transformer, this$__$1, entry_parser, form, cache, parent__$1));
            } else {
              return malli.core._intercepting.call(null, this_transformer);
            }
          };
        }(entry_parser, form, cache, parent__$1);
        malli.core.t_malli$core7635.prototype.malli$core$Schema$_walk$arity$4 = function(entry_parser, form, cache, parent__$1) {
          return function(this$, walker, path, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._walk_entries.call(null, this$__$1, walker, path, options__$1);
          };
        }(entry_parser, form, cache, parent__$1);
        malli.core.t_malli$core7635.prototype.malli$core$Schema$_parser$arity$1 = function(entry_parser, form, cache, parent__$1) {
          return function(this$) {
            var self__ = this;
            var this$__$1 = this;
            var parsers = malli.core._vmap.call(null, function(this$__$1, entry_parser, form, cache, parent__$1) {
              return function(p__7650) {
                var vec__7651 = p__7650;
                var k = cljs.core.nth.call(null, vec__7651, 0, null);
                var _ = cljs.core.nth.call(null, vec__7651, 1, null);
                var c = cljs.core.nth.call(null, vec__7651, 2, null);
                var c__$1 = malli.core._parser.call(null, c);
                return function(c__$1, vec__7651, k, _, c, this$__$1, entry_parser, form, cache, parent__$1) {
                  return function(x) {
                    return malli.impl.util._map_valid.call(null, function(c__$1, vec__7651, k, _, c, this$__$1, entry_parser, form, cache, parent__$1) {
                      return function(p1__7631_SHARP_) {
                        return cljs.core.reduced.call(null, malli.impl.util._tagged.call(null, k, p1__7631_SHARP_));
                      };
                    }(c__$1, vec__7651, k, _, c, this$__$1, entry_parser, form, cache, parent__$1), c__$1.call(null, x));
                  };
                }(c__$1, vec__7651, k, _, c, this$__$1, entry_parser, form, cache, parent__$1);
              };
            }(this$__$1, entry_parser, form, cache, parent__$1), malli.core._children.call(null, this$__$1));
            return function(parsers, this$__$1, entry_parser, form, cache, parent__$1) {
              return function(x) {
                return cljs.core.reduce.call(null, function(parsers, this$__$1, entry_parser, form, cache, parent__$1) {
                  return function(_, parser) {
                    return parser.call(null, x);
                  };
                }(parsers, this$__$1, entry_parser, form, cache, parent__$1), x, parsers);
              };
            }(parsers, this$__$1, entry_parser, form, cache, parent__$1);
          };
        }(entry_parser, form, cache, parent__$1);
        malli.core.t_malli$core7635.prototype.malli$core$Schema$_properties$arity$1 = function(entry_parser, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.properties;
          };
        }(entry_parser, form, cache, parent__$1);
        malli.core.t_malli$core7635.prototype.malli$core$Schema$_children$arity$1 = function(entry_parser, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return malli.core._entry_children.call(null, self__.entry_parser);
          };
        }(entry_parser, form, cache, parent__$1);
        malli.core.t_malli$core7635.prototype.malli$core$Schema$_form$arity$1 = function(entry_parser, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.deref.call(null, self__.form);
          };
        }(entry_parser, form, cache, parent__$1);
        malli.core.t_malli$core7635.prototype.malli$core$Schema$_explainer$arity$2 = function(entry_parser, form, cache, parent__$1) {
          return function(this$, path) {
            var self__ = this;
            var this$__$1 = this;
            var explainers = malli.core._vmap.call(null, function(this$__$1, entry_parser, form, cache, parent__$1) {
              return function(p__7654) {
                var vec__7655 = p__7654;
                var k = cljs.core.nth.call(null, vec__7655, 0, null);
                var _ = cljs.core.nth.call(null, vec__7655, 1, null);
                var c = cljs.core.nth.call(null, vec__7655, 2, null);
                return malli.core._explainer.call(null, c, cljs.core.conj.call(null, path, k));
              };
            }(this$__$1, entry_parser, form, cache, parent__$1), malli.core._children.call(null, this$__$1));
            return function(explainers, this$__$1, entry_parser, form, cache, parent__$1) {
              return function malli$core$_orn_schema_$_explain(x, in$, acc) {
                return cljs.core.reduce.call(null, function(explainers, this$__$1, entry_parser, form, cache, parent__$1) {
                  return function(acc_SINGLEQUOTE_, explainer) {
                    var acc_SINGLEQUOTE__SINGLEQUOTE_ = explainer.call(null, x, in$, acc_SINGLEQUOTE_);
                    if (acc_SINGLEQUOTE_ === acc_SINGLEQUOTE__SINGLEQUOTE_) {
                      return cljs.core.reduced.call(null, acc);
                    } else {
                      return acc_SINGLEQUOTE__SINGLEQUOTE_;
                    }
                  };
                }(explainers, this$__$1, entry_parser, form, cache, parent__$1), acc, explainers);
              };
            }(explainers, this$__$1, entry_parser, form, cache, parent__$1);
          };
        }(entry_parser, form, cache, parent__$1);
        malli.core.t_malli$core7635.prototype.malli$core$Schema$_unparser$arity$1 = function(entry_parser, form, cache, parent__$1) {
          return function(this$) {
            var self__ = this;
            var this$__$1 = this;
            var unparsers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1, entry_parser, form, cache, parent__$1) {
              return function(p__7658) {
                var vec__7659 = p__7658;
                var k = cljs.core.nth.call(null, vec__7659, 0, null);
                var _ = cljs.core.nth.call(null, vec__7659, 1, null);
                var c = cljs.core.nth.call(null, vec__7659, 2, null);
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._unparser.call(null, c)], null);
              };
            }(this$__$1, entry_parser, form, cache, parent__$1)), malli.core._children.call(null, this$__$1));
            return function(unparsers, this$__$1, entry_parser, form, cache, parent__$1) {
              return function(x) {
                if (malli.impl.util._tagged_QMARK_.call(null, x)) {
                  var temp__5722__auto__ = cljs.core.get.call(null, unparsers, cljs.core.key.call(null, x));
                  if (temp__5722__auto__ == null) {
                    return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
                  } else {
                    var unparse = temp__5722__auto__;
                    return unparse.call(null, cljs.core.val.call(null, x));
                  }
                } else {
                  return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
                }
              };
            }(unparsers, this$__$1, entry_parser, form, cache, parent__$1);
          };
        }(entry_parser, form, cache, parent__$1);
        malli.core.t_malli$core7635.prototype.malli$core$Schema$_parent$arity$1 = function(entry_parser, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.parent;
          };
        }(entry_parser, form, cache, parent__$1);
        malli.core.t_malli$core7635.prototype.malli$core$EntrySchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7635.prototype.malli$core$EntrySchema$_entries$arity$1 = function(entry_parser, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return malli.core._entry_entries.call(null, self__.entry_parser);
          };
        }(entry_parser, form, cache, parent__$1);
        malli.core.t_malli$core7635.prototype.malli$core$EntrySchema$_entry_parser$arity$1 = function(entry_parser, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.entry_parser;
          };
        }(entry_parser, form, cache, parent__$1);
        malli.core.t_malli$core7635.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7635.prototype.malli$core$Cached$_cache$arity$1 = function(entry_parser, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.cache;
          };
        }(entry_parser, form, cache, parent__$1);
        malli.core.t_malli$core7635.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7635.prototype.malli$core$LensSchema$_keep$arity$1 = function(entry_parser, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return true;
          };
        }(entry_parser, form, cache, parent__$1);
        malli.core.t_malli$core7635.prototype.malli$core$LensSchema$_get$arity$3 = function(entry_parser, form, cache, parent__$1) {
          return function(this$, key, default$) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._get_entries.call(null, this$__$1, key, default$);
          };
        }(entry_parser, form, cache, parent__$1);
        malli.core.t_malli$core7635.prototype.malli$core$LensSchema$_set$arity$3 = function(entry_parser, form, cache, parent__$1) {
          return function(this$, key, value) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._set_entries.call(null, this$__$1, key, value);
          };
        }(entry_parser, form, cache, parent__$1);
        malli.core.t_malli$core7635.getBasis = function(entry_parser, form, cache, parent__$1) {
          return function() {
            return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta7633", "meta7633", 756199590, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core7632", "malli.core/t_malli$core7632", 801070213, null)], null)), new cljs.core.Symbol(null, "properties", 
            "properties", -1968616217, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "entry-parser", "entry-parser", -1698599125, null), new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "meta7636", "meta7636", 94251541, null)], null);
          };
        }(entry_parser, form, cache, parent__$1);
        malli.core.t_malli$core7635.cljs$lang$type = true;
        malli.core.t_malli$core7635.cljs$lang$ctorStr = "malli.core/t_malli$core7635";
        malli.core.t_malli$core7635.cljs$lang$ctorPrWriter = function(entry_parser, form, cache, parent__$1) {
          return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
            return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7635");
          };
        }(entry_parser, form, cache, parent__$1);
        malli.core.__GT_t_malli$core7635 = function(entry_parser, form, cache, parent__$1) {
          return function malli$core$_orn_schema_$___GT_t_malli$core7635(meta7633__$1, parent__$2, properties__$1, children__$1, options__$1, entry_parser__$1, form__$1, cache__$1, meta7636) {
            return new malli.core.t_malli$core7635(meta7633__$1, parent__$2, properties__$1, children__$1, options__$1, entry_parser__$1, form__$1, cache__$1, meta7636);
          };
        }(entry_parser, form, cache, parent__$1);
      }
      return new malli.core.t_malli$core7635(self__.meta7633, parent__$1, properties, children, options, entry_parser, form, cache, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core7632.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta7633", "meta7633", 756199590, null)], null);
    };
    malli.core.t_malli$core7632.cljs$lang$type = true;
    malli.core.t_malli$core7632.cljs$lang$ctorStr = "malli.core/t_malli$core7632";
    malli.core.t_malli$core7632.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
      return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7632");
    };
    malli.core.__GT_t_malli$core7632 = function malli$core$_orn_schema_$___GT_t_malli$core7632(meta7633) {
      return new malli.core.t_malli$core7632(meta7633);
    };
  }
  return new malli.core.t_malli$core7632(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._not_schema = function malli$core$_not_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7663 !== "undefined") {
  } else {
    malli.core.t_malli$core7663 = function(meta7664) {
      this.meta7664 = meta7664;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7663.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7665, meta7664__$1) {
      var self__ = this;
      var _7665__$1 = this;
      return new malli.core.t_malli$core7663(meta7664__$1);
    };
    malli.core.t_malli$core7663.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7665) {
      var self__ = this;
      var _7665__$1 = this;
      return self__.meta7664;
    };
    malli.core.t_malli$core7663.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7663.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_child_ast.call(null, parent__$1, ast, options);
    };
    malli.core.t_malli$core7663.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7663.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "not", "not", -595976884);
    };
    malli.core.t_malli$core7663.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core7663.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core7663.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core7663.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "not", "not", -595976884), properties, children, 1, 1);
      var vec__7666 = malli.core._vmap.call(null, function(parent__$1) {
        return function(p1__7662_SHARP_) {
          return malli.core.schema.call(null, p1__7662_SHARP_, options);
        };
      }(parent__$1), children);
      var schema = cljs.core.nth.call(null, vec__7666, 0, null);
      var children__$1 = vec__7666;
      var form = new cljs.core.Delay(function(vec__7666, schema, children__$1, parent__$1) {
        return function() {
          return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
        };
      }(vec__7666, schema, children__$1, parent__$1), null);
      var cache = malli.core._create_cache.call(null, options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7669 !== "undefined") {
      } else {
        malli.core.t_malli$core7669 = function(form, options, properties, schema, children, parent, cache, meta7664, vec__7666, meta7670) {
          this.form = form;
          this.options = options;
          this.properties = properties;
          this.schema = schema;
          this.children = children;
          this.parent = parent;
          this.cache = cache;
          this.meta7664 = meta7664;
          this.vec__7666 = vec__7666;
          this.meta7670 = meta7670;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core7669.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(vec__7666, schema, children__$1, form, cache, parent__$1) {
          return function(_7671, meta7670__$1) {
            var self__ = this;
            var _7671__$1 = this;
            return new malli.core.t_malli$core7669(self__.form, self__.options, self__.properties, self__.schema, self__.children, self__.parent, self__.cache, self__.meta7664, self__.vec__7666, meta7670__$1);
          };
        }(vec__7666, schema, children__$1, form, cache, parent__$1);
        malli.core.t_malli$core7669.prototype.cljs$core$IMeta$_meta$arity$1 = function(vec__7666, schema, children__$1, form, cache, parent__$1) {
          return function(_7671) {
            var self__ = this;
            var _7671__$1 = this;
            return self__.meta7670;
          };
        }(vec__7666, schema, children__$1, form, cache, parent__$1);
        malli.core.t_malli$core7669.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7669.prototype.malli$core$AST$_to_ast$arity$2 = function(vec__7666, schema, children__$1, form, cache, parent__$1) {
          return function(this$, _) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._to_child_ast.call(null, this$__$1);
          };
        }(vec__7666, schema, children__$1, form, cache, parent__$1);
        malli.core.t_malli$core7669.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7669.prototype.malli$core$Schema$_validator$arity$1 = function(vec__7666, schema, children__$1, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.complement.call(null, malli.core._validator.call(null, self__.schema));
          };
        }(vec__7666, schema, children__$1, form, cache, parent__$1);
        malli.core.t_malli$core7669.prototype.malli$core$Schema$_options$arity$1 = function(vec__7666, schema, children__$1, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.options;
          };
        }(vec__7666, schema, children__$1, form, cache, parent__$1);
        malli.core.t_malli$core7669.prototype.malli$core$Schema$_transformer$arity$4 = function(vec__7666, schema, children__$1, form, cache, parent__$1) {
          return function(this$, transformer, method, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._parent_children_transformer.call(null, this$__$1, self__.children, transformer, method, options__$1);
          };
        }(vec__7666, schema, children__$1, form, cache, parent__$1);
        malli.core.t_malli$core7669.prototype.malli$core$Schema$_walk$arity$4 = function(vec__7666, schema, children__$1, form, cache, parent__$1) {
          return function(this$, walker, path, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._walk_indexed.call(null, this$__$1, walker, path, options__$1);
          };
        }(vec__7666, schema, children__$1, form, cache, parent__$1);
        malli.core.t_malli$core7669.prototype.malli$core$Schema$_parser$arity$1 = function(vec__7666, schema, children__$1, form, cache, parent__$1) {
          return function(this$) {
            var self__ = this;
            var this$__$1 = this;
            var validator = malli.core._validator.call(null, this$__$1);
            return function(validator, this$__$1, vec__7666, schema, children__$1, form, cache, parent__$1) {
              return function(x) {
                if (cljs.core.truth_(validator.call(null, x))) {
                  return x;
                } else {
                  return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
                }
              };
            }(validator, this$__$1, vec__7666, schema, children__$1, form, cache, parent__$1);
          };
        }(vec__7666, schema, children__$1, form, cache, parent__$1);
        malli.core.t_malli$core7669.prototype.malli$core$Schema$_properties$arity$1 = function(vec__7666, schema, children__$1, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.properties;
          };
        }(vec__7666, schema, children__$1, form, cache, parent__$1);
        malli.core.t_malli$core7669.prototype.malli$core$Schema$_children$arity$1 = function(vec__7666, schema, children__$1, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.children;
          };
        }(vec__7666, schema, children__$1, form, cache, parent__$1);
        malli.core.t_malli$core7669.prototype.malli$core$Schema$_form$arity$1 = function(vec__7666, schema, children__$1, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.deref.call(null, self__.form);
          };
        }(vec__7666, schema, children__$1, form, cache, parent__$1);
        malli.core.t_malli$core7669.prototype.malli$core$Schema$_explainer$arity$2 = function(vec__7666, schema, children__$1, form, cache, parent__$1) {
          return function(this$, path) {
            var self__ = this;
            var this$__$1 = this;
            var validator = malli.core._validator.call(null, this$__$1);
            return function(validator, this$__$1, vec__7666, schema, children__$1, form, cache, parent__$1) {
              return function malli$core$_not_schema_$_explain(x, in$, acc) {
                if (cljs.core.not.call(null, validator.call(null, x))) {
                  return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, cljs.core.conj.call(null, path, 0), in$, this$__$1, x));
                } else {
                  return acc;
                }
              };
            }(validator, this$__$1, vec__7666, schema, children__$1, form, cache, parent__$1);
          };
        }(vec__7666, schema, children__$1, form, cache, parent__$1);
        malli.core.t_malli$core7669.prototype.malli$core$Schema$_unparser$arity$1 = function(vec__7666, schema, children__$1, form, cache, parent__$1) {
          return function(this$) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._parser.call(null, this$__$1);
          };
        }(vec__7666, schema, children__$1, form, cache, parent__$1);
        malli.core.t_malli$core7669.prototype.malli$core$Schema$_parent$arity$1 = function(vec__7666, schema, children__$1, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.parent;
          };
        }(vec__7666, schema, children__$1, form, cache, parent__$1);
        malli.core.t_malli$core7669.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7669.prototype.malli$core$Cached$_cache$arity$1 = function(vec__7666, schema, children__$1, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.cache;
          };
        }(vec__7666, schema, children__$1, form, cache, parent__$1);
        malli.core.t_malli$core7669.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7669.prototype.malli$core$LensSchema$_keep$arity$1 = function(vec__7666, schema, children__$1, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return null;
          };
        }(vec__7666, schema, children__$1, form, cache, parent__$1);
        malli.core.t_malli$core7669.prototype.malli$core$LensSchema$_get$arity$3 = function(vec__7666, schema, children__$1, form, cache, parent__$1) {
          return function(_, key, default$) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.get.call(null, self__.children, key, default$);
          };
        }(vec__7666, schema, children__$1, form, cache, parent__$1);
        malli.core.t_malli$core7669.prototype.malli$core$LensSchema$_set$arity$3 = function(vec__7666, schema, children__$1, form, cache, parent__$1) {
          return function(this$, key, value) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._set_assoc_children.call(null, this$__$1, key, value);
          };
        }(vec__7666, schema, children__$1, form, cache, parent__$1);
        malli.core.t_malli$core7669.getBasis = function(vec__7666, schema, children__$1, form, cache, parent__$1) {
          return function() {
            return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "schema", "schema", 58529736, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 
            761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core7663", "malli.core/t_malli$core7663", -311821926, null)], null)), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "meta7664", "meta7664", 452277370, null), new cljs.core.Symbol(null, "vec__7666", "vec__7666", 1489221597, null), new cljs.core.Symbol(null, "meta7670", "meta7670", 926998939, 
            null)], null);
          };
        }(vec__7666, schema, children__$1, form, cache, parent__$1);
        malli.core.t_malli$core7669.cljs$lang$type = true;
        malli.core.t_malli$core7669.cljs$lang$ctorStr = "malli.core/t_malli$core7669";
        malli.core.t_malli$core7669.cljs$lang$ctorPrWriter = function(vec__7666, schema, children__$1, form, cache, parent__$1) {
          return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
            return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7669");
          };
        }(vec__7666, schema, children__$1, form, cache, parent__$1);
        malli.core.__GT_t_malli$core7669 = function(vec__7666, schema, children__$1, form, cache, parent__$1) {
          return function malli$core$_not_schema_$___GT_t_malli$core7669(form__$1, options__$1, properties__$1, schema__$1, children__$2, parent__$2, cache__$1, meta7664__$1, vec__7666__$1, meta7670) {
            return new malli.core.t_malli$core7669(form__$1, options__$1, properties__$1, schema__$1, children__$2, parent__$2, cache__$1, meta7664__$1, vec__7666__$1, meta7670);
          };
        }(vec__7666, schema, children__$1, form, cache, parent__$1);
      }
      return new malli.core.t_malli$core7669(form, options, properties, schema, children__$1, parent__$1, cache, self__.meta7664, vec__7666, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core7663.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta7664", "meta7664", 452277370, null)], null);
    };
    malli.core.t_malli$core7663.cljs$lang$type = true;
    malli.core.t_malli$core7663.cljs$lang$ctorStr = "malli.core/t_malli$core7663";
    malli.core.t_malli$core7663.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
      return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7663");
    };
    malli.core.__GT_t_malli$core7663 = function malli$core$_not_schema_$___GT_t_malli$core7663(meta7664) {
      return new malli.core.t_malli$core7663(meta7664);
    };
  }
  return new malli.core.t_malli$core7663(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._val_schema = function malli$core$_val_schema(var_args) {
  var G__7674 = arguments.length;
  switch(G__7674) {
    case 2:
      return malli.core._val_schema.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 0:
      return malli.core._val_schema.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._val_schema.cljs$core$IFn$_invoke$arity$2 = function(schema, properties) {
  return malli.core._into_schema.call(null, malli.core._val_schema.call(null), properties, new cljs.core.List(null, schema, null, 1, null), malli.core._options.call(null, schema));
};
malli.core._val_schema.cljs$core$IFn$_invoke$arity$0 = function() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7675 !== "undefined") {
  } else {
    malli.core.t_malli$core7675 = function(meta7676) {
      this.meta7676 = meta7676;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7675.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7677, meta7676__$1) {
      var self__ = this;
      var _7677__$1 = this;
      return new malli.core.t_malli$core7675(meta7676__$1);
    };
    malli.core.t_malli$core7675.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7677) {
      var self__ = this;
      var _7677__$1 = this;
      return self__.meta7676;
    };
    malli.core.t_malli$core7675.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7675.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_child_ast.call(null, parent__$1, ast, options);
    };
    malli.core.t_malli$core7675.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7675.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword("malli.core", "val", "malli.core/val", 39501268);
    };
    malli.core.t_malli$core7675.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core7675.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core7675.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core7675.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      var children__$1 = malli.core._vmap.call(null, function(parent__$1) {
        return function(p1__7672_SHARP_) {
          return malli.core.schema.call(null, p1__7672_SHARP_, options);
        };
      }(parent__$1), children);
      var form = new cljs.core.Delay(function(children__$1, parent__$1) {
        return function() {
          return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
        };
      }(children__$1, parent__$1), null);
      var schema = cljs.core.first.call(null, children__$1);
      var cache = malli.core._create_cache.call(null, options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7678 !== "undefined") {
      } else {
        malli.core.t_malli$core7678 = function(meta7676, parent, properties, children, options, form, schema, cache, meta7679) {
          this.meta7676 = meta7676;
          this.parent = parent;
          this.properties = properties;
          this.children = children;
          this.options = options;
          this.form = form;
          this.schema = schema;
          this.cache = cache;
          this.meta7679 = meta7679;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core7678.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(children__$1, form, schema, cache, parent__$1) {
          return function(_7680, meta7679__$1) {
            var self__ = this;
            var _7680__$1 = this;
            return new malli.core.t_malli$core7678(self__.meta7676, self__.parent, self__.properties, self__.children, self__.options, self__.form, self__.schema, self__.cache, meta7679__$1);
          };
        }(children__$1, form, schema, cache, parent__$1);
        malli.core.t_malli$core7678.prototype.cljs$core$IMeta$_meta$arity$1 = function(children__$1, form, schema, cache, parent__$1) {
          return function(_7680) {
            var self__ = this;
            var _7680__$1 = this;
            return self__.meta7679;
          };
        }(children__$1, form, schema, cache, parent__$1);
        malli.core.t_malli$core7678.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7678.prototype.malli$core$AST$_to_ast$arity$2 = function(children__$1, form, schema, cache, parent__$1) {
          return function(this$, _) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._to_child_ast.call(null, this$__$1);
          };
        }(children__$1, form, schema, cache, parent__$1);
        malli.core.t_malli$core7678.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7678.prototype.malli$core$Schema$_validator$arity$1 = function(children__$1, form, schema, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return malli.core._validator.call(null, self__.schema);
          };
        }(children__$1, form, schema, cache, parent__$1);
        malli.core.t_malli$core7678.prototype.malli$core$Schema$_options$arity$1 = function(children__$1, form, schema, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return malli.core._options.call(null, self__.schema);
          };
        }(children__$1, form, schema, cache, parent__$1);
        malli.core.t_malli$core7678.prototype.malli$core$Schema$_transformer$arity$4 = function(children__$1, form, schema, cache, parent__$1) {
          return function(this$, transformer, method, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._parent_children_transformer.call(null, this$__$1, new cljs.core.List(null, self__.schema, null, 1, null), transformer, method, options__$1);
          };
        }(children__$1, form, schema, cache, parent__$1);
        malli.core.t_malli$core7678.prototype.malli$core$Schema$_walk$arity$4 = function(children__$1, form, schema, cache, parent__$1) {
          return function(this$, walker, path, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            if (cljs.core.truth_((new cljs.core.Keyword("malli.core", "walk-entry-vals", "malli.core/walk-entry-vals", -64238340)).cljs$core$IFn$_invoke$arity$1(options__$1))) {
              if (cljs.core.truth_(malli.core._accept.call(null, walker, this$__$1, path, options__$1))) {
                return malli.core._outer.call(null, walker, this$__$1, path, new cljs.core.List(null, malli.core._inner.call(null, walker, self__.schema, path, options__$1), null, 1, null), options__$1);
              } else {
                return null;
              }
            } else {
              return malli.core._walk.call(null, self__.schema, walker, path, options__$1);
            }
          };
        }(children__$1, form, schema, cache, parent__$1);
        malli.core.t_malli$core7678.prototype.malli$core$Schema$_parser$arity$1 = function(children__$1, form, schema, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return malli.core._parser.call(null, self__.schema);
          };
        }(children__$1, form, schema, cache, parent__$1);
        malli.core.t_malli$core7678.prototype.malli$core$Schema$_properties$arity$1 = function(children__$1, form, schema, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.properties;
          };
        }(children__$1, form, schema, cache, parent__$1);
        malli.core.t_malli$core7678.prototype.malli$core$Schema$_children$arity$1 = function(children__$1, form, schema, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.schema], null);
          };
        }(children__$1, form, schema, cache, parent__$1);
        malli.core.t_malli$core7678.prototype.malli$core$Schema$_form$arity$1 = function(children__$1, form, schema, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.deref.call(null, self__.form);
          };
        }(children__$1, form, schema, cache, parent__$1);
        malli.core.t_malli$core7678.prototype.malli$core$Schema$_explainer$arity$2 = function(children__$1, form, schema, cache, parent__$1) {
          return function(_, path) {
            var self__ = this;
            var ___$1 = this;
            return malli.core._explainer.call(null, self__.schema, path);
          };
        }(children__$1, form, schema, cache, parent__$1);
        malli.core.t_malli$core7678.prototype.malli$core$Schema$_unparser$arity$1 = function(children__$1, form, schema, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return malli.core._unparser.call(null, self__.schema);
          };
        }(children__$1, form, schema, cache, parent__$1);
        malli.core.t_malli$core7678.prototype.malli$core$Schema$_parent$arity$1 = function(children__$1, form, schema, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.parent;
          };
        }(children__$1, form, schema, cache, parent__$1);
        malli.core.t_malli$core7678.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7678.prototype.malli$core$Cached$_cache$arity$1 = function(children__$1, form, schema, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.cache;
          };
        }(children__$1, form, schema, cache, parent__$1);
        malli.core.t_malli$core7678.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7678.prototype.malli$core$LensSchema$_keep$arity$1 = function(children__$1, form, schema, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return null;
          };
        }(children__$1, form, schema, cache, parent__$1);
        malli.core.t_malli$core7678.prototype.malli$core$LensSchema$_get$arity$3 = function(children__$1, form, schema, cache, parent__$1) {
          return function(_, key, default$) {
            var self__ = this;
            var ___$1 = this;
            if (cljs.core._EQ_.call(null, 0, key)) {
              return self__.schema;
            } else {
              return default$;
            }
          };
        }(children__$1, form, schema, cache, parent__$1);
        malli.core.t_malli$core7678.prototype.malli$core$LensSchema$_set$arity$3 = function(children__$1, form, schema, cache, parent__$1) {
          return function(_, key, value) {
            var self__ = this;
            var ___$1 = this;
            if (cljs.core._EQ_.call(null, 0, key)) {
              return malli.core._val_schema.call(null, value, self__.properties);
            } else {
              return null;
            }
          };
        }(children__$1, form, schema, cache, parent__$1);
        malli.core.t_malli$core7678.prototype.malli$core$RefSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7678.prototype.malli$core$RefSchema$_ref$arity$1 = function(children__$1, form, schema, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return null;
          };
        }(children__$1, form, schema, cache, parent__$1);
        malli.core.t_malli$core7678.prototype.malli$core$RefSchema$_deref$arity$1 = function(children__$1, form, schema, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.schema;
          };
        }(children__$1, form, schema, cache, parent__$1);
        malli.core.t_malli$core7678.getBasis = function(children__$1, form, schema, cache, parent__$1) {
          return function() {
            return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta7676", "meta7676", -813071431, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core7675", "malli.core/t_malli$core7675", 1635198288, null)], null)), new cljs.core.Symbol(null, "properties", 
            "properties", -1968616217, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "schema", "schema", 58529736, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "meta7679", "meta7679", -2010681840, null)], null);
          };
        }(children__$1, form, schema, cache, parent__$1);
        malli.core.t_malli$core7678.cljs$lang$type = true;
        malli.core.t_malli$core7678.cljs$lang$ctorStr = "malli.core/t_malli$core7678";
        malli.core.t_malli$core7678.cljs$lang$ctorPrWriter = function(children__$1, form, schema, cache, parent__$1) {
          return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
            return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7678");
          };
        }(children__$1, form, schema, cache, parent__$1);
        malli.core.__GT_t_malli$core7678 = function(children__$1, form, schema, cache, parent__$1) {
          return function malli$core$__GT_t_malli$core7678(meta7676__$1, parent__$2, properties__$1, children__$2, options__$1, form__$1, schema__$1, cache__$1, meta7679) {
            return new malli.core.t_malli$core7678(meta7676__$1, parent__$2, properties__$1, children__$2, options__$1, form__$1, schema__$1, cache__$1, meta7679);
          };
        }(children__$1, form, schema, cache, parent__$1);
      }
      return new malli.core.t_malli$core7678(self__.meta7676, parent__$1, properties, children__$1, options, form, schema, cache, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core7675.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta7676", "meta7676", -813071431, null)], null);
    };
    malli.core.t_malli$core7675.cljs$lang$type = true;
    malli.core.t_malli$core7675.cljs$lang$ctorStr = "malli.core/t_malli$core7675";
    malli.core.t_malli$core7675.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
      return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7675");
    };
    malli.core.__GT_t_malli$core7675 = function malli$core$__GT_t_malli$core7675(meta7676) {
      return new malli.core.t_malli$core7675(meta7676);
    };
  }
  return new malli.core.t_malli$core7675(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._val_schema.cljs$lang$maxFixedArity = 2;
malli.core._map_schema = function malli$core$_map_schema(var_args) {
  var G__7683 = arguments.length;
  switch(G__7683) {
    case 0:
      return malli.core._map_schema.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.core._map_schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._map_schema.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.core._map_schema.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "naked-keys", "naked-keys", -90769828), true], null));
};
malli.core._map_schema.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7684 !== "undefined") {
  } else {
    malli.core.t_malli$core7684 = function(opts, meta7685) {
      this.opts = opts;
      this.meta7685 = meta7685;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7684.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7686, meta7685__$1) {
      var self__ = this;
      var _7686__$1 = this;
      return new malli.core.t_malli$core7684(self__.opts, meta7685__$1);
    };
    malli.core.t_malli$core7684.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7686) {
      var self__ = this;
      var _7686__$1 = this;
      return self__.meta7685;
    };
    malli.core.t_malli$core7684.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7684.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_entry_ast.call(null, parent__$1, ast, options);
    };
    malli.core.t_malli$core7684.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7684.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "map", "map", 1371690461);
    };
    malli.core.t_malli$core7684.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core7684.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core7684.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core7684.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, p__7687, children, options) {
      var self__ = this;
      var map__7688 = p__7687;
      var map__7688__$1 = (!(map__7688 == null) ? map__7688.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7688.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7688) : map__7688;
      var properties = map__7688__$1;
      var closed = cljs.core.get.call(null, map__7688__$1, new cljs.core.Keyword(null, "closed", "closed", -919675359));
      var parent__$1 = this;
      var entry_parser = malli.core._create_entry_parser.call(null, children, self__.opts, options);
      var form = new cljs.core.Delay(function(entry_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
        return function() {
          return malli.core._create_entry_form.call(null, parent__$1, properties, entry_parser, options);
        };
      }(entry_parser, parent__$1, map__7688, map__7688__$1, properties, closed), null);
      var cache = malli.core._create_cache.call(null, options);
      var __GT_parser = function(entry_parser, form, cache, parent__$1, map__7688, map__7688__$1, properties, closed) {
        return function(this$, f) {
          var keyset = malli.core._entry_keyset.call(null, malli.core._entry_parser.call(null, this$));
          var parsers = function() {
            var G__7690 = malli.core._vmap.call(null, function(keyset, entry_parser, form, cache, parent__$1, map__7688, map__7688__$1, properties, closed) {
              return function(p__7691) {
                var vec__7692 = p__7691;
                var key = cljs.core.nth.call(null, vec__7692, 0, null);
                var map__7695 = cljs.core.nth.call(null, vec__7692, 1, null);
                var map__7695__$1 = (!(map__7695 == null) ? map__7695.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7695.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7695) : map__7695;
                var optional = cljs.core.get.call(null, map__7695__$1, new cljs.core.Keyword(null, "optional", "optional", 2053951509));
                var schema = cljs.core.nth.call(null, vec__7692, 2, null);
                var parser = f.call(null, schema);
                return function(parser, vec__7692, key, map__7695, map__7695__$1, optional, schema, keyset, entry_parser, form, cache, parent__$1, map__7688, map__7688__$1, properties, closed) {
                  return function(m) {
                    var temp__5718__auto__ = cljs.core.find.call(null, m, key);
                    if (cljs.core.truth_(temp__5718__auto__)) {
                      var e = temp__5718__auto__;
                      var v = cljs.core.val.call(null, e);
                      var v_STAR_ = parser.call(null, v);
                      if (malli.impl.util._invalid_QMARK_.call(null, v_STAR_)) {
                        return cljs.core.reduced.call(null, v_STAR_);
                      } else {
                        if (v_STAR_ === v) {
                          return m;
                        } else {
                          return cljs.core.assoc.call(null, m, key, v_STAR_);
                        }
                      }
                    } else {
                      if (cljs.core.truth_(optional)) {
                        return m;
                      } else {
                        return cljs.core.reduced.call(null, new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900));
                      }
                    }
                  };
                }(parser, vec__7692, key, map__7695, map__7695__$1, optional, schema, keyset, entry_parser, form, cache, parent__$1, map__7688, map__7688__$1, properties, closed);
              };
            }(keyset, entry_parser, form, cache, parent__$1, map__7688, map__7688__$1, properties, closed), malli.core._children.call(null, this$));
            if (cljs.core.truth_(closed)) {
              return cljs.core.cons.call(null, function(G__7690, keyset, entry_parser, form, cache, parent__$1, map__7688, map__7688__$1, properties, closed) {
                return function(m) {
                  return cljs.core.reduce.call(null, function(G__7690, keyset, entry_parser, form, cache, parent__$1, map__7688, map__7688__$1, properties, closed) {
                    return function(m__$1, k) {
                      if (cljs.core.contains_QMARK_.call(null, keyset, k)) {
                        return m__$1;
                      } else {
                        return cljs.core.reduced.call(null, cljs.core.reduced.call(null, new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900)));
                      }
                    };
                  }(G__7690, keyset, entry_parser, form, cache, parent__$1, map__7688, map__7688__$1, properties, closed), m, cljs.core.keys.call(null, m));
                };
              }(G__7690, keyset, entry_parser, form, cache, parent__$1, map__7688, map__7688__$1, properties, closed), G__7690);
            } else {
              return G__7690;
            }
          }();
          return function(keyset, parsers, entry_parser, form, cache, parent__$1, map__7688, map__7688__$1, properties, closed) {
            return function(x) {
              if (cljs.core.map_QMARK_.call(null, x)) {
                return cljs.core.reduce.call(null, function(keyset, parsers, entry_parser, form, cache, parent__$1, map__7688, map__7688__$1, properties, closed) {
                  return function(m, parser) {
                    return parser.call(null, m);
                  };
                }(keyset, parsers, entry_parser, form, cache, parent__$1, map__7688, map__7688__$1, properties, closed), x, parsers);
              } else {
                return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
              }
            };
          }(keyset, parsers, entry_parser, form, cache, parent__$1, map__7688, map__7688__$1, properties, closed);
        };
      }(entry_parser, form, cache, parent__$1, map__7688, map__7688__$1, properties, closed);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7697 !== "undefined") {
      } else {
        malli.core.t_malli$core7697 = function(form, options, properties, closed, children, entry_parser, parent, p__7687, map__7688, __GT_parser, cache, meta7685, opts, meta7698) {
          this.form = form;
          this.options = options;
          this.properties = properties;
          this.closed = closed;
          this.children = children;
          this.entry_parser = entry_parser;
          this.parent = parent;
          this.p__7687 = p__7687;
          this.map__7688 = map__7688;
          this.__GT_parser = __GT_parser;
          this.cache = cache;
          this.meta7685 = meta7685;
          this.opts = opts;
          this.meta7698 = meta7698;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core7697.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
          return function(_7699, meta7698__$1) {
            var self__ = this;
            var _7699__$1 = this;
            return new malli.core.t_malli$core7697(self__.form, self__.options, self__.properties, self__.closed, self__.children, self__.entry_parser, self__.parent, self__.p__7687, self__.map__7688, self__.__GT_parser, self__.cache, self__.meta7685, self__.opts, meta7698__$1);
          };
        }(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
        malli.core.t_malli$core7697.prototype.cljs$core$IMeta$_meta$arity$1 = function(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
          return function(_7699) {
            var self__ = this;
            var _7699__$1 = this;
            return self__.meta7698;
          };
        }(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
        malli.core.t_malli$core7697.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7697.prototype.malli$core$AST$_to_ast$arity$2 = function(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
          return function(this$, _) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._entry_ast.call(null, this$__$1, malli.core._entry_keyset.call(null, self__.entry_parser));
          };
        }(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
        malli.core.t_malli$core7697.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7697.prototype.malli$core$Schema$_validator$arity$1 = function(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
          return function(this$) {
            var self__ = this;
            var this$__$1 = this;
            var keyset = malli.core._entry_keyset.call(null, malli.core._entry_parser.call(null, this$__$1));
            var validators = function() {
              var G__7700 = malli.core._vmap.call(null, function(keyset, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
                return function(p__7701) {
                  var vec__7702 = p__7701;
                  var key = cljs.core.nth.call(null, vec__7702, 0, null);
                  var map__7705 = cljs.core.nth.call(null, vec__7702, 1, null);
                  var map__7705__$1 = (!(map__7705 == null) ? map__7705.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7705.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7705) : map__7705;
                  var optional = cljs.core.get.call(null, map__7705__$1, new cljs.core.Keyword(null, "optional", "optional", 2053951509));
                  var value = cljs.core.nth.call(null, vec__7702, 2, null);
                  var valid_QMARK_ = malli.core._validator.call(null, value);
                  var default$ = cljs.core.boolean$.call(null, optional);
                  return function(valid_QMARK_, default$, vec__7702, key, map__7705, map__7705__$1, optional, value, keyset, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
                    return function(m) {
                      var temp__5718__auto__ = cljs.core.find.call(null, m, key);
                      if (cljs.core.truth_(temp__5718__auto__)) {
                        var map_entry = temp__5718__auto__;
                        return valid_QMARK_.call(null, cljs.core.val.call(null, map_entry));
                      } else {
                        return default$;
                      }
                    };
                  }(valid_QMARK_, default$, vec__7702, key, map__7705, map__7705__$1, optional, value, keyset, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
                };
              }(keyset, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed), malli.core._children.call(null, this$__$1));
              if (cljs.core.truth_(self__.closed)) {
                return cljs.core.conj.call(null, G__7700, function(G__7700, keyset, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
                  return function(m) {
                    return cljs.core.reduce.call(null, function(G__7700, keyset, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
                      return function(acc, k) {
                        if (cljs.core.contains_QMARK_.call(null, keyset, k)) {
                          return acc;
                        } else {
                          return cljs.core.reduced.call(null, false);
                        }
                      };
                    }(G__7700, keyset, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed), true, cljs.core.keys.call(null, m));
                  };
                }(G__7700, keyset, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed));
              } else {
                return G__7700;
              }
            }();
            var validate = malli.impl.util._every_pred.call(null, validators);
            return function(keyset, validators, validate, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
              return function(m) {
                var and__4036__auto__ = cljs.core.map_QMARK_.call(null, m);
                if (and__4036__auto__) {
                  return validate.call(null, m);
                } else {
                  return and__4036__auto__;
                }
              };
            }(keyset, validators, validate, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
          };
        }(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
        malli.core.t_malli$core7697.prototype.malli$core$Schema$_options$arity$1 = function(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.options;
          };
        }(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
        malli.core.t_malli$core7697.prototype.malli$core$Schema$_transformer$arity$4 = function(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
          return function(this$, transformer, method, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            var this_transformer = malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1);
            var __GT_children = cljs.core.reduce.call(null, function(this_transformer, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
              return function(acc, p__7707) {
                var vec__7708 = p__7707;
                var k = cljs.core.nth.call(null, vec__7708, 0, null);
                var s = cljs.core.nth.call(null, vec__7708, 1, null);
                var t = malli.core._transformer.call(null, s, transformer, method, options__$1);
                var G__7711 = acc;
                if (cljs.core.truth_(t)) {
                  return cljs.core.conj.call(null, G__7711, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, t], null));
                } else {
                  return G__7711;
                }
              };
            }(this_transformer, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed), cljs.core.PersistentVector.EMPTY, malli.core._entries.call(null, this$__$1));
            var apply__GT_children = cljs.core.seq.call(null, __GT_children) ? malli.core._map_transformer.call(null, __GT_children) : null;
            var apply__GT_children__$1 = malli.core._guard.call(null, cljs.core.map_QMARK_, apply__GT_children);
            return malli.core._intercepting.call(null, this_transformer, apply__GT_children__$1);
          };
        }(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
        malli.core.t_malli$core7697.prototype.malli$core$Schema$_walk$arity$4 = function(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
          return function(this$, walker, path, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._walk_entries.call(null, this$__$1, walker, path, options__$1);
          };
        }(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
        malli.core.t_malli$core7697.prototype.malli$core$Schema$_parser$arity$1 = function(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
          return function(this$) {
            var self__ = this;
            var this$__$1 = this;
            return self__.__GT_parser.call(null, this$__$1, malli.core._parser);
          };
        }(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
        malli.core.t_malli$core7697.prototype.malli$core$Schema$_properties$arity$1 = function(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.properties;
          };
        }(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
        malli.core.t_malli$core7697.prototype.malli$core$Schema$_children$arity$1 = function(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return malli.core._entry_children.call(null, self__.entry_parser);
          };
        }(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
        malli.core.t_malli$core7697.prototype.malli$core$Schema$_form$arity$1 = function(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.deref.call(null, self__.form);
          };
        }(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
        malli.core.t_malli$core7697.prototype.malli$core$Schema$_explainer$arity$2 = function(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
          return function(this$, path) {
            var self__ = this;
            var this$__$1 = this;
            var keyset = malli.core._entry_keyset.call(null, malli.core._entry_parser.call(null, this$__$1));
            var explainers = function() {
              var G__7712 = malli.core._vmap.call(null, function(keyset, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
                return function(p__7713) {
                  var vec__7714 = p__7713;
                  var key = cljs.core.nth.call(null, vec__7714, 0, null);
                  var map__7717 = cljs.core.nth.call(null, vec__7714, 1, null);
                  var map__7717__$1 = (!(map__7717 == null) ? map__7717.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7717.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7717) : map__7717;
                  var optional = cljs.core.get.call(null, map__7717__$1, new cljs.core.Keyword(null, "optional", "optional", 2053951509));
                  var schema = cljs.core.nth.call(null, vec__7714, 2, null);
                  var explainer = malli.core._explainer.call(null, schema, cljs.core.conj.call(null, path, key));
                  return function(explainer, vec__7714, key, map__7717, map__7717__$1, optional, schema, keyset, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
                    return function(x, in$, acc) {
                      var temp__5718__auto__ = cljs.core.find.call(null, x, key);
                      if (cljs.core.truth_(temp__5718__auto__)) {
                        var e = temp__5718__auto__;
                        return explainer.call(null, cljs.core.val.call(null, e), cljs.core.conj.call(null, in$, key), acc);
                      } else {
                        if (cljs.core.not.call(null, optional)) {
                          return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, cljs.core.conj.call(null, path, key), cljs.core.conj.call(null, in$, key), this$__$1, null, new cljs.core.Keyword("malli.core", "missing-key", "malli.core/missing-key", 1439107666)));
                        } else {
                          return acc;
                        }
                      }
                    };
                  }(explainer, vec__7714, key, map__7717, map__7717__$1, optional, schema, keyset, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
                };
              }(keyset, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed), malli.core._children.call(null, this$__$1));
              if (cljs.core.truth_(self__.closed)) {
                return cljs.core.conj.call(null, G__7712, function(G__7712, keyset, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
                  return function(x, in$, acc) {
                    return cljs.core.reduce.call(null, function(G__7712, keyset, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
                      return function(acc__$1, k) {
                        if (cljs.core.contains_QMARK_.call(null, keyset, k)) {
                          return acc__$1;
                        } else {
                          return cljs.core.conj.call(null, acc__$1, malli.impl.util._error.call(null, cljs.core.conj.call(null, path, k), cljs.core.conj.call(null, in$, k), this$__$1, null, new cljs.core.Keyword("malli.core", "extra-key", "malli.core/extra-key", 574816512)));
                        }
                      };
                    }(G__7712, keyset, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed), acc, cljs.core.keys.call(null, x));
                  };
                }(G__7712, keyset, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed));
              } else {
                return G__7712;
              }
            }();
            return function(keyset, explainers, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
              return function(x, in$, acc) {
                if (!cljs.core.map_QMARK_.call(null, x)) {
                  return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x, new cljs.core.Keyword("malli.core", "invalid-type", "malli.core/invalid-type", -1367388450)));
                } else {
                  return cljs.core.reduce.call(null, function(keyset, explainers, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
                    return function(acc__$1, explainer) {
                      return explainer.call(null, x, in$, acc__$1);
                    };
                  }(keyset, explainers, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed), acc, explainers);
                }
              };
            }(keyset, explainers, this$__$1, entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
          };
        }(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
        malli.core.t_malli$core7697.prototype.malli$core$Schema$_unparser$arity$1 = function(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
          return function(this$) {
            var self__ = this;
            var this$__$1 = this;
            return self__.__GT_parser.call(null, this$__$1, malli.core._unparser);
          };
        }(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
        malli.core.t_malli$core7697.prototype.malli$core$Schema$_parent$arity$1 = function(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.parent;
          };
        }(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
        malli.core.t_malli$core7697.prototype.malli$core$EntrySchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7697.prototype.malli$core$EntrySchema$_entries$arity$1 = function(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return malli.core._entry_entries.call(null, self__.entry_parser);
          };
        }(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
        malli.core.t_malli$core7697.prototype.malli$core$EntrySchema$_entry_parser$arity$1 = function(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.entry_parser;
          };
        }(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
        malli.core.t_malli$core7697.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7697.prototype.malli$core$Cached$_cache$arity$1 = function(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.cache;
          };
        }(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
        malli.core.t_malli$core7697.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7697.prototype.malli$core$LensSchema$_keep$arity$1 = function(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return true;
          };
        }(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
        malli.core.t_malli$core7697.prototype.malli$core$LensSchema$_get$arity$3 = function(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
          return function(this$, key, default$) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._get_entries.call(null, this$__$1, key, default$);
          };
        }(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
        malli.core.t_malli$core7697.prototype.malli$core$LensSchema$_set$arity$3 = function(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
          return function(this$, key, value) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._set_entries.call(null, this$__$1, key, value);
          };
        }(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
        malli.core.t_malli$core7697.getBasis = function(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
          return function() {
            return new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "closed", "closed", 720856168, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "entry-parser", "entry-parser", -1698599125, 
            null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core7684", "malli.core/t_malli$core7684", 1801692980, null)], null)), new cljs.core.Symbol(null, "p__7687", "p__7687", -732208585, null), new cljs.core.Symbol(null, "map__7688", "map__7688", 97418871, null), new cljs.core.Symbol(null, "-\x3eparser", "-\x3eparser", 
            1105019639, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "meta7685", "meta7685", -387795558, null), new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.Symbol(null, "meta7698", "meta7698", 1543259588, null)], null);
          };
        }(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
        malli.core.t_malli$core7697.cljs$lang$type = true;
        malli.core.t_malli$core7697.cljs$lang$ctorStr = "malli.core/t_malli$core7697";
        malli.core.t_malli$core7697.cljs$lang$ctorPrWriter = function(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
          return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
            return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7697");
          };
        }(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
        malli.core.__GT_t_malli$core7697 = function(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed) {
          return function malli$core$__GT_t_malli$core7697(form__$1, options__$1, properties__$1, closed__$1, children__$1, entry_parser__$1, parent__$2, p__7687__$1, map__7688__$2, __GT_parser__$1, cache__$1, meta7685__$1, opts__$1, meta7698) {
            return new malli.core.t_malli$core7697(form__$1, options__$1, properties__$1, closed__$1, children__$1, entry_parser__$1, parent__$2, p__7687__$1, map__7688__$2, __GT_parser__$1, cache__$1, meta7685__$1, opts__$1, meta7698);
          };
        }(entry_parser, form, cache, __GT_parser, parent__$1, map__7688, map__7688__$1, properties, closed);
      }
      return new malli.core.t_malli$core7697(form, options, properties, closed, children, entry_parser, parent__$1, p__7687, map__7688__$1, __GT_parser, cache, self__.meta7685, self__.opts, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core7684.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.Symbol(null, "meta7685", "meta7685", -387795558, null)], null);
    };
    malli.core.t_malli$core7684.cljs$lang$type = true;
    malli.core.t_malli$core7684.cljs$lang$ctorStr = "malli.core/t_malli$core7684";
    malli.core.t_malli$core7684.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
      return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7684");
    };
    malli.core.__GT_t_malli$core7684 = function malli$core$__GT_t_malli$core7684(opts__$1, meta7685) {
      return new malli.core.t_malli$core7684(opts__$1, meta7685);
    };
  }
  return new malli.core.t_malli$core7684(opts, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._map_schema.cljs$lang$maxFixedArity = 1;
malli.core._map_of_schema = function malli$core$_map_of_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7731 !== "undefined") {
  } else {
    malli.core.t_malli$core7731 = function(meta7732) {
      this.meta7732 = meta7732;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7731.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7733, meta7732__$1) {
      var self__ = this;
      var _7733__$1 = this;
      return new malli.core.t_malli$core7731(meta7732__$1);
    };
    malli.core.t_malli$core7731.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7733) {
      var self__ = this;
      var _7733__$1 = this;
      return self__.meta7732;
    };
    malli.core.t_malli$core7731.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7731.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._into_schema.call(null, parent__$1, (new cljs.core.Keyword(null, "properties", "properties", 685819552)).cljs$core$IFn$_invoke$arity$1(ast), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [malli.core.from_ast.call(null, (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(ast), options), malli.core.from_ast.call(null, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(ast), 
      options)], null), options);
    };
    malli.core.t_malli$core7731.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7731.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "map-of", "map-of", 1189682355);
    };
    malli.core.t_malli$core7731.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core7731.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core7731.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core7731.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, p__7734, children, options) {
      var self__ = this;
      var map__7735 = p__7734;
      var map__7735__$1 = (!(map__7735 == null) ? map__7735.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7735.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7735) : map__7735;
      var properties = map__7735__$1;
      var min = cljs.core.get.call(null, map__7735__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
      var max = cljs.core.get.call(null, map__7735__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "map-of", "map-of", 1189682355), properties, children, 2, 2);
      var vec__7737 = malli.core._vmap.call(null, function(parent__$1, map__7735, map__7735__$1, properties, min, max) {
        return function(p1__7720_SHARP_) {
          return malli.core.schema.call(null, p1__7720_SHARP_, options);
        };
      }(parent__$1, map__7735, map__7735__$1, properties, min, max), children);
      var key_schema = cljs.core.nth.call(null, vec__7737, 0, null);
      var value_schema = cljs.core.nth.call(null, vec__7737, 1, null);
      var children__$1 = vec__7737;
      var form = new cljs.core.Delay(function(vec__7737, key_schema, value_schema, children__$1, parent__$1, map__7735, map__7735__$1, properties, min, max) {
        return function() {
          return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
        };
      }(vec__7737, key_schema, value_schema, children__$1, parent__$1, map__7735, map__7735__$1, properties, min, max), null);
      var cache = malli.core._create_cache.call(null, options);
      var validate_limits = malli.core._validate_limits.call(null, min, max);
      var __GT_parser = function(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, parent__$1, map__7735, map__7735__$1, properties, min, max) {
        return function(f) {
          var key_parser = f.call(null, key_schema);
          var value_parser = f.call(null, value_schema);
          return function(key_parser, value_parser, vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, parent__$1, map__7735, map__7735__$1, properties, min, max) {
            return function(x) {
              if (cljs.core.map_QMARK_.call(null, x)) {
                return cljs.core.reduce_kv.call(null, function(key_parser, value_parser, vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, parent__$1, map__7735, map__7735__$1, properties, min, max) {
                  return function(acc, k, v) {
                    var k_STAR_ = key_parser.call(null, k);
                    var v_STAR_ = value_parser.call(null, v);
                    if (malli.impl.util._invalid_QMARK_.call(null, k_STAR_) || malli.impl.util._invalid_QMARK_.call(null, v_STAR_)) {
                      return cljs.core.reduced.call(null, new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900));
                    } else {
                      return cljs.core.assoc.call(null, acc, k_STAR_, v_STAR_);
                    }
                  };
                }(key_parser, value_parser, vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, parent__$1, map__7735, map__7735__$1, properties, min, max), cljs.core.empty.call(null, x), x);
              } else {
                return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
              }
            };
          }(key_parser, value_parser, vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, parent__$1, map__7735, map__7735__$1, properties, min, max);
        };
      }(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, parent__$1, map__7735, map__7735__$1, properties, min, max);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7740 !== "undefined") {
      } else {
        malli.core.t_malli$core7740 = function(form, map__7735, options, p__7734, properties, meta7732, children, min, value_schema, parent, key_schema, vec__7737, __GT_parser, cache, validate_limits, max, meta7741) {
          this.form = form;
          this.map__7735 = map__7735;
          this.options = options;
          this.p__7734 = p__7734;
          this.properties = properties;
          this.meta7732 = meta7732;
          this.children = children;
          this.min = min;
          this.value_schema = value_schema;
          this.parent = parent;
          this.key_schema = key_schema;
          this.vec__7737 = vec__7737;
          this.__GT_parser = __GT_parser;
          this.cache = cache;
          this.validate_limits = validate_limits;
          this.max = max;
          this.meta7741 = meta7741;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core7740.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
          return function(_7742, meta7741__$1) {
            var self__ = this;
            var _7742__$1 = this;
            return new malli.core.t_malli$core7740(self__.form, self__.map__7735, self__.options, self__.p__7734, self__.properties, self__.meta7732, self__.children, self__.min, self__.value_schema, self__.parent, self__.key_schema, self__.vec__7737, self__.__GT_parser, self__.cache, self__.validate_limits, self__.max, meta7741__$1);
          };
        }(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max);
        malli.core.t_malli$core7740.prototype.cljs$core$IMeta$_meta$arity$1 = function(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
          return function(_7742) {
            var self__ = this;
            var _7742__$1 = this;
            return self__.meta7741;
          };
        }(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max);
        malli.core.t_malli$core7740.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7740.prototype.malli$core$AST$_to_ast$arity$2 = function(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
          return function(this$, _) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._ast.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "map-of", "map-of", 1189682355), new cljs.core.Keyword(null, "key", "key", -1516042587), malli.core.ast.call(null, self__.key_schema), new cljs.core.Keyword(null, "value", "value", 305978217), malli.core.ast.call(null, self__.value_schema)], null), self__.properties, self__.options);
          };
        }(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max);
        malli.core.t_malli$core7740.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7740.prototype.malli$core$Schema$_validator$arity$1 = function(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            var key_valid_QMARK_ = malli.core._validator.call(null, self__.key_schema);
            var value_valid_QMARK_ = malli.core._validator.call(null, self__.value_schema);
            return function(key_valid_QMARK_, value_valid_QMARK_, ___$1, vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
              return function(m) {
                var and__4036__auto__ = cljs.core.map_QMARK_.call(null, m);
                if (and__4036__auto__) {
                  var and__4036__auto____$1 = self__.validate_limits.call(null, m);
                  if (cljs.core.truth_(and__4036__auto____$1)) {
                    return cljs.core.reduce_kv.call(null, function(and__4036__auto____$1, and__4036__auto__, key_valid_QMARK_, value_valid_QMARK_, ___$1, vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
                      return function(___$2, key, value) {
                        var or__4047__auto__ = function() {
                          var and__4036__auto____$2 = key_valid_QMARK_.call(null, key);
                          if (cljs.core.truth_(and__4036__auto____$2)) {
                            return value_valid_QMARK_.call(null, value);
                          } else {
                            return and__4036__auto____$2;
                          }
                        }();
                        if (cljs.core.truth_(or__4047__auto__)) {
                          return or__4047__auto__;
                        } else {
                          return cljs.core.reduced.call(null, false);
                        }
                      };
                    }(and__4036__auto____$1, and__4036__auto__, key_valid_QMARK_, value_valid_QMARK_, ___$1, vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max), true, m);
                  } else {
                    return and__4036__auto____$1;
                  }
                } else {
                  return and__4036__auto__;
                }
              };
            }(key_valid_QMARK_, value_valid_QMARK_, ___$1, vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max);
          };
        }(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max);
        malli.core.t_malli$core7740.prototype.malli$core$Schema$_options$arity$1 = function(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.options;
          };
        }(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max);
        malli.core.t_malli$core7740.prototype.malli$core$Schema$_transformer$arity$4 = function(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
          return function(this$, transformer, method, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            var this_transformer = malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1);
            var __GT_key = malli.core._transformer.call(null, self__.key_schema, transformer, method, options__$1);
            var __GT_child = malli.core._transformer.call(null, self__.value_schema, transformer, method, options__$1);
            var __GT_key_child = cljs.core.truth_(function() {
              var and__4036__auto__ = __GT_key;
              if (cljs.core.truth_(and__4036__auto__)) {
                return __GT_child;
              } else {
                return and__4036__auto__;
              }
            }()) ? function(this_transformer, __GT_key, __GT_child, this$__$1, vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
              return function(p1__7721_SHARP_, p2__7722_SHARP_, p3__7723_SHARP_) {
                return cljs.core.assoc.call(null, p1__7721_SHARP_, __GT_key.call(null, p2__7722_SHARP_), __GT_child.call(null, p3__7723_SHARP_));
              };
            }(this_transformer, __GT_key, __GT_child, this$__$1, vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) : cljs.core.truth_(__GT_key) ? function(this_transformer, __GT_key, __GT_child, this$__$1, vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
              return function(p1__7724_SHARP_, p2__7725_SHARP_, p3__7726_SHARP_) {
                return cljs.core.assoc.call(null, p1__7724_SHARP_, __GT_key.call(null, p2__7725_SHARP_), p3__7726_SHARP_);
              };
            }(this_transformer, __GT_key, __GT_child, this$__$1, vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) : cljs.core.truth_(__GT_child) ? function(this_transformer, __GT_key, __GT_child, this$__$1, vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
              return function(p1__7727_SHARP_, p2__7728_SHARP_, p3__7729_SHARP_) {
                return cljs.core.assoc.call(null, p1__7727_SHARP_, p2__7728_SHARP_, __GT_child.call(null, p3__7729_SHARP_));
              };
            }(this_transformer, __GT_key, __GT_child, this$__$1, vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) : null;
            var apply__GT_key_child = cljs.core.truth_(__GT_key_child) ? function(this_transformer, __GT_key, __GT_child, __GT_key_child, this$__$1, vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
              return function(p1__7730_SHARP_) {
                return cljs.core.reduce_kv.call(null, __GT_key_child, cljs.core.empty.call(null, p1__7730_SHARP_), p1__7730_SHARP_);
              };
            }(this_transformer, __GT_key, __GT_child, __GT_key_child, this$__$1, vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) : null;
            var apply__GT_key_child__$1 = malli.core._guard.call(null, cljs.core.map_QMARK_, apply__GT_key_child);
            return malli.core._intercepting.call(null, this_transformer, apply__GT_key_child__$1);
          };
        }(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max);
        malli.core.t_malli$core7740.prototype.malli$core$Schema$_walk$arity$4 = function(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
          return function(this$, walker, path, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._walk_indexed.call(null, this$__$1, walker, path, options__$1);
          };
        }(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max);
        malli.core.t_malli$core7740.prototype.malli$core$Schema$_parser$arity$1 = function(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.__GT_parser.call(null, malli.core._parser);
          };
        }(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max);
        malli.core.t_malli$core7740.prototype.malli$core$Schema$_properties$arity$1 = function(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.properties;
          };
        }(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max);
        malli.core.t_malli$core7740.prototype.malli$core$Schema$_children$arity$1 = function(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.children;
          };
        }(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max);
        malli.core.t_malli$core7740.prototype.malli$core$Schema$_form$arity$1 = function(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.deref.call(null, self__.form);
          };
        }(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max);
        malli.core.t_malli$core7740.prototype.malli$core$Schema$_explainer$arity$2 = function(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
          return function(this$, path) {
            var self__ = this;
            var this$__$1 = this;
            var key_explainer = malli.core._explainer.call(null, self__.key_schema, cljs.core.conj.call(null, path, 0));
            var value_explainer = malli.core._explainer.call(null, self__.value_schema, cljs.core.conj.call(null, path, 1));
            return function(key_explainer, value_explainer, this$__$1, vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
              return function malli$core$_map_of_schema_$_explain(m, in$, acc) {
                if (!cljs.core.map_QMARK_.call(null, m)) {
                  return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, m, new cljs.core.Keyword("malli.core", "invalid-type", "malli.core/invalid-type", -1367388450)));
                } else {
                  if (cljs.core.not.call(null, self__.validate_limits.call(null, m))) {
                    return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, m, new cljs.core.Keyword("malli.core", "limits", "malli.core/limits", -1343466863)));
                  } else {
                    return cljs.core.reduce_kv.call(null, function(key_explainer, value_explainer, this$__$1, vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
                      return function(acc__$1, key, value) {
                        var in$__$1 = cljs.core.conj.call(null, in$, key);
                        return value_explainer.call(null, value, in$__$1, key_explainer.call(null, key, in$__$1, acc__$1));
                      };
                    }(key_explainer, value_explainer, this$__$1, vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max), acc, m);
                  }
                }
              };
            }(key_explainer, value_explainer, this$__$1, vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max);
          };
        }(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max);
        malli.core.t_malli$core7740.prototype.malli$core$Schema$_unparser$arity$1 = function(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.__GT_parser.call(null, malli.core._unparser);
          };
        }(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max);
        malli.core.t_malli$core7740.prototype.malli$core$Schema$_parent$arity$1 = function(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.parent;
          };
        }(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max);
        malli.core.t_malli$core7740.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7740.prototype.malli$core$Cached$_cache$arity$1 = function(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.cache;
          };
        }(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max);
        malli.core.t_malli$core7740.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7740.prototype.malli$core$LensSchema$_keep$arity$1 = function(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return null;
          };
        }(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max);
        malli.core.t_malli$core7740.prototype.malli$core$LensSchema$_get$arity$3 = function(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
          return function(_, key, default$) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.get.call(null, self__.children, key, default$);
          };
        }(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max);
        malli.core.t_malli$core7740.prototype.malli$core$LensSchema$_set$arity$3 = function(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
          return function(this$, key, value) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._set_assoc_children.call(null, this$__$1, key, value);
          };
        }(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max);
        malli.core.t_malli$core7740.getBasis = function(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
          return function() {
            return new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "map__7735", "map__7735", 2001503776, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "p__7734", "p__7734", -1065680538, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "meta7732", "meta7732", 256707560, 
            null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "min", "min", 2085523049, null), new cljs.core.Symbol(null, "value-schema", "value-schema", -1754883189, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core7731", "malli.core/t_malli$core7731", -66428258, 
            null)], null)), new cljs.core.Symbol(null, "key-schema", "key-schema", 543870801, null), new cljs.core.Symbol(null, "vec__7737", "vec__7737", 1106133015, null), new cljs.core.Symbol(null, "-\x3eparser", "-\x3eparser", 1105019639, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "validate-limits", "validate-limits", -2141569735, null), new cljs.core.Symbol(null, "max", "max", 1701898075, null), new cljs.core.Symbol(null, "meta7741", "meta7741", 
            -693311865, null)], null);
          };
        }(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max);
        malli.core.t_malli$core7740.cljs$lang$type = true;
        malli.core.t_malli$core7740.cljs$lang$ctorStr = "malli.core/t_malli$core7740";
        malli.core.t_malli$core7740.cljs$lang$ctorPrWriter = function(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
          return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
            return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7740");
          };
        }(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max);
        malli.core.__GT_t_malli$core7740 = function(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max) {
          return function malli$core$_map_of_schema_$___GT_t_malli$core7740(form__$1, map__7735__$2, options__$1, p__7734__$1, properties__$1, meta7732__$1, children__$2, min__$1, value_schema__$1, parent__$2, key_schema__$1, vec__7737__$1, __GT_parser__$1, cache__$1, validate_limits__$1, max__$1, meta7741) {
            return new malli.core.t_malli$core7740(form__$1, map__7735__$2, options__$1, p__7734__$1, properties__$1, meta7732__$1, children__$2, min__$1, value_schema__$1, parent__$2, key_schema__$1, vec__7737__$1, __GT_parser__$1, cache__$1, validate_limits__$1, max__$1, meta7741);
          };
        }(vec__7737, key_schema, value_schema, children__$1, form, cache, validate_limits, __GT_parser, parent__$1, map__7735, map__7735__$1, properties, min, max);
      }
      return new malli.core.t_malli$core7740(form, map__7735__$1, options, p__7734, properties, self__.meta7732, children__$1, min, value_schema, parent__$1, key_schema, vec__7737, __GT_parser, cache, validate_limits, max, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core7731.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta7732", "meta7732", 256707560, null)], null);
    };
    malli.core.t_malli$core7731.cljs$lang$type = true;
    malli.core.t_malli$core7731.cljs$lang$ctorStr = "malli.core/t_malli$core7731";
    malli.core.t_malli$core7731.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
      return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7731");
    };
    malli.core.__GT_t_malli$core7731 = function malli$core$_map_of_schema_$___GT_t_malli$core7731(meta7732) {
      return new malli.core.t_malli$core7731(meta7732);
    };
  }
  return new malli.core.t_malli$core7731(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._collection_schema = function malli$core$_collection_schema(_QMARK_props) {
  var props_STAR_ = cljs.core.atom.call(null, cljs.core.map_QMARK_.call(null, _QMARK_props) ? _QMARK_props : null);
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7746 !== "undefined") {
  } else {
    malli.core.t_malli$core7746 = function(_QMARK_props, props_STAR_, meta7747) {
      this._QMARK_props = _QMARK_props;
      this.props_STAR_ = props_STAR_;
      this.meta7747 = meta7747;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7746.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(props_STAR_) {
      return function(_7748, meta7747__$1) {
        var self__ = this;
        var _7748__$1 = this;
        return new malli.core.t_malli$core7746(self__._QMARK_props, self__.props_STAR_, meta7747__$1);
      };
    }(props_STAR_);
    malli.core.t_malli$core7746.prototype.cljs$core$IMeta$_meta$arity$1 = function(props_STAR_) {
      return function(_7748) {
        var self__ = this;
        var _7748__$1 = this;
        return self__.meta7747;
      };
    }(props_STAR_);
    malli.core.t_malli$core7746.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7746.prototype.malli$core$AST$_from_ast$arity$3 = function(props_STAR_) {
      return function(parent, ast, options) {
        var self__ = this;
        var parent__$1 = this;
        return malli.core._from_child_ast.call(null, parent__$1, ast, options);
      };
    }(props_STAR_);
    malli.core.t_malli$core7746.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7746.prototype.malli$core$IntoSchema$_type$arity$1 = function(props_STAR_) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.props_STAR_));
      };
    }(props_STAR_);
    malli.core.t_malli$core7746.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(props_STAR_) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return (new cljs.core.Keyword(null, "type-properties", "type-properties", -1728352126)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.props_STAR_));
      };
    }(props_STAR_);
    malli.core.t_malli$core7746.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(props_STAR_) {
      return function(_, ___$1) {
        var self__ = this;
        var ___$2 = this;
        return null;
      };
    }(props_STAR_);
    malli.core.t_malli$core7746.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(props_STAR_) {
      return function(_, ___$1) {
        var self__ = this;
        var ___$2 = this;
        return null;
      };
    }(props_STAR_);
    malli.core.t_malli$core7746.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(props_STAR_) {
      return function(parent, p__7749, children, options) {
        var self__ = this;
        var map__7750 = p__7749;
        var map__7750__$1 = (!(map__7750 == null) ? map__7750.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7750.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7750) : map__7750;
        var properties = map__7750__$1;
        var min = cljs.core.get.call(null, map__7750__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
        var max = cljs.core.get.call(null, map__7750__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
        var parent__$1 = this;
        if (cljs.core.fn_QMARK_.call(null, self__._QMARK_props)) {
          return malli.core._into_schema.call(null, malli.core._collection_schema.call(null, self__._QMARK_props.call(null, properties, children)), properties, children, options);
        } else {
          var map__7752 = self__._QMARK_props;
          var map__7752__$1 = (!(map__7752 == null) ? map__7752.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7752.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7752) : map__7752;
          var fpred = cljs.core.get.call(null, map__7752__$1, new cljs.core.Keyword(null, "pred", "pred", 1927423397));
          var fempty = cljs.core.get.call(null, map__7752__$1, new cljs.core.Keyword(null, "empty", "empty", 767870958));
          var fin = cljs.core.get.call(null, map__7752__$1, new cljs.core.Keyword(null, "in", "in", -1531184865), function(map__7752, map__7752__$1, fpred, fempty, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
            return function(i, _) {
              return i;
            };
          }(map__7752, map__7752__$1, fpred, fempty, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_));
          var type = cljs.core.get.call(null, map__7752__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
          var parse = cljs.core.get.call(null, map__7752__$1, new cljs.core.Keyword(null, "parse", "parse", -1162164619));
          var unparse = cljs.core.get.call(null, map__7752__$1, new cljs.core.Keyword(null, "unparse", "unparse", -1504915552));
          cljs.core.reset_BANG_.call(null, self__.props_STAR_, self__._QMARK_props);
          malli.core._check_children_BANG_.call(null, type, properties, children, 1, 1);
          var vec__7754 = malli.core._vmap.call(null, function(map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
            return function(p1__7743_SHARP_) {
              return malli.core.schema.call(null, p1__7743_SHARP_, options);
            };
          }(map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_), children);
          var schema = cljs.core.nth.call(null, vec__7754, 0, null);
          var children__$1 = vec__7754;
          var form = new cljs.core.Delay(function(vec__7754, schema, children__$1, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
            return function() {
              return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
            };
          }(vec__7754, schema, children__$1, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_), null);
          var cache = malli.core._create_cache.call(null, options);
          var validate_limits = malli.core._validate_limits.call(null, min, max);
          var __GT_parser = function(vec__7754, schema, children__$1, form, cache, validate_limits, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
            return function(f, g) {
              var child_parser = f.call(null, schema);
              return function(child_parser, vec__7754, schema, children__$1, form, cache, validate_limits, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
                return function(x) {
                  if (cljs.core.not.call(null, fpred.call(null, x))) {
                    return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
                  } else {
                    if (cljs.core.not.call(null, validate_limits.call(null, x))) {
                      return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
                    } else {
                      var x_SINGLEQUOTE_ = cljs.core.reduce.call(null, function(child_parser, vec__7754, schema, children__$1, form, cache, validate_limits, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
                        return function(acc, v) {
                          var v_SINGLEQUOTE_ = child_parser.call(null, v);
                          if (malli.impl.util._invalid_QMARK_.call(null, v_SINGLEQUOTE_)) {
                            return cljs.core.reduced.call(null, new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900));
                          } else {
                            return cljs.core.conj.call(null, acc, v_SINGLEQUOTE_);
                          }
                        };
                      }(child_parser, vec__7754, schema, children__$1, form, cache, validate_limits, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_), cljs.core.PersistentVector.EMPTY, x);
                      if (malli.impl.util._invalid_QMARK_.call(null, x_SINGLEQUOTE_)) {
                        return x_SINGLEQUOTE_;
                      } else {
                        if (cljs.core.truth_(g)) {
                          return g.call(null, x_SINGLEQUOTE_);
                        } else {
                          if (cljs.core.truth_(fempty)) {
                            return cljs.core.into.call(null, fempty, x_SINGLEQUOTE_);
                          } else {
                            return x_SINGLEQUOTE_;
                          }
                        }
                      }
                    }
                  }
                };
              }(child_parser, vec__7754, schema, children__$1, form, cache, validate_limits, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
            };
          }(vec__7754, schema, children__$1, form, cache, validate_limits, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
          if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7757 !== "undefined") {
          } else {
            malli.core.t_malli$core7757 = function(form, options, map__7750, fpred, fin, vec__7754, properties, unparse, schema, children, min, parent, props_STAR_, type, __GT_parser, fempty, cache, validate_limits, p__7749, meta7747, _QMARK_props, map__7752, max, parse, meta7758) {
              this.form = form;
              this.options = options;
              this.map__7750 = map__7750;
              this.fpred = fpred;
              this.fin = fin;
              this.vec__7754 = vec__7754;
              this.properties = properties;
              this.unparse = unparse;
              this.schema = schema;
              this.children = children;
              this.min = min;
              this.parent = parent;
              this.props_STAR_ = props_STAR_;
              this.type = type;
              this.__GT_parser = __GT_parser;
              this.fempty = fempty;
              this.cache = cache;
              this.validate_limits = validate_limits;
              this.p__7749 = p__7749;
              this.meta7747 = meta7747;
              this._QMARK_props = _QMARK_props;
              this.map__7752 = map__7752;
              this.max = max;
              this.parse = parse;
              this.meta7758 = meta7758;
              this.cljs$lang$protocol_mask$partition0$ = 393216;
              this.cljs$lang$protocol_mask$partition1$ = 0;
            };
            malli.core.t_malli$core7757.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
              return function(_7759, meta7758__$1) {
                var self__ = this;
                var _7759__$1 = this;
                return new malli.core.t_malli$core7757(self__.form, self__.options, self__.map__7750, self__.fpred, self__.fin, self__.vec__7754, self__.properties, self__.unparse, self__.schema, self__.children, self__.min, self__.parent, self__.props_STAR_, self__.type, self__.__GT_parser, self__.fempty, self__.cache, self__.validate_limits, self__.p__7749, self__.meta7747, self__._QMARK_props, self__.map__7752, self__.max, self__.parse, meta7758__$1);
              };
            }(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
            malli.core.t_malli$core7757.prototype.cljs$core$IMeta$_meta$arity$1 = function(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
              return function(_7759) {
                var self__ = this;
                var _7759__$1 = this;
                return self__.meta7758;
              };
            }(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
            malli.core.t_malli$core7757.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
            malli.core.t_malli$core7757.prototype.malli$core$AST$_to_ast$arity$2 = function(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
              return function(this$, _) {
                var self__ = this;
                var this$__$1 = this;
                return malli.core._to_child_ast.call(null, this$__$1);
              };
            }(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
            malli.core.t_malli$core7757.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
            malli.core.t_malli$core7757.prototype.malli$core$Schema$_validator$arity$1 = function(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                var validator = malli.core._validator.call(null, self__.schema);
                return function(validator, ___$1, vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
                  return function(x) {
                    var and__4036__auto__ = self__.fpred.call(null, x);
                    if (cljs.core.truth_(and__4036__auto__)) {
                      var and__4036__auto____$1 = self__.validate_limits.call(null, x);
                      if (cljs.core.truth_(and__4036__auto____$1)) {
                        return cljs.core.reduce.call(null, function(and__4036__auto____$1, and__4036__auto__, validator, ___$1, vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
                          return function(acc, v) {
                            if (cljs.core.truth_(validator.call(null, v))) {
                              return acc;
                            } else {
                              return cljs.core.reduced.call(null, false);
                            }
                          };
                        }(and__4036__auto____$1, and__4036__auto__, validator, ___$1, vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_), true, x);
                      } else {
                        return and__4036__auto____$1;
                      }
                    } else {
                      return and__4036__auto__;
                    }
                  };
                }(validator, ___$1, vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
              };
            }(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
            malli.core.t_malli$core7757.prototype.malli$core$Schema$_options$arity$1 = function(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return self__.options;
              };
            }(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
            malli.core.t_malli$core7757.prototype.malli$core$Schema$_transformer$arity$4 = function(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
              return function(this$, transformer, method, options__$1) {
                var self__ = this;
                var this$__$1 = this;
                var collection_QMARK_ = function(this$__$1, vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
                  return function(p1__7744_SHARP_) {
                    return cljs.core.sequential_QMARK_.call(null, p1__7744_SHARP_) || cljs.core.set_QMARK_.call(null, p1__7744_SHARP_);
                  };
                }(this$__$1, vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
                var this_transformer = malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1);
                var child_transformer = malli.core._transformer.call(null, self__.schema, transformer, method, options__$1);
                var __GT_child = cljs.core.truth_(child_transformer) ? cljs.core.truth_(self__.fempty) ? malli.core._collection_transformer.call(null, child_transformer, self__.fempty) : function(collection_QMARK_, this_transformer, child_transformer, this$__$1, vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
                  return function(p1__7745_SHARP_) {
                    return malli.core._vmap.call(null, child_transformer, p1__7745_SHARP_);
                  };
                }(collection_QMARK_, this_transformer, child_transformer, this$__$1, vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) : null;
                var __GT_child__$1 = malli.core._guard.call(null, collection_QMARK_, __GT_child);
                return malli.core._intercepting.call(null, this_transformer, __GT_child__$1);
              };
            }(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
            malli.core.t_malli$core7757.prototype.malli$core$Schema$_walk$arity$4 = function(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
              return function(this$, walker, path, options__$1) {
                var self__ = this;
                var this$__$1 = this;
                if (cljs.core.truth_(malli.core._accept.call(null, walker, this$__$1, path, options__$1))) {
                  return malli.core._outer.call(null, walker, this$__$1, path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [malli.core._inner.call(null, walker, self__.schema, cljs.core.conj.call(null, path, new cljs.core.Keyword("malli.core", "in", "malli.core/in", -1208578537)), options__$1)], null), options__$1);
                } else {
                  return null;
                }
              };
            }(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
            malli.core.t_malli$core7757.prototype.malli$core$Schema$_parser$arity$1 = function(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return self__.__GT_parser.call(null, malli.core._parser, self__.parse);
              };
            }(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
            malli.core.t_malli$core7757.prototype.malli$core$Schema$_properties$arity$1 = function(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return self__.properties;
              };
            }(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
            malli.core.t_malli$core7757.prototype.malli$core$Schema$_children$arity$1 = function(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return self__.children;
              };
            }(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
            malli.core.t_malli$core7757.prototype.malli$core$Schema$_form$arity$1 = function(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return cljs.core.deref.call(null, self__.form);
              };
            }(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
            malli.core.t_malli$core7757.prototype.malli$core$Schema$_explainer$arity$2 = function(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
              return function(this$, path) {
                var self__ = this;
                var this$__$1 = this;
                var explainer = malli.core._explainer.call(null, self__.schema, cljs.core.conj.call(null, path, 0));
                return function(explainer, this$__$1, vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
                  return function(x, in$, acc) {
                    if (cljs.core.not.call(null, self__.fpred.call(null, x))) {
                      return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x, new cljs.core.Keyword("malli.core", "invalid-type", "malli.core/invalid-type", -1367388450)));
                    } else {
                      if (cljs.core.not.call(null, self__.validate_limits.call(null, x))) {
                        return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x, new cljs.core.Keyword("malli.core", "limits", "malli.core/limits", -1343466863)));
                      } else {
                        var size = cljs.core.count.call(null, x);
                        var acc__$1 = acc;
                        var i = 0;
                        var G__7763 = x;
                        var vec__7764 = G__7763;
                        var seq__7765 = cljs.core.seq.call(null, vec__7764);
                        var first__7766 = cljs.core.first.call(null, seq__7765);
                        var seq__7765__$1 = cljs.core.next.call(null, seq__7765);
                        var x__$1 = first__7766;
                        var xs = seq__7765__$1;
                        var acc__$2 = acc__$1;
                        var i__$1 = i;
                        var G__7763__$1 = G__7763;
                        while (true) {
                          var acc__$3 = acc__$2;
                          var i__$2 = i__$1;
                          var vec__7767 = G__7763__$1;
                          var seq__7768 = cljs.core.seq.call(null, vec__7767);
                          var first__7769 = cljs.core.first.call(null, seq__7768);
                          var seq__7768__$1 = cljs.core.next.call(null, seq__7768);
                          var x__$2 = first__7769;
                          var xs__$1 = seq__7768__$1;
                          if (i__$2 < size) {
                            var G__7770 = function() {
                              var or__4047__auto__ = explainer.call(null, x__$2, cljs.core.conj.call(null, in$, self__.fin.call(null, i__$2, x__$2)), acc__$3);
                              if (cljs.core.truth_(or__4047__auto__)) {
                                return or__4047__auto__;
                              } else {
                                return acc__$3;
                              }
                            }();
                            if (xs__$1) {
                              var G__7771 = G__7770;
                              var G__7772 = i__$2 + 1;
                              var G__7773 = xs__$1;
                              acc__$2 = G__7771;
                              i__$1 = G__7772;
                              G__7763__$1 = G__7773;
                              continue;
                            } else {
                              return G__7770;
                            }
                          } else {
                            return acc__$3;
                          }
                          break;
                        }
                      }
                    }
                  };
                }(explainer, this$__$1, vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
              };
            }(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
            malli.core.t_malli$core7757.prototype.malli$core$Schema$_unparser$arity$1 = function(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return self__.__GT_parser.call(null, malli.core._unparser, self__.unparse);
              };
            }(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
            malli.core.t_malli$core7757.prototype.malli$core$Schema$_parent$arity$1 = function(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return self__.parent;
              };
            }(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
            malli.core.t_malli$core7757.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
            malli.core.t_malli$core7757.prototype.malli$core$Cached$_cache$arity$1 = function(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return self__.cache;
              };
            }(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
            malli.core.t_malli$core7757.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
            malli.core.t_malli$core7757.prototype.malli$core$LensSchema$_keep$arity$1 = function(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
              return function(_) {
                var self__ = this;
                var ___$1 = this;
                return true;
              };
            }(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
            malli.core.t_malli$core7757.prototype.malli$core$LensSchema$_get$arity$3 = function(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
              return function(_, ___$1, ___$2) {
                var self__ = this;
                var ___$3 = this;
                return self__.schema;
              };
            }(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
            malli.core.t_malli$core7757.prototype.malli$core$LensSchema$_set$arity$3 = function(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
              return function(this$, _, value) {
                var self__ = this;
                var this$__$1 = this;
                return malli.core._set_children.call(null, this$__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null));
              };
            }(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
            malli.core.t_malli$core7757.getBasis = function(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
              return function() {
                return new cljs.core.PersistentVector(null, 25, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "map__7750", "map__7750", -921902238, null), new cljs.core.Symbol(null, "fpred", "fpred", 1016397475, null), new cljs.core.Symbol(null, "fin", "fin", -1942189562, null), new cljs.core.Symbol(null, "vec__7754", "vec__7754", 1518380071, null), 
                new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "unparse", "unparse", 135615975, null), new cljs.core.Symbol(null, "schema", "schema", 58529736, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "min", "min", 2085523049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
                "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core7746", "malli.core/t_malli$core7746", -668479524, null)], null)), new cljs.core.Symbol(null, "props*", "props*", -768250162, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "-\x3eparser", "-\x3eparser", 1105019639, null), new cljs.core.Symbol(null, "fempty", "fempty", 1035749368, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, 
                "validate-limits", "validate-limits", -2141569735, null), new cljs.core.Symbol(null, "p__7749", "p__7749", -641432903, null), new cljs.core.Symbol(null, "meta7747", "meta7747", 1772996281, null), new cljs.core.Symbol(null, "?props", "?props", 561193402, null), new cljs.core.Symbol(null, "map__7752", "map__7752", 1444770971, null), new cljs.core.Symbol(null, "max", "max", 1701898075, null), new cljs.core.Symbol(null, "parse", "parse", 478366908, null), new cljs.core.Symbol(null, "meta7758", 
                "meta7758", -560068181, null)], null);
              };
            }(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
            malli.core.t_malli$core7757.cljs$lang$type = true;
            malli.core.t_malli$core7757.cljs$lang$ctorStr = "malli.core/t_malli$core7757";
            malli.core.t_malli$core7757.cljs$lang$ctorPrWriter = function(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
              return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
                return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7757");
              };
            }(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
            malli.core.__GT_t_malli$core7757 = function(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_) {
              return function malli$core$_collection_schema_$___GT_t_malli$core7757(form__$1, options__$1, map__7750__$2, fpred__$1, fin__$1, vec__7754__$1, properties__$1, unparse__$1, schema__$1, children__$2, min__$1, parent__$2, props_STAR___$1, type__$1, __GT_parser__$1, fempty__$1, cache__$1, validate_limits__$1, p__7749__$1, meta7747__$1, _QMARK_props__$1, map__7752__$2, max__$1, parse__$1, meta7758) {
                return new malli.core.t_malli$core7757(form__$1, options__$1, map__7750__$2, fpred__$1, fin__$1, vec__7754__$1, properties__$1, unparse__$1, schema__$1, children__$2, min__$1, parent__$2, props_STAR___$1, type__$1, __GT_parser__$1, fempty__$1, cache__$1, validate_limits__$1, p__7749__$1, meta7747__$1, _QMARK_props__$1, map__7752__$2, max__$1, parse__$1, meta7758);
              };
            }(vec__7754, schema, children__$1, form, cache, validate_limits, __GT_parser, map__7752, map__7752__$1, fpred, fempty, fin, type, parse, unparse, parent__$1, map__7750, map__7750__$1, properties, min, max, props_STAR_);
          }
          return new malli.core.t_malli$core7757(form, options, map__7750__$1, fpred, fin, vec__7754, properties, unparse, schema, children__$1, min, parent__$1, self__.props_STAR_, type, __GT_parser, fempty, cache, validate_limits, p__7749, self__.meta7747, self__._QMARK_props, map__7752__$1, max, parse, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
        }
      };
    }(props_STAR_);
    malli.core.t_malli$core7746.getBasis = function(props_STAR_) {
      return function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?props", "?props", 561193402, null), new cljs.core.Symbol(null, "props*", "props*", -768250162, null), new cljs.core.Symbol(null, "meta7747", "meta7747", 1772996281, null)], null);
      };
    }(props_STAR_);
    malli.core.t_malli$core7746.cljs$lang$type = true;
    malli.core.t_malli$core7746.cljs$lang$ctorStr = "malli.core/t_malli$core7746";
    malli.core.t_malli$core7746.cljs$lang$ctorPrWriter = function(props_STAR_) {
      return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
        return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7746");
      };
    }(props_STAR_);
    malli.core.__GT_t_malli$core7746 = function(props_STAR_) {
      return function malli$core$_collection_schema_$___GT_t_malli$core7746(_QMARK_props__$1, props_STAR___$1, meta7747) {
        return new malli.core.t_malli$core7746(_QMARK_props__$1, props_STAR___$1, meta7747);
      };
    }(props_STAR_);
  }
  return new malli.core.t_malli$core7746(_QMARK_props, props_STAR_, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._tuple_schema = function malli$core$_tuple_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7775 !== "undefined") {
  } else {
    malli.core.t_malli$core7775 = function(meta7776) {
      this.meta7776 = meta7776;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7775.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7777, meta7776__$1) {
      var self__ = this;
      var _7777__$1 = this;
      return new malli.core.t_malli$core7775(meta7776__$1);
    };
    malli.core.t_malli$core7775.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7777) {
      var self__ = this;
      var _7777__$1 = this;
      return self__.meta7776;
    };
    malli.core.t_malli$core7775.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7775.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "tuple", "tuple", -472667284);
    };
    malli.core.t_malli$core7775.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core7775.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core7775.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core7775.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      var children__$1 = malli.core._vmap.call(null, function(parent__$1) {
        return function(p1__7774_SHARP_) {
          return malli.core.schema.call(null, p1__7774_SHARP_, options);
        };
      }(parent__$1), children);
      var form = new cljs.core.Delay(function(children__$1, parent__$1) {
        return function() {
          return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
        };
      }(children__$1, parent__$1), null);
      var size = cljs.core.count.call(null, children__$1);
      var cache = malli.core._create_cache.call(null, options);
      var __GT_parser = function(children__$1, form, size, cache, parent__$1) {
        return function(f) {
          var parsers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.comp.call(null, cljs.core.map.call(null, f), cljs.core.map_indexed.call(null, cljs.core.vector)), children__$1);
          return function(parsers, children__$1, form, size, cache, parent__$1) {
            return function(x) {
              if (!cljs.core.vector_QMARK_.call(null, x)) {
                return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
              } else {
                if (cljs.core.not_EQ_.call(null, cljs.core.count.call(null, x), size)) {
                  return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
                } else {
                  return cljs.core.reduce_kv.call(null, function(parsers, children__$1, form, size, cache, parent__$1) {
                    return function(x__$1, i, c) {
                      var v = cljs.core.get.call(null, x__$1, i);
                      var v_STAR_ = c.call(null, v);
                      if (malli.impl.util._invalid_QMARK_.call(null, v_STAR_)) {
                        return cljs.core.reduced.call(null, v_STAR_);
                      } else {
                        if (v_STAR_ === v) {
                          return x__$1;
                        } else {
                          return cljs.core.assoc.call(null, x__$1, i, v_STAR_);
                        }
                      }
                    };
                  }(parsers, children__$1, form, size, cache, parent__$1), x, parsers);
                }
              }
            };
          }(parsers, children__$1, form, size, cache, parent__$1);
        };
      }(children__$1, form, size, cache, parent__$1);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7778 !== "undefined") {
      } else {
        malli.core.t_malli$core7778 = function(form, options, properties, meta7776, children, parent, size, __GT_parser, cache, meta7779) {
          this.form = form;
          this.options = options;
          this.properties = properties;
          this.meta7776 = meta7776;
          this.children = children;
          this.parent = parent;
          this.size = size;
          this.__GT_parser = __GT_parser;
          this.cache = cache;
          this.meta7779 = meta7779;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core7778.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(children__$1, form, size, cache, __GT_parser, parent__$1) {
          return function(_7780, meta7779__$1) {
            var self__ = this;
            var _7780__$1 = this;
            return new malli.core.t_malli$core7778(self__.form, self__.options, self__.properties, self__.meta7776, self__.children, self__.parent, self__.size, self__.__GT_parser, self__.cache, meta7779__$1);
          };
        }(children__$1, form, size, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7778.prototype.cljs$core$IMeta$_meta$arity$1 = function(children__$1, form, size, cache, __GT_parser, parent__$1) {
          return function(_7780) {
            var self__ = this;
            var _7780__$1 = this;
            return self__.meta7779;
          };
        }(children__$1, form, size, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7778.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7778.prototype.malli$core$Schema$_validator$arity$1 = function(children__$1, form, size, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            var validators = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map_indexed.call(null, cljs.core.vector, cljs.core.mapv.call(null, malli.core._validator, self__.children)));
            return function(validators, ___$1, children__$1, form, size, cache, __GT_parser, parent__$1) {
              return function(x) {
                var and__4036__auto__ = cljs.core.vector_QMARK_.call(null, x);
                if (and__4036__auto__) {
                  var and__4036__auto____$1 = cljs.core._EQ_.call(null, cljs.core.count.call(null, x), self__.size);
                  if (and__4036__auto____$1) {
                    return cljs.core.reduce_kv.call(null, function(and__4036__auto____$1, and__4036__auto__, validators, ___$1, children__$1, form, size, cache, __GT_parser, parent__$1) {
                      return function(acc, i, validator) {
                        if (cljs.core.truth_(validator.call(null, cljs.core.nth.call(null, x, i)))) {
                          return acc;
                        } else {
                          return cljs.core.reduced.call(null, false);
                        }
                      };
                    }(and__4036__auto____$1, and__4036__auto__, validators, ___$1, children__$1, form, size, cache, __GT_parser, parent__$1), true, validators);
                  } else {
                    return and__4036__auto____$1;
                  }
                } else {
                  return and__4036__auto__;
                }
              };
            }(validators, ___$1, children__$1, form, size, cache, __GT_parser, parent__$1);
          };
        }(children__$1, form, size, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7778.prototype.malli$core$Schema$_options$arity$1 = function(children__$1, form, size, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.options;
          };
        }(children__$1, form, size, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7778.prototype.malli$core$Schema$_transformer$arity$4 = function(children__$1, form, size, cache, __GT_parser, parent__$1) {
          return function(this$, transformer, method, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            var this_transformer = malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1);
            var __GT_children = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.comp.call(null, cljs.core.map_indexed.call(null, cljs.core.vector), cljs.core.keep.call(null, function(this_transformer, this$__$1, children__$1, form, size, cache, __GT_parser, parent__$1) {
              return function(p__7781) {
                var vec__7782 = p__7781;
                var k = cljs.core.nth.call(null, vec__7782, 0, null);
                var c = cljs.core.nth.call(null, vec__7782, 1, null);
                var temp__5724__auto__ = malli.core._transformer.call(null, c, transformer, method, options__$1);
                if (temp__5724__auto__ == null) {
                  return null;
                } else {
                  var t = temp__5724__auto__;
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, t], null);
                }
              };
            }(this_transformer, this$__$1, children__$1, form, size, cache, __GT_parser, parent__$1))), self__.children);
            var apply__GT_children = cljs.core.seq.call(null, __GT_children) ? malli.core._tuple_transformer.call(null, __GT_children) : null;
            var apply__GT_children__$1 = malli.core._guard.call(null, cljs.core.vector_QMARK_, apply__GT_children);
            return malli.core._intercepting.call(null, this_transformer, apply__GT_children__$1);
          };
        }(children__$1, form, size, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7778.prototype.malli$core$Schema$_walk$arity$4 = function(children__$1, form, size, cache, __GT_parser, parent__$1) {
          return function(this$, walker, path, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._walk_indexed.call(null, this$__$1, walker, path, options__$1);
          };
        }(children__$1, form, size, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7778.prototype.malli$core$Schema$_parser$arity$1 = function(children__$1, form, size, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.__GT_parser.call(null, malli.core._parser);
          };
        }(children__$1, form, size, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7778.prototype.malli$core$Schema$_properties$arity$1 = function(children__$1, form, size, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.properties;
          };
        }(children__$1, form, size, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7778.prototype.malli$core$Schema$_children$arity$1 = function(children__$1, form, size, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.children;
          };
        }(children__$1, form, size, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7778.prototype.malli$core$Schema$_form$arity$1 = function(children__$1, form, size, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.deref.call(null, self__.form);
          };
        }(children__$1, form, size, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7778.prototype.malli$core$Schema$_explainer$arity$2 = function(children__$1, form, size, cache, __GT_parser, parent__$1) {
          return function(this$, path) {
            var self__ = this;
            var this$__$1 = this;
            var explainers = malli.core._vmap.call(null, function(this$__$1, children__$1, form, size, cache, __GT_parser, parent__$1) {
              return function(p__7785) {
                var vec__7786 = p__7785;
                var i = cljs.core.nth.call(null, vec__7786, 0, null);
                var s = cljs.core.nth.call(null, vec__7786, 1, null);
                return malli.core._explainer.call(null, s, cljs.core.conj.call(null, path, i));
              };
            }(this$__$1, children__$1, form, size, cache, __GT_parser, parent__$1), cljs.core.map_indexed.call(null, cljs.core.vector, self__.children));
            return function(explainers, this$__$1, children__$1, form, size, cache, __GT_parser, parent__$1) {
              return function(x, in$, acc) {
                if (!cljs.core.vector_QMARK_.call(null, x)) {
                  return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x, new cljs.core.Keyword("malli.core", "invalid-type", "malli.core/invalid-type", -1367388450)));
                } else {
                  if (cljs.core.not_EQ_.call(null, cljs.core.count.call(null, x), self__.size)) {
                    return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x, new cljs.core.Keyword("malli.core", "tuple-size", "malli.core/tuple-size", -1004468077)));
                  } else {
                    var acc__$1 = acc;
                    var i = 0;
                    var G__7795 = x;
                    var vec__7797 = G__7795;
                    var seq__7798 = cljs.core.seq.call(null, vec__7797);
                    var first__7799 = cljs.core.first.call(null, seq__7798);
                    var seq__7798__$1 = cljs.core.next.call(null, seq__7798);
                    var x__$1 = first__7799;
                    var xs = seq__7798__$1;
                    var G__7796 = explainers;
                    var vec__7800 = G__7796;
                    var seq__7801 = cljs.core.seq.call(null, vec__7800);
                    var first__7802 = cljs.core.first.call(null, seq__7801);
                    var seq__7801__$1 = cljs.core.next.call(null, seq__7801);
                    var e = first__7802;
                    var es = seq__7801__$1;
                    var acc__$2 = acc__$1;
                    var i__$1 = i;
                    var G__7795__$1 = G__7795;
                    var G__7796__$1 = G__7796;
                    while (true) {
                      var acc__$3 = acc__$2;
                      var i__$2 = i__$1;
                      var vec__7803 = G__7795__$1;
                      var seq__7804 = cljs.core.seq.call(null, vec__7803);
                      var first__7805 = cljs.core.first.call(null, seq__7804);
                      var seq__7804__$1 = cljs.core.next.call(null, seq__7804);
                      var x__$2 = first__7805;
                      var xs__$1 = seq__7804__$1;
                      var vec__7806 = G__7796__$1;
                      var seq__7807 = cljs.core.seq.call(null, vec__7806);
                      var first__7808 = cljs.core.first.call(null, seq__7807);
                      var seq__7807__$1 = cljs.core.next.call(null, seq__7807);
                      var e__$1 = first__7808;
                      var es__$1 = seq__7807__$1;
                      var G__7809 = e__$1.call(null, x__$2, cljs.core.conj.call(null, in$, i__$2), acc__$3);
                      if (xs__$1) {
                        var G__7810 = G__7809;
                        var G__7811 = i__$2 + 1;
                        var G__7812 = xs__$1;
                        var G__7813 = es__$1;
                        acc__$2 = G__7810;
                        i__$1 = G__7811;
                        G__7795__$1 = G__7812;
                        G__7796__$1 = G__7813;
                        continue;
                      } else {
                        return G__7809;
                      }
                      break;
                    }
                  }
                }
              };
            }(explainers, this$__$1, children__$1, form, size, cache, __GT_parser, parent__$1);
          };
        }(children__$1, form, size, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7778.prototype.malli$core$Schema$_unparser$arity$1 = function(children__$1, form, size, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.__GT_parser.call(null, malli.core._unparser);
          };
        }(children__$1, form, size, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7778.prototype.malli$core$Schema$_parent$arity$1 = function(children__$1, form, size, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.parent;
          };
        }(children__$1, form, size, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7778.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7778.prototype.malli$core$Cached$_cache$arity$1 = function(children__$1, form, size, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.cache;
          };
        }(children__$1, form, size, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7778.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7778.prototype.malli$core$LensSchema$_keep$arity$1 = function(children__$1, form, size, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return true;
          };
        }(children__$1, form, size, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7778.prototype.malli$core$LensSchema$_get$arity$3 = function(children__$1, form, size, cache, __GT_parser, parent__$1) {
          return function(_, key, default$) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.get.call(null, self__.children, key, default$);
          };
        }(children__$1, form, size, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7778.prototype.malli$core$LensSchema$_set$arity$3 = function(children__$1, form, size, cache, __GT_parser, parent__$1) {
          return function(this$, key, value) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._set_assoc_children.call(null, this$__$1, key, value);
          };
        }(children__$1, form, size, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7778.getBasis = function(children__$1, form, size, cache, __GT_parser, parent__$1) {
          return function() {
            return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "meta7776", "meta7776", -361511128, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", 
            "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core7775", "malli.core/t_malli$core7775", 1945884337, null)], null)), new cljs.core.Symbol(null, "size", "size", -1555742762, null), new cljs.core.Symbol(null, "-\x3eparser", "-\x3eparser", 1105019639, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "meta7779", "meta7779", 
            -894248174, null)], null);
          };
        }(children__$1, form, size, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7778.cljs$lang$type = true;
        malli.core.t_malli$core7778.cljs$lang$ctorStr = "malli.core/t_malli$core7778";
        malli.core.t_malli$core7778.cljs$lang$ctorPrWriter = function(children__$1, form, size, cache, __GT_parser, parent__$1) {
          return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
            return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7778");
          };
        }(children__$1, form, size, cache, __GT_parser, parent__$1);
        malli.core.__GT_t_malli$core7778 = function(children__$1, form, size, cache, __GT_parser, parent__$1) {
          return function malli$core$_tuple_schema_$___GT_t_malli$core7778(form__$1, options__$1, properties__$1, meta7776__$1, children__$2, parent__$2, size__$1, __GT_parser__$1, cache__$1, meta7779) {
            return new malli.core.t_malli$core7778(form__$1, options__$1, properties__$1, meta7776__$1, children__$2, parent__$2, size__$1, __GT_parser__$1, cache__$1, meta7779);
          };
        }(children__$1, form, size, cache, __GT_parser, parent__$1);
      }
      return new malli.core.t_malli$core7778(form, options, properties, self__.meta7776, children__$1, parent__$1, size, __GT_parser, cache, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core7775.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta7776", "meta7776", -361511128, null)], null);
    };
    malli.core.t_malli$core7775.cljs$lang$type = true;
    malli.core.t_malli$core7775.cljs$lang$ctorStr = "malli.core/t_malli$core7775";
    malli.core.t_malli$core7775.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
      return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7775");
    };
    malli.core.__GT_t_malli$core7775 = function malli$core$_tuple_schema_$___GT_t_malli$core7775(meta7776) {
      return new malli.core.t_malli$core7775(meta7776);
    };
  }
  return new malli.core.t_malli$core7775(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._enum_schema = function malli$core$_enum_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7814 !== "undefined") {
  } else {
    malli.core.t_malli$core7814 = function(meta7815) {
      this.meta7815 = meta7815;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7814.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7816, meta7815__$1) {
      var self__ = this;
      var _7816__$1 = this;
      return new malli.core.t_malli$core7814(meta7815__$1);
    };
    malli.core.t_malli$core7814.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7816) {
      var self__ = this;
      var _7816__$1 = this;
      return self__.meta7815;
    };
    malli.core.t_malli$core7814.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7814.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._into_schema.call(null, parent__$1, (new cljs.core.Keyword(null, "properties", "properties", 685819552)).cljs$core$IFn$_invoke$arity$1(ast), (new cljs.core.Keyword(null, "values", "values", 372645556)).cljs$core$IFn$_invoke$arity$1(ast), options);
    };
    malli.core.t_malli$core7814.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7814.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "enum", "enum", 1679018432);
    };
    malli.core.t_malli$core7814.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core7814.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "enum", "enum", 1679018432), properties, children, 1, null);
      var children__$1 = cljs.core.vec.call(null, children);
      var schema = cljs.core.set.call(null, children__$1);
      var form = new cljs.core.Delay(function(children__$1, schema, parent__$1) {
        return function() {
          return malli.core._simple_form.call(null, parent__$1, properties, children__$1, cljs.core.identity, options);
        };
      }(children__$1, schema, parent__$1), null);
      var cache = malli.core._create_cache.call(null, options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7817 !== "undefined") {
      } else {
        malli.core.t_malli$core7817 = function(meta7815, parent, properties, children, options, schema, form, cache, meta7818) {
          this.meta7815 = meta7815;
          this.parent = parent;
          this.properties = properties;
          this.children = children;
          this.options = options;
          this.schema = schema;
          this.form = form;
          this.cache = cache;
          this.meta7818 = meta7818;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core7817.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(children__$1, schema, form, cache, parent__$1) {
          return function(_7819, meta7818__$1) {
            var self__ = this;
            var _7819__$1 = this;
            return new malli.core.t_malli$core7817(self__.meta7815, self__.parent, self__.properties, self__.children, self__.options, self__.schema, self__.form, self__.cache, meta7818__$1);
          };
        }(children__$1, schema, form, cache, parent__$1);
        malli.core.t_malli$core7817.prototype.cljs$core$IMeta$_meta$arity$1 = function(children__$1, schema, form, cache, parent__$1) {
          return function(_7819) {
            var self__ = this;
            var _7819__$1 = this;
            return self__.meta7818;
          };
        }(children__$1, schema, form, cache, parent__$1);
        malli.core.t_malli$core7817.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7817.prototype.malli$core$AST$_to_ast$arity$2 = function(children__$1, schema, form, cache, parent__$1) {
          return function(_, ___$1) {
            var self__ = this;
            var ___$2 = this;
            return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "enum", "enum", 1679018432), new cljs.core.Keyword(null, "values", "values", 372645556), self__.children], null);
          };
        }(children__$1, schema, form, cache, parent__$1);
        malli.core.t_malli$core7817.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7817.prototype.malli$core$Schema$_validator$arity$1 = function(children__$1, schema, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return function(___$1, children__$1, schema, form, cache, parent__$1) {
              return function(x) {
                return cljs.core.contains_QMARK_.call(null, self__.schema, x);
              };
            }(___$1, children__$1, schema, form, cache, parent__$1);
          };
        }(children__$1, schema, form, cache, parent__$1);
        malli.core.t_malli$core7817.prototype.malli$core$Schema$_options$arity$1 = function(children__$1, schema, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.options;
          };
        }(children__$1, schema, form, cache, parent__$1);
        malli.core.t_malli$core7817.prototype.malli$core$Schema$_transformer$arity$4 = function(children__$1, schema, form, cache, parent__$1) {
          return function(this$, transformer, method, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._intercepting.call(null, malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1));
          };
        }(children__$1, schema, form, cache, parent__$1);
        malli.core.t_malli$core7817.prototype.malli$core$Schema$_walk$arity$4 = function(children__$1, schema, form, cache, parent__$1) {
          return function(this$, walker, path, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._walk_leaf.call(null, this$__$1, walker, path, options__$1);
          };
        }(children__$1, schema, form, cache, parent__$1);
        malli.core.t_malli$core7817.prototype.malli$core$Schema$_parser$arity$1 = function(children__$1, schema, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return function(___$1, children__$1, schema, form, cache, parent__$1) {
              return function(x) {
                if (cljs.core.contains_QMARK_.call(null, self__.schema, x)) {
                  return x;
                } else {
                  return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
                }
              };
            }(___$1, children__$1, schema, form, cache, parent__$1);
          };
        }(children__$1, schema, form, cache, parent__$1);
        malli.core.t_malli$core7817.prototype.malli$core$Schema$_properties$arity$1 = function(children__$1, schema, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.properties;
          };
        }(children__$1, schema, form, cache, parent__$1);
        malli.core.t_malli$core7817.prototype.malli$core$Schema$_children$arity$1 = function(children__$1, schema, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.children;
          };
        }(children__$1, schema, form, cache, parent__$1);
        malli.core.t_malli$core7817.prototype.malli$core$Schema$_form$arity$1 = function(children__$1, schema, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.deref.call(null, self__.form);
          };
        }(children__$1, schema, form, cache, parent__$1);
        malli.core.t_malli$core7817.prototype.malli$core$Schema$_explainer$arity$2 = function(children__$1, schema, form, cache, parent__$1) {
          return function(this$, path) {
            var self__ = this;
            var this$__$1 = this;
            var validator = malli.core._validator.call(null, this$__$1);
            return function(validator, this$__$1, children__$1, schema, form, cache, parent__$1) {
              return function malli$core$_enum_schema_$_explain(x, in$, acc) {
                if (cljs.core.not.call(null, validator.call(null, x))) {
                  return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x));
                } else {
                  return acc;
                }
              };
            }(validator, this$__$1, children__$1, schema, form, cache, parent__$1);
          };
        }(children__$1, schema, form, cache, parent__$1);
        malli.core.t_malli$core7817.prototype.malli$core$Schema$_unparser$arity$1 = function(children__$1, schema, form, cache, parent__$1) {
          return function(this$) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._parser.call(null, this$__$1);
          };
        }(children__$1, schema, form, cache, parent__$1);
        malli.core.t_malli$core7817.prototype.malli$core$Schema$_parent$arity$1 = function(children__$1, schema, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.parent;
          };
        }(children__$1, schema, form, cache, parent__$1);
        malli.core.t_malli$core7817.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7817.prototype.malli$core$Cached$_cache$arity$1 = function(children__$1, schema, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.cache;
          };
        }(children__$1, schema, form, cache, parent__$1);
        malli.core.t_malli$core7817.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7817.prototype.malli$core$LensSchema$_keep$arity$1 = function(children__$1, schema, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return null;
          };
        }(children__$1, schema, form, cache, parent__$1);
        malli.core.t_malli$core7817.prototype.malli$core$LensSchema$_get$arity$3 = function(children__$1, schema, form, cache, parent__$1) {
          return function(_, key, default$) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.get.call(null, self__.children, key, default$);
          };
        }(children__$1, schema, form, cache, parent__$1);
        malli.core.t_malli$core7817.prototype.malli$core$LensSchema$_set$arity$3 = function(children__$1, schema, form, cache, parent__$1) {
          return function(this$, key, value) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._set_assoc_children.call(null, this$__$1, key, value);
          };
        }(children__$1, schema, form, cache, parent__$1);
        malli.core.t_malli$core7817.getBasis = function(children__$1, schema, form, cache, parent__$1) {
          return function() {
            return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta7815", "meta7815", 604779132, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core7814", "malli.core/t_malli$core7814", -1298267123, null)], null)), new cljs.core.Symbol(null, "properties", 
            "properties", -1968616217, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "schema", "schema", 58529736, null), new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "meta7818", "meta7818", -1522107226, null)], null);
          };
        }(children__$1, schema, form, cache, parent__$1);
        malli.core.t_malli$core7817.cljs$lang$type = true;
        malli.core.t_malli$core7817.cljs$lang$ctorStr = "malli.core/t_malli$core7817";
        malli.core.t_malli$core7817.cljs$lang$ctorPrWriter = function(children__$1, schema, form, cache, parent__$1) {
          return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
            return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7817");
          };
        }(children__$1, schema, form, cache, parent__$1);
        malli.core.__GT_t_malli$core7817 = function(children__$1, schema, form, cache, parent__$1) {
          return function malli$core$_enum_schema_$___GT_t_malli$core7817(meta7815__$1, parent__$2, properties__$1, children__$2, options__$1, schema__$1, form__$1, cache__$1, meta7818) {
            return new malli.core.t_malli$core7817(meta7815__$1, parent__$2, properties__$1, children__$2, options__$1, schema__$1, form__$1, cache__$1, meta7818);
          };
        }(children__$1, schema, form, cache, parent__$1);
      }
      return new malli.core.t_malli$core7817(self__.meta7815, parent__$1, properties, children__$1, options, schema, form, cache, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core7814.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta7815", "meta7815", 604779132, null)], null);
    };
    malli.core.t_malli$core7814.cljs$lang$type = true;
    malli.core.t_malli$core7814.cljs$lang$ctorStr = "malli.core/t_malli$core7814";
    malli.core.t_malli$core7814.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
      return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7814");
    };
    malli.core.__GT_t_malli$core7814 = function malli$core$_enum_schema_$___GT_t_malli$core7814(meta7815) {
      return new malli.core.t_malli$core7814(meta7815);
    };
  }
  return new malli.core.t_malli$core7814(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._re_schema = function malli$core$_re_schema(class_QMARK_) {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7821 !== "undefined") {
  } else {
    malli.core.t_malli$core7821 = function(class_QMARK_, meta7822) {
      this.class_QMARK_ = class_QMARK_;
      this.meta7822 = meta7822;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7821.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7823, meta7822__$1) {
      var self__ = this;
      var _7823__$1 = this;
      return new malli.core.t_malli$core7821(self__.class_QMARK_, meta7822__$1);
    };
    malli.core.t_malli$core7821.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7823) {
      var self__ = this;
      var _7823__$1 = this;
      return self__.meta7822;
    };
    malli.core.t_malli$core7821.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7821.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_value_ast.call(null, parent__$1, ast, options);
    };
    malli.core.t_malli$core7821.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7821.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "re", "re", 228676202);
    };
    malli.core.t_malli$core7821.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core7821.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core7821.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core7821.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, p__7824, options) {
      var self__ = this;
      var vec__7825 = p__7824;
      var child = cljs.core.nth.call(null, vec__7825, 0, null);
      var children = vec__7825;
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "re", "re", 228676202), properties, children, 1, 1);
      var children__$1 = cljs.core.vec.call(null, children);
      var re = cljs.core.re_pattern.call(null, child);
      var form = new cljs.core.Delay(function(children__$1, re, parent__$1, vec__7825, child, children) {
        return function() {
          if (cljs.core.truth_(self__.class_QMARK_)) {
            return re;
          } else {
            return malli.core._simple_form.call(null, parent__$1, properties, children__$1, cljs.core.identity, options);
          }
        };
      }(children__$1, re, parent__$1, vec__7825, child, children), null);
      var cache = malli.core._create_cache.call(null, options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7828 !== "undefined") {
      } else {
        malli.core.t_malli$core7828 = function(form, options, child, meta7822, p__7824, properties, children, parent, re, class_QMARK_, vec__7825, cache, meta7829) {
          this.form = form;
          this.options = options;
          this.child = child;
          this.meta7822 = meta7822;
          this.p__7824 = p__7824;
          this.properties = properties;
          this.children = children;
          this.parent = parent;
          this.re = re;
          this.class_QMARK_ = class_QMARK_;
          this.vec__7825 = vec__7825;
          this.cache = cache;
          this.meta7829 = meta7829;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core7828.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
          return function(_7830, meta7829__$1) {
            var self__ = this;
            var _7830__$1 = this;
            return new malli.core.t_malli$core7828(self__.form, self__.options, self__.child, self__.meta7822, self__.p__7824, self__.properties, self__.children, self__.parent, self__.re, self__.class_QMARK_, self__.vec__7825, self__.cache, meta7829__$1);
          };
        }(children__$1, re, form, cache, parent__$1, vec__7825, child, children);
        malli.core.t_malli$core7828.prototype.cljs$core$IMeta$_meta$arity$1 = function(children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
          return function(_7830) {
            var self__ = this;
            var _7830__$1 = this;
            return self__.meta7829;
          };
        }(children__$1, re, form, cache, parent__$1, vec__7825, child, children);
        malli.core.t_malli$core7828.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7828.prototype.malli$core$AST$_to_ast$arity$2 = function(children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
          return function(this$, _) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._to_value_ast.call(null, this$__$1);
          };
        }(children__$1, re, form, cache, parent__$1, vec__7825, child, children);
        malli.core.t_malli$core7828.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7828.prototype.malli$core$Schema$_validator$arity$1 = function(children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return malli.core._safe_pred.call(null, function(___$1, children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
              return function(p1__7820_SHARP_) {
                return cljs.core.re_find.call(null, self__.re, p1__7820_SHARP_);
              };
            }(___$1, children__$1, re, form, cache, parent__$1, vec__7825, child, children));
          };
        }(children__$1, re, form, cache, parent__$1, vec__7825, child, children);
        malli.core.t_malli$core7828.prototype.malli$core$Schema$_options$arity$1 = function(children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.options;
          };
        }(children__$1, re, form, cache, parent__$1, vec__7825, child, children);
        malli.core.t_malli$core7828.prototype.malli$core$Schema$_transformer$arity$4 = function(children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
          return function(this$, transformer, method, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._intercepting.call(null, malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1));
          };
        }(children__$1, re, form, cache, parent__$1, vec__7825, child, children);
        malli.core.t_malli$core7828.prototype.malli$core$Schema$_walk$arity$4 = function(children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
          return function(this$, walker, path, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._walk_leaf.call(null, this$__$1, walker, path, options__$1);
          };
        }(children__$1, re, form, cache, parent__$1, vec__7825, child, children);
        malli.core.t_malli$core7828.prototype.malli$core$Schema$_parser$arity$1 = function(children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
          return function(this$) {
            var self__ = this;
            var this$__$1 = this;
            var valid_QMARK_ = malli.core._validator.call(null, this$__$1);
            return function(valid_QMARK_, this$__$1, children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
              return function(x) {
                if (cljs.core.truth_(valid_QMARK_.call(null, x))) {
                  return x;
                } else {
                  return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
                }
              };
            }(valid_QMARK_, this$__$1, children__$1, re, form, cache, parent__$1, vec__7825, child, children);
          };
        }(children__$1, re, form, cache, parent__$1, vec__7825, child, children);
        malli.core.t_malli$core7828.prototype.malli$core$Schema$_properties$arity$1 = function(children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.properties;
          };
        }(children__$1, re, form, cache, parent__$1, vec__7825, child, children);
        malli.core.t_malli$core7828.prototype.malli$core$Schema$_children$arity$1 = function(children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.children;
          };
        }(children__$1, re, form, cache, parent__$1, vec__7825, child, children);
        malli.core.t_malli$core7828.prototype.malli$core$Schema$_form$arity$1 = function(children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.deref.call(null, self__.form);
          };
        }(children__$1, re, form, cache, parent__$1, vec__7825, child, children);
        malli.core.t_malli$core7828.prototype.malli$core$Schema$_explainer$arity$2 = function(children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
          return function(this$, path) {
            var self__ = this;
            var this$__$1 = this;
            return function(this$__$1, children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
              return function malli$core$_re_schema_$_explain(x, in$, acc) {
                try {
                  if (cljs.core.not.call(null, cljs.core.re_find.call(null, self__.re, x))) {
                    return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x));
                  } else {
                    return acc;
                  }
                } catch (e7831) {
                  if (e7831 instanceof Error) {
                    var e = e7831;
                    return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.ex_data.call(null, e))));
                  } else {
                    throw e7831;
                  }
                }
              };
            }(this$__$1, children__$1, re, form, cache, parent__$1, vec__7825, child, children);
          };
        }(children__$1, re, form, cache, parent__$1, vec__7825, child, children);
        malli.core.t_malli$core7828.prototype.malli$core$Schema$_unparser$arity$1 = function(children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
          return function(this$) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._parser.call(null, this$__$1);
          };
        }(children__$1, re, form, cache, parent__$1, vec__7825, child, children);
        malli.core.t_malli$core7828.prototype.malli$core$Schema$_parent$arity$1 = function(children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.parent;
          };
        }(children__$1, re, form, cache, parent__$1, vec__7825, child, children);
        malli.core.t_malli$core7828.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7828.prototype.malli$core$Cached$_cache$arity$1 = function(children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.cache;
          };
        }(children__$1, re, form, cache, parent__$1, vec__7825, child, children);
        malli.core.t_malli$core7828.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7828.prototype.malli$core$LensSchema$_keep$arity$1 = function(children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return null;
          };
        }(children__$1, re, form, cache, parent__$1, vec__7825, child, children);
        malli.core.t_malli$core7828.prototype.malli$core$LensSchema$_get$arity$3 = function(children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
          return function(_, key, default$) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.get.call(null, self__.children, key, default$);
          };
        }(children__$1, re, form, cache, parent__$1, vec__7825, child, children);
        malli.core.t_malli$core7828.prototype.malli$core$LensSchema$_set$arity$3 = function(children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
          return function(this$, key, value) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._set_assoc_children.call(null, this$__$1, key, value);
          };
        }(children__$1, re, form, cache, parent__$1, vec__7825, child, children);
        malli.core.t_malli$core7828.getBasis = function(children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
          return function() {
            return new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "child", "child", -2030468224, null), new cljs.core.Symbol(null, "meta7822", "meta7822", 1309928515, null), new cljs.core.Symbol(null, "p__7824", "p__7824", 516586534, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, 
            null), new cljs.core.Symbol(null, "children", "children", 699969545, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core7821", "malli.core/t_malli$core7821", 1129098938, null)], null)), new cljs.core.Symbol(null, "re", "re", 1869207729, null), new cljs.core.Symbol(null, "class?", "class?", 2026366098, 
            null), new cljs.core.Symbol(null, "vec__7825", "vec__7825", -1130884875, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "meta7829", "meta7829", -284717430, null)], null);
          };
        }(children__$1, re, form, cache, parent__$1, vec__7825, child, children);
        malli.core.t_malli$core7828.cljs$lang$type = true;
        malli.core.t_malli$core7828.cljs$lang$ctorStr = "malli.core/t_malli$core7828";
        malli.core.t_malli$core7828.cljs$lang$ctorPrWriter = function(children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
          return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
            return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7828");
          };
        }(children__$1, re, form, cache, parent__$1, vec__7825, child, children);
        malli.core.__GT_t_malli$core7828 = function(children__$1, re, form, cache, parent__$1, vec__7825, child, children) {
          return function malli$core$_re_schema_$___GT_t_malli$core7828(form__$1, options__$1, child__$1, meta7822__$1, p__7824__$1, properties__$1, children__$2, parent__$2, re__$1, class_QMARK___$1, vec__7825__$1, cache__$1, meta7829) {
            return new malli.core.t_malli$core7828(form__$1, options__$1, child__$1, meta7822__$1, p__7824__$1, properties__$1, children__$2, parent__$2, re__$1, class_QMARK___$1, vec__7825__$1, cache__$1, meta7829);
          };
        }(children__$1, re, form, cache, parent__$1, vec__7825, child, children);
      }
      return new malli.core.t_malli$core7828(form, options, child, self__.meta7822, p__7824, properties, children__$1, parent__$1, re, self__.class_QMARK_, vec__7825, cache, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core7821.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "class?", "class?", 2026366098, null), new cljs.core.Symbol(null, "meta7822", "meta7822", 1309928515, null)], null);
    };
    malli.core.t_malli$core7821.cljs$lang$type = true;
    malli.core.t_malli$core7821.cljs$lang$ctorStr = "malli.core/t_malli$core7821";
    malli.core.t_malli$core7821.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
      return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7821");
    };
    malli.core.__GT_t_malli$core7821 = function malli$core$_re_schema_$___GT_t_malli$core7821(class_QMARK___$1, meta7822) {
      return new malli.core.t_malli$core7821(class_QMARK___$1, meta7822);
    };
  }
  return new malli.core.t_malli$core7821(class_QMARK_, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._fn_schema = function malli$core$_fn_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7832 !== "undefined") {
  } else {
    malli.core.t_malli$core7832 = function(meta7833) {
      this.meta7833 = meta7833;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7832.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7834, meta7833__$1) {
      var self__ = this;
      var _7834__$1 = this;
      return new malli.core.t_malli$core7832(meta7833__$1);
    };
    malli.core.t_malli$core7832.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7834) {
      var self__ = this;
      var _7834__$1 = this;
      return self__.meta7833;
    };
    malli.core.t_malli$core7832.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7832.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_value_ast.call(null, parent__$1, ast, options);
    };
    malli.core.t_malli$core7832.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7832.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "fn", "fn", -1175266204);
    };
    malli.core.t_malli$core7832.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core7832.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), properties, children, 1, 1);
      var children__$1 = cljs.core.vec.call(null, children);
      var f = malli.core.eval.call(null, cljs.core.first.call(null, children__$1), options);
      var form = new cljs.core.Delay(function(children__$1, f, parent__$1) {
        return function() {
          return malli.core._simple_form.call(null, parent__$1, properties, children__$1, cljs.core.identity, options);
        };
      }(children__$1, f, parent__$1), null);
      var cache = malli.core._create_cache.call(null, options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7835 !== "undefined") {
      } else {
        malli.core.t_malli$core7835 = function(meta7833, parent, properties, children, options, f, form, cache, meta7836) {
          this.meta7833 = meta7833;
          this.parent = parent;
          this.properties = properties;
          this.children = children;
          this.options = options;
          this.f = f;
          this.form = form;
          this.cache = cache;
          this.meta7836 = meta7836;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core7835.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(children__$1, f, form, cache, parent__$1) {
          return function(_7837, meta7836__$1) {
            var self__ = this;
            var _7837__$1 = this;
            return new malli.core.t_malli$core7835(self__.meta7833, self__.parent, self__.properties, self__.children, self__.options, self__.f, self__.form, self__.cache, meta7836__$1);
          };
        }(children__$1, f, form, cache, parent__$1);
        malli.core.t_malli$core7835.prototype.cljs$core$IMeta$_meta$arity$1 = function(children__$1, f, form, cache, parent__$1) {
          return function(_7837) {
            var self__ = this;
            var _7837__$1 = this;
            return self__.meta7836;
          };
        }(children__$1, f, form, cache, parent__$1);
        malli.core.t_malli$core7835.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7835.prototype.malli$core$AST$_to_ast$arity$2 = function(children__$1, f, form, cache, parent__$1) {
          return function(this$, _) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._to_value_ast.call(null, this$__$1);
          };
        }(children__$1, f, form, cache, parent__$1);
        malli.core.t_malli$core7835.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7835.prototype.malli$core$Schema$_validator$arity$1 = function(children__$1, f, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return malli.core._safe_pred.call(null, self__.f);
          };
        }(children__$1, f, form, cache, parent__$1);
        malli.core.t_malli$core7835.prototype.malli$core$Schema$_options$arity$1 = function(children__$1, f, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.options;
          };
        }(children__$1, f, form, cache, parent__$1);
        malli.core.t_malli$core7835.prototype.malli$core$Schema$_transformer$arity$4 = function(children__$1, f, form, cache, parent__$1) {
          return function(this$, transformer, method, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._intercepting.call(null, malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1));
          };
        }(children__$1, f, form, cache, parent__$1);
        malli.core.t_malli$core7835.prototype.malli$core$Schema$_walk$arity$4 = function(children__$1, f, form, cache, parent__$1) {
          return function(this$, walker, path, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._walk_leaf.call(null, this$__$1, walker, path, options__$1);
          };
        }(children__$1, f, form, cache, parent__$1);
        malli.core.t_malli$core7835.prototype.malli$core$Schema$_parser$arity$1 = function(children__$1, f, form, cache, parent__$1) {
          return function(this$) {
            var self__ = this;
            var this$__$1 = this;
            var validator = malli.core._validator.call(null, this$__$1);
            return function(validator, this$__$1, children__$1, f, form, cache, parent__$1) {
              return function(x) {
                if (cljs.core.truth_(validator.call(null, x))) {
                  return x;
                } else {
                  return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
                }
              };
            }(validator, this$__$1, children__$1, f, form, cache, parent__$1);
          };
        }(children__$1, f, form, cache, parent__$1);
        malli.core.t_malli$core7835.prototype.malli$core$Schema$_properties$arity$1 = function(children__$1, f, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.properties;
          };
        }(children__$1, f, form, cache, parent__$1);
        malli.core.t_malli$core7835.prototype.malli$core$Schema$_children$arity$1 = function(children__$1, f, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.children;
          };
        }(children__$1, f, form, cache, parent__$1);
        malli.core.t_malli$core7835.prototype.malli$core$Schema$_form$arity$1 = function(children__$1, f, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.deref.call(null, self__.form);
          };
        }(children__$1, f, form, cache, parent__$1);
        malli.core.t_malli$core7835.prototype.malli$core$Schema$_explainer$arity$2 = function(children__$1, f, form, cache, parent__$1) {
          return function(this$, path) {
            var self__ = this;
            var this$__$1 = this;
            return function(this$__$1, children__$1, f, form, cache, parent__$1) {
              return function malli$core$_fn_schema_$_explain(x, in$, acc) {
                try {
                  if (cljs.core.not.call(null, self__.f.call(null, x))) {
                    return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x));
                  } else {
                    return acc;
                  }
                } catch (e7838) {
                  if (e7838 instanceof Error) {
                    var e = e7838;
                    return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.ex_data.call(null, e))));
                  } else {
                    throw e7838;
                  }
                }
              };
            }(this$__$1, children__$1, f, form, cache, parent__$1);
          };
        }(children__$1, f, form, cache, parent__$1);
        malli.core.t_malli$core7835.prototype.malli$core$Schema$_unparser$arity$1 = function(children__$1, f, form, cache, parent__$1) {
          return function(this$) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._parser.call(null, this$__$1);
          };
        }(children__$1, f, form, cache, parent__$1);
        malli.core.t_malli$core7835.prototype.malli$core$Schema$_parent$arity$1 = function(children__$1, f, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.parent;
          };
        }(children__$1, f, form, cache, parent__$1);
        malli.core.t_malli$core7835.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7835.prototype.malli$core$Cached$_cache$arity$1 = function(children__$1, f, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.cache;
          };
        }(children__$1, f, form, cache, parent__$1);
        malli.core.t_malli$core7835.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7835.prototype.malli$core$LensSchema$_keep$arity$1 = function(children__$1, f, form, cache, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return null;
          };
        }(children__$1, f, form, cache, parent__$1);
        malli.core.t_malli$core7835.prototype.malli$core$LensSchema$_get$arity$3 = function(children__$1, f, form, cache, parent__$1) {
          return function(_, key, default$) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.get.call(null, self__.children, key, default$);
          };
        }(children__$1, f, form, cache, parent__$1);
        malli.core.t_malli$core7835.prototype.malli$core$LensSchema$_set$arity$3 = function(children__$1, f, form, cache, parent__$1) {
          return function(this$, key, value) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._set_assoc_children.call(null, this$__$1, key, value);
          };
        }(children__$1, f, form, cache, parent__$1);
        malli.core.t_malli$core7835.getBasis = function(children__$1, f, form, cache, parent__$1) {
          return function() {
            return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta7833", "meta7833", -1812022094, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core7832", "malli.core/t_malli$core7832", 731694976, null)], null)), new cljs.core.Symbol(null, "properties", 
            "properties", -1968616217, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "meta7836", "meta7836", 198352954, null)], null);
          };
        }(children__$1, f, form, cache, parent__$1);
        malli.core.t_malli$core7835.cljs$lang$type = true;
        malli.core.t_malli$core7835.cljs$lang$ctorStr = "malli.core/t_malli$core7835";
        malli.core.t_malli$core7835.cljs$lang$ctorPrWriter = function(children__$1, f, form, cache, parent__$1) {
          return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
            return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7835");
          };
        }(children__$1, f, form, cache, parent__$1);
        malli.core.__GT_t_malli$core7835 = function(children__$1, f, form, cache, parent__$1) {
          return function malli$core$_fn_schema_$___GT_t_malli$core7835(meta7833__$1, parent__$2, properties__$1, children__$2, options__$1, f__$1, form__$1, cache__$1, meta7836) {
            return new malli.core.t_malli$core7835(meta7833__$1, parent__$2, properties__$1, children__$2, options__$1, f__$1, form__$1, cache__$1, meta7836);
          };
        }(children__$1, f, form, cache, parent__$1);
      }
      return new malli.core.t_malli$core7835(self__.meta7833, parent__$1, properties, children__$1, options, f, form, cache, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core7832.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta7833", "meta7833", -1812022094, null)], null);
    };
    malli.core.t_malli$core7832.cljs$lang$type = true;
    malli.core.t_malli$core7832.cljs$lang$ctorStr = "malli.core/t_malli$core7832";
    malli.core.t_malli$core7832.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
      return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7832");
    };
    malli.core.__GT_t_malli$core7832 = function malli$core$_fn_schema_$___GT_t_malli$core7832(meta7833) {
      return new malli.core.t_malli$core7832(meta7833);
    };
  }
  return new malli.core.t_malli$core7832(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._maybe_schema = function malli$core$_maybe_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7840 !== "undefined") {
  } else {
    malli.core.t_malli$core7840 = function(meta7841) {
      this.meta7841 = meta7841;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7840.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7842, meta7841__$1) {
      var self__ = this;
      var _7842__$1 = this;
      return new malli.core.t_malli$core7840(meta7841__$1);
    };
    malli.core.t_malli$core7840.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7842) {
      var self__ = this;
      var _7842__$1 = this;
      return self__.meta7841;
    };
    malli.core.t_malli$core7840.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7840.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_child_ast.call(null, parent__$1, ast, options);
    };
    malli.core.t_malli$core7840.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7840.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "maybe", "maybe", -314397560);
    };
    malli.core.t_malli$core7840.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core7840.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core7840.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core7840.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "maybe", "maybe", -314397560), properties, children, 1, 1);
      var vec__7843 = malli.core._vmap.call(null, function(parent__$1) {
        return function(p1__7839_SHARP_) {
          return malli.core.schema.call(null, p1__7839_SHARP_, options);
        };
      }(parent__$1), children);
      var schema = cljs.core.nth.call(null, vec__7843, 0, null);
      var children__$1 = vec__7843;
      var form = new cljs.core.Delay(function(vec__7843, schema, children__$1, parent__$1) {
        return function() {
          return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
        };
      }(vec__7843, schema, children__$1, parent__$1), null);
      var cache = malli.core._create_cache.call(null, options);
      var __GT_parser = function(vec__7843, schema, children__$1, form, cache, parent__$1) {
        return function(f) {
          var parser = f.call(null, schema);
          return function(parser, vec__7843, schema, children__$1, form, cache, parent__$1) {
            return function(x) {
              if (x == null) {
                return x;
              } else {
                return parser.call(null, x);
              }
            };
          }(parser, vec__7843, schema, children__$1, form, cache, parent__$1);
        };
      }(vec__7843, schema, children__$1, form, cache, parent__$1);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7846 !== "undefined") {
      } else {
        malli.core.t_malli$core7846 = function(form, options, meta7841, properties, schema, children, parent, __GT_parser, vec__7843, cache, meta7847) {
          this.form = form;
          this.options = options;
          this.meta7841 = meta7841;
          this.properties = properties;
          this.schema = schema;
          this.children = children;
          this.parent = parent;
          this.__GT_parser = __GT_parser;
          this.vec__7843 = vec__7843;
          this.cache = cache;
          this.meta7847 = meta7847;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core7846.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_7848, meta7847__$1) {
            var self__ = this;
            var _7848__$1 = this;
            return new malli.core.t_malli$core7846(self__.form, self__.options, self__.meta7841, self__.properties, self__.schema, self__.children, self__.parent, self__.__GT_parser, self__.vec__7843, self__.cache, meta7847__$1);
          };
        }(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7846.prototype.cljs$core$IMeta$_meta$arity$1 = function(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_7848) {
            var self__ = this;
            var _7848__$1 = this;
            return self__.meta7847;
          };
        }(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7846.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7846.prototype.malli$core$AST$_to_ast$arity$2 = function(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1) {
          return function(this$, _) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._to_child_ast.call(null, this$__$1);
          };
        }(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7846.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7846.prototype.malli$core$Schema$_validator$arity$1 = function(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            var validator = malli.core._validator.call(null, self__.schema);
            return function(validator, ___$1, vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1) {
              return function(x) {
                var or__4047__auto__ = x == null;
                if (or__4047__auto__) {
                  return or__4047__auto__;
                } else {
                  return validator.call(null, x);
                }
              };
            }(validator, ___$1, vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1);
          };
        }(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7846.prototype.malli$core$Schema$_options$arity$1 = function(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.options;
          };
        }(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7846.prototype.malli$core$Schema$_transformer$arity$4 = function(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1) {
          return function(this$, transformer, method, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._parent_children_transformer.call(null, this$__$1, self__.children, transformer, method, options__$1);
          };
        }(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7846.prototype.malli$core$Schema$_walk$arity$4 = function(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1) {
          return function(this$, walker, path, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._walk_indexed.call(null, this$__$1, walker, path, options__$1);
          };
        }(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7846.prototype.malli$core$Schema$_parser$arity$1 = function(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.__GT_parser.call(null, malli.core._parser);
          };
        }(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7846.prototype.malli$core$Schema$_properties$arity$1 = function(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.properties;
          };
        }(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7846.prototype.malli$core$Schema$_children$arity$1 = function(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.children;
          };
        }(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7846.prototype.malli$core$Schema$_form$arity$1 = function(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.deref.call(null, self__.form);
          };
        }(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7846.prototype.malli$core$Schema$_explainer$arity$2 = function(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_, path) {
            var self__ = this;
            var ___$1 = this;
            var explainer = malli.core._explainer.call(null, self__.schema, cljs.core.conj.call(null, path, 0));
            return function(explainer, ___$1, vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1) {
              return function malli$core$_maybe_schema_$_explain(x, in$, acc) {
                if (x == null) {
                  return acc;
                } else {
                  return explainer.call(null, x, in$, acc);
                }
              };
            }(explainer, ___$1, vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1);
          };
        }(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7846.prototype.malli$core$Schema$_unparser$arity$1 = function(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.__GT_parser.call(null, malli.core._unparser);
          };
        }(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7846.prototype.malli$core$Schema$_parent$arity$1 = function(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.parent;
          };
        }(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7846.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7846.prototype.malli$core$Cached$_cache$arity$1 = function(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.cache;
          };
        }(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7846.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7846.prototype.malli$core$LensSchema$_keep$arity$1 = function(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return null;
          };
        }(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7846.prototype.malli$core$LensSchema$_get$arity$3 = function(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1) {
          return function(_, key, default$) {
            var self__ = this;
            var ___$1 = this;
            if (cljs.core._EQ_.call(null, 0, key)) {
              return self__.schema;
            } else {
              return default$;
            }
          };
        }(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7846.prototype.malli$core$LensSchema$_set$arity$3 = function(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1) {
          return function(this$, key, value) {
            var self__ = this;
            var this$__$1 = this;
            if (cljs.core._EQ_.call(null, 0, key)) {
              return malli.core._set_children.call(null, this$__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null));
            } else {
              return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "index-out-of-bounds", "malli.core/index-out-of-bounds", -371273844), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), this$__$1, new cljs.core.Keyword(null, "key", "key", -1516042587), key], null));
            }
          };
        }(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7846.getBasis = function(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1) {
          return function() {
            return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "meta7841", "meta7841", -495557594, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "schema", "schema", 58529736, null), new cljs.core.Symbol(null, "children", "children", 699969545, 
            null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core7840", "malli.core/t_malli$core7840", 1474276798, null)], null)), new cljs.core.Symbol(null, "-\x3eparser", "-\x3eparser", 1105019639, null), new cljs.core.Symbol(null, "vec__7843", "vec__7843", 1677001912, null), new cljs.core.Symbol(null, "cache", 
            "cache", 403508473, null), new cljs.core.Symbol(null, "meta7847", "meta7847", -1584720253, null)], null);
          };
        }(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.t_malli$core7846.cljs$lang$type = true;
        malli.core.t_malli$core7846.cljs$lang$ctorStr = "malli.core/t_malli$core7846";
        malli.core.t_malli$core7846.cljs$lang$ctorPrWriter = function(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1) {
          return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
            return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7846");
          };
        }(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1);
        malli.core.__GT_t_malli$core7846 = function(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1) {
          return function malli$core$_maybe_schema_$___GT_t_malli$core7846(form__$1, options__$1, meta7841__$1, properties__$1, schema__$1, children__$2, parent__$2, __GT_parser__$1, vec__7843__$1, cache__$1, meta7847) {
            return new malli.core.t_malli$core7846(form__$1, options__$1, meta7841__$1, properties__$1, schema__$1, children__$2, parent__$2, __GT_parser__$1, vec__7843__$1, cache__$1, meta7847);
          };
        }(vec__7843, schema, children__$1, form, cache, __GT_parser, parent__$1);
      }
      return new malli.core.t_malli$core7846(form, options, self__.meta7841, properties, schema, children__$1, parent__$1, __GT_parser, vec__7843, cache, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core7840.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta7841", "meta7841", -495557594, null)], null);
    };
    malli.core.t_malli$core7840.cljs$lang$type = true;
    malli.core.t_malli$core7840.cljs$lang$ctorStr = "malli.core/t_malli$core7840";
    malli.core.t_malli$core7840.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
      return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7840");
    };
    malli.core.__GT_t_malli$core7840 = function malli$core$_maybe_schema_$___GT_t_malli$core7840(meta7841) {
      return new malli.core.t_malli$core7840(meta7841);
    };
  }
  return new malli.core.t_malli$core7840(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._multi_schema = function malli$core$_multi_schema(var_args) {
  var G__7852 = arguments.length;
  switch(G__7852) {
    case 0:
      return malli.core._multi_schema.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.core._multi_schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._multi_schema.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.core._multi_schema.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "naked-keys", "naked-keys", -90769828), true], null));
};
malli.core._multi_schema.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7853 !== "undefined") {
  } else {
    malli.core.t_malli$core7853 = function(opts, meta7854) {
      this.opts = opts;
      this.meta7854 = meta7854;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7853.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7855, meta7854__$1) {
      var self__ = this;
      var _7855__$1 = this;
      return new malli.core.t_malli$core7853(self__.opts, meta7854__$1);
    };
    malli.core.t_malli$core7853.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7855) {
      var self__ = this;
      var _7855__$1 = this;
      return self__.meta7854;
    };
    malli.core.t_malli$core7853.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7853.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_entry_ast.call(null, parent__$1, ast, options);
    };
    malli.core.t_malli$core7853.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7853.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var or__4047__auto__ = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      if (cljs.core.truth_(or__4047__auto__)) {
        return or__4047__auto__;
      } else {
        return new cljs.core.Keyword(null, "multi", "multi", -190293005);
      }
    };
    malli.core.t_malli$core7853.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return (new cljs.core.Keyword(null, "type-properties", "type-properties", -1728352126)).cljs$core$IFn$_invoke$arity$1(self__.opts);
    };
    malli.core.t_malli$core7853.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core7853.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core7853.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      var opts_SINGLEQUOTE_ = cljs.core.merge.call(null, self__.opts, cljs.core.select_keys.call(null, properties, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "lazy-refs", "lazy-refs", 409178818)], null)));
      var entry_parser = malli.core._create_entry_parser.call(null, children, opts_SINGLEQUOTE_, options);
      var form = new cljs.core.Delay(function(opts_SINGLEQUOTE_, entry_parser, parent__$1) {
        return function() {
          return malli.core._create_entry_form.call(null, parent__$1, properties, entry_parser, options);
        };
      }(opts_SINGLEQUOTE_, entry_parser, parent__$1), null);
      var cache = malli.core._create_cache.call(null, options);
      var dispatch = malli.core.eval.call(null, (new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009)).cljs$core$IFn$_invoke$arity$1(properties), options);
      var dispatch_map = new cljs.core.Delay(function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, parent__$1) {
        return function() {
          return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, malli.core._entry_entries.call(null, entry_parser));
        };
      }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, parent__$1), null);
      var finder = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, parent__$1) {
        return function(p__7856) {
          var map__7857 = p__7856;
          var map__7857__$1 = (!(map__7857 == null) ? map__7857.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7857.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7857) : map__7857;
          var m = map__7857__$1;
          var default$ = cljs.core.get.call(null, map__7857__$1, new cljs.core.Keyword("malli.core", "default", "malli.core/default", -1706204176));
          return function(map__7857, map__7857__$1, m, default$, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, parent__$1) {
            return function(x) {
              return m.call(null, x, default$);
            };
          }(map__7857, map__7857__$1, m, default$, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, parent__$1);
        };
      }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, parent__$1);
      if (cljs.core.truth_(dispatch)) {
      } else {
        malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "missing-property", "malli.core/missing-property", -818756333), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009)], null));
      }
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7859 !== "undefined") {
      } else {
        malli.core.t_malli$core7859 = function(form, options, properties, children, entry_parser, parent, meta7854, opts_SINGLEQUOTE_, dispatch, cache, finder, opts, dispatch_map, meta7860) {
          this.form = form;
          this.options = options;
          this.properties = properties;
          this.children = children;
          this.entry_parser = entry_parser;
          this.parent = parent;
          this.meta7854 = meta7854;
          this.opts_SINGLEQUOTE_ = opts_SINGLEQUOTE_;
          this.dispatch = dispatch;
          this.cache = cache;
          this.finder = finder;
          this.opts = opts;
          this.dispatch_map = dispatch_map;
          this.meta7860 = meta7860;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core7859.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
          return function(_7861, meta7860__$1) {
            var self__ = this;
            var _7861__$1 = this;
            return new malli.core.t_malli$core7859(self__.form, self__.options, self__.properties, self__.children, self__.entry_parser, self__.parent, self__.meta7854, self__.opts_SINGLEQUOTE_, self__.dispatch, self__.cache, self__.finder, self__.opts, self__.dispatch_map, meta7860__$1);
          };
        }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
        malli.core.t_malli$core7859.prototype.cljs$core$IMeta$_meta$arity$1 = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
          return function(_7861) {
            var self__ = this;
            var _7861__$1 = this;
            return self__.meta7860;
          };
        }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
        malli.core.t_malli$core7859.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7859.prototype.malli$core$AST$_to_ast$arity$2 = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
          return function(this$, _) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._entry_ast.call(null, this$__$1, malli.core._entry_keyset.call(null, self__.entry_parser));
          };
        }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
        malli.core.t_malli$core7859.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7859.prototype.malli$core$Schema$_validator$arity$1 = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            var find = self__.finder.call(null, cljs.core.reduce_kv.call(null, function(___$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
              return function(acc, k, s) {
                return cljs.core.assoc.call(null, acc, k, malli.core._validator.call(null, s));
              };
            }(___$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1), cljs.core.PersistentArrayMap.EMPTY, cljs.core.deref.call(null, self__.dispatch_map)));
            return function(find, ___$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
              return function(x) {
                var temp__5718__auto__ = find.call(null, self__.dispatch.call(null, x));
                if (cljs.core.truth_(temp__5718__auto__)) {
                  var validator = temp__5718__auto__;
                  return validator.call(null, x);
                } else {
                  return false;
                }
              };
            }(find, ___$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
          };
        }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
        malli.core.t_malli$core7859.prototype.malli$core$Schema$_options$arity$1 = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.options;
          };
        }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
        malli.core.t_malli$core7859.prototype.malli$core$Schema$_transformer$arity$4 = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
          return function(this$, transformer, method, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            var this_transformer = malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1);
            var __GT_children = cljs.core.reduce_kv.call(null, function(this_transformer, this$__$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
              return function(acc, k, s) {
                var t = malli.core._transformer.call(null, s, transformer, method, options__$1);
                var G__7862 = acc;
                if (cljs.core.truth_(t)) {
                  return cljs.core.assoc.call(null, G__7862, k, t);
                } else {
                  return G__7862;
                }
              };
            }(this_transformer, this$__$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1), cljs.core.PersistentArrayMap.EMPTY, cljs.core.deref.call(null, self__.dispatch_map));
            var find = self__.finder.call(null, __GT_children);
            var child_transformer = cljs.core.seq.call(null, __GT_children) ? function(this_transformer, __GT_children, find, this$__$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
              return function(x) {
                var temp__5722__auto__ = find.call(null, self__.dispatch.call(null, x));
                if (temp__5722__auto__ == null) {
                  return x;
                } else {
                  var t = temp__5722__auto__;
                  return t.call(null, x);
                }
              };
            }(this_transformer, __GT_children, find, this$__$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) : null;
            return malli.core._intercepting.call(null, this_transformer, child_transformer);
          };
        }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
        malli.core.t_malli$core7859.prototype.malli$core$Schema$_walk$arity$4 = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
          return function(this$, walker, path, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._walk_entries.call(null, this$__$1, walker, path, options__$1);
          };
        }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
        malli.core.t_malli$core7859.prototype.malli$core$Schema$_parser$arity$1 = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            var parse = function(___$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
              return function(k, s) {
                var p = malli.core._parser.call(null, s);
                return function(p, ___$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
                  return function(x) {
                    return malli.impl.util._map_valid.call(null, function(p, ___$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
                      return function(p1__7850_SHARP_) {
                        return malli.impl.util._tagged.call(null, k, p1__7850_SHARP_);
                      };
                    }(p, ___$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1), p.call(null, x));
                  };
                }(p, ___$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
              };
            }(___$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
            var find = self__.finder.call(null, cljs.core.reduce_kv.call(null, function(parse, ___$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
              return function(acc, k, s) {
                return cljs.core.assoc.call(null, acc, k, parse.call(null, k, s));
              };
            }(parse, ___$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1), cljs.core.PersistentArrayMap.EMPTY, cljs.core.deref.call(null, self__.dispatch_map)));
            return function(parse, find, ___$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
              return function(x) {
                var temp__5722__auto__ = find.call(null, self__.dispatch.call(null, x));
                if (temp__5722__auto__ == null) {
                  return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
                } else {
                  var parser = temp__5722__auto__;
                  return parser.call(null, x);
                }
              };
            }(parse, find, ___$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
          };
        }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
        malli.core.t_malli$core7859.prototype.malli$core$Schema$_properties$arity$1 = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.properties;
          };
        }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
        malli.core.t_malli$core7859.prototype.malli$core$Schema$_children$arity$1 = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return malli.core._entry_children.call(null, self__.entry_parser);
          };
        }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
        malli.core.t_malli$core7859.prototype.malli$core$Schema$_form$arity$1 = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.deref.call(null, self__.form);
          };
        }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
        malli.core.t_malli$core7859.prototype.malli$core$Schema$_explainer$arity$2 = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
          return function(this$, path) {
            var self__ = this;
            var this$__$1 = this;
            var find = self__.finder.call(null, cljs.core.reduce.call(null, function(this$__$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
              return function(acc, p__7863) {
                var vec__7864 = p__7863;
                var k = cljs.core.nth.call(null, vec__7864, 0, null);
                var s = cljs.core.nth.call(null, vec__7864, 1, null);
                return cljs.core.assoc.call(null, acc, k, malli.core._explainer.call(null, s, cljs.core.conj.call(null, path, k)));
              };
            }(this$__$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1), cljs.core.PersistentArrayMap.EMPTY, malli.core._entries.call(null, this$__$1)));
            var __GT_path = self__.dispatch instanceof cljs.core.Keyword ? function(find, this$__$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
              return function(p1__7849_SHARP_) {
                return cljs.core.conj.call(null, p1__7849_SHARP_, self__.dispatch);
              };
            }(find, this$__$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) : cljs.core.identity;
            return function(find, __GT_path, this$__$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
              return function(x, in$, acc) {
                var temp__5718__auto__ = find.call(null, self__.dispatch.call(null, x));
                if (cljs.core.truth_(temp__5718__auto__)) {
                  var explainer = temp__5718__auto__;
                  return explainer.call(null, x, in$, acc);
                } else {
                  return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, __GT_path.call(null, path), __GT_path.call(null, in$), this$__$1, x, new cljs.core.Keyword("malli.core", "invalid-dispatch-value", "malli.core/invalid-dispatch-value", 516707675)));
                }
              };
            }(find, __GT_path, this$__$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
          };
        }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
        malli.core.t_malli$core7859.prototype.malli$core$Schema$_unparser$arity$1 = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            var unparsers = cljs.core.reduce_kv.call(null, function(___$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
              return function(acc, k, s) {
                return cljs.core.assoc.call(null, acc, k, malli.core._unparser.call(null, s));
              };
            }(___$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1), cljs.core.PersistentArrayMap.EMPTY, cljs.core.deref.call(null, self__.dispatch_map));
            return function(unparsers, ___$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
              return function(x) {
                if (malli.impl.util._tagged_QMARK_.call(null, x)) {
                  var temp__5722__auto__ = unparsers.call(null, cljs.core.key.call(null, x));
                  if (temp__5722__auto__ == null) {
                    return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
                  } else {
                    var f = temp__5722__auto__;
                    return f.call(null, cljs.core.val.call(null, x));
                  }
                } else {
                  return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
                }
              };
            }(unparsers, ___$1, opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
          };
        }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
        malli.core.t_malli$core7859.prototype.malli$core$Schema$_parent$arity$1 = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.parent;
          };
        }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
        malli.core.t_malli$core7859.prototype.malli$core$EntrySchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7859.prototype.malli$core$EntrySchema$_entries$arity$1 = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return malli.core._entry_entries.call(null, self__.entry_parser);
          };
        }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
        malli.core.t_malli$core7859.prototype.malli$core$EntrySchema$_entry_parser$arity$1 = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.entry_parser;
          };
        }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
        malli.core.t_malli$core7859.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7859.prototype.malli$core$Cached$_cache$arity$1 = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.cache;
          };
        }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
        malli.core.t_malli$core7859.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7859.prototype.malli$core$LensSchema$_keep$arity$1 = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return null;
          };
        }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
        malli.core.t_malli$core7859.prototype.malli$core$LensSchema$_get$arity$3 = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
          return function(this$, key, default$) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._get_entries.call(null, this$__$1, key, default$);
          };
        }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
        malli.core.t_malli$core7859.prototype.malli$core$LensSchema$_set$arity$3 = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
          return function(this$, key, value) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._set_entries.call(null, this$__$1, key, value);
          };
        }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
        malli.core.t_malli$core7859.getBasis = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
          return function() {
            return new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "entry-parser", "entry-parser", -1698599125, null), cljs.core.with_meta(new cljs.core.Symbol(null, 
            "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core7853", "malli.core/t_malli$core7853", 1090747839, null)], null)), new cljs.core.Symbol(null, "meta7854", "meta7854", -290858986, null), new cljs.core.Symbol(null, "opts'", "opts'", -1154334730, null), new cljs.core.Symbol(null, "dispatch", "dispatch", -1335098760, null), new cljs.core.Symbol(null, "cache", 
            "cache", 403508473, null), new cljs.core.Symbol(null, "finder", "finder", 1492719066, null), new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.Symbol(null, "dispatch-map", "dispatch-map", 1489026142, null), new cljs.core.Symbol(null, "meta7860", "meta7860", 1577843325, null)], null);
          };
        }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
        malli.core.t_malli$core7859.cljs$lang$type = true;
        malli.core.t_malli$core7859.cljs$lang$ctorStr = "malli.core/t_malli$core7859";
        malli.core.t_malli$core7859.cljs$lang$ctorPrWriter = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
          return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
            return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7859");
          };
        }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
        malli.core.__GT_t_malli$core7859 = function(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1) {
          return function malli$core$__GT_t_malli$core7859(form__$1, options__$1, properties__$1, children__$1, entry_parser__$1, parent__$2, meta7854__$1, opts_SINGLEQUOTE___$1, dispatch__$1, cache__$1, finder__$1, opts__$1, dispatch_map__$1, meta7860) {
            return new malli.core.t_malli$core7859(form__$1, options__$1, properties__$1, children__$1, entry_parser__$1, parent__$2, meta7854__$1, opts_SINGLEQUOTE___$1, dispatch__$1, cache__$1, finder__$1, opts__$1, dispatch_map__$1, meta7860);
          };
        }(opts_SINGLEQUOTE_, entry_parser, form, cache, dispatch, dispatch_map, finder, parent__$1);
      }
      return new malli.core.t_malli$core7859(form, options, properties, children, entry_parser, parent__$1, self__.meta7854, opts_SINGLEQUOTE_, dispatch, cache, finder, self__.opts, dispatch_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core7853.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.Symbol(null, "meta7854", "meta7854", -290858986, null)], null);
    };
    malli.core.t_malli$core7853.cljs$lang$type = true;
    malli.core.t_malli$core7853.cljs$lang$ctorStr = "malli.core/t_malli$core7853";
    malli.core.t_malli$core7853.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
      return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7853");
    };
    malli.core.__GT_t_malli$core7853 = function malli$core$__GT_t_malli$core7853(opts__$1, meta7854) {
      return new malli.core.t_malli$core7853(opts__$1, meta7854);
    };
  }
  return new malli.core.t_malli$core7853(opts, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._multi_schema.cljs$lang$maxFixedArity = 1;
malli.core._ref_schema = function malli$core$_ref_schema(var_args) {
  var G__7870 = arguments.length;
  switch(G__7870) {
    case 0:
      return malli.core._ref_schema.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.core._ref_schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._ref_schema.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.core._ref_schema.call(null, null);
};
malli.core._ref_schema.cljs$core$IFn$_invoke$arity$1 = function(p__7871) {
  var map__7872 = p__7871;
  var map__7872__$1 = (!(map__7872 == null) ? map__7872.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7872.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7872) : map__7872;
  var lazy = cljs.core.get.call(null, map__7872__$1, new cljs.core.Keyword(null, "lazy", "lazy", -424547181));
  var type_properties = cljs.core.get.call(null, map__7872__$1, new cljs.core.Keyword(null, "type-properties", "type-properties", -1728352126));
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7874 !== "undefined") {
  } else {
    malli.core.t_malli$core7874 = function(p__7871, map__7872, lazy, type_properties, meta7875) {
      this.p__7871 = p__7871;
      this.map__7872 = map__7872;
      this.lazy = lazy;
      this.type_properties = type_properties;
      this.meta7875 = meta7875;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7874.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__7872, map__7872__$1, lazy, type_properties) {
      return function(_7876, meta7875__$1) {
        var self__ = this;
        var _7876__$1 = this;
        return new malli.core.t_malli$core7874(self__.p__7871, self__.map__7872, self__.lazy, self__.type_properties, meta7875__$1);
      };
    }(map__7872, map__7872__$1, lazy, type_properties);
    malli.core.t_malli$core7874.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__7872, map__7872__$1, lazy, type_properties) {
      return function(_7876) {
        var self__ = this;
        var _7876__$1 = this;
        return self__.meta7875;
      };
    }(map__7872, map__7872__$1, lazy, type_properties);
    malli.core.t_malli$core7874.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7874.prototype.malli$core$AST$_from_ast$arity$3 = function(map__7872, map__7872__$1, lazy, type_properties) {
      return function(parent, ast, options) {
        var self__ = this;
        var parent__$1 = this;
        return malli.core._from_value_ast.call(null, parent__$1, ast, options);
      };
    }(map__7872, map__7872__$1, lazy, type_properties);
    malli.core.t_malli$core7874.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7874.prototype.malli$core$IntoSchema$_type$arity$1 = function(map__7872, map__7872__$1, lazy, type_properties) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return new cljs.core.Keyword(null, "ref", "ref", 1289896967);
      };
    }(map__7872, map__7872__$1, lazy, type_properties);
    malli.core.t_malli$core7874.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(map__7872, map__7872__$1, lazy, type_properties) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.type_properties;
      };
    }(map__7872, map__7872__$1, lazy, type_properties);
    malli.core.t_malli$core7874.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(map__7872, map__7872__$1, lazy, type_properties) {
      return function(parent, properties, p__7877, p__7878) {
        var self__ = this;
        var vec__7879 = p__7877;
        var ref = cljs.core.nth.call(null, vec__7879, 0, null);
        var children = vec__7879;
        var map__7882 = p__7878;
        var map__7882__$1 = (!(map__7882 == null) ? map__7882.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7882.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7882) : map__7882;
        var options = map__7882__$1;
        var allow_invalid_refs = cljs.core.get.call(null, map__7882__$1, new cljs.core.Keyword("malli.core", "allow-invalid-refs", "malli.core/allow-invalid-refs", -1863169617));
        var parent__$1 = this;
        malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "ref", "ref", 1289896967), properties, children, 1, 1);
        if (malli.core._reference_QMARK_.call(null, ref)) {
        } else {
          malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "invalid-ref", "malli.core/invalid-ref", -1109933109), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ref", "ref", 1289896967), ref], null));
        }
        var _ref = function() {
          var or__4047__auto__ = function() {
            var and__4036__auto__ = self__.lazy;
            if (cljs.core.truth_(and__4036__auto__)) {
              return malli.core._memoize.call(null, function(and__4036__auto__, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
                return function() {
                  return malli.core.schema.call(null, malli.registry._schema.call(null, malli.core._registry.call(null, options), ref), options);
                };
              }(and__4036__auto__, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties));
            } else {
              return and__4036__auto__;
            }
          }();
          if (cljs.core.truth_(or__4047__auto__)) {
            return or__4047__auto__;
          } else {
            var or__4047__auto____$1 = function() {
              var temp__5720__auto__ = malli.registry._schema.call(null, malli.core._registry.call(null, options), ref);
              if (cljs.core.truth_(temp__5720__auto__)) {
                var s = temp__5720__auto__;
                return malli.core._memoize.call(null, function(s, temp__5720__auto__, or__4047__auto__, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
                  return function() {
                    return malli.core.schema.call(null, s, options);
                  };
                }(s, temp__5720__auto__, or__4047__auto__, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties));
              } else {
                return null;
              }
            }();
            if (cljs.core.truth_(or__4047__auto____$1)) {
              return or__4047__auto____$1;
            } else {
              if (cljs.core.truth_(allow_invalid_refs)) {
                return null;
              } else {
                return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "invalid-ref", "malli.core/invalid-ref", -1109933109), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "ref", "ref", 1289896967), new cljs.core.Keyword(null, "ref", "ref", 1289896967), ref], null));
              }
            }
          }
        }();
        var children__$1 = cljs.core.vec.call(null, children);
        var form = new cljs.core.Delay(function(_ref, children__$1, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
          return function() {
            return malli.core._simple_form.call(null, parent__$1, properties, children__$1, cljs.core.identity, options);
          };
        }(_ref, children__$1, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties), null);
        var cache = malli.core._create_cache.call(null, options);
        var __GT_parser = function(_ref, children__$1, form, cache, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
          return function(f) {
            var parser = malli.core._memoize.call(null, function(_ref, children__$1, form, cache, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
              return function() {
                return f.call(null, _ref.call(null));
              };
            }(_ref, children__$1, form, cache, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties));
            return function(parser, _ref, children__$1, form, cache, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
              return function(x) {
                return parser.call(null).call(null, x);
              };
            }(parser, _ref, children__$1, form, cache, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          };
        }(_ref, children__$1, form, cache, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
        if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7884 !== "undefined") {
        } else {
          malli.core.t_malli$core7884 = function(form, p__7871, options, p__7877, properties, children, type_properties, p__7878, parent, vec__7879, ref, map__7872, map__7882, meta7875, __GT_parser, cache, lazy, allow_invalid_refs, _ref, meta7885) {
            this.form = form;
            this.p__7871 = p__7871;
            this.options = options;
            this.p__7877 = p__7877;
            this.properties = properties;
            this.children = children;
            this.type_properties = type_properties;
            this.p__7878 = p__7878;
            this.parent = parent;
            this.vec__7879 = vec__7879;
            this.ref = ref;
            this.map__7872 = map__7872;
            this.map__7882 = map__7882;
            this.meta7875 = meta7875;
            this.__GT_parser = __GT_parser;
            this.cache = cache;
            this.lazy = lazy;
            this.allow_invalid_refs = allow_invalid_refs;
            this._ref = _ref;
            this.meta7885 = meta7885;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          malli.core.t_malli$core7884.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(_7886, meta7885__$1) {
              var self__ = this;
              var _7886__$1 = this;
              return new malli.core.t_malli$core7884(self__.form, self__.p__7871, self__.options, self__.p__7877, self__.properties, self__.children, self__.type_properties, self__.p__7878, self__.parent, self__.vec__7879, self__.ref, self__.map__7872, self__.map__7882, self__.meta7875, self__.__GT_parser, self__.cache, self__.lazy, self__.allow_invalid_refs, self__._ref, meta7885__$1);
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.cljs$core$IMeta$_meta$arity$1 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(_7886) {
              var self__ = this;
              var _7886__$1 = this;
              return self__.meta7885;
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core7884.prototype.malli$core$AST$_to_ast$arity$2 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(this$, _) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core._to_value_ast.call(null, this$__$1);
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core7884.prototype.malli$core$Schema$_validator$arity$1 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var validator = malli.core._memoize.call(null, function(___$1, _ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
                return function() {
                  return malli.core._validator.call(null, self__._ref.call(null));
                };
              }(___$1, _ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties));
              return function(validator, ___$1, _ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
                return function(x) {
                  return validator.call(null).call(null, x);
                };
              }(validator, ___$1, _ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$Schema$_options$arity$1 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.options;
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$Schema$_transformer$arity$4 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(this$, transformer, method, options__$1) {
              var self__ = this;
              var this$__$1 = this;
              var this_transformer = malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1);
              var deref_transformer = malli.core._memoize.call(null, function(this_transformer, this$__$1, _ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
                return function() {
                  return malli.core._transformer.call(null, self__._ref.call(null), transformer, method, options__$1);
                };
              }(this_transformer, this$__$1, _ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties));
              return malli.core._intercepting.call(null, this_transformer, function(this_transformer, deref_transformer, this$__$1, _ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
                return function(x) {
                  var temp__5722__auto__ = deref_transformer.call(null);
                  if (temp__5722__auto__ == null) {
                    return x;
                  } else {
                    var t = temp__5722__auto__;
                    return t.call(null, x);
                  }
                };
              }(this_transformer, deref_transformer, this$__$1, _ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties));
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$Schema$_walk$arity$4 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(this$, walker, path, options__$1) {
              var self__ = this;
              var this$__$1 = this;
              var accept = function(this$__$1, _ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
                return function() {
                  return malli.core._inner.call(null, walker, self__._ref.call(null), cljs.core.into.call(null, path, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)), malli.core._update.call(null, options__$1, new cljs.core.Keyword("malli.core", "walked-refs", "malli.core/walked-refs", -2010140962), function(this$__$1, _ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, 
                  map__7872, map__7872__$1, lazy, type_properties) {
                    return function(p1__7868_SHARP_) {
                      return cljs.core.conj.call(null, function() {
                        var or__4047__auto__ = p1__7868_SHARP_;
                        if (cljs.core.truth_(or__4047__auto__)) {
                          return or__4047__auto__;
                        } else {
                          return cljs.core.PersistentHashSet.EMPTY;
                        }
                      }(), self__.ref);
                    };
                  }(this$__$1, _ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties)));
                };
              }(this$__$1, _ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
              if (cljs.core.truth_(malli.core._accept.call(null, walker, this$__$1, path, options__$1))) {
                if (cljs.core.not.call(null, malli.core._boolean_fn.call(null, (new cljs.core.Keyword("malli.core", "walk-refs", "malli.core/walk-refs", 755904802)).cljs$core$IFn$_invoke$arity$2(options__$1, false)).call(null, self__.ref)) || cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("malli.core", "walked-refs", "malli.core/walked-refs", -2010140962)).cljs$core$IFn$_invoke$arity$1(options__$1), self__.ref)) {
                  return malli.core._outer.call(null, walker, this$__$1, path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ref], null), options__$1);
                } else {
                  return malli.core._outer.call(null, walker, this$__$1, path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [accept.call(null)], null), options__$1);
                }
              } else {
                return null;
              }
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$Schema$_parser$arity$1 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.__GT_parser.call(null, malli.core._parser);
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$Schema$_properties$arity$1 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.properties;
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$Schema$_children$arity$1 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.children;
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$Schema$_form$arity$1 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return cljs.core.deref.call(null, self__.form);
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$Schema$_explainer$arity$2 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(_, path) {
              var self__ = this;
              var ___$1 = this;
              var explainer = malli.core._memoize.call(null, function(___$1, _ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
                return function() {
                  return malli.core._explainer.call(null, self__._ref.call(null), cljs.core.conj.call(null, path, 0));
                };
              }(___$1, _ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties));
              return function(explainer, ___$1, _ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
                return function(x, in$, acc) {
                  return explainer.call(null).call(null, x, in$, acc);
                };
              }(explainer, ___$1, _ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$Schema$_unparser$arity$1 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.__GT_parser.call(null, malli.core._unparser);
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$Schema$_parent$arity$1 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.parent;
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core7884.prototype.malli$core$Cached$_cache$arity$1 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.cache;
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core7884.prototype.malli$core$LensSchema$_get$arity$3 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(_, key, default$) {
              var self__ = this;
              var ___$1 = this;
              if (cljs.core._EQ_.call(null, key, 0)) {
                return malli.core._pointer.call(null, self__.ref, self__._ref.call(null), self__.options);
              } else {
                return default$;
              }
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$LensSchema$_keep$arity$1 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return null;
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$LensSchema$_set$arity$3 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(this$, key, value) {
              var self__ = this;
              var this$__$1 = this;
              if (cljs.core._EQ_.call(null, key, 0)) {
                return malli.core._set_children.call(null, this$__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null));
              } else {
                return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "index-out-of-bounds", "malli.core/index-out-of-bounds", -371273844), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), this$__$1, new cljs.core.Keyword(null, "key", "key", -1516042587), key], null));
              }
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$RefSchema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core7884.prototype.malli$core$RefSchema$_ref$arity$1 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.ref;
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$RefSchema$_deref$arity$1 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__._ref.call(null);
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$RegexSchema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core7884.prototype.malli$core$RegexSchema$_regex_op_QMARK_$arity$1 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return false;
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$RegexSchema$_regex_validator$arity$1 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(this$) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "potentially-recursive-seqex", "malli.core/potentially-recursive-seqex", -1574993850), this$__$1);
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$RegexSchema$_regex_explainer$arity$2 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(this$, _) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "potentially-recursive-seqex", "malli.core/potentially-recursive-seqex", -1574993850), this$__$1);
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$RegexSchema$_regex_parser$arity$1 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(this$) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "potentially-recursive-seqex", "malli.core/potentially-recursive-seqex", -1574993850), this$__$1);
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$RegexSchema$_regex_unparser$arity$1 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(this$) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "potentially-recursive-seqex", "malli.core/potentially-recursive-seqex", -1574993850), this$__$1);
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$RegexSchema$_regex_transformer$arity$4 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(this$, _, ___$1, ___$2) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "potentially-recursive-seqex", "malli.core/potentially-recursive-seqex", -1574993850), this$__$1);
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.prototype.malli$core$RegexSchema$_regex_min_max$arity$1 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(this$) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "potentially-recursive-seqex", "malli.core/potentially-recursive-seqex", -1574993850), this$__$1);
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.getBasis = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function() {
              return new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "p__7871", "p__7871", 320552576, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "p__7877", "p__7877", -1556425533, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "children", "children", 699969545, 
              null), new cljs.core.Symbol(null, "type-properties", "type-properties", -87820599, null), new cljs.core.Symbol(null, "p__7878", "p__7878", 797295402, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core7874", "malli.core/t_malli$core7874", -2000897567, null)], null)), new cljs.core.Symbol(null, "vec__7879", 
              "vec__7879", 1988594252, null), new cljs.core.Symbol(null, "ref", "ref", -1364538802, null), new cljs.core.Symbol(null, "map__7872", "map__7872", 512511094, null), new cljs.core.Symbol(null, "map__7882", "map__7882", 665127670, null), new cljs.core.Symbol(null, "meta7875", "meta7875", -1985766057, null), new cljs.core.Symbol(null, "-\x3eparser", "-\x3eparser", 1105019639, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "lazy", "lazy", 
              1215984346, null), new cljs.core.Symbol(null, "allow-invalid-refs", "allow-invalid-refs", -815552802, null), new cljs.core.Symbol(null, "-ref", "-ref", -1337394753, null), new cljs.core.Symbol(null, "meta7885", "meta7885", 421238560, null)], null);
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.t_malli$core7884.cljs$lang$type = true;
          malli.core.t_malli$core7884.cljs$lang$ctorStr = "malli.core/t_malli$core7884";
          malli.core.t_malli$core7884.cljs$lang$ctorPrWriter = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
              return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7884");
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
          malli.core.__GT_t_malli$core7884 = function(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties) {
            return function malli$core$__GT_t_malli$core7884(form__$1, p__7871__$1, options__$1, p__7877__$1, properties__$1, children__$2, type_properties__$1, p__7878__$1, parent__$2, vec__7879__$1, ref__$1, map__7872__$1, map__7882__$2, meta7875__$1, __GT_parser__$1, cache__$1, lazy__$1, allow_invalid_refs__$1, _ref__$1, meta7885) {
              return new malli.core.t_malli$core7884(form__$1, p__7871__$1, options__$1, p__7877__$1, properties__$1, children__$2, type_properties__$1, p__7878__$1, parent__$2, vec__7879__$1, ref__$1, map__7872__$1, map__7882__$2, meta7875__$1, __GT_parser__$1, cache__$1, lazy__$1, allow_invalid_refs__$1, _ref__$1, meta7885);
            };
          }(_ref, children__$1, form, cache, __GT_parser, parent__$1, vec__7879, ref, children, map__7882, map__7882__$1, options, allow_invalid_refs, map__7872, map__7872__$1, lazy, type_properties);
        }
        return new malli.core.t_malli$core7884(form, self__.p__7871, options, p__7877, properties, children__$1, self__.type_properties, p__7878, parent__$1, vec__7879, ref, self__.map__7872, map__7882__$1, self__.meta7875, __GT_parser, cache, self__.lazy, allow_invalid_refs, _ref, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
      };
    }(map__7872, map__7872__$1, lazy, type_properties);
    malli.core.t_malli$core7874.getBasis = function(map__7872, map__7872__$1, lazy, type_properties) {
      return function() {
        return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p__7871", "p__7871", 320552576, null), new cljs.core.Symbol(null, "map__7872", "map__7872", 512511094, null), new cljs.core.Symbol(null, "lazy", "lazy", 1215984346, null), new cljs.core.Symbol(null, "type-properties", "type-properties", -87820599, null), new cljs.core.Symbol(null, "meta7875", "meta7875", -1985766057, null)], null);
      };
    }(map__7872, map__7872__$1, lazy, type_properties);
    malli.core.t_malli$core7874.cljs$lang$type = true;
    malli.core.t_malli$core7874.cljs$lang$ctorStr = "malli.core/t_malli$core7874";
    malli.core.t_malli$core7874.cljs$lang$ctorPrWriter = function(map__7872, map__7872__$1, lazy, type_properties) {
      return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
        return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7874");
      };
    }(map__7872, map__7872__$1, lazy, type_properties);
    malli.core.__GT_t_malli$core7874 = function(map__7872, map__7872__$1, lazy, type_properties) {
      return function malli$core$__GT_t_malli$core7874(p__7871__$1, map__7872__$2, lazy__$1, type_properties__$1, meta7875) {
        return new malli.core.t_malli$core7874(p__7871__$1, map__7872__$2, lazy__$1, type_properties__$1, meta7875);
      };
    }(map__7872, map__7872__$1, lazy, type_properties);
  }
  return new malli.core.t_malli$core7874(p__7871, map__7872__$1, lazy, type_properties, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._ref_schema.cljs$lang$maxFixedArity = 1;
malli.core._schema_schema = function malli$core$_schema_schema(p__7889) {
  var map__7890 = p__7889;
  var map__7890__$1 = (!(map__7890 == null) ? map__7890.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7890.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7890) : map__7890;
  var id = cljs.core.get.call(null, map__7890__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  var raw = cljs.core.get.call(null, map__7890__$1, new cljs.core.Keyword(null, "raw", "raw", 1604651272));
  var internal = function() {
    var or__4047__auto__ = id;
    if (cljs.core.truth_(or__4047__auto__)) {
      return or__4047__auto__;
    } else {
      return raw;
    }
  }();
  var type = cljs.core.truth_(internal) ? new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863) : new cljs.core.Keyword(null, "schema", "schema", -1582001791);
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7892 !== "undefined") {
  } else {
    malli.core.t_malli$core7892 = function(p__7889, map__7890, id, raw, internal, type, meta7893) {
      this.p__7889 = p__7889;
      this.map__7890 = map__7890;
      this.id = id;
      this.raw = raw;
      this.internal = internal;
      this.type = type;
      this.meta7893 = meta7893;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7892.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(internal, type, map__7890, map__7890__$1, id, raw) {
      return function(_7894, meta7893__$1) {
        var self__ = this;
        var _7894__$1 = this;
        return new malli.core.t_malli$core7892(self__.p__7889, self__.map__7890, self__.id, self__.raw, self__.internal, self__.type, meta7893__$1);
      };
    }(internal, type, map__7890, map__7890__$1, id, raw);
    malli.core.t_malli$core7892.prototype.cljs$core$IMeta$_meta$arity$1 = function(internal, type, map__7890, map__7890__$1, id, raw) {
      return function(_7894) {
        var self__ = this;
        var _7894__$1 = this;
        return self__.meta7893;
      };
    }(internal, type, map__7890, map__7890__$1, id, raw);
    malli.core.t_malli$core7892.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7892.prototype.malli$core$AST$_from_ast$arity$3 = function(internal, type, map__7890, map__7890__$1, id, raw) {
      return function(parent, ast, options) {
        var self__ = this;
        var parent__$1 = this;
        return (cljs.core.truth_(self__.internal) ? malli.core._from_value_ast : malli.core._from_child_ast).call(null, parent__$1, ast, options);
      };
    }(internal, type, map__7890, map__7890__$1, id, raw);
    malli.core.t_malli$core7892.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7892.prototype.malli$core$IntoSchema$_type$arity$1 = function(internal, type, map__7890, map__7890__$1, id, raw) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.type;
      };
    }(internal, type, map__7890, map__7890__$1, id, raw);
    malli.core.t_malli$core7892.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(internal, type, map__7890, map__7890__$1, id, raw) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return null;
      };
    }(internal, type, map__7890, map__7890__$1, id, raw);
    malli.core.t_malli$core7892.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(internal, type, map__7890, map__7890__$1, id, raw) {
      return function(_, ___$1) {
        var self__ = this;
        var ___$2 = this;
        return null;
      };
    }(internal, type, map__7890, map__7890__$1, id, raw);
    malli.core.t_malli$core7892.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(internal, type, map__7890, map__7890__$1, id, raw) {
      return function(_, ___$1) {
        var self__ = this;
        var ___$2 = this;
        return null;
      };
    }(internal, type, map__7890, map__7890__$1, id, raw);
    malli.core.t_malli$core7892.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(internal, type, map__7890, map__7890__$1, id, raw) {
      return function(parent, properties, children, options) {
        var self__ = this;
        var parent__$1 = this;
        malli.core._check_children_BANG_.call(null, self__.type, properties, children, 1, 1);
        var children__$1 = malli.core._vmap.call(null, function(parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
          return function(p1__7888_SHARP_) {
            return malli.core.schema.call(null, p1__7888_SHARP_, options);
          };
        }(parent__$1, internal, type, map__7890, map__7890__$1, id, raw), children);
        var child = cljs.core.nth.call(null, children__$1, 0);
        var form = new cljs.core.Delay(function(children__$1, child, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
          return function() {
            var or__4047__auto__ = function() {
              var and__4036__auto__ = cljs.core.empty_QMARK_.call(null, properties);
              if (and__4036__auto__) {
                var or__4047__auto__ = self__.id;
                if (cljs.core.truth_(or__4047__auto__)) {
                  return or__4047__auto__;
                } else {
                  var and__4036__auto____$1 = self__.raw;
                  if (cljs.core.truth_(and__4036__auto____$1)) {
                    return malli.core._form.call(null, child);
                  } else {
                    return and__4036__auto____$1;
                  }
                }
              } else {
                return and__4036__auto__;
              }
            }();
            if (cljs.core.truth_(or__4047__auto__)) {
              return or__4047__auto__;
            } else {
              return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
            }
          };
        }(children__$1, child, parent__$1, internal, type, map__7890, map__7890__$1, id, raw), null);
        var cache = malli.core._create_cache.call(null, options);
        if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7895 !== "undefined") {
        } else {
          malli.core.t_malli$core7895 = function(form, options, child, properties, children, p__7889, parent, raw, map__7890, type, meta7893, internal, cache, id, meta7896) {
            this.form = form;
            this.options = options;
            this.child = child;
            this.properties = properties;
            this.children = children;
            this.p__7889 = p__7889;
            this.parent = parent;
            this.raw = raw;
            this.map__7890 = map__7890;
            this.type = type;
            this.meta7893 = meta7893;
            this.internal = internal;
            this.cache = cache;
            this.id = id;
            this.meta7896 = meta7896;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          malli.core.t_malli$core7895.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(_7897, meta7896__$1) {
              var self__ = this;
              var _7897__$1 = this;
              return new malli.core.t_malli$core7895(self__.form, self__.options, self__.child, self__.properties, self__.children, self__.p__7889, self__.parent, self__.raw, self__.map__7890, self__.type, self__.meta7893, self__.internal, self__.cache, self__.id, meta7896__$1);
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.cljs$core$IMeta$_meta$arity$1 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(_7897) {
              var self__ = this;
              var _7897__$1 = this;
              return self__.meta7896;
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core7895.prototype.malli$core$AST$_to_ast$arity$2 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(this$, _) {
              var self__ = this;
              var this$__$1 = this;
              if (cljs.core.truth_(self__.id)) {
                return malli.core._ast.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type, new cljs.core.Keyword(null, "value", "value", 305978217), self__.id], null), malli.core._properties.call(null, this$__$1), malli.core._options.call(null, this$__$1));
              } else {
                if (cljs.core.truth_(self__.raw)) {
                  return malli.core._to_value_ast.call(null, this$__$1);
                } else {
                  return malli.core._to_child_ast.call(null, this$__$1);
                }
              }
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core7895.prototype.malli$core$Schema$_validator$arity$1 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return malli.core._validator.call(null, self__.child);
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$Schema$_options$arity$1 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.options;
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$Schema$_transformer$arity$4 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(this$, transformer, method, options__$1) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core._parent_children_transformer.call(null, this$__$1, self__.children, transformer, method, options__$1);
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$Schema$_walk$arity$4 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(this$, walker, path, options__$1) {
              var self__ = this;
              var this$__$1 = this;
              if (cljs.core.truth_(malli.core._accept.call(null, walker, this$__$1, path, options__$1))) {
                if (cljs.core.truth_(function() {
                  var or__4047__auto__ = cljs.core.not.call(null, self__.id);
                  if (or__4047__auto__) {
                    return or__4047__auto__;
                  } else {
                    return malli.core._boolean_fn.call(null, (new cljs.core.Keyword("malli.core", "walk-schema-refs", "malli.core/walk-schema-refs", -1140065954)).cljs$core$IFn$_invoke$arity$2(options__$1, false)).call(null, self__.id);
                  }
                }())) {
                  return malli.core._outer.call(null, walker, this$__$1, path, malli.core._inner_indexed.call(null, walker, path, self__.children, options__$1), options__$1);
                } else {
                  return malli.core._outer.call(null, walker, this$__$1, path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.id], null), options__$1);
                }
              } else {
                return null;
              }
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$Schema$_parser$arity$1 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return malli.core._parser.call(null, self__.child);
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$Schema$_properties$arity$1 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.properties;
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$Schema$_children$arity$1 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.children;
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$Schema$_form$arity$1 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return cljs.core.deref.call(null, self__.form);
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$Schema$_explainer$arity$2 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(_, path) {
              var self__ = this;
              var ___$1 = this;
              return malli.core._explainer.call(null, self__.child, cljs.core.conj.call(null, path, 0));
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$Schema$_unparser$arity$1 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return malli.core._unparser.call(null, self__.child);
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$Schema$_parent$arity$1 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.parent;
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core7895.prototype.malli$core$Cached$_cache$arity$1 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.cache;
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core7895.prototype.malli$core$LensSchema$_keep$arity$1 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return null;
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$LensSchema$_get$arity$3 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(_, key, default$) {
              var self__ = this;
              var ___$1 = this;
              if (cljs.core._EQ_.call(null, key, 0)) {
                return self__.child;
              } else {
                return default$;
              }
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$LensSchema$_set$arity$3 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(this$, key, value) {
              var self__ = this;
              var this$__$1 = this;
              if (cljs.core._EQ_.call(null, key, 0)) {
                return malli.core._set_children.call(null, this$__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null));
              } else {
                return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "index-out-of-bounds", "malli.core/index-out-of-bounds", -371273844), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), this$__$1, new cljs.core.Keyword(null, "key", "key", -1516042587), key], null));
              }
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$RefSchema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core7895.prototype.malli$core$RefSchema$_ref$arity$1 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.id;
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$RefSchema$_deref$arity$1 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.child;
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$RegexSchema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core7895.prototype.malli$core$RegexSchema$_regex_op_QMARK_$arity$1 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return false;
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$RegexSchema$_regex_validator$arity$1 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              if (cljs.core.truth_(self__.internal)) {
                return malli.core._regex_validator.call(null, self__.child);
              } else {
                return malli.impl.regex.item_validator.call(null, malli.core._validator.call(null, self__.child));
              }
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$RegexSchema$_regex_explainer$arity$2 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(_, path) {
              var self__ = this;
              var ___$1 = this;
              if (cljs.core.truth_(self__.internal)) {
                return malli.core._regex_explainer.call(null, self__.child, path);
              } else {
                return malli.impl.regex.item_explainer.call(null, path, self__.child, malli.core._explainer.call(null, self__.child, path));
              }
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$RegexSchema$_regex_parser$arity$1 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              if (cljs.core.truth_(self__.internal)) {
                return malli.core._regex_parser.call(null, self__.child);
              } else {
                return malli.impl.regex.item_parser.call(null, malli.core.parser.call(null, self__.child));
              }
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$RegexSchema$_regex_unparser$arity$1 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              if (cljs.core.truth_(self__.internal)) {
                return malli.core._regex_unparser.call(null, self__.child);
              } else {
                return malli.impl.regex.item_unparser.call(null, malli.core.unparser.call(null, self__.child));
              }
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$RegexSchema$_regex_transformer$arity$4 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(_, transformer, method, options__$1) {
              var self__ = this;
              var ___$1 = this;
              if (cljs.core.truth_(self__.internal)) {
                return malli.core._regex_transformer.call(null, self__.child, transformer, method, options__$1);
              } else {
                return malli.impl.regex.item_transformer.call(null, method, malli.core._validator.call(null, self__.child), function() {
                  var or__4047__auto__ = malli.core._transformer.call(null, self__.child, transformer, method, options__$1);
                  if (cljs.core.truth_(or__4047__auto__)) {
                    return or__4047__auto__;
                  } else {
                    return cljs.core.identity;
                  }
                }());
              }
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.prototype.malli$core$RegexSchema$_regex_min_max$arity$1 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return malli.core._regex_min_max.call(null, self__.child);
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.getBasis = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function() {
              return new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "child", "child", -2030468224, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "p__7889", "p__7889", -1501181524, 
              null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core7892", "malli.core/t_malli$core7892", -1483932906, null)], null)), new cljs.core.Symbol(null, "raw", "raw", -1049784497, null), new cljs.core.Symbol(null, "map__7890", "map__7890", 2032985553, null), new cljs.core.Symbol(null, "type", "type", -1480165421, 
              null), new cljs.core.Symbol(null, "meta7893", "meta7893", 881024757, null), new cljs.core.Symbol(null, "internal", "internal", 785661430, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "id", "id", 252129435, null), new cljs.core.Symbol(null, "meta7896", "meta7896", 1402745213, null)], null);
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.t_malli$core7895.cljs$lang$type = true;
          malli.core.t_malli$core7895.cljs$lang$ctorStr = "malli.core/t_malli$core7895";
          malli.core.t_malli$core7895.cljs$lang$ctorPrWriter = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
              return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7895");
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
          malli.core.__GT_t_malli$core7895 = function(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw) {
            return function malli$core$_schema_schema_$___GT_t_malli$core7895(form__$1, options__$1, child__$1, properties__$1, children__$2, p__7889__$1, parent__$2, raw__$1, map__7890__$1, type__$1, meta7893__$1, internal__$1, cache__$1, id__$1, meta7896) {
              return new malli.core.t_malli$core7895(form__$1, options__$1, child__$1, properties__$1, children__$2, p__7889__$1, parent__$2, raw__$1, map__7890__$1, type__$1, meta7893__$1, internal__$1, cache__$1, id__$1, meta7896);
            };
          }(children__$1, child, form, cache, parent__$1, internal, type, map__7890, map__7890__$1, id, raw);
        }
        return new malli.core.t_malli$core7895(form, options, child, properties, children__$1, self__.p__7889, parent__$1, self__.raw, self__.map__7890, self__.type, self__.meta7893, self__.internal, cache, self__.id, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
      };
    }(internal, type, map__7890, map__7890__$1, id, raw);
    malli.core.t_malli$core7892.getBasis = function(internal, type, map__7890, map__7890__$1, id, raw) {
      return function() {
        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p__7889", "p__7889", -1501181524, null), new cljs.core.Symbol(null, "map__7890", "map__7890", 2032985553, null), new cljs.core.Symbol(null, "id", "id", 252129435, null), new cljs.core.Symbol(null, "raw", "raw", -1049784497, null), new cljs.core.Symbol(null, "internal", "internal", 785661430, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, 
        "meta7893", "meta7893", 881024757, null)], null);
      };
    }(internal, type, map__7890, map__7890__$1, id, raw);
    malli.core.t_malli$core7892.cljs$lang$type = true;
    malli.core.t_malli$core7892.cljs$lang$ctorStr = "malli.core/t_malli$core7892";
    malli.core.t_malli$core7892.cljs$lang$ctorPrWriter = function(internal, type, map__7890, map__7890__$1, id, raw) {
      return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
        return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7892");
      };
    }(internal, type, map__7890, map__7890__$1, id, raw);
    malli.core.__GT_t_malli$core7892 = function(internal, type, map__7890, map__7890__$1, id, raw) {
      return function malli$core$_schema_schema_$___GT_t_malli$core7892(p__7889__$1, map__7890__$2, id__$1, raw__$1, internal__$1, type__$1, meta7893) {
        return new malli.core.t_malli$core7892(p__7889__$1, map__7890__$2, id__$1, raw__$1, internal__$1, type__$1, meta7893);
      };
    }(internal, type, map__7890, map__7890__$1, id, raw);
  }
  return new malli.core.t_malli$core7892(p__7889, map__7890__$1, id, raw, internal, type, cljs.core.PersistentArrayMap.EMPTY);
};
malli.core.__EQ__GT__schema = function malli$core$__EQ__GT__schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7900 !== "undefined") {
  } else {
    malli.core.t_malli$core7900 = function(meta7901) {
      this.meta7901 = meta7901;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7900.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7902, meta7901__$1) {
      var self__ = this;
      var _7902__$1 = this;
      return new malli.core.t_malli$core7900(meta7901__$1);
    };
    malli.core.t_malli$core7900.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7902) {
      var self__ = this;
      var _7902__$1 = this;
      return self__.meta7901;
    };
    malli.core.t_malli$core7900.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7900.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, p__7903, options) {
      var self__ = this;
      var map__7904 = p__7903;
      var map__7904__$1 = (!(map__7904 == null) ? map__7904.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7904.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7904) : map__7904;
      var input = cljs.core.get.call(null, map__7904__$1, new cljs.core.Keyword(null, "input", "input", 556931961));
      var output = cljs.core.get.call(null, map__7904__$1, new cljs.core.Keyword(null, "output", "output", -1105869043));
      var properties = cljs.core.get.call(null, map__7904__$1, new cljs.core.Keyword(null, "properties", "properties", 685819552));
      var parent__$1 = this;
      return malli.core._into_schema.call(null, parent__$1, properties, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [malli.core.from_ast.call(null, input, options), malli.core.from_ast.call(null, output, options)], null), options);
    };
    malli.core.t_malli$core7900.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7900.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "\x3d\x3e", "\x3d\x3e", 1841166128);
    };
    malli.core.t_malli$core7900.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core7900.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, p__7906) {
      var self__ = this;
      var map__7907 = p__7906;
      var map__7907__$1 = (!(map__7907 == null) ? map__7907.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7907.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7907) : map__7907;
      var options = map__7907__$1;
      var function_checker = cljs.core.get.call(null, map__7907__$1, new cljs.core.Keyword("malli.core", "function-checker", "malli.core/function-checker", -792030936));
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "\x3d\x3e", "\x3d\x3e", 1841166128), properties, children, 2, 2);
      var vec__7909 = malli.core._vmap.call(null, function(parent__$1, map__7907, map__7907__$1, options, function_checker) {
        return function(p1__7898_SHARP_) {
          return malli.core.schema.call(null, p1__7898_SHARP_, options);
        };
      }(parent__$1, map__7907, map__7907__$1, options, function_checker), children);
      var input = cljs.core.nth.call(null, vec__7909, 0, null);
      var output = cljs.core.nth.call(null, vec__7909, 1, null);
      var children__$1 = vec__7909;
      var form = new cljs.core.Delay(function(vec__7909, input, output, children__$1, parent__$1, map__7907, map__7907__$1, options, function_checker) {
        return function() {
          return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
        };
      }(vec__7909, input, output, children__$1, parent__$1, map__7907, map__7907__$1, options, function_checker), null);
      var cache = malli.core._create_cache.call(null, options);
      var __GT_checker = cljs.core.truth_(function_checker) ? function(vec__7909, input, output, children__$1, form, cache, parent__$1, map__7907, map__7907__$1, options, function_checker) {
        return function(p1__7899_SHARP_) {
          return function_checker.call(null, p1__7899_SHARP_, options);
        };
      }(vec__7909, input, output, children__$1, form, cache, parent__$1, map__7907, map__7907__$1, options, function_checker) : cljs.core.constantly.call(null, null);
      if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "cat", "cat", -1457810207), null, new cljs.core.Keyword(null, "catn", "catn", -48807277), null], null), null)).call(null, malli.core.type.call(null, input)))) {
      } else {
        malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "invalid-input-schema", "malli.core/invalid-input-schema", -833477915), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "input", "input", 556931961), input], null));
      }
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7912 !== "undefined") {
      } else {
        malli.core.t_malli$core7912 = function(form, input, options, properties, vec__7909, children, parent, map__7907, __GT_checker, meta7901, output, function_checker, cache, p__7906, meta7913) {
          this.form = form;
          this.input = input;
          this.options = options;
          this.properties = properties;
          this.vec__7909 = vec__7909;
          this.children = children;
          this.parent = parent;
          this.map__7907 = map__7907;
          this.__GT_checker = __GT_checker;
          this.meta7901 = meta7901;
          this.output = output;
          this.function_checker = function_checker;
          this.cache = cache;
          this.p__7906 = p__7906;
          this.meta7913 = meta7913;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core7912.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
          return function(_7914, meta7913__$1) {
            var self__ = this;
            var _7914__$1 = this;
            return new malli.core.t_malli$core7912(self__.form, self__.input, self__.options, self__.properties, self__.vec__7909, self__.children, self__.parent, self__.map__7907, self__.__GT_checker, self__.meta7901, self__.output, self__.function_checker, self__.cache, self__.p__7906, meta7913__$1);
          };
        }(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
        malli.core.t_malli$core7912.prototype.cljs$core$IMeta$_meta$arity$1 = function(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
          return function(_7914) {
            var self__ = this;
            var _7914__$1 = this;
            return self__.meta7913;
          };
        }(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
        malli.core.t_malli$core7912.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7912.prototype.malli$core$AST$_to_ast$arity$2 = function(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
          return function(_, ___$1) {
            var self__ = this;
            var ___$2 = this;
            var G__7915 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "\x3d\x3e", "\x3d\x3e", 1841166128), new cljs.core.Keyword(null, "input", "input", 556931961), malli.core.ast.call(null, self__.input), new cljs.core.Keyword(null, "output", "output", -1105869043), malli.core.ast.call(null, self__.output)], null);
            if (cljs.core.truth_(self__.properties)) {
              return cljs.core.assoc.call(null, G__7915, new cljs.core.Keyword(null, "properties", "properties", 685819552), self__.properties);
            } else {
              return G__7915;
            }
          };
        }(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
        malli.core.t_malli$core7912.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7912.prototype.malli$core$Schema$_validator$arity$1 = function(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
          return function(this$) {
            var self__ = this;
            var this$__$1 = this;
            var temp__5718__auto__ = self__.__GT_checker.call(null, this$__$1);
            if (cljs.core.truth_(temp__5718__auto__)) {
              var checker = temp__5718__auto__;
              var validator = function(checker, temp__5718__auto__, this$__$1, vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
                return function(x) {
                  return checker.call(null, x) == null;
                };
              }(checker, temp__5718__auto__, this$__$1, vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
              return function(validator, checker, temp__5718__auto__, this$__$1, vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
                return function(x) {
                  var and__4036__auto__ = cljs.core.ifn_QMARK_.call(null, x);
                  if (and__4036__auto__) {
                    return validator.call(null, x);
                  } else {
                    return and__4036__auto__;
                  }
                };
              }(validator, checker, temp__5718__auto__, this$__$1, vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
            } else {
              return cljs.core.ifn_QMARK_;
            }
          };
        }(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
        malli.core.t_malli$core7912.prototype.malli$core$Schema$_options$arity$1 = function(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.options;
          };
        }(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
        malli.core.t_malli$core7912.prototype.malli$core$Schema$_transformer$arity$4 = function(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
          return function(_, ___$1, ___$2, ___$3) {
            var self__ = this;
            var ___$4 = this;
            return null;
          };
        }(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
        malli.core.t_malli$core7912.prototype.malli$core$Schema$_walk$arity$4 = function(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
          return function(this$, walker, path, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._walk_indexed.call(null, this$__$1, walker, path, options__$1);
          };
        }(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
        malli.core.t_malli$core7912.prototype.malli$core$Schema$_parser$arity$1 = function(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
          return function(this$) {
            var self__ = this;
            var this$__$1 = this;
            var validator = malli.core._validator.call(null, this$__$1);
            return function(validator, this$__$1, vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
              return function(x) {
                if (cljs.core.truth_(validator.call(null, x))) {
                  return x;
                } else {
                  return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
                }
              };
            }(validator, this$__$1, vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
          };
        }(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
        malli.core.t_malli$core7912.prototype.malli$core$Schema$_properties$arity$1 = function(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.properties;
          };
        }(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
        malli.core.t_malli$core7912.prototype.malli$core$Schema$_children$arity$1 = function(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.children;
          };
        }(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
        malli.core.t_malli$core7912.prototype.malli$core$Schema$_form$arity$1 = function(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.deref.call(null, self__.form);
          };
        }(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
        malli.core.t_malli$core7912.prototype.malli$core$Schema$_explainer$arity$2 = function(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
          return function(this$, path) {
            var self__ = this;
            var this$__$1 = this;
            var temp__5718__auto__ = self__.__GT_checker.call(null, this$__$1);
            if (cljs.core.truth_(temp__5718__auto__)) {
              var checker = temp__5718__auto__;
              return function(checker, temp__5718__auto__, this$__$1, vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
                return function malli$core$__EQ__GT__schema_$_explain(x, in$, acc) {
                  if (!cljs.core.fn_QMARK_.call(null, x)) {
                    return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x));
                  } else {
                    var temp__5718__auto____$1 = checker.call(null, x);
                    if (cljs.core.truth_(temp__5718__auto____$1)) {
                      var res = temp__5718__auto____$1;
                      return cljs.core.conj.call(null, acc, cljs.core.assoc.call(null, malli.impl.util._error.call(null, path, in$, this$__$1, x), new cljs.core.Keyword(null, "check", "check", 1226308904), res));
                    } else {
                      return acc;
                    }
                  }
                };
              }(checker, temp__5718__auto__, this$__$1, vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
            } else {
              var validator = malli.core._validator.call(null, this$__$1);
              return function(validator, temp__5718__auto__, this$__$1, vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
                return function malli$core$__EQ__GT__schema_$_explain(x, in$, acc) {
                  if (cljs.core.not.call(null, validator.call(null, x))) {
                    return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x));
                  } else {
                    return acc;
                  }
                };
              }(validator, temp__5718__auto__, this$__$1, vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
            }
          };
        }(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
        malli.core.t_malli$core7912.prototype.malli$core$Schema$_unparser$arity$1 = function(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
          return function(this$) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._parser.call(null, this$__$1);
          };
        }(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
        malli.core.t_malli$core7912.prototype.malli$core$Schema$_parent$arity$1 = function(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.parent;
          };
        }(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
        malli.core.t_malli$core7912.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7912.prototype.malli$core$Cached$_cache$arity$1 = function(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.cache;
          };
        }(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
        malli.core.t_malli$core7912.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7912.prototype.malli$core$LensSchema$_keep$arity$1 = function(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return null;
          };
        }(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
        malli.core.t_malli$core7912.prototype.malli$core$LensSchema$_get$arity$3 = function(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
          return function(_, key, default$) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.get.call(null, self__.children, key, default$);
          };
        }(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
        malli.core.t_malli$core7912.prototype.malli$core$LensSchema$_set$arity$3 = function(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
          return function(this$, key, value) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._set_assoc_children.call(null, this$__$1, key, value);
          };
        }(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
        malli.core.t_malli$core7912.getBasis = function(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
          return function() {
            return new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "input", "input", -2097503808, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "vec__7909", "vec__7909", 1549741256, null), new cljs.core.Symbol(null, "children", "children", 699969545, 
            null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core7900", "malli.core/t_malli$core7900", 438292416, null)], null)), new cljs.core.Symbol(null, "map__7907", "map__7907", 1998097486, null), new cljs.core.Symbol(null, "-\x3echecker", "-\x3echecker", 964293264, null), new cljs.core.Symbol(null, "meta7901", 
            "meta7901", 1101199443, null), new cljs.core.Symbol(null, "output", "output", 534662484, null), new cljs.core.Symbol(null, "function-checker", "function-checker", 131742871, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "p__7906", "p__7906", -2130840868, null), new cljs.core.Symbol(null, "meta7913", "meta7913", 543587982, null)], null);
          };
        }(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
        malli.core.t_malli$core7912.cljs$lang$type = true;
        malli.core.t_malli$core7912.cljs$lang$ctorStr = "malli.core/t_malli$core7912";
        malli.core.t_malli$core7912.cljs$lang$ctorPrWriter = function(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
          return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
            return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7912");
          };
        }(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
        malli.core.__GT_t_malli$core7912 = function(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker) {
          return function malli$core$__EQ__GT__schema_$___GT_t_malli$core7912(form__$1, input__$1, options__$1, properties__$1, vec__7909__$1, children__$2, parent__$2, map__7907__$2, __GT_checker__$1, meta7901__$1, output__$1, function_checker__$1, cache__$1, p__7906__$1, meta7913) {
            return new malli.core.t_malli$core7912(form__$1, input__$1, options__$1, properties__$1, vec__7909__$1, children__$2, parent__$2, map__7907__$2, __GT_checker__$1, meta7901__$1, output__$1, function_checker__$1, cache__$1, p__7906__$1, meta7913);
          };
        }(vec__7909, input, output, children__$1, form, cache, __GT_checker, parent__$1, map__7907, map__7907__$1, options, function_checker);
      }
      return new malli.core.t_malli$core7912(form, input, options, properties, vec__7909, children__$1, parent__$1, map__7907__$1, __GT_checker, self__.meta7901, output, function_checker, cache, p__7906, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core7900.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta7901", "meta7901", 1101199443, null)], null);
    };
    malli.core.t_malli$core7900.cljs$lang$type = true;
    malli.core.t_malli$core7900.cljs$lang$ctorStr = "malli.core/t_malli$core7900";
    malli.core.t_malli$core7900.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
      return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7900");
    };
    malli.core.__GT_t_malli$core7900 = function malli$core$__EQ__GT__schema_$___GT_t_malli$core7900(meta7901) {
      return new malli.core.t_malli$core7900(meta7901);
    };
  }
  return new malli.core.t_malli$core7900(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._function_schema = function malli$core$_function_schema(_) {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7919 !== "undefined") {
  } else {
    malli.core.t_malli$core7919 = function(_, meta7920) {
      this._ = _;
      this.meta7920 = meta7920;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7919.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7921, meta7920__$1) {
      var self__ = this;
      var _7921__$1 = this;
      return new malli.core.t_malli$core7919(self__._, meta7920__$1);
    };
    malli.core.t_malli$core7919.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7921) {
      var self__ = this;
      var _7921__$1 = this;
      return self__.meta7920;
    };
    malli.core.t_malli$core7919.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7919.prototype.malli$core$IntoSchema$_type$arity$1 = function(___$1) {
      var self__ = this;
      var ___$2 = this;
      return new cljs.core.Keyword(null, "function", "function", -2127255473);
    };
    malli.core.t_malli$core7919.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core7919.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(___$1, ___$2) {
      var self__ = this;
      var ___$3 = this;
      return null;
    };
    malli.core.t_malli$core7919.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(___$1, ___$2) {
      var self__ = this;
      var ___$3 = this;
      return null;
    };
    malli.core.t_malli$core7919.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, p__7922) {
      var self__ = this;
      var map__7923 = p__7922;
      var map__7923__$1 = (!(map__7923 == null) ? map__7923.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7923.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7923) : map__7923;
      var options = map__7923__$1;
      var function_checker = cljs.core.get.call(null, map__7923__$1, new cljs.core.Keyword("malli.core", "function-checker", "malli.core/function-checker", -792030936));
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "function", "function", -2127255473), properties, children, 1, null);
      var children__$1 = malli.core._vmap.call(null, function(parent__$1, map__7923, map__7923__$1, options, function_checker) {
        return function(p1__7916_SHARP_) {
          return malli.core.schema.call(null, p1__7916_SHARP_, options);
        };
      }(parent__$1, map__7923, map__7923__$1, options, function_checker), children);
      var form = new cljs.core.Delay(function(children__$1, parent__$1, map__7923, map__7923__$1, options, function_checker) {
        return function() {
          return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
        };
      }(children__$1, parent__$1, map__7923, map__7923__$1, options, function_checker), null);
      var cache = malli.core._create_cache.call(null, options);
      var __GT_checker = cljs.core.truth_(function_checker) ? function(children__$1, form, cache, parent__$1, map__7923, map__7923__$1, options, function_checker) {
        return function(p1__7917_SHARP_) {
          return function_checker.call(null, p1__7917_SHARP_, options);
        };
      }(children__$1, form, cache, parent__$1, map__7923, map__7923__$1, options, function_checker) : cljs.core.constantly.call(null, null);
      if (cljs.core.every_QMARK_.call(null, function(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
        return function(p1__7918_SHARP_) {
          return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "\x3d\x3e", "\x3d\x3e", 1841166128), malli.core.type.call(null, p1__7918_SHARP_));
        };
      }(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker), children__$1)) {
      } else {
        malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "non-function-childs", "malli.core/non-function-childs", -1591582832), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "children", "children", -940561982), children__$1], null));
      }
      malli.core._group_by_arity_BANG_.call(null, malli.core._vmap.call(null, malli.core._function_info, children__$1));
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7925 !== "undefined") {
      } else {
        malli.core.t_malli$core7925 = function(form, options, map__7923, properties, p__7922, children, parent, _, __GT_checker, function_checker, cache, meta7920, meta7926) {
          this.form = form;
          this.options = options;
          this.map__7923 = map__7923;
          this.properties = properties;
          this.p__7922 = p__7922;
          this.children = children;
          this.parent = parent;
          this._ = _;
          this.__GT_checker = __GT_checker;
          this.function_checker = function_checker;
          this.cache = cache;
          this.meta7920 = meta7920;
          this.meta7926 = meta7926;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core7925.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
          return function(_7927, meta7926__$1) {
            var self__ = this;
            var _7927__$1 = this;
            return new malli.core.t_malli$core7925(self__.form, self__.options, self__.map__7923, self__.properties, self__.p__7922, self__.children, self__.parent, self__._, self__.__GT_checker, self__.function_checker, self__.cache, self__.meta7920, meta7926__$1);
          };
        }(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
        malli.core.t_malli$core7925.prototype.cljs$core$IMeta$_meta$arity$1 = function(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
          return function(_7927) {
            var self__ = this;
            var _7927__$1 = this;
            return self__.meta7926;
          };
        }(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
        malli.core.t_malli$core7925.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7925.prototype.malli$core$Schema$_validator$arity$1 = function(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
          return function(this$) {
            var self__ = this;
            var this$__$1 = this;
            var temp__5718__auto__ = self__.__GT_checker.call(null, this$__$1);
            if (cljs.core.truth_(temp__5718__auto__)) {
              var checker = temp__5718__auto__;
              var validator = function(checker, temp__5718__auto__, this$__$1, children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
                return function(x) {
                  return checker.call(null, x) == null;
                };
              }(checker, temp__5718__auto__, this$__$1, children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
              return function(validator, checker, temp__5718__auto__, this$__$1, children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
                return function(x) {
                  var and__4036__auto__ = cljs.core.ifn_QMARK_.call(null, x);
                  if (and__4036__auto__) {
                    return validator.call(null, x);
                  } else {
                    return and__4036__auto__;
                  }
                };
              }(validator, checker, temp__5718__auto__, this$__$1, children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
            } else {
              return cljs.core.ifn_QMARK_;
            }
          };
        }(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
        malli.core.t_malli$core7925.prototype.malli$core$Schema$_options$arity$1 = function(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
          return function(___$1) {
            var self__ = this;
            var ___$2 = this;
            return self__.options;
          };
        }(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
        malli.core.t_malli$core7925.prototype.malli$core$Schema$_transformer$arity$4 = function(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
          return function(___$1, ___$2, ___$3, ___$4) {
            var self__ = this;
            var ___$5 = this;
            return null;
          };
        }(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
        malli.core.t_malli$core7925.prototype.malli$core$Schema$_walk$arity$4 = function(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
          return function(this$, walker, path, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._walk_indexed.call(null, this$__$1, walker, path, options__$1);
          };
        }(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
        malli.core.t_malli$core7925.prototype.malli$core$Schema$_parser$arity$1 = function(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
          return function(this$) {
            var self__ = this;
            var this$__$1 = this;
            var validator = malli.core._validator.call(null, this$__$1);
            return function(validator, this$__$1, children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
              return function(x) {
                if (cljs.core.truth_(validator.call(null, x))) {
                  return x;
                } else {
                  return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
                }
              };
            }(validator, this$__$1, children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
          };
        }(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
        malli.core.t_malli$core7925.prototype.malli$core$Schema$_properties$arity$1 = function(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
          return function(___$1) {
            var self__ = this;
            var ___$2 = this;
            return self__.properties;
          };
        }(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
        malli.core.t_malli$core7925.prototype.malli$core$Schema$_children$arity$1 = function(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
          return function(___$1) {
            var self__ = this;
            var ___$2 = this;
            return self__.children;
          };
        }(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
        malli.core.t_malli$core7925.prototype.malli$core$Schema$_form$arity$1 = function(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
          return function(___$1) {
            var self__ = this;
            var ___$2 = this;
            return cljs.core.deref.call(null, self__.form);
          };
        }(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
        malli.core.t_malli$core7925.prototype.malli$core$Schema$_explainer$arity$2 = function(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
          return function(this$, path) {
            var self__ = this;
            var this$__$1 = this;
            var temp__5718__auto__ = self__.__GT_checker.call(null, this$__$1);
            if (cljs.core.truth_(temp__5718__auto__)) {
              var checker = temp__5718__auto__;
              return function(checker, temp__5718__auto__, this$__$1, children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
                return function malli$core$_function_schema_$_explain(x, in$, acc) {
                  if (!cljs.core.fn_QMARK_.call(null, x)) {
                    return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x));
                  } else {
                    var temp__5718__auto____$1 = checker.call(null, x);
                    if (cljs.core.truth_(temp__5718__auto____$1)) {
                      var res = temp__5718__auto____$1;
                      return cljs.core.conj.call(null, acc, cljs.core.assoc.call(null, malli.impl.util._error.call(null, path, in$, this$__$1, x), new cljs.core.Keyword(null, "check", "check", 1226308904), res));
                    } else {
                      return acc;
                    }
                  }
                };
              }(checker, temp__5718__auto__, this$__$1, children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
            } else {
              var validator = malli.core._validator.call(null, this$__$1);
              return function(validator, temp__5718__auto__, this$__$1, children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
                return function malli$core$_function_schema_$_explain(x, in$, acc) {
                  if (cljs.core.not.call(null, validator.call(null, x))) {
                    return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x));
                  } else {
                    return acc;
                  }
                };
              }(validator, temp__5718__auto__, this$__$1, children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
            }
          };
        }(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
        malli.core.t_malli$core7925.prototype.malli$core$Schema$_unparser$arity$1 = function(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
          return function(this$) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._parser.call(null, this$__$1);
          };
        }(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
        malli.core.t_malli$core7925.prototype.malli$core$Schema$_parent$arity$1 = function(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
          return function(___$1) {
            var self__ = this;
            var ___$2 = this;
            return self__.parent;
          };
        }(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
        malli.core.t_malli$core7925.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7925.prototype.malli$core$Cached$_cache$arity$1 = function(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
          return function(___$1) {
            var self__ = this;
            var ___$2 = this;
            return self__.cache;
          };
        }(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
        malli.core.t_malli$core7925.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core7925.prototype.malli$core$LensSchema$_keep$arity$1 = function(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
          return function(___$1) {
            var self__ = this;
            var ___$2 = this;
            return null;
          };
        }(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
        malli.core.t_malli$core7925.prototype.malli$core$LensSchema$_get$arity$3 = function(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
          return function(___$1, key, default$) {
            var self__ = this;
            var ___$2 = this;
            return cljs.core.get.call(null, self__.children, key, default$);
          };
        }(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
        malli.core.t_malli$core7925.prototype.malli$core$LensSchema$_set$arity$3 = function(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
          return function(this$, key, value) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._set_assoc_children.call(null, this$__$1, key, value);
          };
        }(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
        malli.core.t_malli$core7925.getBasis = function(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
          return function() {
            return new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "map__7923", "map__7923", -518684223, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "p__7922", "p__7922", -868325913, null), new cljs.core.Symbol(null, "children", "children", 699969545, 
            null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core7919", "malli.core/t_malli$core7919", 1477883507, null)], null)), new cljs.core.Symbol(null, "_", "_", -1201019570, null), new cljs.core.Symbol(null, "-\x3echecker", "-\x3echecker", 964293264, null), new cljs.core.Symbol(null, "function-checker", "function-checker", 
            131742871, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "meta7920", "meta7920", -772856708, null), new cljs.core.Symbol(null, "meta7926", "meta7926", 26458101, null)], null);
          };
        }(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
        malli.core.t_malli$core7925.cljs$lang$type = true;
        malli.core.t_malli$core7925.cljs$lang$ctorStr = "malli.core/t_malli$core7925";
        malli.core.t_malli$core7925.cljs$lang$ctorPrWriter = function(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
          return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
            return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7925");
          };
        }(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
        malli.core.__GT_t_malli$core7925 = function(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker) {
          return function malli$core$_function_schema_$___GT_t_malli$core7925(form__$1, options__$1, map__7923__$2, properties__$1, p__7922__$1, children__$2, parent__$2, ___$1, __GT_checker__$1, function_checker__$1, cache__$1, meta7920__$1, meta7926) {
            return new malli.core.t_malli$core7925(form__$1, options__$1, map__7923__$2, properties__$1, p__7922__$1, children__$2, parent__$2, ___$1, __GT_checker__$1, function_checker__$1, cache__$1, meta7920__$1, meta7926);
          };
        }(children__$1, form, cache, __GT_checker, parent__$1, map__7923, map__7923__$1, options, function_checker);
      }
      return new malli.core.t_malli$core7925(form, options, map__7923__$1, properties, p__7922, children__$1, parent__$1, self__._, __GT_checker, function_checker, cache, self__.meta7920, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core7919.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "_", "_", -1201019570, null), new cljs.core.Symbol(null, "meta7920", "meta7920", -772856708, null)], null);
    };
    malli.core.t_malli$core7919.cljs$lang$type = true;
    malli.core.t_malli$core7919.cljs$lang$ctorStr = "malli.core/t_malli$core7919";
    malli.core.t_malli$core7919.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
      return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7919");
    };
    malli.core.__GT_t_malli$core7919 = function malli$core$_function_schema_$___GT_t_malli$core7919(___$1, meta7920) {
      return new malli.core.t_malli$core7919(___$1, meta7920);
    };
  }
  return new malli.core.t_malli$core7919(_, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core.regex_validator = function malli$core$regex_validator(schema) {
  return malli.impl.regex.validator.call(null, malli.core._regex_validator.call(null, schema));
};
malli.core.regex_explainer = function malli$core$regex_explainer(schema, path) {
  return malli.impl.regex.explainer.call(null, schema, path, malli.core._regex_explainer.call(null, schema, path));
};
malli.core.regex_parser = function malli$core$regex_parser(schema) {
  return malli.impl.regex.parser.call(null, malli.core._regex_parser.call(null, schema));
};
malli.core.regex_transformer = function malli$core$regex_transformer(schema, transformer, method, options) {
  var this_transformer = malli.core._value_transformer.call(null, transformer, schema, method, options);
  var __GT_children = malli.impl.regex.transformer.call(null, malli.core._regex_transformer.call(null, schema, transformer, method, options));
  return malli.core._intercepting.call(null, this_transformer, __GT_children);
};
malli.core._sequence_schema = function malli$core$_sequence_schema(p__7930) {
  var map__7931 = p__7930;
  var map__7931__$1 = (!(map__7931 == null) ? map__7931.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7931.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7931) : map__7931;
  var map__7932 = cljs.core.get.call(null, map__7931__$1, new cljs.core.Keyword(null, "child-bounds", "child-bounds", 1368514738));
  var map__7932__$1 = (!(map__7932 == null) ? map__7932.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7932.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7932) : map__7932;
  var min = cljs.core.get.call(null, map__7932__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
  var max = cljs.core.get.call(null, map__7932__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
  var type = cljs.core.get.call(null, map__7931__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
  var re_validator = cljs.core.get.call(null, map__7931__$1, new cljs.core.Keyword(null, "re-validator", "re-validator", -180375208));
  var re_explainer = cljs.core.get.call(null, map__7931__$1, new cljs.core.Keyword(null, "re-explainer", "re-explainer", -1266871200));
  var re_parser = cljs.core.get.call(null, map__7931__$1, new cljs.core.Keyword(null, "re-parser", "re-parser", -1229625564));
  var re_unparser = cljs.core.get.call(null, map__7931__$1, new cljs.core.Keyword(null, "re-unparser", "re-unparser", 1432943079));
  var re_transformer = cljs.core.get.call(null, map__7931__$1, new cljs.core.Keyword(null, "re-transformer", "re-transformer", -1516368461));
  var re_min_max = cljs.core.get.call(null, map__7931__$1, new cljs.core.Keyword(null, "re-min-max", "re-min-max", 1020871707));
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7935 !== "undefined") {
  } else {
    malli.core.t_malli$core7935 = function(map__7931, re_min_max, re_explainer, min, map__7932, re_parser, re_unparser, type, p__7930, re_transformer, max, re_validator, meta7936) {
      this.map__7931 = map__7931;
      this.re_min_max = re_min_max;
      this.re_explainer = re_explainer;
      this.min = min;
      this.map__7932 = map__7932;
      this.re_parser = re_parser;
      this.re_unparser = re_unparser;
      this.type = type;
      this.p__7930 = p__7930;
      this.re_transformer = re_transformer;
      this.max = max;
      this.re_validator = re_validator;
      this.meta7936 = meta7936;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7935.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
      return function(_7937, meta7936__$1) {
        var self__ = this;
        var _7937__$1 = this;
        return new malli.core.t_malli$core7935(self__.map__7931, self__.re_min_max, self__.re_explainer, self__.min, self__.map__7932, self__.re_parser, self__.re_unparser, self__.type, self__.p__7930, self__.re_transformer, self__.max, self__.re_validator, meta7936__$1);
      };
    }(map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
    malli.core.t_malli$core7935.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
      return function(_7937) {
        var self__ = this;
        var _7937__$1 = this;
        return self__.meta7936;
      };
    }(map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
    malli.core.t_malli$core7935.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7935.prototype.malli$core$IntoSchema$_type$arity$1 = function(map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.type;
      };
    }(map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
    malli.core.t_malli$core7935.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return null;
      };
    }(map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
    malli.core.t_malli$core7935.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
      return function(_, ___$1) {
        var self__ = this;
        var ___$2 = this;
        return null;
      };
    }(map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
    malli.core.t_malli$core7935.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
      return function(_, ___$1) {
        var self__ = this;
        var ___$2 = this;
        return null;
      };
    }(map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
    malli.core.t_malli$core7935.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
      return function(parent, properties, children, options) {
        var self__ = this;
        var parent__$1 = this;
        malli.core._check_children_BANG_.call(null, self__.type, properties, children, self__.min, self__.max);
        var children__$1 = malli.core._vmap.call(null, function(parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
          return function(p1__7928_SHARP_) {
            return malli.core.schema.call(null, p1__7928_SHARP_, options);
          };
        }(parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max), children);
        var form = new cljs.core.Delay(function(children__$1, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
          return function() {
            return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
          };
        }(children__$1, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max), null);
        var cache = malli.core._create_cache.call(null, options);
        if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7938 !== "undefined") {
        } else {
          malli.core.t_malli$core7938 = function(form, map__7931, options, re_min_max, properties, re_explainer, children, min, map__7932, re_parser, parent, re_unparser, type, p__7930, cache, meta7936, re_transformer, max, re_validator, meta7939) {
            this.form = form;
            this.map__7931 = map__7931;
            this.options = options;
            this.re_min_max = re_min_max;
            this.properties = properties;
            this.re_explainer = re_explainer;
            this.children = children;
            this.min = min;
            this.map__7932 = map__7932;
            this.re_parser = re_parser;
            this.parent = parent;
            this.re_unparser = re_unparser;
            this.type = type;
            this.p__7930 = p__7930;
            this.cache = cache;
            this.meta7936 = meta7936;
            this.re_transformer = re_transformer;
            this.max = max;
            this.re_validator = re_validator;
            this.meta7939 = meta7939;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          malli.core.t_malli$core7938.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_7940, meta7939__$1) {
              var self__ = this;
              var _7940__$1 = this;
              return new malli.core.t_malli$core7938(self__.form, self__.map__7931, self__.options, self__.re_min_max, self__.properties, self__.re_explainer, self__.children, self__.min, self__.map__7932, self__.re_parser, self__.parent, self__.re_unparser, self__.type, self__.p__7930, self__.cache, self__.meta7936, self__.re_transformer, self__.max, self__.re_validator, meta7939__$1);
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.prototype.cljs$core$IMeta$_meta$arity$1 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_7940) {
              var self__ = this;
              var _7940__$1 = this;
              return self__.meta7939;
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core7938.prototype.malli$core$Schema$_validator$arity$1 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this$) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core.regex_validator.call(null, this$__$1);
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.prototype.malli$core$Schema$_options$arity$1 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.options;
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.prototype.malli$core$Schema$_transformer$arity$4 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this$, transformer, method, options__$1) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core.regex_transformer.call(null, this$__$1, transformer, method, options__$1);
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.prototype.malli$core$Schema$_walk$arity$4 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this$, walker, path, options__$1) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core._walk_indexed.call(null, this$__$1, walker, path, options__$1);
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.prototype.malli$core$Schema$_parser$arity$1 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this$) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core.regex_parser.call(null, this$__$1);
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.prototype.malli$core$Schema$_properties$arity$1 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.properties;
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.prototype.malli$core$Schema$_children$arity$1 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.children;
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.prototype.malli$core$Schema$_form$arity$1 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return cljs.core.deref.call(null, self__.form);
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.prototype.malli$core$Schema$_explainer$arity$2 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this$, path) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core.regex_explainer.call(null, this$__$1, path);
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.prototype.malli$core$Schema$_unparser$arity$1 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this$) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core._regex_unparser.call(null, this$__$1);
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.prototype.malli$core$Schema$_parent$arity$1 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.parent;
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core7938.prototype.malli$core$Cached$_cache$arity$1 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.cache;
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core7938.prototype.malli$core$LensSchema$_keep$arity$1 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return true;
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.prototype.malli$core$LensSchema$_get$arity$3 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_, key, default$) {
              var self__ = this;
              var ___$1 = this;
              return cljs.core.get.call(null, self__.children, key, default$);
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.prototype.malli$core$LensSchema$_set$arity$3 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this$, key, value) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core._set_assoc_children.call(null, this$__$1, key, value);
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.prototype.malli$core$RegexSchema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core7938.prototype.malli$core$RegexSchema$_regex_op_QMARK_$arity$1 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return true;
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.prototype.malli$core$RegexSchema$_regex_validator$arity$1 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.re_validator.call(null, self__.properties, malli.core._vmap.call(null, malli.core._regex_validator, self__.children));
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.prototype.malli$core$RegexSchema$_regex_explainer$arity$2 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_, path) {
              var self__ = this;
              var ___$1 = this;
              return self__.re_explainer.call(null, self__.properties, cljs.core.map_indexed.call(null, function(___$1, children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
                return function(i, child) {
                  return malli.core._regex_explainer.call(null, child, cljs.core.conj.call(null, path, i));
                };
              }(___$1, children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max), self__.children));
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.prototype.malli$core$RegexSchema$_regex_parser$arity$1 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.re_parser.call(null, self__.properties, malli.core._vmap.call(null, malli.core._regex_parser, self__.children));
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.prototype.malli$core$RegexSchema$_regex_unparser$arity$1 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.re_unparser.call(null, self__.properties, malli.core._vmap.call(null, malli.core._regex_unparser, self__.children));
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.prototype.malli$core$RegexSchema$_regex_transformer$arity$4 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_, transformer, method, options__$1) {
              var self__ = this;
              var ___$1 = this;
              return self__.re_transformer.call(null, self__.properties, malli.core._vmap.call(null, function(___$1, children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
                return function(p1__7929_SHARP_) {
                  return malli.core._regex_transformer.call(null, p1__7929_SHARP_, transformer, method, options__$1);
                };
              }(___$1, children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max), self__.children));
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.prototype.malli$core$RegexSchema$_regex_min_max$arity$1 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.re_min_max.call(null, self__.properties, self__.children);
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.getBasis = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function() {
              return new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "map__7931", "map__7931", -939677920, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "re-min-max", "re-min-max", -1633564062, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "re-explainer", "re-explainer", 
              373660327, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "min", "min", 2085523049, null), new cljs.core.Symbol(null, "map__7932", "map__7932", -1741603542, null), new cljs.core.Symbol(null, "re-parser", "re-parser", 410905963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", 
              "t_malli$core7935", "malli.core/t_malli$core7935", -1071193747, null)], null)), new cljs.core.Symbol(null, "re-unparser", "re-unparser", -1221492690, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "p__7930", "p__7930", -315907115, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "meta7936", "meta7936", -384001766, null), new cljs.core.Symbol(null, "re-transformer", "re-transformer", 124163066, 
              null), new cljs.core.Symbol(null, "max", "max", 1701898075, null), new cljs.core.Symbol(null, "re-validator", "re-validator", 1460156319, null), new cljs.core.Symbol(null, "meta7939", "meta7939", 607779567, null)], null);
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7938.cljs$lang$type = true;
          malli.core.t_malli$core7938.cljs$lang$ctorStr = "malli.core/t_malli$core7938";
          malli.core.t_malli$core7938.cljs$lang$ctorPrWriter = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
              return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7938");
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.__GT_t_malli$core7938 = function(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function malli$core$_sequence_schema_$___GT_t_malli$core7938(form__$1, map__7931__$1, options__$1, re_min_max__$1, properties__$1, re_explainer__$1, children__$2, min__$1, map__7932__$1, re_parser__$1, parent__$2, re_unparser__$1, type__$1, p__7930__$1, cache__$1, meta7936__$1, re_transformer__$1, max__$1, re_validator__$1, meta7939) {
              return new malli.core.t_malli$core7938(form__$1, map__7931__$1, options__$1, re_min_max__$1, properties__$1, re_explainer__$1, children__$2, min__$1, map__7932__$1, re_parser__$1, parent__$2, re_unparser__$1, type__$1, p__7930__$1, cache__$1, meta7936__$1, re_transformer__$1, max__$1, re_validator__$1, meta7939);
            };
          }(children__$1, form, cache, parent__$1, map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
        }
        return new malli.core.t_malli$core7938(form, self__.map__7931, options, self__.re_min_max, properties, self__.re_explainer, children__$1, self__.min, self__.map__7932, self__.re_parser, parent__$1, self__.re_unparser, self__.type, self__.p__7930, cache, self__.meta7936, self__.re_transformer, self__.max, self__.re_validator, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", 
        -1780373863)], null));
      };
    }(map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
    malli.core.t_malli$core7935.getBasis = function(map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
      return function() {
        return new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "map__7931", "map__7931", -939677920, null), new cljs.core.Symbol(null, "re-min-max", "re-min-max", -1633564062, null), new cljs.core.Symbol(null, "re-explainer", "re-explainer", 373660327, null), new cljs.core.Symbol(null, "min", "min", 2085523049, null), new cljs.core.Symbol(null, "map__7932", "map__7932", -1741603542, null), new cljs.core.Symbol(null, "re-parser", "re-parser", 
        410905963, null), new cljs.core.Symbol(null, "re-unparser", "re-unparser", -1221492690, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "p__7930", "p__7930", -315907115, null), new cljs.core.Symbol(null, "re-transformer", "re-transformer", 124163066, null), new cljs.core.Symbol(null, "max", "max", 1701898075, null), new cljs.core.Symbol(null, "re-validator", "re-validator", 1460156319, null), new cljs.core.Symbol(null, "meta7936", "meta7936", 
        -384001766, null)], null);
      };
    }(map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
    malli.core.t_malli$core7935.cljs$lang$type = true;
    malli.core.t_malli$core7935.cljs$lang$ctorStr = "malli.core/t_malli$core7935";
    malli.core.t_malli$core7935.cljs$lang$ctorPrWriter = function(map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
      return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
        return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7935");
      };
    }(map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
    malli.core.__GT_t_malli$core7935 = function(map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
      return function malli$core$_sequence_schema_$___GT_t_malli$core7935(map__7931__$2, re_min_max__$1, re_explainer__$1, min__$1, map__7932__$2, re_parser__$1, re_unparser__$1, type__$1, p__7930__$1, re_transformer__$1, max__$1, re_validator__$1, meta7936) {
        return new malli.core.t_malli$core7935(map__7931__$2, re_min_max__$1, re_explainer__$1, min__$1, map__7932__$2, re_parser__$1, re_unparser__$1, type__$1, p__7930__$1, re_transformer__$1, max__$1, re_validator__$1, meta7936);
      };
    }(map__7931, map__7931__$1, map__7932, map__7932__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
  }
  return new malli.core.t_malli$core7935(map__7931__$1, re_min_max, re_explainer, min, map__7932__$1, re_parser, re_unparser, type, p__7930, re_transformer, max, re_validator, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._sequence_entry_schema = function malli$core$_sequence_entry_schema(p__7941) {
  var map__7942 = p__7941;
  var map__7942__$1 = (!(map__7942 == null) ? map__7942.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7942.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7942) : map__7942;
  var opts = map__7942__$1;
  var map__7943 = cljs.core.get.call(null, map__7942__$1, new cljs.core.Keyword(null, "child-bounds", "child-bounds", 1368514738));
  var map__7943__$1 = (!(map__7943 == null) ? map__7943.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7943.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7943) : map__7943;
  var min = cljs.core.get.call(null, map__7943__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
  var max = cljs.core.get.call(null, map__7943__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
  var type = cljs.core.get.call(null, map__7942__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
  var re_validator = cljs.core.get.call(null, map__7942__$1, new cljs.core.Keyword(null, "re-validator", "re-validator", -180375208));
  var re_explainer = cljs.core.get.call(null, map__7942__$1, new cljs.core.Keyword(null, "re-explainer", "re-explainer", -1266871200));
  var re_parser = cljs.core.get.call(null, map__7942__$1, new cljs.core.Keyword(null, "re-parser", "re-parser", -1229625564));
  var re_unparser = cljs.core.get.call(null, map__7942__$1, new cljs.core.Keyword(null, "re-unparser", "re-unparser", 1432943079));
  var re_transformer = cljs.core.get.call(null, map__7942__$1, new cljs.core.Keyword(null, "re-transformer", "re-transformer", -1516368461));
  var re_min_max = cljs.core.get.call(null, map__7942__$1, new cljs.core.Keyword(null, "re-min-max", "re-min-max", 1020871707));
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7946 !== "undefined") {
  } else {
    malli.core.t_malli$core7946 = function(p__7941, re_min_max, re_explainer, min, re_parser, map__7943, re_unparser, type, re_transformer, max, opts, map__7942, re_validator, meta7947) {
      this.p__7941 = p__7941;
      this.re_min_max = re_min_max;
      this.re_explainer = re_explainer;
      this.min = min;
      this.re_parser = re_parser;
      this.map__7943 = map__7943;
      this.re_unparser = re_unparser;
      this.type = type;
      this.re_transformer = re_transformer;
      this.max = max;
      this.opts = opts;
      this.map__7942 = map__7942;
      this.re_validator = re_validator;
      this.meta7947 = meta7947;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core7946.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
      return function(_7948, meta7947__$1) {
        var self__ = this;
        var _7948__$1 = this;
        return new malli.core.t_malli$core7946(self__.p__7941, self__.re_min_max, self__.re_explainer, self__.min, self__.re_parser, self__.map__7943, self__.re_unparser, self__.type, self__.re_transformer, self__.max, self__.opts, self__.map__7942, self__.re_validator, meta7947__$1);
      };
    }(map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
    malli.core.t_malli$core7946.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
      return function(_7948) {
        var self__ = this;
        var _7948__$1 = this;
        return self__.meta7947;
      };
    }(map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
    malli.core.t_malli$core7946.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7946.prototype.malli$core$AST$_from_ast$arity$3 = function(map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
      return function(parent, ast, options) {
        var self__ = this;
        var parent__$1 = this;
        return malli.core._from_entry_ast.call(null, parent__$1, ast, options);
      };
    }(map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
    malli.core.t_malli$core7946.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core7946.prototype.malli$core$IntoSchema$_type$arity$1 = function(map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.type;
      };
    }(map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
    malli.core.t_malli$core7946.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return null;
      };
    }(map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
    malli.core.t_malli$core7946.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
      return function(_, ___$1) {
        var self__ = this;
        var ___$2 = this;
        return null;
      };
    }(map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
    malli.core.t_malli$core7946.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
      return function(_, ___$1) {
        var self__ = this;
        var ___$2 = this;
        return null;
      };
    }(map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
    malli.core.t_malli$core7946.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
      return function(parent, properties, children, options) {
        var self__ = this;
        var parent__$1 = this;
        malli.core._check_children_BANG_.call(null, self__.type, properties, children, self__.min, self__.max);
        var entry_parser = malli.core._create_entry_parser.call(null, children, self__.opts, options);
        var form = new cljs.core.Delay(function(entry_parser, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
          return function() {
            return malli.core._create_entry_form.call(null, parent__$1, properties, entry_parser, options);
          };
        }(entry_parser, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max), null);
        var cache = malli.core._create_cache.call(null, options);
        if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core7949 !== "undefined") {
        } else {
          malli.core.t_malli$core7949 = function(form, options, p__7941, re_min_max, meta7947, properties, re_explainer, children, min, re_parser, entry_parser, parent, map__7943, re_unparser, type, cache, re_transformer, max, opts, map__7942, re_validator, meta7950) {
            this.form = form;
            this.options = options;
            this.p__7941 = p__7941;
            this.re_min_max = re_min_max;
            this.meta7947 = meta7947;
            this.properties = properties;
            this.re_explainer = re_explainer;
            this.children = children;
            this.min = min;
            this.re_parser = re_parser;
            this.entry_parser = entry_parser;
            this.parent = parent;
            this.map__7943 = map__7943;
            this.re_unparser = re_unparser;
            this.type = type;
            this.cache = cache;
            this.re_transformer = re_transformer;
            this.max = max;
            this.opts = opts;
            this.map__7942 = map__7942;
            this.re_validator = re_validator;
            this.meta7950 = meta7950;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          malli.core.t_malli$core7949.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_7951, meta7950__$1) {
              var self__ = this;
              var _7951__$1 = this;
              return new malli.core.t_malli$core7949(self__.form, self__.options, self__.p__7941, self__.re_min_max, self__.meta7947, self__.properties, self__.re_explainer, self__.children, self__.min, self__.re_parser, self__.entry_parser, self__.parent, self__.map__7943, self__.re_unparser, self__.type, self__.cache, self__.re_transformer, self__.max, self__.opts, self__.map__7942, self__.re_validator, meta7950__$1);
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.cljs$core$IMeta$_meta$arity$1 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_7951) {
              var self__ = this;
              var _7951__$1 = this;
              return self__.meta7950;
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core7949.prototype.malli$core$AST$_to_ast$arity$2 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this$, _) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core._entry_ast.call(null, this$__$1, malli.core._entry_keyset.call(null, self__.entry_parser));
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core7949.prototype.malli$core$Schema$_validator$arity$1 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this$) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core.regex_validator.call(null, this$__$1);
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$Schema$_options$arity$1 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.options;
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$Schema$_transformer$arity$4 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this$, transformer, method, options__$1) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core.regex_transformer.call(null, this$__$1, transformer, method, options__$1);
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$Schema$_walk$arity$4 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this$, walker, path, options__$1) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core._walk_entries.call(null, this$__$1, walker, path, options__$1);
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$Schema$_parser$arity$1 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this$) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core.regex_parser.call(null, this$__$1);
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$Schema$_properties$arity$1 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.properties;
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$Schema$_children$arity$1 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return malli.core._entry_children.call(null, self__.entry_parser);
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$Schema$_form$arity$1 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return cljs.core.deref.call(null, self__.form);
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$Schema$_explainer$arity$2 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this$, path) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core.regex_explainer.call(null, this$__$1, path);
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$Schema$_unparser$arity$1 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this$) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core._regex_unparser.call(null, this$__$1);
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$Schema$_parent$arity$1 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.parent;
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core7949.prototype.malli$core$Cached$_cache$arity$1 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.cache;
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core7949.prototype.malli$core$LensSchema$_keep$arity$1 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return true;
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$LensSchema$_get$arity$3 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this$, key, default$) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core._get_entries.call(null, this$__$1, key, default$);
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$LensSchema$_set$arity$3 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this$, key, value) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core._set_entries.call(null, this$__$1, key, value);
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$EntrySchema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core7949.prototype.malli$core$EntrySchema$_entries$arity$1 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return malli.core._entry_entries.call(null, self__.entry_parser);
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$EntrySchema$_entry_parser$arity$1 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.entry_parser;
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$RegexSchema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core7949.prototype.malli$core$RegexSchema$_regex_op_QMARK_$arity$1 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return true;
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$RegexSchema$_regex_validator$arity$1 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this$) {
              var self__ = this;
              var this$__$1 = this;
              return self__.re_validator.call(null, self__.properties, malli.core._vmap.call(null, function(this$__$1, entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
                return function(p__7952) {
                  var vec__7953 = p__7952;
                  var k = cljs.core.nth.call(null, vec__7953, 0, null);
                  var _ = cljs.core.nth.call(null, vec__7953, 1, null);
                  var s = cljs.core.nth.call(null, vec__7953, 2, null);
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._regex_validator.call(null, s)], null);
                };
              }(this$__$1, entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max), malli.core._children.call(null, this$__$1)));
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$RegexSchema$_regex_explainer$arity$2 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this$, path) {
              var self__ = this;
              var this$__$1 = this;
              return self__.re_explainer.call(null, self__.properties, malli.core._vmap.call(null, function(this$__$1, entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
                return function(p__7956) {
                  var vec__7957 = p__7956;
                  var k = cljs.core.nth.call(null, vec__7957, 0, null);
                  var _ = cljs.core.nth.call(null, vec__7957, 1, null);
                  var s = cljs.core.nth.call(null, vec__7957, 2, null);
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._regex_explainer.call(null, s, cljs.core.conj.call(null, path, k))], null);
                };
              }(this$__$1, entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max), malli.core._children.call(null, this$__$1)));
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$RegexSchema$_regex_parser$arity$1 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this$) {
              var self__ = this;
              var this$__$1 = this;
              return self__.re_parser.call(null, self__.properties, malli.core._vmap.call(null, function(this$__$1, entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
                return function(p__7960) {
                  var vec__7961 = p__7960;
                  var k = cljs.core.nth.call(null, vec__7961, 0, null);
                  var _ = cljs.core.nth.call(null, vec__7961, 1, null);
                  var s = cljs.core.nth.call(null, vec__7961, 2, null);
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._regex_parser.call(null, s)], null);
                };
              }(this$__$1, entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max), malli.core._children.call(null, this$__$1)));
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$RegexSchema$_regex_unparser$arity$1 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this$) {
              var self__ = this;
              var this$__$1 = this;
              return self__.re_unparser.call(null, self__.properties, malli.core._vmap.call(null, function(this$__$1, entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
                return function(p__7964) {
                  var vec__7965 = p__7964;
                  var k = cljs.core.nth.call(null, vec__7965, 0, null);
                  var _ = cljs.core.nth.call(null, vec__7965, 1, null);
                  var s = cljs.core.nth.call(null, vec__7965, 2, null);
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._regex_unparser.call(null, s)], null);
                };
              }(this$__$1, entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max), malli.core._children.call(null, this$__$1)));
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$RegexSchema$_regex_transformer$arity$4 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this$, transformer, method, options__$1) {
              var self__ = this;
              var this$__$1 = this;
              return self__.re_transformer.call(null, self__.properties, malli.core._vmap.call(null, function(this$__$1, entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
                return function(p__7968) {
                  var vec__7969 = p__7968;
                  var k = cljs.core.nth.call(null, vec__7969, 0, null);
                  var _ = cljs.core.nth.call(null, vec__7969, 1, null);
                  var s = cljs.core.nth.call(null, vec__7969, 2, null);
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._regex_transformer.call(null, s, transformer, method, options__$1)], null);
                };
              }(this$__$1, entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max), malli.core._children.call(null, this$__$1)));
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.prototype.malli$core$RegexSchema$_regex_min_max$arity$1 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this$) {
              var self__ = this;
              var this$__$1 = this;
              return self__.re_min_max.call(null, self__.properties, malli.core._children.call(null, this$__$1));
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.getBasis = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function() {
              return new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "p__7941", "p__7941", -293669310, null), new cljs.core.Symbol(null, "re-min-max", "re-min-max", -1633564062, null), new cljs.core.Symbol(null, "meta7947", "meta7947", 221454978, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, 
              null), new cljs.core.Symbol(null, "re-explainer", "re-explainer", 373660327, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "min", "min", 2085523049, null), new cljs.core.Symbol(null, "re-parser", "re-parser", 410905963, null), new cljs.core.Symbol(null, "entry-parser", "entry-parser", -1698599125, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 
              1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core7946", "malli.core/t_malli$core7946", 917973531, null)], null)), new cljs.core.Symbol(null, "map__7943", "map__7943", 1008171277, null), new cljs.core.Symbol(null, "re-unparser", "re-unparser", -1221492690, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "re-transformer", 
              "re-transformer", 124163066, null), new cljs.core.Symbol(null, "max", "max", 1701898075, null), new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.Symbol(null, "map__7942", "map__7942", -109244452, null), new cljs.core.Symbol(null, "re-validator", "re-validator", 1460156319, null), new cljs.core.Symbol(null, "meta7950", "meta7950", 877571944, null)], null);
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.t_malli$core7949.cljs$lang$type = true;
          malli.core.t_malli$core7949.cljs$lang$ctorStr = "malli.core/t_malli$core7949";
          malli.core.t_malli$core7949.cljs$lang$ctorPrWriter = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
              return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7949");
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
          malli.core.__GT_t_malli$core7949 = function(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
            return function malli$core$_sequence_entry_schema_$___GT_t_malli$core7949(form__$1, options__$1, p__7941__$1, re_min_max__$1, meta7947__$1, properties__$1, re_explainer__$1, children__$1, min__$1, re_parser__$1, entry_parser__$1, parent__$2, map__7943__$1, re_unparser__$1, type__$1, cache__$1, re_transformer__$1, max__$1, opts__$1, map__7942__$1, re_validator__$1, meta7950) {
              return new malli.core.t_malli$core7949(form__$1, options__$1, p__7941__$1, re_min_max__$1, meta7947__$1, properties__$1, re_explainer__$1, children__$1, min__$1, re_parser__$1, entry_parser__$1, parent__$2, map__7943__$1, re_unparser__$1, type__$1, cache__$1, re_transformer__$1, max__$1, opts__$1, map__7942__$1, re_validator__$1, meta7950);
            };
          }(entry_parser, form, cache, parent__$1, map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
        }
        return new malli.core.t_malli$core7949(form, options, self__.p__7941, self__.re_min_max, self__.meta7947, properties, self__.re_explainer, children, self__.min, self__.re_parser, entry_parser, parent__$1, self__.map__7943, self__.re_unparser, self__.type, cache, self__.re_transformer, self__.max, self__.opts, self__.map__7942, self__.re_validator, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", 
        "malli.core/schema", -1780373863)], null));
      };
    }(map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
    malli.core.t_malli$core7946.getBasis = function(map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
      return function() {
        return new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p__7941", "p__7941", -293669310, null), new cljs.core.Symbol(null, "re-min-max", "re-min-max", -1633564062, null), new cljs.core.Symbol(null, "re-explainer", "re-explainer", 373660327, null), new cljs.core.Symbol(null, "min", "min", 2085523049, null), new cljs.core.Symbol(null, "re-parser", "re-parser", 410905963, null), new cljs.core.Symbol(null, "map__7943", "map__7943", 
        1008171277, null), new cljs.core.Symbol(null, "re-unparser", "re-unparser", -1221492690, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "re-transformer", "re-transformer", 124163066, null), new cljs.core.Symbol(null, "max", "max", 1701898075, null), new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.Symbol(null, "map__7942", "map__7942", -109244452, null), new cljs.core.Symbol(null, "re-validator", "re-validator", 
        1460156319, null), new cljs.core.Symbol(null, "meta7947", "meta7947", 221454978, null)], null);
      };
    }(map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
    malli.core.t_malli$core7946.cljs$lang$type = true;
    malli.core.t_malli$core7946.cljs$lang$ctorStr = "malli.core/t_malli$core7946";
    malli.core.t_malli$core7946.cljs$lang$ctorPrWriter = function(map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
      return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
        return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core7946");
      };
    }(map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
    malli.core.__GT_t_malli$core7946 = function(map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max) {
      return function malli$core$_sequence_entry_schema_$___GT_t_malli$core7946(p__7941__$1, re_min_max__$1, re_explainer__$1, min__$1, re_parser__$1, map__7943__$2, re_unparser__$1, type__$1, re_transformer__$1, max__$1, opts__$1, map__7942__$2, re_validator__$1, meta7947) {
        return new malli.core.t_malli$core7946(p__7941__$1, re_min_max__$1, re_explainer__$1, min__$1, re_parser__$1, map__7943__$2, re_unparser__$1, type__$1, re_transformer__$1, max__$1, opts__$1, map__7942__$2, re_validator__$1, meta7947);
      };
    }(map__7942, map__7942__$1, opts, map__7943, map__7943__$1, min, max, type, re_validator, re_explainer, re_parser, re_unparser, re_transformer, re_min_max);
  }
  return new malli.core.t_malli$core7946(p__7941, re_min_max, re_explainer, min, re_parser, map__7943__$1, re_unparser, type, re_transformer, max, opts, map__7942__$1, re_validator, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core.into_schema_QMARK_ = function malli$core$into_schema_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$IntoSchema$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.core.into_schema = function malli$core$into_schema(var_args) {
  var G__7975 = arguments.length;
  switch(G__7975) {
    case 3:
      return malli.core.into_schema.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return malli.core.into_schema.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.into_schema.cljs$core$IFn$_invoke$arity$3 = function(type, properties, children) {
  return malli.core.into_schema.call(null, type, properties, children, null);
};
malli.core.into_schema.cljs$core$IFn$_invoke$arity$4 = function(type, properties, children, options) {
  var properties__$1 = cljs.core.truth_(properties) ? cljs.core.count.call(null, properties) > 0 ? properties : null : null;
  var r = cljs.core.truth_(properties__$1) ? properties__$1.call(null, new cljs.core.Keyword(null, "registry", "registry", 1021159018)) : null;
  var options__$1 = cljs.core.truth_(r) ? malli.core._update.call(null, options, new cljs.core.Keyword(null, "registry", "registry", 1021159018), function(properties__$1, r) {
    return function(p1__7973_SHARP_) {
      return malli.registry.composite_registry.call(null, r, function() {
        var or__4047__auto__ = p1__7973_SHARP_;
        if (cljs.core.truth_(or__4047__auto__)) {
          return or__4047__auto__;
        } else {
          return malli.core._registry.call(null, options);
        }
      }());
    };
  }(properties__$1, r)) : options;
  var properties__$2 = cljs.core.truth_(r) ? cljs.core.assoc.call(null, properties__$1, new cljs.core.Keyword(null, "registry", "registry", 1021159018), malli.core._property_registry.call(null, r, options__$1, cljs.core.identity)) : properties__$1;
  return malli.core._into_schema.call(null, malli.core._lookup_BANG_.call(null, type, malli.core.into_schema_QMARK_, options__$1), properties__$2, children, options__$1);
};
malli.core.into_schema.cljs$lang$maxFixedArity = 4;
malli.core.type = function malli$core$type(var_args) {
  var G__7978 = arguments.length;
  switch(G__7978) {
    case 1:
      return malli.core.type.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.type.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.type.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.type.call(null, _QMARK_schema, null);
};
malli.core.type.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._type.call(null, malli.core._parent.call(null, malli.core.schema.call(null, _QMARK_schema, options)));
};
malli.core.type.cljs$lang$maxFixedArity = 2;
malli.core.type_properties = function malli$core$type_properties(var_args) {
  var G__7981 = arguments.length;
  switch(G__7981) {
    case 1:
      return malli.core.type_properties.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.type_properties.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.type_properties.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.type_properties.call(null, _QMARK_schema, null);
};
malli.core.type_properties.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._type_properties.call(null, malli.core._parent.call(null, malli.core.schema.call(null, _QMARK_schema, options)));
};
malli.core.type_properties.cljs$lang$maxFixedArity = 2;
malli.core.properties_schema = function malli$core$properties_schema(var_args) {
  var G__7984 = arguments.length;
  switch(G__7984) {
    case 1:
      return malli.core.properties_schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.properties_schema.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.properties_schema.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.properties_schema.call(null, _QMARK_schema, null);
};
malli.core.properties_schema.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  if (malli.core.into_schema_QMARK_.call(null, _QMARK_schema)) {
    var G__7985 = _QMARK_schema;
    var G__7985__$1 = G__7985 == null ? null : malli.core._properties_schema.call(null, G__7985, options);
    if (G__7985__$1 == null) {
      return null;
    } else {
      return malli.core.schema.call(null, G__7985__$1);
    }
  } else {
    var G__7986 = malli.core.schema.call(null, _QMARK_schema, options);
    var G__7986__$1 = G__7986 == null ? null : malli.core._parent.call(null, G__7986);
    if (G__7986__$1 == null) {
      return null;
    } else {
      return malli.core._properties_schema.call(null, G__7986__$1, options);
    }
  }
};
malli.core.properties_schema.cljs$lang$maxFixedArity = 2;
malli.core.children_schema = function malli$core$children_schema(var_args) {
  var G__7989 = arguments.length;
  switch(G__7989) {
    case 1:
      return malli.core.children_schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.children_schema.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.children_schema.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.children_schema.call(null, _QMARK_schema, null);
};
malli.core.children_schema.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  if (malli.core.into_schema_QMARK_.call(null, _QMARK_schema)) {
    var G__7990 = _QMARK_schema;
    var G__7990__$1 = G__7990 == null ? null : malli.core._children_schema.call(null, G__7990, options);
    if (G__7990__$1 == null) {
      return null;
    } else {
      return malli.core.schema.call(null, G__7990__$1);
    }
  } else {
    var G__7991 = malli.core.schema.call(null, _QMARK_schema, options);
    var G__7991__$1 = G__7991 == null ? null : malli.core._parent.call(null, G__7991);
    if (G__7991__$1 == null) {
      return null;
    } else {
      return malli.core._children_schema.call(null, G__7991__$1, options);
    }
  }
};
malli.core.children_schema.cljs$lang$maxFixedArity = 2;
malli.core.schema_QMARK_ = function malli$core$schema_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$Schema$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.core.schema = function malli$core$schema(var_args) {
  var G__7995 = arguments.length;
  switch(G__7995) {
    case 1:
      return malli.core.schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.schema.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.schema.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.schema.call(null, _QMARK_schema, null);
};
malli.core.schema.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  while (true) {
    if (malli.core.schema_QMARK_.call(null, _QMARK_schema)) {
      return _QMARK_schema;
    } else {
      if (malli.core.into_schema_QMARK_.call(null, _QMARK_schema)) {
        return malli.core._into_schema.call(null, _QMARK_schema, null, null, options);
      } else {
        if (cljs.core.vector_QMARK_.call(null, _QMARK_schema)) {
          var v = _QMARK_schema;
          var t = cljs.core.nth.call(null, v, 0);
          var n = cljs.core.count.call(null, v);
          var _QMARK_p = n > 1 ? cljs.core.nth.call(null, v, 1) : null;
          if (_QMARK_p == null || cljs.core.map_QMARK_.call(null, _QMARK_p)) {
            return malli.core.into_schema.call(null, t, _QMARK_p, 2 < n ? cljs.core.subvec.call(null, _QMARK_schema, 2, n) : null, options);
          } else {
            return malli.core.into_schema.call(null, t, null, 1 < n ? cljs.core.subvec.call(null, _QMARK_schema, 1, n) : null, options);
          }
        } else {
          var temp__5718__auto__ = function() {
            var and__4036__auto__ = malli.core._reference_QMARK_.call(null, _QMARK_schema);
            if (and__4036__auto__) {
              return malli.core._lookup.call(null, _QMARK_schema, options);
            } else {
              return and__4036__auto__;
            }
          }();
          if (cljs.core.truth_(temp__5718__auto__)) {
            var _QMARK_schema_SINGLEQUOTE_ = temp__5718__auto__;
            return malli.core._pointer.call(null, _QMARK_schema, malli.core.schema.call(null, _QMARK_schema_SINGLEQUOTE_, options), options);
          } else {
            var G__7997 = malli.core._lookup_BANG_.call(null, _QMARK_schema, null, options);
            var G__7998 = options;
            _QMARK_schema = G__7997;
            options = G__7998;
            continue;
          }
        }
      }
    }
    break;
  }
};
malli.core.schema.cljs$lang$maxFixedArity = 2;
malli.core.form = function malli$core$form(var_args) {
  var G__8000 = arguments.length;
  switch(G__8000) {
    case 1:
      return malli.core.form.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.form.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.form.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.form.call(null, _QMARK_schema, null);
};
malli.core.form.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._form.call(null, malli.core.schema.call(null, _QMARK_schema, options));
};
malli.core.form.cljs$lang$maxFixedArity = 2;
malli.core.properties = function malli$core$properties(var_args) {
  var G__8003 = arguments.length;
  switch(G__8003) {
    case 1:
      return malli.core.properties.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.properties.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.properties.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.properties.call(null, _QMARK_schema, null);
};
malli.core.properties.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._properties.call(null, malli.core.schema.call(null, _QMARK_schema, options));
};
malli.core.properties.cljs$lang$maxFixedArity = 2;
malli.core.options = function malli$core$options(var_args) {
  var G__8006 = arguments.length;
  switch(G__8006) {
    case 1:
      return malli.core.options.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.options.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.options.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.options.call(null, _QMARK_schema, null);
};
malli.core.options.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._options.call(null, malli.core.schema.call(null, _QMARK_schema, options));
};
malli.core.options.cljs$lang$maxFixedArity = 2;
malli.core.children = function malli$core$children(var_args) {
  var G__8009 = arguments.length;
  switch(G__8009) {
    case 1:
      return malli.core.children.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.children.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.children.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.children.call(null, _QMARK_schema, null);
};
malli.core.children.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  var schema = malli.core.schema.call(null, _QMARK_schema, options);
  return malli.core._children.call(null, schema);
};
malli.core.children.cljs$lang$maxFixedArity = 2;
malli.core.parent = function malli$core$parent(var_args) {
  var G__8012 = arguments.length;
  switch(G__8012) {
    case 1:
      return malli.core.parent.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.parent.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.parent.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.parent.call(null, _QMARK_schema, null);
};
malli.core.parent.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._parent.call(null, malli.core.schema.call(null, _QMARK_schema, options));
};
malli.core.parent.cljs$lang$maxFixedArity = 2;
malli.core.walk = function malli$core$walk(var_args) {
  var G__8015 = arguments.length;
  switch(G__8015) {
    case 2:
      return malli.core.walk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core.walk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.walk.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, f) {
  return malli.core.walk.call(null, _QMARK_schema, f, null);
};
malli.core.walk.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, f, options) {
  return malli.core._walk.call(null, malli.core.schema.call(null, _QMARK_schema, options), function() {
    if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core8016 !== "undefined") {
    } else {
      malli.core.t_malli$core8016 = function(_QMARK_schema, f, options, meta8017) {
        this._QMARK_schema = _QMARK_schema;
        this.f = f;
        this.options = options;
        this.meta8017 = meta8017;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      malli.core.t_malli$core8016.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8018, meta8017__$1) {
        var self__ = this;
        var _8018__$1 = this;
        return new malli.core.t_malli$core8016(self__._QMARK_schema, self__.f, self__.options, meta8017__$1);
      };
      malli.core.t_malli$core8016.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8018) {
        var self__ = this;
        var _8018__$1 = this;
        return self__.meta8017;
      };
      malli.core.t_malli$core8016.prototype.malli$core$Walker$ = cljs.core.PROTOCOL_SENTINEL;
      malli.core.t_malli$core8016.prototype.malli$core$Walker$_accept$arity$4 = function(_, s, ___$1, ___$2) {
        var self__ = this;
        var ___$3 = this;
        return s;
      };
      malli.core.t_malli$core8016.prototype.malli$core$Walker$_inner$arity$4 = function(this$, s, p, options__$1) {
        var self__ = this;
        var this$__$1 = this;
        return malli.core._walk.call(null, s, this$__$1, p, options__$1);
      };
      malli.core.t_malli$core8016.prototype.malli$core$Walker$_outer$arity$5 = function(_, s, p, c, options__$1) {
        var self__ = this;
        var ___$1 = this;
        return self__.f.call(null, s, p, c, options__$1);
      };
      malli.core.t_malli$core8016.getBasis = function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?schema", "?schema", -271534072, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "meta8017", "meta8017", 356940753, null)], null);
      };
      malli.core.t_malli$core8016.cljs$lang$type = true;
      malli.core.t_malli$core8016.cljs$lang$ctorStr = "malli.core/t_malli$core8016";
      malli.core.t_malli$core8016.cljs$lang$ctorPrWriter = function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
        return cljs.core._write.call(null, writer__4291__auto__, "malli.core/t_malli$core8016");
      };
      malli.core.__GT_t_malli$core8016 = function malli$core$__GT_t_malli$core8016(_QMARK_schema__$1, f__$1, options__$1, meta8017) {
        return new malli.core.t_malli$core8016(_QMARK_schema__$1, f__$1, options__$1, meta8017);
      };
    }
    return new malli.core.t_malli$core8016(_QMARK_schema, f, options, cljs.core.PersistentArrayMap.EMPTY);
  }(), cljs.core.PersistentVector.EMPTY, options);
};
malli.core.walk.cljs$lang$maxFixedArity = 3;
malli.core.validator = function malli$core$validator(var_args) {
  var G__8021 = arguments.length;
  switch(G__8021) {
    case 1:
      return malli.core.validator.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.validator.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.validator.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.validator.call(null, _QMARK_schema, null);
};
malli.core.validator.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._cached.call(null, malli.core.schema.call(null, _QMARK_schema, options), new cljs.core.Keyword(null, "validator", "validator", -1966190681), malli.core._validator);
};
malli.core.validator.cljs$lang$maxFixedArity = 2;
malli.core.validate = function malli$core$validate(var_args) {
  var G__8024 = arguments.length;
  switch(G__8024) {
    case 2:
      return malli.core.validate.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core.validate.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.validate.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, value) {
  return malli.core.validate.call(null, _QMARK_schema, value, null);
};
malli.core.validate.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, value, options) {
  return malli.core.validator.call(null, _QMARK_schema, options).call(null, value);
};
malli.core.validate.cljs$lang$maxFixedArity = 3;
malli.core.explainer = function malli$core$explainer(var_args) {
  var G__8028 = arguments.length;
  switch(G__8028) {
    case 1:
      return malli.core.explainer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.explainer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.explainer.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.explainer.call(null, _QMARK_schema, null);
};
malli.core.explainer.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  var schema_SINGLEQUOTE_ = malli.core.schema.call(null, _QMARK_schema, options);
  var explainer_SINGLEQUOTE_ = malli.core._cached.call(null, schema_SINGLEQUOTE_, new cljs.core.Keyword(null, "explainer", "explainer", -2002221924), function(schema_SINGLEQUOTE_) {
    return function(p1__8026_SHARP_) {
      return malli.core._explainer.call(null, p1__8026_SHARP_, cljs.core.PersistentVector.EMPTY);
    };
  }(schema_SINGLEQUOTE_));
  return function(schema_SINGLEQUOTE_, explainer_SINGLEQUOTE_) {
    return function() {
      var malli$core$explainer = null;
      var malli$core$explainer__1 = function(value) {
        return malli$core$explainer.call(null, value, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY);
      };
      var malli$core$explainer__3 = function(value, in$, acc) {
        var temp__5720__auto__ = cljs.core.seq.call(null, explainer_SINGLEQUOTE_.call(null, value, in$, acc));
        if (temp__5720__auto__) {
          var errors = temp__5720__auto__;
          return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema_SINGLEQUOTE_, new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "errors", "errors", -908790718), errors], null);
        } else {
          return null;
        }
      };
      malli$core$explainer = function(value, in$, acc) {
        switch(arguments.length) {
          case 1:
            return malli$core$explainer__1.call(this, value);
          case 3:
            return malli$core$explainer__3.call(this, value, in$, acc);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      malli$core$explainer.cljs$core$IFn$_invoke$arity$1 = malli$core$explainer__1;
      malli$core$explainer.cljs$core$IFn$_invoke$arity$3 = malli$core$explainer__3;
      return malli$core$explainer;
    }();
  }(schema_SINGLEQUOTE_, explainer_SINGLEQUOTE_);
};
malli.core.explainer.cljs$lang$maxFixedArity = 2;
malli.core.explain = function malli$core$explain(var_args) {
  var G__8031 = arguments.length;
  switch(G__8031) {
    case 2:
      return malli.core.explain.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core.explain.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.explain.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, value) {
  return malli.core.explain.call(null, _QMARK_schema, value, null);
};
malli.core.explain.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, value, options) {
  return malli.core.explainer.call(null, _QMARK_schema, options).call(null, value, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY);
};
malli.core.explain.cljs$lang$maxFixedArity = 3;
malli.core.parser = function malli$core$parser(var_args) {
  var G__8034 = arguments.length;
  switch(G__8034) {
    case 1:
      return malli.core.parser.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.parser.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.parser.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.parser.call(null, _QMARK_schema, null);
};
malli.core.parser.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._cached.call(null, malli.core.schema.call(null, _QMARK_schema, options), new cljs.core.Keyword(null, "parser", "parser", -1543495310), malli.core._parser);
};
malli.core.parser.cljs$lang$maxFixedArity = 2;
malli.core.parse = function malli$core$parse(var_args) {
  var G__8037 = arguments.length;
  switch(G__8037) {
    case 2:
      return malli.core.parse.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core.parse.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.parse.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, value) {
  return malli.core.parse.call(null, _QMARK_schema, value, null);
};
malli.core.parse.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, value, options) {
  return malli.core.parser.call(null, _QMARK_schema, options).call(null, value);
};
malli.core.parse.cljs$lang$maxFixedArity = 3;
malli.core.unparser = function malli$core$unparser(var_args) {
  var G__8040 = arguments.length;
  switch(G__8040) {
    case 1:
      return malli.core.unparser.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.unparser.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.unparser.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.unparser.call(null, _QMARK_schema, null);
};
malli.core.unparser.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._cached.call(null, malli.core.schema.call(null, _QMARK_schema, options), new cljs.core.Keyword(null, "unparser", "unparser", 1801459433), malli.core._unparser);
};
malli.core.unparser.cljs$lang$maxFixedArity = 2;
malli.core.unparse = function malli$core$unparse(var_args) {
  var G__8043 = arguments.length;
  switch(G__8043) {
    case 2:
      return malli.core.unparse.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core.unparse.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.unparse.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, value) {
  return malli.core.unparse.call(null, _QMARK_schema, value, null);
};
malli.core.unparse.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, value, options) {
  return malli.core.unparser.call(null, _QMARK_schema, options).call(null, value);
};
malli.core.unparse.cljs$lang$maxFixedArity = 3;
malli.core.decoder = function malli$core$decoder(var_args) {
  var G__8046 = arguments.length;
  switch(G__8046) {
    case 2:
      return malli.core.decoder.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core.decoder.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.decoder.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, t) {
  return malli.core.decoder.call(null, _QMARK_schema, null, t);
};
malli.core.decoder.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, options, t) {
  var or__4047__auto__ = malli.core._transformer.call(null, malli.core.schema.call(null, _QMARK_schema, options), malli.core._into_transformer.call(null, t), new cljs.core.Keyword(null, "decode", "decode", -1306165281), options);
  if (cljs.core.truth_(or__4047__auto__)) {
    return or__4047__auto__;
  } else {
    return cljs.core.identity;
  }
};
malli.core.decoder.cljs$lang$maxFixedArity = 3;
malli.core.decode = function malli$core$decode(var_args) {
  var G__8049 = arguments.length;
  switch(G__8049) {
    case 3:
      return malli.core.decode.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return malli.core.decode.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.decode.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, value, t) {
  return malli.core.decode.call(null, _QMARK_schema, value, null, t);
};
malli.core.decode.cljs$core$IFn$_invoke$arity$4 = function(_QMARK_schema, value, options, t) {
  var temp__5718__auto__ = malli.core.decoder.call(null, _QMARK_schema, options, t);
  if (cljs.core.truth_(temp__5718__auto__)) {
    var transform = temp__5718__auto__;
    return transform.call(null, value);
  } else {
    return value;
  }
};
malli.core.decode.cljs$lang$maxFixedArity = 4;
malli.core.encoder = function malli$core$encoder(var_args) {
  var G__8052 = arguments.length;
  switch(G__8052) {
    case 2:
      return malli.core.encoder.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core.encoder.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.encoder.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, t) {
  return malli.core.encoder.call(null, _QMARK_schema, null, t);
};
malli.core.encoder.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, options, t) {
  var or__4047__auto__ = malli.core._transformer.call(null, malli.core.schema.call(null, _QMARK_schema, options), malli.core._into_transformer.call(null, t), new cljs.core.Keyword(null, "encode", "encode", -1753429702), options);
  if (cljs.core.truth_(or__4047__auto__)) {
    return or__4047__auto__;
  } else {
    return cljs.core.identity;
  }
};
malli.core.encoder.cljs$lang$maxFixedArity = 3;
malli.core.encode = function malli$core$encode(var_args) {
  var G__8055 = arguments.length;
  switch(G__8055) {
    case 3:
      return malli.core.encode.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return malli.core.encode.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.encode.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, value, t) {
  return malli.core.encode.call(null, _QMARK_schema, value, null, t);
};
malli.core.encode.cljs$core$IFn$_invoke$arity$4 = function(_QMARK_schema, value, options, t) {
  var temp__5718__auto__ = malli.core.encoder.call(null, _QMARK_schema, options, t);
  if (cljs.core.truth_(temp__5718__auto__)) {
    var transform = temp__5718__auto__;
    return transform.call(null, value);
  } else {
    return value;
  }
};
malli.core.encode.cljs$lang$maxFixedArity = 4;
malli.core.entries = function malli$core$entries(var_args) {
  var G__8058 = arguments.length;
  switch(G__8058) {
    case 1:
      return malli.core.entries.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.entries.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.entries.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.entries.call(null, _QMARK_schema, null);
};
malli.core.entries.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  var temp__5720__auto__ = malli.core.schema.call(null, _QMARK_schema, options);
  if (cljs.core.truth_(temp__5720__auto__)) {
    var schema = temp__5720__auto__;
    if (malli.core._entry_schema_QMARK_.call(null, schema)) {
      return malli.core._entries.call(null, schema);
    } else {
      return null;
    }
  } else {
    return null;
  }
};
malli.core.entries.cljs$lang$maxFixedArity = 2;
malli.core.deref = function malli$core$deref(var_args) {
  var G__8061 = arguments.length;
  switch(G__8061) {
    case 1:
      return malli.core.deref.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.deref.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.deref.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.deref.call(null, _QMARK_schema, null);
};
malli.core.deref.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  var schema = malli.core.schema.call(null, _QMARK_schema, options);
  var G__8062 = schema;
  if (malli.core._ref_schema_QMARK_.call(null, schema)) {
    return malli.core._deref.call(null, G__8062);
  } else {
    return G__8062;
  }
};
malli.core.deref.cljs$lang$maxFixedArity = 2;
malli.core.deref_all = function malli$core$deref_all(var_args) {
  var G__8065 = arguments.length;
  switch(G__8065) {
    case 1:
      return malli.core.deref_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.deref_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.deref_all.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.deref_all.call(null, _QMARK_schema, null);
};
malli.core.deref_all.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  while (true) {
    var schema = malli.core.deref.call(null, _QMARK_schema, options);
    var G__8066 = schema;
    if (malli.core._ref_schema_QMARK_.call(null, schema)) {
      var G__8068 = G__8066;
      var G__8069 = options;
      _QMARK_schema = G__8068;
      options = G__8069;
      continue;
    } else {
      return G__8066;
    }
    break;
  }
};
malli.core.deref_all.cljs$lang$maxFixedArity = 2;
malli.core.from_ast = function malli$core$from_ast(var_args) {
  var G__8074 = arguments.length;
  switch(G__8074) {
    case 1:
      return malli.core.from_ast.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.from_ast.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.from_ast.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_ast) {
  return malli.core.from_ast.call(null, _QMARK_ast, null);
};
malli.core.from_ast.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_ast, options) {
  if (malli.core.schema_QMARK_.call(null, _QMARK_ast)) {
    return _QMARK_ast;
  } else {
    if (cljs.core.map_QMARK_.call(null, _QMARK_ast)) {
      var temp__5718__auto__ = malli.core._lookup.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(_QMARK_ast), options);
      if (cljs.core.truth_(temp__5718__auto__)) {
        var s = temp__5718__auto__;
        var r = function() {
          var temp__5720__auto__ = (new cljs.core.Keyword(null, "registry", "registry", 1021159018)).cljs$core$IFn$_invoke$arity$1(_QMARK_ast);
          if (cljs.core.truth_(temp__5720__auto__)) {
            var r = temp__5720__auto__;
            return malli.core._delayed_registry.call(null, r, malli.core.from_ast);
          } else {
            return null;
          }
        }();
        var options__$1 = function() {
          var G__8075 = options;
          if (cljs.core.truth_(r)) {
            return malli.core._update.call(null, G__8075, new cljs.core.Keyword(null, "registry", "registry", 1021159018), function(G__8075, r, s, temp__5718__auto__) {
              return function(p1__8070_SHARP_) {
                return malli.registry.composite_registry.call(null, r, function() {
                  var or__4047__auto__ = p1__8070_SHARP_;
                  if (cljs.core.truth_(or__4047__auto__)) {
                    return or__4047__auto__;
                  } else {
                    return malli.core._registry.call(null, options);
                  }
                }());
              };
            }(G__8075, r, s, temp__5718__auto__));
          } else {
            return G__8075;
          }
        }();
        var ast = function() {
          var G__8076 = _QMARK_ast;
          if (cljs.core.truth_(r)) {
            return malli.core._update.call(null, G__8076, new cljs.core.Keyword(null, "properties", "properties", 685819552), function(G__8076, r, options__$1, s, temp__5718__auto__) {
              return function(p1__8071_SHARP_) {
                return cljs.core.assoc.call(null, p1__8071_SHARP_, new cljs.core.Keyword(null, "registry", "registry", 1021159018), malli.core._property_registry.call(null, r, options__$1, cljs.core.identity));
              };
            }(G__8076, r, options__$1, s, temp__5718__auto__));
          } else {
            return G__8076;
          }
        }();
        if (malli.core.into_schema_QMARK_.call(null, s) && malli.core._ast_QMARK_.call(null, s)) {
          return malli.core._from_ast.call(null, s, ast, options__$1);
        } else {
          if (malli.core.into_schema_QMARK_.call(null, s)) {
            return malli.core._into_schema.call(null, s, (new cljs.core.Keyword(null, "properties", "properties", 685819552)).cljs$core$IFn$_invoke$arity$1(ast), malli.core._vmap.call(null, function(r, options__$1, ast, s, temp__5718__auto__) {
              return function(p1__8072_SHARP_) {
                return malli.core.from_ast.call(null, p1__8072_SHARP_, options__$1);
              };
            }(r, options__$1, ast, s, temp__5718__auto__), (new cljs.core.Keyword(null, "children", "children", -940561982)).cljs$core$IFn$_invoke$arity$1(ast)), options__$1);
          } else {
            return s;
          }
        }
      } else {
        return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "invalid-ast", "malli.core/invalid-ast", -1822979859), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ast", "ast", -860334068), _QMARK_ast], null));
      }
    } else {
      return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "invalid-ast", "malli.core/invalid-ast", -1822979859), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ast", "ast", -860334068), _QMARK_ast], null));
    }
  }
};
malli.core.from_ast.cljs$lang$maxFixedArity = 2;
malli.core.ast = function malli$core$ast(var_args) {
  var G__8080 = arguments.length;
  switch(G__8080) {
    case 1:
      return malli.core.ast.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.ast.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.ast.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.ast.call(null, _QMARK_schema, null);
};
malli.core.ast.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  var s = malli.core.schema.call(null, _QMARK_schema, options);
  if (malli.core._ast_QMARK_.call(null, s)) {
    return malli.core._to_ast.call(null, s, options);
  } else {
    var c = malli.core._children.call(null, s);
    return malli.core._ast.call(null, function() {
      var G__8081 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), malli.core.type.call(null, s)], null);
      if (cljs.core.truth_(c)) {
        return cljs.core.assoc.call(null, G__8081, new cljs.core.Keyword(null, "children", "children", -940561982), malli.core._vmap.call(null, function(G__8081, c, s) {
          return function(p1__8078_SHARP_) {
            return malli.core.ast.call(null, p1__8078_SHARP_, options);
          };
        }(G__8081, c, s), c));
      } else {
        return G__8081;
      }
    }(), malli.core._properties.call(null, s), malli.core._options.call(null, s));
  }
};
malli.core.ast.cljs$lang$maxFixedArity = 2;
malli.core._default_sci_options = function malli$core$_default_sci_options() {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "preset", "preset", 777387345), new cljs.core.Keyword(null, "termination-safe", "termination-safe", -1845225130), new cljs.core.Keyword(null, "namespaces", "namespaces", -1444157469), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "malli.core", "malli.core", -2051169970, null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), malli.core.properties, 
  new cljs.core.Symbol(null, "type", "type", -1480165421, null), malli.core.type, new cljs.core.Symbol(null, "children", "children", 699969545, null), malli.core.children, new cljs.core.Symbol(null, "entries", "entries", 1553588366, null), malli.core.entries], null)], null)], null);
};
var _fail_BANG__8087 = function(p1__8083_SHARP_) {
  return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "sci-not-available", "malli.core/sci-not-available", -1400847277), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "code", "code", 1586293142), p1__8083_SHARP_], null));
};
var _eval_QMARK__8088 = function(_fail_BANG__8087) {
  return function(p1__8084_SHARP_) {
    return p1__8084_SHARP_ instanceof cljs.core.Symbol || typeof p1__8084_SHARP_ === "string" || cljs.core.sequential_QMARK_.call(null, p1__8084_SHARP_);
  };
}(_fail_BANG__8087);
var _evaluator_8089 = cljs.core.memoize.call(null, malli.sci.evaluator);
malli.core.eval = function(_fail_BANG__8087, _eval_QMARK__8088, _evaluator_8089) {
  return function malli$core$eval(var_args) {
    var G__8086 = arguments.length;
    switch(G__8086) {
      case 1:
        return malli.core.eval.cljs$core$IFn$_invoke$arity$1(arguments[0]);
        break;
      case 2:
        return malli.core.eval.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
        break;
      default:
        throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
    }
  };
}(_fail_BANG__8087, _eval_QMARK__8088, _evaluator_8089);
malli.core.eval.cljs$core$IFn$_invoke$arity$1 = function(_fail_BANG__8087, _eval_QMARK__8088, _evaluator_8089) {
  return function(_QMARK_code) {
    return malli.core.eval.call(null, _QMARK_code, null);
  };
}(_fail_BANG__8087, _eval_QMARK__8088, _evaluator_8089);
malli.core.eval.cljs$core$IFn$_invoke$arity$2 = function(_fail_BANG__8087, _eval_QMARK__8088, _evaluator_8089) {
  return function(_QMARK_code, options) {
    if (cljs.core.vector_QMARK_.call(null, _QMARK_code)) {
      return _QMARK_code;
    } else {
      if (cljs.core.truth_(_eval_QMARK__8088.call(null, _QMARK_code))) {
        if (cljs.core.truth_((new cljs.core.Keyword("malli.core", "disable-sci", "malli.core/disable-sci", -907669760)).cljs$core$IFn$_invoke$arity$1(options))) {
          return _fail_BANG__8087.call(null, _QMARK_code);
        } else {
          return _evaluator_8089.call(null, function() {
            var or__4047__auto__ = (new cljs.core.Keyword("malli.core", "sci-options", "malli.core/sci-options", 905728020)).cljs$core$IFn$_invoke$arity$1(options);
            if (cljs.core.truth_(or__4047__auto__)) {
              return or__4047__auto__;
            } else {
              return malli.core._default_sci_options.call(null);
            }
          }(), _fail_BANG__8087).call(null).call(null, _QMARK_code);
        }
      } else {
        return _QMARK_code;
      }
    }
  };
}(_fail_BANG__8087, _eval_QMARK__8088, _evaluator_8089);
malli.core.eval.cljs$lang$maxFixedArity = 2;
malli.core.schema_walker = function malli$core$schema_walker(f) {
  return function(schema, _, children, ___$1) {
    return f.call(null, malli.core._set_children.call(null, schema, children));
  };
};
malli.core.predicate_schemas = function malli$core$predicate_schemas() {
  var _safe_empty_QMARK_ = function(x) {
    return cljs.core.seqable_QMARK_.call(null, x) && cljs.core.empty_QMARK_.call(null, x);
  };
  return cljs.core.reduce.call(null, malli.core._register_var, cljs.core.PersistentArrayMap.EMPTY, cljs.core.PersistentVector.fromArray([new cljs.core.Var(function() {
    return cljs.core.any_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "any?", "cljs.core/any?", -2068111842, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "any?", "any?", -318999933, null), "cljs/core.cljs", 20, 1, 275, 275, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if given any argument.", cljs.core.any_QMARK_ ? cljs.core.any_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.some_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "some?", "cljs.core/some?", -440439360, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "some?", "some?", 234752293, null), "cljs/core.cljs", 21, 1, 254, 254, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if x is not nil, false otherwise.", cljs.core.some_QMARK_ ? cljs.core.some_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.number_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "number?", "cljs.core/number?", -811857295, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), "cljs/core.cljs", 23, 1, 241, 241, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if x is a JavaScript number.", cljs.core.number_QMARK_ ? cljs.core.number_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.integer_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "integer?", "cljs.core/integer?", 1710697810, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "integer?", "integer?", 1303791671, null), "cljs/core.cljs", 24, 1, 2245, 2245, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null)), "Returns true if n is a JavaScript number with no decimal part.", cljs.core.integer_QMARK_ ? cljs.core.integer_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.int_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "int?", "cljs.core/int?", 50730120, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "int?", "int?", 1799729645, null), "cljs/core.cljs", 20, 1, 2253, 2253, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x satisfies integer? or is an instance of goog.math.Integer\n   or goog.math.Long.", cljs.core.int_QMARK_ ? cljs.core.int_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.pos_int_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "pos-int?", "cljs.core/pos-int?", -2115888030, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "pos-int?", "pos-int?", -1205815015, null), "cljs/core.cljs", 24, 1, 2261, 2261, new cljs.core.Symbol(null, "boolean", "boolean", 
  -278886877, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x satisfies int? and is positive.", cljs.core.pos_int_QMARK_ ? cljs.core.pos_int_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.neg_int_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "neg-int?", "cljs.core/neg-int?", -933447883, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "neg-int?", "neg-int?", -1610409390, null), "cljs/core.cljs", 24, 1, 2277, 2277, new cljs.core.Symbol(null, "boolean", "boolean", 
  -278886877, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x satisfies int? and is negative.", cljs.core.neg_int_QMARK_ ? cljs.core.neg_int_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.nat_int_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "nat-int?", "cljs.core/nat-int?", -164364171, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "nat-int?", "nat-int?", -1879663400, null), "cljs/core.cljs", 24, 1, 2291, 2291, new cljs.core.Symbol(null, "boolean", "boolean", 
  -278886877, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x satisfies int? and is a natural integer value.", cljs.core.nat_int_QMARK_ ? cljs.core.nat_int_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.pos_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "pos?", "cljs.core/pos?", -652182749, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), "cljs/core.cljs", 20, 1, 2917, 2917, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if num is greater than zero, else false", cljs.core.pos_QMARK_ ? cljs.core.pos_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.neg_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "neg?", "cljs.core/neg?", 2002812728, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "neg?", "neg?", -1902175577, null), "cljs/core.cljs", 20, 1, 2926, 2926, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if num is less than zero, else false", cljs.core.neg_QMARK_ ? cljs.core.neg_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.float_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "float?", "cljs.core/float?", -941017745, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "float?", "float?", 673884616, null), "cljs/core.cljs", 22, 1, 2306, 2306, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true for JavaScript numbers, false otherwise.", cljs.core.float_QMARK_ ? cljs.core.float_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.double_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "double?", "cljs.core/double?", 1757455529, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "double?", "double?", -2146564276, null), "cljs/core.cljs", 23, 1, 2311, 2311, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true for JavaScript numbers, false otherwise.", cljs.core.double_QMARK_ ? cljs.core.double_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.boolean_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "boolean?", "cljs.core/boolean?", 1400713761, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "boolean?", "boolean?", 1790940868, null), "cljs/core.cljs", 24, 1, 2207, 2207, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x is a Boolean", cljs.core.boolean_QMARK_ ? cljs.core.boolean_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.string_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "string?", "cljs.core/string?", -2072921719, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "string?", "string?", -1129175764, null), "cljs/core.cljs", 23, 1, 265, 265, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if x is a JavaScript string.", cljs.core.string_QMARK_ ? cljs.core.string_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.ident_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "ident?", "cljs.core/ident?", 1567441535, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "ident?", "ident?", -2061359468, null), "cljs/core.cljs", 22, 1, 3337, 3337, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x is a symbol or keyword", cljs.core.ident_QMARK_ ? cljs.core.ident_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.simple_ident_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "simple-ident?", "cljs.core/simple-ident?", 1674885558, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "simple-ident?", "simple-ident?", 194189851, null), "cljs/core.cljs", 29, 1, 3341, 3341, new cljs.core.Symbol(null, "boolean", "boolean", 
  -278886877, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x is a symbol or keyword without a namespace", cljs.core.simple_ident_QMARK_ ? cljs.core.simple_ident_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.qualified_ident_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "qualified-ident?", "cljs.core/qualified-ident?", -1863492566, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
  new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "qualified-ident?", "qualified-ident?", -928894763, null), "cljs/core.cljs", 32, 1, 3345, 3345, new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x is a symbol or keyword with a namespace", cljs.core.qualified_ident_QMARK_ ? cljs.core.qualified_ident_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.keyword_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "keyword?", "cljs.core/keyword?", 713156450, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), "cljs/core.cljs", 24, 1, 3307, 3307, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x is a Keyword", cljs.core.keyword_QMARK_ ? cljs.core.keyword_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.simple_keyword_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "simple-keyword?", "cljs.core/simple-keyword?", 39474330, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "simple-keyword?", "simple-keyword?", -367134735, null), "cljs/core.cljs", 31, 1, 3357, 3357, new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x is a keyword without a namespace", cljs.core.simple_keyword_QMARK_ ? cljs.core.simple_keyword_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.qualified_keyword_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "qualified-keyword?", "cljs.core/qualified-keyword?", -308091478, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
  new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "qualified-keyword?", "qualified-keyword?", 375456001, null), "cljs/core.cljs", 34, 1, 3361, 3361, new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x is a keyword with a namespace", cljs.core.qualified_keyword_QMARK_ ? cljs.core.qualified_keyword_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.symbol_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "symbol?", "cljs.core/symbol?", 1422196122, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null), "cljs/core.cljs", 23, 1, 1036, 1036, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x is a Symbol", cljs.core.symbol_QMARK_ ? cljs.core.symbol_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.simple_symbol_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "simple-symbol?", "cljs.core/simple-symbol?", -1951205629, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "simple-symbol?", "simple-symbol?", 1408454822, null), "cljs/core.cljs", 30, 1, 3349, 3349, new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x is a symbol without a namespace", cljs.core.simple_symbol_QMARK_ ? cljs.core.simple_symbol_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.qualified_symbol_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "qualified-symbol?", "cljs.core/qualified-symbol?", 1570873476, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
  new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "qualified-symbol?", "qualified-symbol?", 98763807, null), "cljs/core.cljs", 33, 1, 3353, 3353, new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x is a symbol with a namespace", cljs.core.qualified_symbol_QMARK_ ? cljs.core.qualified_symbol_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.uuid_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "uuid?", "cljs.core/uuid?", -15131116, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "uuid?", "uuid?", 400077689, null), "cljs/core.cljs", 21, 1, 11136, 11136, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), null, cljs.core.uuid_QMARK_ ? cljs.core.uuid_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.uri_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "uri?", "cljs.core/uri?", 1085729367, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
  "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.9", new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "uri?", "uri?", 2029475116, null), "cljs/core.cljs", 11, 1, 11524, 11524, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true x is a goog.Uri instance.", cljs.core.truth_(cljs.core.uri_QMARK_) ? cljs.core.uri_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.inst_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "inst?", "cljs.core/inst?", 1216133710, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "inst?", "inst?", 1614698981, null), "cljs/core.cljs", 21, 1, 1389, 1389, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x satisfies Inst", cljs.core.inst_QMARK_ ? cljs.core.inst_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.seqable_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "seqable?", "cljs.core/seqable?", -745394886, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "seqable?", "seqable?", 72462495, null), "cljs/core.cljs", 24, 1, 2223, 2223, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null)), "Return true if the seq function is supported for s", cljs.core.seqable_QMARK_ ? cljs.core.seqable_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.indexed_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "indexed?", "cljs.core/indexed?", -1311257161, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "indexed?", "indexed?", 1234610384, null), "cljs/core.cljs", 24, 1, 1521, 1521, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if coll implements nth in constant time", cljs.core.indexed_QMARK_ ? cljs.core.indexed_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.map_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "map?", "cljs.core/map?", -1390345523, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), "cljs/core.cljs", 20, 1, 2137, 2137, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x satisfies IMap", cljs.core.map_QMARK_ ? cljs.core.map_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.vector_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "vector?", "cljs.core/vector?", -1550392028, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "vector?", "vector?", -61367869, null), "cljs/core.cljs", 23, 1, 2149, 2149, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x satisfies IVector", cljs.core.vector_QMARK_ ? cljs.core.vector_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.list_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "list?", "cljs.core/list?", -684796618, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "list?", "list?", -1494629, null), "cljs/core.cljs", 21, 1, 3089, 3089, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if x implements IList", cljs.core.list_QMARK_ ? cljs.core.list_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.seq_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "seq?", "cljs.core/seq?", -1302056292, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "seq?", "seq?", -1951934719, null), "cljs/core.cljs", 20, 1, 2216, 2216, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null)), "Return true if s satisfies ISeq", cljs.core.seq_QMARK_ ? cljs.core.seq_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.char_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "char?", "cljs.core/char?", 416405281, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "char?", "char?", -1072221244, null), "cljs/core.cljs", 21, 1, 270, 270, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if x is a JavaScript string of length one.", cljs.core.char_QMARK_ ? cljs.core.char_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.set_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "set?", "cljs.core/set?", -1176684971, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "set?", "set?", 1636014792, null), "cljs/core.cljs", 20, 1, 2110, 2110, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if x satisfies ISet", cljs.core.set_QMARK_ ? cljs.core.set_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.nil_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "nil?", "cljs.core/nil?", 945071861, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), "cljs/core.cljs", 20, 1, 229, 229, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if x is nil, false otherwise.", cljs.core.nil_QMARK_ ? cljs.core.nil_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.false_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "false?", "cljs.core/false?", -1660815306, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "false?", "false?", -1522377573, null), "cljs/core.cljs", 22, 1, 2199, 2199, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if x is the value false, false otherwise.", cljs.core.false_QMARK_ ? cljs.core.false_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.true_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "true?", "cljs.core/true?", -77973136, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "true?", "true?", -1600332395, null), "cljs/core.cljs", 21, 1, 2203, 2203, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if x is the value true, false otherwise.", cljs.core.true_QMARK_ ? cljs.core.true_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.zero_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "zero?", "cljs.core/zero?", -341242858, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), "cljs/core.cljs", 21, 1, 2921, 2921, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if num is zero, else false", cljs.core.zero_QMARK_ ? cljs.core.zero_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.coll_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "coll?", "cljs.core/coll?", 1208130522, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "coll?", "coll?", -1874821441, null), "cljs/core.cljs", 21, 1, 2103, 2103, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if x satisfies ICollection", cljs.core.coll_QMARK_ ? cljs.core.coll_QMARK_.cljs$lang$test : null])), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
    return cljs.core.empty_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "empty?", "cljs.core/empty?", 1866613644, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), "cljs/core.cljs", 22, 1, 2097, 2097, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null)), "Returns true if coll has no items - same as (not (seq coll)).\n  Please use the idiom (seq x) rather than (not (empty? x))", cljs.core.empty_QMARK_ ? cljs.core.empty_QMARK_.cljs$lang$test : null])), _safe_empty_QMARK_], null), new cljs.core.Var(function() {
    return cljs.core.associative_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "associative?", "cljs.core/associative?", -540020088, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "associative?", "associative?", -141666771, null), "cljs/core.cljs", 28, 1, 2117, 2117, new cljs.core.Symbol(null, "boolean", "boolean", 
  -278886877, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if coll implements IAssociative", cljs.core.associative_QMARK_ ? cljs.core.associative_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.sequential_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "sequential?", "cljs.core/sequential?", 1777854658, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "sequential?", "sequential?", 1102351463, null), "cljs/core.cljs", 27, 1, 2125, 2125, new cljs.core.Symbol(null, "boolean", "boolean", 
  -278886877, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if coll satisfies ISequential", cljs.core.sequential_QMARK_ ? cljs.core.sequential_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.ifn_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "ifn?", "cljs.core/ifn?", 1573873861, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), "cljs/core.cljs", 20, 1, 2240, 2240, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null)], null)), "Returns true if f returns true for fn? or satisfies IFn.", cljs.core.ifn_QMARK_ ? cljs.core.ifn_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.fn_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "fn?", "cljs.core/fn?", 71876239, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), "cljs/core.cljs", 19, 1, 1994, 1994, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null)], null)), "Return true if f is a JavaScript function or satisfies the Fn protocol.", cljs.core.fn_QMARK_ ? cljs.core.fn_QMARK_.cljs$lang$test : null]))], true));
};
malli.core.class_schemas = function malli$core$class_schemas() {
  return cljs.core.PersistentArrayMap.createAsIfByAssoc([RegExp, malli.core._re_schema.call(null, true)]);
};
malli.core.comparator_schemas = function malli$core$comparator_schemas() {
  return cljs.core.reduce_kv.call(null, cljs.core.assoc, null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, malli.core._vmap.call(null, function(p__8092) {
    var vec__8093 = p__8092;
    var k = cljs.core.nth.call(null, vec__8093, 0, null);
    var v = cljs.core.nth.call(null, vec__8093, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._simple_schema.call(null, function(vec__8093, k, v) {
      return function(_, p__8096) {
        var vec__8097 = p__8096;
        var child = cljs.core.nth.call(null, vec__8097, 0, null);
        return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "type", "type", 1174270348), k, new cljs.core.Keyword(null, "pred", "pred", 1927423397), malli.core._safe_pred.call(null, function(vec__8097, child, vec__8093, k, v) {
          return function(p1__8091_SHARP_) {
            return v.call(null, p1__8091_SHARP_, child);
          };
        }(vec__8097, child, vec__8093, k, v)), new cljs.core.Keyword(null, "from-ast", "from-ast", -246238449), malli.core._from_value_ast, new cljs.core.Keyword(null, "to-ast", "to-ast", -21935298), malli.core._to_value_ast, new cljs.core.Keyword(null, "min", "min", 444991522), 1, new cljs.core.Keyword(null, "max", "max", 61366548), 1], null);
      };
    }(vec__8093, k, v))], null);
  }, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "\x3e", "\x3e", -555517146), cljs.core._GT_, new cljs.core.Keyword(null, "\x3e\x3d", "\x3e\x3d", -623615505), cljs.core._GT__EQ_, new cljs.core.Keyword(null, "\x3c", "\x3c", -646864291), cljs.core._LT_, new cljs.core.Keyword(null, "\x3c\x3d", "\x3c\x3d", -395636158), cljs.core._LT__EQ_, new cljs.core.Keyword(null, "\x3d", "\x3d", 1152933628), cljs.core._EQ_, new cljs.core.Keyword(null, "not\x3d", "not\x3d", -173995323), cljs.core.not_EQ_], 
  null))));
};
malli.core.type_schemas = function malli$core$type_schemas() {
  return cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "qualified-symbol", "qualified-symbol", -665513695), new cljs.core.Keyword(null, "double", "double", 884886883), new cljs.core.Keyword(null, "int", "int", -1741416922), new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), new cljs.core.Keyword(null, "qualified-keyword", "qualified-keyword", 736041675), new cljs.core.Keyword(null, "string", "string", -1989541586), new cljs.core.Keyword(null, "keyword", "keyword", 
  811389747), new cljs.core.Keyword(null, "nil", "nil", 99600501), new cljs.core.Keyword(null, "uuid", "uuid", -2145095719), new cljs.core.Keyword(null, "boolean", "boolean", -1919418404), new cljs.core.Keyword(null, "any", "any", 1705907423)], [malli.core._qualified_symbol_schema.call(null), malli.core._double_schema.call(null), malli.core._int_schema.call(null), malli.core._symbol_schema.call(null), malli.core._qualified_keyword_schema.call(null), malli.core._string_schema.call(null), malli.core._keyword_schema.call(null), 
  malli.core._nil_schema.call(null), malli.core._uuid_schema.call(null), malli.core._boolean_schema.call(null), malli.core._any_schema.call(null)]);
};
malli.core.sequence_schemas = function malli$core$sequence_schemas() {
  return new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "+", "+", 1913524883), malli.core._sequence_schema.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "+", "+", 1913524883), new cljs.core.Keyword(null, "child-bounds", "child-bounds", 1368514738), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min", "min", 444991522), 1, new cljs.core.Keyword(null, "max", 
  "max", 61366548), 1], null), new cljs.core.Keyword(null, "re-validator", "re-validator", -180375208), function(_, p__8100) {
    var vec__8101 = p__8100;
    var child = cljs.core.nth.call(null, vec__8101, 0, null);
    return malli.impl.regex._PLUS__validator.call(null, child);
  }, new cljs.core.Keyword(null, "re-explainer", "re-explainer", -1266871200), function(_, p__8104) {
    var vec__8105 = p__8104;
    var child = cljs.core.nth.call(null, vec__8105, 0, null);
    return malli.impl.regex._PLUS__explainer.call(null, child);
  }, new cljs.core.Keyword(null, "re-parser", "re-parser", -1229625564), function(_, p__8108) {
    var vec__8109 = p__8108;
    var child = cljs.core.nth.call(null, vec__8109, 0, null);
    return malli.impl.regex._PLUS__parser.call(null, child);
  }, new cljs.core.Keyword(null, "re-unparser", "re-unparser", 1432943079), function(_, p__8112) {
    var vec__8113 = p__8112;
    var child = cljs.core.nth.call(null, vec__8113, 0, null);
    return malli.impl.regex._PLUS__unparser.call(null, child);
  }, new cljs.core.Keyword(null, "re-transformer", "re-transformer", -1516368461), function(_, p__8116) {
    var vec__8117 = p__8116;
    var child = cljs.core.nth.call(null, vec__8117, 0, null);
    return malli.impl.regex._PLUS__transformer.call(null, child);
  }, new cljs.core.Keyword(null, "re-min-max", "re-min-max", 1020871707), function(_, p__8120) {
    var vec__8121 = p__8120;
    var child = cljs.core.nth.call(null, vec__8121, 0, null);
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "min", "min", 444991522), (new cljs.core.Keyword(null, "min", "min", 444991522)).cljs$core$IFn$_invoke$arity$1(malli.core._regex_min_max.call(null, child))], null);
  }], null)), new cljs.core.Keyword(null, "*", "*", -1294732318), malli.core._sequence_schema.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "*", "*", -1294732318), new cljs.core.Keyword(null, "child-bounds", "child-bounds", 1368514738), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min", "min", 444991522), 1, new cljs.core.Keyword(null, "max", "max", 61366548), 1], null), new cljs.core.Keyword(null, 
  "re-validator", "re-validator", -180375208), function(_, p__8124) {
    var vec__8125 = p__8124;
    var child = cljs.core.nth.call(null, vec__8125, 0, null);
    return malli.impl.regex._STAR__validator.call(null, child);
  }, new cljs.core.Keyword(null, "re-explainer", "re-explainer", -1266871200), function(_, p__8128) {
    var vec__8129 = p__8128;
    var child = cljs.core.nth.call(null, vec__8129, 0, null);
    return malli.impl.regex._STAR__explainer.call(null, child);
  }, new cljs.core.Keyword(null, "re-parser", "re-parser", -1229625564), function(_, p__8132) {
    var vec__8133 = p__8132;
    var child = cljs.core.nth.call(null, vec__8133, 0, null);
    return malli.impl.regex._STAR__parser.call(null, child);
  }, new cljs.core.Keyword(null, "re-unparser", "re-unparser", 1432943079), function(_, p__8136) {
    var vec__8137 = p__8136;
    var child = cljs.core.nth.call(null, vec__8137, 0, null);
    return malli.impl.regex._STAR__unparser.call(null, child);
  }, new cljs.core.Keyword(null, "re-transformer", "re-transformer", -1516368461), function(_, p__8140) {
    var vec__8141 = p__8140;
    var child = cljs.core.nth.call(null, vec__8141, 0, null);
    return malli.impl.regex._STAR__transformer.call(null, child);
  }, new cljs.core.Keyword(null, "re-min-max", "re-min-max", 1020871707), function(_, ___$1) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "min", "min", 444991522), 0], null);
  }], null)), new cljs.core.Keyword(null, "?", "?", -1703165233), malli.core._sequence_schema.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "?", "?", -1703165233), new cljs.core.Keyword(null, "child-bounds", "child-bounds", 1368514738), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min", "min", 444991522), 1, new cljs.core.Keyword(null, "max", "max", 61366548), 1], null), new cljs.core.Keyword(null, 
  "re-validator", "re-validator", -180375208), function(_, p__8144) {
    var vec__8145 = p__8144;
    var child = cljs.core.nth.call(null, vec__8145, 0, null);
    return malli.impl.regex._QMARK__validator.call(null, child);
  }, new cljs.core.Keyword(null, "re-explainer", "re-explainer", -1266871200), function(_, p__8148) {
    var vec__8149 = p__8148;
    var child = cljs.core.nth.call(null, vec__8149, 0, null);
    return malli.impl.regex._QMARK__explainer.call(null, child);
  }, new cljs.core.Keyword(null, "re-parser", "re-parser", -1229625564), function(_, p__8152) {
    var vec__8153 = p__8152;
    var child = cljs.core.nth.call(null, vec__8153, 0, null);
    return malli.impl.regex._QMARK__parser.call(null, child);
  }, new cljs.core.Keyword(null, "re-unparser", "re-unparser", 1432943079), function(_, p__8156) {
    var vec__8157 = p__8156;
    var child = cljs.core.nth.call(null, vec__8157, 0, null);
    return malli.impl.regex._QMARK__unparser.call(null, child);
  }, new cljs.core.Keyword(null, "re-transformer", "re-transformer", -1516368461), function(_, p__8160) {
    var vec__8161 = p__8160;
    var child = cljs.core.nth.call(null, vec__8161, 0, null);
    return malli.impl.regex._QMARK__transformer.call(null, child);
  }, new cljs.core.Keyword(null, "re-min-max", "re-min-max", 1020871707), function(_, p__8164) {
    var vec__8165 = p__8164;
    var child = cljs.core.nth.call(null, vec__8165, 0, null);
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min", "min", 444991522), 0, new cljs.core.Keyword(null, "max", "max", 61366548), (new cljs.core.Keyword(null, "max", "max", 61366548)).cljs$core$IFn$_invoke$arity$1(malli.core._regex_min_max.call(null, child))], null);
  }], null)), new cljs.core.Keyword(null, "repeat", "repeat", 832692087), malli.core._sequence_schema.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "repeat", "repeat", 832692087), new cljs.core.Keyword(null, "child-bounds", "child-bounds", 1368514738), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min", "min", 444991522), 1, new cljs.core.Keyword(null, "max", "max", 61366548), 1], 
  null), new cljs.core.Keyword(null, "re-validator", "re-validator", -180375208), function(p__8168, p__8169) {
    var map__8170 = p__8168;
    var map__8170__$1 = (!(map__8170 == null) ? map__8170.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8170.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8170) : map__8170;
    var min = cljs.core.get.call(null, map__8170__$1, new cljs.core.Keyword(null, "min", "min", 444991522), 0);
    var max = cljs.core.get.call(null, map__8170__$1, new cljs.core.Keyword(null, "max", "max", 61366548), Infinity);
    var vec__8171 = p__8169;
    var child = cljs.core.nth.call(null, vec__8171, 0, null);
    return malli.impl.regex.repeat_validator.call(null, min, max, child);
  }, new cljs.core.Keyword(null, "re-explainer", "re-explainer", -1266871200), function(p__8175, p__8176) {
    var map__8177 = p__8175;
    var map__8177__$1 = (!(map__8177 == null) ? map__8177.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8177.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8177) : map__8177;
    var min = cljs.core.get.call(null, map__8177__$1, new cljs.core.Keyword(null, "min", "min", 444991522), 0);
    var max = cljs.core.get.call(null, map__8177__$1, new cljs.core.Keyword(null, "max", "max", 61366548), Infinity);
    var vec__8178 = p__8176;
    var child = cljs.core.nth.call(null, vec__8178, 0, null);
    return malli.impl.regex.repeat_explainer.call(null, min, max, child);
  }, new cljs.core.Keyword(null, "re-parser", "re-parser", -1229625564), function(p__8182, p__8183) {
    var map__8184 = p__8182;
    var map__8184__$1 = (!(map__8184 == null) ? map__8184.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8184.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8184) : map__8184;
    var min = cljs.core.get.call(null, map__8184__$1, new cljs.core.Keyword(null, "min", "min", 444991522), 0);
    var max = cljs.core.get.call(null, map__8184__$1, new cljs.core.Keyword(null, "max", "max", 61366548), Infinity);
    var vec__8185 = p__8183;
    var child = cljs.core.nth.call(null, vec__8185, 0, null);
    return malli.impl.regex.repeat_parser.call(null, min, max, child);
  }, new cljs.core.Keyword(null, "re-unparser", "re-unparser", 1432943079), function(p__8189, p__8190) {
    var map__8191 = p__8189;
    var map__8191__$1 = (!(map__8191 == null) ? map__8191.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8191.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8191) : map__8191;
    var min = cljs.core.get.call(null, map__8191__$1, new cljs.core.Keyword(null, "min", "min", 444991522), 0);
    var max = cljs.core.get.call(null, map__8191__$1, new cljs.core.Keyword(null, "max", "max", 61366548), Infinity);
    var vec__8192 = p__8190;
    var child = cljs.core.nth.call(null, vec__8192, 0, null);
    return malli.impl.regex.repeat_unparser.call(null, min, max, child);
  }, new cljs.core.Keyword(null, "re-transformer", "re-transformer", -1516368461), function(p__8196, p__8197) {
    var map__8198 = p__8196;
    var map__8198__$1 = (!(map__8198 == null) ? map__8198.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8198.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8198) : map__8198;
    var min = cljs.core.get.call(null, map__8198__$1, new cljs.core.Keyword(null, "min", "min", 444991522), 0);
    var max = cljs.core.get.call(null, map__8198__$1, new cljs.core.Keyword(null, "max", "max", 61366548), Infinity);
    var vec__8199 = p__8197;
    var child = cljs.core.nth.call(null, vec__8199, 0, null);
    return malli.impl.regex.repeat_transformer.call(null, min, max, child);
  }, new cljs.core.Keyword(null, "re-min-max", "re-min-max", 1020871707), function(props, p__8203) {
    var vec__8204 = p__8203;
    var child = cljs.core.nth.call(null, vec__8204, 0, null);
    return malli.core._re_min_max.call(null, cljs.core._STAR_, props, child);
  }], null)), new cljs.core.Keyword(null, "cat", "cat", -1457810207), malli.core._sequence_schema.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "cat", "cat", -1457810207), new cljs.core.Keyword(null, "child-bounds", "child-bounds", 1368514738), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "re-validator", "re-validator", -180375208), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.cat_validator, children);
  }, new cljs.core.Keyword(null, "re-explainer", "re-explainer", -1266871200), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.cat_explainer, children);
  }, new cljs.core.Keyword(null, "re-parser", "re-parser", -1229625564), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.cat_parser, children);
  }, new cljs.core.Keyword(null, "re-unparser", "re-unparser", 1432943079), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.cat_unparser, children);
  }, new cljs.core.Keyword(null, "re-transformer", "re-transformer", -1516368461), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.cat_transformer, children);
  }, new cljs.core.Keyword(null, "re-min-max", "re-min-max", 1020871707), function(_, children) {
    return cljs.core.reduce.call(null, cljs.core.partial.call(null, malli.core._re_min_max, cljs.core._PLUS_), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min", "min", 444991522), 0, new cljs.core.Keyword(null, "max", "max", 61366548), 0], null), children);
  }], null)), new cljs.core.Keyword(null, "alt", "alt", -3214426), malli.core._sequence_schema.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "alt", "alt", -3214426), new cljs.core.Keyword(null, "child-bounds", "child-bounds", 1368514738), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "min", "min", 444991522), 1], null), new cljs.core.Keyword(null, "re-validator", "re-validator", -180375208), 
  function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.alt_validator, children);
  }, new cljs.core.Keyword(null, "re-explainer", "re-explainer", -1266871200), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.alt_explainer, children);
  }, new cljs.core.Keyword(null, "re-parser", "re-parser", -1229625564), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.alt_parser, children);
  }, new cljs.core.Keyword(null, "re-unparser", "re-unparser", 1432943079), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.alt_unparser, children);
  }, new cljs.core.Keyword(null, "re-transformer", "re-transformer", -1516368461), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.alt_transformer, children);
  }, new cljs.core.Keyword(null, "re-min-max", "re-min-max", 1020871707), function(_, children) {
    return cljs.core.reduce.call(null, malli.core._re_alt_min_max, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max", "max", 61366548), 0], null), children);
  }], null)), new cljs.core.Keyword(null, "catn", "catn", -48807277), malli.core._sequence_entry_schema.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "catn", "catn", -48807277), new cljs.core.Keyword(null, "child-bounds", "child-bounds", 1368514738), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "re-validator", "re-validator", -180375208), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.cat_validator, children);
  }, new cljs.core.Keyword(null, "re-explainer", "re-explainer", -1266871200), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.cat_explainer, children);
  }, new cljs.core.Keyword(null, "re-parser", "re-parser", -1229625564), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.catn_parser, children);
  }, new cljs.core.Keyword(null, "re-unparser", "re-unparser", 1432943079), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.catn_unparser, children);
  }, new cljs.core.Keyword(null, "re-transformer", "re-transformer", -1516368461), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.cat_transformer, children);
  }, new cljs.core.Keyword(null, "re-min-max", "re-min-max", 1020871707), function(_, children) {
    return cljs.core.reduce.call(null, cljs.core.partial.call(null, malli.core._re_min_max, cljs.core._PLUS_), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min", "min", 444991522), 0, new cljs.core.Keyword(null, "max", "max", 61366548), 0], null), malli.core._vmap.call(null, cljs.core.last, children));
  }], null)), new cljs.core.Keyword(null, "altn", "altn", 1717854417), malli.core._sequence_entry_schema.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "altn", "altn", 1717854417), new cljs.core.Keyword(null, "child-bounds", "child-bounds", 1368514738), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "min", "min", 444991522), 1], null), new cljs.core.Keyword(null, "re-validator", "re-validator", 
  -180375208), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.alt_validator, children);
  }, new cljs.core.Keyword(null, "re-explainer", "re-explainer", -1266871200), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.alt_explainer, children);
  }, new cljs.core.Keyword(null, "re-parser", "re-parser", -1229625564), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.altn_parser, children);
  }, new cljs.core.Keyword(null, "re-unparser", "re-unparser", 1432943079), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.altn_unparser, children);
  }, new cljs.core.Keyword(null, "re-transformer", "re-transformer", -1516368461), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.alt_transformer, children);
  }, new cljs.core.Keyword(null, "re-min-max", "re-min-max", 1020871707), function(_, children) {
    return cljs.core.reduce.call(null, malli.core._re_alt_min_max, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max", "max", 61366548), 0], null), malli.core._vmap.call(null, cljs.core.last, children));
  }], null))], null);
};
malli.core.base_schemas = function malli$core$base_schemas() {
  return cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "enum", "enum", 1679018432), new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "orn", "orn", 738436484), new cljs.core.Keyword(null, "ref", "ref", 1289896967), new cljs.core.Keyword(null, "maybe", "maybe", -314397560), new cljs.core.Keyword(null, "sequential", "sequential", -1082983960), new cljs.core.Keyword(null, "or", "or", 235744169), 
  new cljs.core.Keyword(null, "re", "re", 228676202), new cljs.core.Keyword(null, "not", "not", -595976884), new cljs.core.Keyword(null, "tuple", "tuple", -472667284), new cljs.core.Keyword(null, "vector", "vector", 1902966158), new cljs.core.Keyword(null, "function", "function", -2127255473), new cljs.core.Keyword(null, "\x3d\x3e", "\x3d\x3e", 1841166128), new cljs.core.Keyword(null, "map-of", "map-of", 1189682355), new cljs.core.Keyword(null, "multi", "multi", -190293005), new cljs.core.Keyword(null, 
  "and", "and", -971899817), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863), new cljs.core.Keyword(null, "set", "set", 304602554), new cljs.core.Keyword(null, "map", "map", 1371690461)], [malli.core._enum_schema.call(null), malli.core._schema_schema.call(null, null), malli.core._fn_schema.call(null), malli.core._orn_schema.call(null), malli.core._ref_schema.call(null), malli.core._maybe_schema.call(null), malli.core._collection_schema.call(null, new cljs.core.PersistentArrayMap(null, 
  2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "sequential", "sequential", -1082983960), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.sequential_QMARK_], null)), malli.core._or_schema.call(null), malli.core._re_schema.call(null, false), malli.core._not_schema.call(null), malli.core._tuple_schema.call(null), malli.core._collection_schema.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 
  1174270348), new cljs.core.Keyword(null, "vector", "vector", 1902966158), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.vector_QMARK_, new cljs.core.Keyword(null, "empty", "empty", 767870958), cljs.core.PersistentVector.EMPTY], null)), malli.core._function_schema.call(null, null), malli.core.__EQ__GT__schema.call(null), malli.core._map_of_schema.call(null), malli.core._multi_schema.call(null), malli.core._and_schema.call(null), malli.core._schema_schema.call(null, new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "raw", "raw", 1604651272), true], null)), malli.core._collection_schema.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "set", "set", 304602554), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.set_QMARK_, new cljs.core.Keyword(null, "empty", "empty", 767870958), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "in", "in", -1531184865), function(_, 
  x) {
    return x;
  }], null)), malli.core._map_schema.call(null)]);
};
malli.core.default_schemas = function malli$core$default_schemas() {
  return cljs.core.merge.call(null, malli.core.predicate_schemas.call(null), malli.core.class_schemas.call(null), malli.core.comparator_schemas.call(null), malli.core.type_schemas.call(null), malli.core.sequence_schemas.call(null), malli.core.base_schemas.call(null));
};
malli.core.default_registry = function() {
  var strict = malli.registry.mode === "strict";
  var registry = malli.registry.fast_registry.call(null, malli.registry.type === "custom" ? cljs.core.PersistentArrayMap.EMPTY : malli.core.default_schemas.call(null));
  if (strict) {
  } else {
    malli.registry.set_default_registry_BANG_.call(null, registry);
  }
  return malli.registry.registry.call(null, strict ? registry : malli.registry.custom_default_registry.call(null));
}();
if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core._function_schemas_STAR_ !== "undefined") {
} else {
  malli.core._function_schemas_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
}
malli.core.function_schemas = function malli$core$function_schemas(var_args) {
  var G__8208 = arguments.length;
  switch(G__8208) {
    case 0:
      return malli.core.function_schemas.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.core.function_schemas.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.function_schemas.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.core.function_schemas.call(null, new cljs.core.Keyword(null, "clj", "clj", -660495428));
};
malli.core.function_schemas.cljs$core$IFn$_invoke$arity$1 = function(key) {
  return cljs.core.deref.call(null, malli.core._function_schemas_STAR_).call(null, key);
};
malli.core.function_schemas.cljs$lang$maxFixedArity = 1;
malli.core.function_schema = function malli$core$function_schema(var_args) {
  var G__8211 = arguments.length;
  switch(G__8211) {
    case 1:
      return malli.core.function_schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.function_schema.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.function_schema.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.function_schema.call(null, _QMARK_schema, null);
};
malli.core.function_schema.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  var s = malli.core.schema.call(null, _QMARK_schema, options);
  var t = malli.core.type.call(null, s);
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "function", "function", -2127255473), null, new cljs.core.Keyword(null, "\x3d\x3e", "\x3d\x3e", 1841166128), null], null), null)).call(null, t))) {
    return s;
  } else {
    return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "invalid-\x3d\x3eschema", "malli.core/invalid-\x3d\x3eschema", 46765066), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), t, new cljs.core.Keyword(null, "schema", "schema", -1582001791), s], null));
  }
};
malli.core.function_schema.cljs$lang$maxFixedArity = 2;
malli.core._register_function_schema_BANG_ = function malli$core$_register_function_schema_BANG_(var_args) {
  var G__8214 = arguments.length;
  switch(G__8214) {
    case 4:
      return malli.core._register_function_schema_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return malli.core._register_function_schema_BANG_.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._register_function_schema_BANG_.cljs$core$IFn$_invoke$arity$4 = function(ns, name, _QMARK_schema, data) {
  return malli.core._register_function_schema_BANG_.call(null, ns, name, _QMARK_schema, data, new cljs.core.Keyword(null, "clj", "clj", -660495428), malli.core.function_schema);
};
malli.core._register_function_schema_BANG_.cljs$core$IFn$_invoke$arity$6 = function(ns, name, _QMARK_schema, data, key, f) {
  return cljs.core.swap_BANG_.call(null, malli.core._function_schemas_STAR_, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, ns, name], null), cljs.core.merge.call(null, data, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), f.call(null, _QMARK_schema), new cljs.core.Keyword(null, "ns", "ns", 441598760), ns, new cljs.core.Keyword(null, "name", "name", 1843675177), name], null)));
};
malli.core._register_function_schema_BANG_.cljs$lang$maxFixedArity = 6;
malli.core._instrument = function malli$core$_instrument(var_args) {
  var G__8217 = arguments.length;
  switch(G__8217) {
    case 1:
      return malli.core._instrument.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core._instrument.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core._instrument.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._instrument.cljs$core$IFn$_invoke$arity$1 = function(props) {
  return malli.core._instrument.call(null, props, null, null);
};
malli.core._instrument.cljs$core$IFn$_invoke$arity$2 = function(props, f) {
  return malli.core._instrument.call(null, props, f, null);
};
malli.core._instrument.cljs$core$IFn$_invoke$arity$3 = function(p__8218, f, options) {
  var map__8219 = p__8218;
  var map__8219__$1 = (!(map__8219 == null) ? map__8219.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8219.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8219) : map__8219;
  var props = map__8219__$1;
  var scope = cljs.core.get.call(null, map__8219__$1, new cljs.core.Keyword(null, "scope", "scope", -439358418), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "output", "output", -1105869043), null, new cljs.core.Keyword(null, "input", "input", 556931961), null], null), null));
  var report = cljs.core.get.call(null, map__8219__$1, new cljs.core.Keyword(null, "report", "report", 1394055010), malli.core._fail_BANG_);
  var gen = cljs.core.get.call(null, map__8219__$1, new cljs.core.Keyword(null, "gen", "gen", 142575302));
  var schema = malli.core.schema.call(null, (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(props), options);
  var G__8221 = malli.core.type.call(null, schema);
  var G__8221__$1 = G__8221 instanceof cljs.core.Keyword ? G__8221.fqn : null;
  switch(G__8221__$1) {
    case "\x3d\x3e":
      var map__8222 = malli.core._function_info.call(null, schema);
      var map__8222__$1 = (!(map__8222 == null) ? map__8222.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8222.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8222) : map__8222;
      var min = cljs.core.get.call(null, map__8222__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
      var max = cljs.core.get.call(null, map__8222__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
      var input = cljs.core.get.call(null, map__8222__$1, new cljs.core.Keyword(null, "input", "input", 556931961));
      var output = cljs.core.get.call(null, map__8222__$1, new cljs.core.Keyword(null, "output", "output", -1105869043));
      var vec__8223 = malli.core._vmap.call(null, malli.core.validator, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [input, output], null));
      var validate_input = cljs.core.nth.call(null, vec__8223, 0, null);
      var validate_output = cljs.core.nth.call(null, vec__8223, 1, null);
      var vec__8226 = malli.core._vmap.call(null, cljs.core.partial.call(null, cljs.core.contains_QMARK_, scope), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.Keyword(null, "output", "output", -1105869043)], null));
      var wrap_input = cljs.core.nth.call(null, vec__8226, 0, null);
      var wrap_output = cljs.core.nth.call(null, vec__8226, 1, null);
      var f__$1 = function() {
        var or__4047__auto__ = cljs.core.truth_(gen) ? gen.call(null, schema) : f;
        if (cljs.core.truth_(or__4047__auto__)) {
          return or__4047__auto__;
        } else {
          return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "missing-function", "malli.core/missing-function", 1913462487), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "props", "props", 453281727), props], null));
        }
      }();
      return function(map__8222, map__8222__$1, min, max, input, output, vec__8223, validate_input, validate_output, vec__8226, wrap_input, wrap_output, f__$1, G__8221, G__8221__$1, schema, map__8219, map__8219__$1, props, scope, report, gen) {
        return function() {
          var G__8234__delegate = function(args) {
            var args__$1 = cljs.core.vec.call(null, args);
            var arity = cljs.core.count.call(null, args__$1);
            if (cljs.core.truth_(wrap_input)) {
              if (min <= arity && arity <= function() {
                var or__4047__auto__ = max;
                if (cljs.core.truth_(or__4047__auto__)) {
                  return or__4047__auto__;
                } else {
                  return malli.impl.util._PLUS_max_size_PLUS_;
                }
              }()) {
              } else {
                report.call(null, new cljs.core.Keyword("malli.core", "invalid-arity", "malli.core/invalid-arity", 577014581), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "arity", "arity", -1808556135), arity, new cljs.core.Keyword(null, "arities", "arities", -1781122917), cljs.core.PersistentHashSet.createAsIfByAssoc([new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min", "min", 444991522), min, new cljs.core.Keyword(null, "max", "max", 61366548), 
                max], null)]), new cljs.core.Keyword(null, "args", "args", 1315556576), args__$1, new cljs.core.Keyword(null, "input", "input", 556931961), input, new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema], null));
              }
              if (cljs.core.truth_(validate_input.call(null, args__$1))) {
              } else {
                report.call(null, new cljs.core.Keyword("malli.core", "invalid-input", "malli.core/invalid-input", 2010057279), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "input", "input", 556931961), input, new cljs.core.Keyword(null, "args", "args", 1315556576), args__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema], null));
              }
            } else {
            }
            var value = cljs.core.apply.call(null, f__$1, args__$1);
            if (cljs.core.truth_(wrap_output)) {
              if (cljs.core.truth_(validate_output.call(null, value))) {
              } else {
                report.call(null, new cljs.core.Keyword("malli.core", "invalid-output", "malli.core/invalid-output", -147363519), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "output", "output", -1105869043), output, new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "args", "args", 1315556576), args__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema], null));
              }
            } else {
            }
            return value;
          };
          var G__8234 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__8235__i = 0, G__8235__a = new Array(arguments.length - 0);
              while (G__8235__i < G__8235__a.length) {
                G__8235__a[G__8235__i] = arguments[G__8235__i + 0];
                ++G__8235__i;
              }
              args = new cljs.core.IndexedSeq(G__8235__a, 0, null);
            }
            return G__8234__delegate.call(this, args);
          };
          G__8234.cljs$lang$maxFixedArity = 0;
          G__8234.cljs$lang$applyTo = function(arglist__8236) {
            var args = cljs.core.seq(arglist__8236);
            return G__8234__delegate(args);
          };
          G__8234.cljs$core$IFn$_invoke$arity$variadic = G__8234__delegate;
          return G__8234;
        }();
      }(map__8222, map__8222__$1, min, max, input, output, vec__8223, validate_input, validate_output, vec__8226, wrap_input, wrap_output, f__$1, G__8221, G__8221__$1, schema, map__8219, map__8219__$1, props, scope, report, gen);
      break;
    case "function":
      var arity__GT_info = malli.core._group_by_arity_BANG_.call(null, cljs.core.map.call(null, function(G__8221, G__8221__$1, schema, map__8219, map__8219__$1, props, scope, report, gen) {
        return function(s) {
          return cljs.core.assoc.call(null, malli.core._function_info.call(null, s), new cljs.core.Keyword(null, "f", "f", -1597136552), malli.core._instrument.call(null, cljs.core.assoc.call(null, props, new cljs.core.Keyword(null, "schema", "schema", -1582001791), s), f, options));
        };
      }(G__8221, G__8221__$1, schema, map__8219, map__8219__$1, props, scope, report, gen), malli.core.children.call(null, schema)));
      var arities = cljs.core.set.call(null, cljs.core.keys.call(null, arity__GT_info));
      var varargs_info = arity__GT_info.call(null, new cljs.core.Keyword(null, "varargs", "varargs", 1030150858));
      if (cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, arities))) {
        return (new cljs.core.Keyword(null, "f", "f", -1597136552)).cljs$core$IFn$_invoke$arity$1(cljs.core.val.call(null, cljs.core.first.call(null, arity__GT_info)));
      } else {
        return function(arity__GT_info, arities, varargs_info, G__8221, G__8221__$1, schema, map__8219, map__8219__$1, props, scope, report, gen) {
          return function() {
            var G__8237__delegate = function(args) {
              var arity = cljs.core.count.call(null, args);
              var map__8230 = arity__GT_info.call(null, arity);
              var map__8230__$1 = (!(map__8230 == null) ? map__8230.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8230.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8230) : map__8230;
              var info = map__8230__$1;
              var input = cljs.core.get.call(null, map__8230__$1, new cljs.core.Keyword(null, "input", "input", 556931961));
              var report_arity = function(arity, map__8230, map__8230__$1, info, input, arity__GT_info, arities, varargs_info, G__8221, G__8221__$1, schema, map__8219, map__8219__$1, props, scope, report, gen) {
                return function() {
                  return report.call(null, new cljs.core.Keyword("malli.core", "invalid-arity", "malli.core/invalid-arity", 577014581), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "arity", "arity", -1808556135), arity, new cljs.core.Keyword(null, "arities", "arities", -1781122917), arities, new cljs.core.Keyword(null, "args", "args", 1315556576), args, new cljs.core.Keyword(null, "input", "input", 556931961), input, new cljs.core.Keyword(null, "schema", "schema", -1582001791), 
                  schema], null));
                };
              }(arity, map__8230, map__8230__$1, info, input, arity__GT_info, arities, varargs_info, G__8221, G__8221__$1, schema, map__8219, map__8219__$1, props, scope, report, gen);
              if (cljs.core.truth_(info)) {
                return cljs.core.apply.call(null, (new cljs.core.Keyword(null, "f", "f", -1597136552)).cljs$core$IFn$_invoke$arity$1(info), args);
              } else {
                if (cljs.core.truth_(varargs_info)) {
                  if (arity < (new cljs.core.Keyword(null, "min", "min", 444991522)).cljs$core$IFn$_invoke$arity$1(varargs_info)) {
                    return report_arity.call(null);
                  } else {
                    return cljs.core.apply.call(null, (new cljs.core.Keyword(null, "f", "f", -1597136552)).cljs$core$IFn$_invoke$arity$1(varargs_info), args);
                  }
                } else {
                  return report_arity.call(null);
                }
              }
            };
            var G__8237 = function(var_args) {
              var args = null;
              if (arguments.length > 0) {
                var G__8238__i = 0, G__8238__a = new Array(arguments.length - 0);
                while (G__8238__i < G__8238__a.length) {
                  G__8238__a[G__8238__i] = arguments[G__8238__i + 0];
                  ++G__8238__i;
                }
                args = new cljs.core.IndexedSeq(G__8238__a, 0, null);
              }
              return G__8237__delegate.call(this, args);
            };
            G__8237.cljs$lang$maxFixedArity = 0;
            G__8237.cljs$lang$applyTo = function(arglist__8239) {
              var args = cljs.core.seq(arglist__8239);
              return G__8237__delegate(args);
            };
            G__8237.cljs$core$IFn$_invoke$arity$variadic = G__8237__delegate;
            return G__8237;
          }();
        }(arity__GT_info, arities, varargs_info, G__8221, G__8221__$1, schema, map__8219, map__8219__$1, props, scope, report, gen);
      }
      break;
    default:
      throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__8221__$1)].join(""));
  }
};
malli.core._instrument.cljs$lang$maxFixedArity = 3;
goog.provide("malli.util");
goog.require("cljs.core");
goog.require("cljs.core");
goog.require("malli.core");
malli.util.equals = function malli$util$equals(var_args) {
  var G__8462 = arguments.length;
  switch(G__8462) {
    case 2:
      return malli.util.equals.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.equals.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.equals.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema1, _QMARK_schema2) {
  return malli.util.equals.call(null, _QMARK_schema1, _QMARK_schema2, null);
};
malli.util.equals.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema1, _QMARK_schema2, options) {
  return cljs.core._EQ_.call(null, malli.core.form.call(null, _QMARK_schema1, options), malli.core.form.call(null, _QMARK_schema2, options));
};
malli.util.equals.cljs$lang$maxFixedArity = 3;
malli.util._simplify_map_entry = function malli$util$_simplify_map_entry(p__8464) {
  var vec__8465 = p__8464;
  var k = cljs.core.nth.call(null, vec__8465, 0, null);
  var _QMARK_p = cljs.core.nth.call(null, vec__8465, 1, null);
  var s = cljs.core.nth.call(null, vec__8465, 2, null);
  if (cljs.core.not.call(null, s)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, _QMARK_p], null);
  } else {
    if (cljs.core.truth_(function() {
      var and__4036__auto__ = _QMARK_p;
      if (cljs.core.truth_(and__4036__auto__)) {
        return (new cljs.core.Keyword(null, "optional", "optional", 2053951509)).cljs$core$IFn$_invoke$arity$1(_QMARK_p) === false && cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, _QMARK_p));
      } else {
        return and__4036__auto__;
      }
    }())) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, s], null);
    } else {
      if (cljs.core.not.call(null, cljs.core.seq.call(null, _QMARK_p))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, s], null);
      } else {
        if ((new cljs.core.Keyword(null, "optional", "optional", 2053951509)).cljs$core$IFn$_invoke$arity$1(_QMARK_p) === false) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.dissoc.call(null, _QMARK_p, new cljs.core.Keyword(null, "optional", "optional", 2053951509)), s], null);
        } else {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, _QMARK_p, s], null);
        }
      }
    }
  }
};
malli.util._required_map_entry_QMARK_ = function malli$util$_required_map_entry_QMARK_(p__8468) {
  var vec__8469 = p__8468;
  var _ = cljs.core.nth.call(null, vec__8469, 0, null);
  var _QMARK_p = cljs.core.nth.call(null, vec__8469, 1, null);
  return !(cljs.core.map_QMARK_.call(null, _QMARK_p) && (new cljs.core.Keyword(null, "optional", "optional", 2053951509)).cljs$core$IFn$_invoke$arity$1(_QMARK_p) === true);
};
malli.util._entry = function malli$util$_entry(p__8472, p__8473, merge_required, merge, options) {
  var vec__8474 = p__8472;
  var k = cljs.core.nth.call(null, vec__8474, 0, null);
  var _QMARK_p1 = cljs.core.nth.call(null, vec__8474, 1, null);
  var s1 = cljs.core.nth.call(null, vec__8474, 2, null);
  var e1 = vec__8474;
  var vec__8477 = p__8473;
  var _ = cljs.core.nth.call(null, vec__8477, 0, null);
  var _QMARK_p2 = cljs.core.nth.call(null, vec__8477, 1, null);
  var s2 = cljs.core.nth.call(null, vec__8477, 2, null);
  var e2 = vec__8477;
  var required = merge_required.call(null, malli.util._required_map_entry_QMARK_.call(null, e1), malli.util._required_map_entry_QMARK_.call(null, e2));
  var p = cljs.core.merge.call(null, _QMARK_p1, _QMARK_p2);
  return malli.util._simplify_map_entry.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.assoc.call(null, p, new cljs.core.Keyword(null, "optional", "optional", 2053951509), cljs.core.not.call(null, required)), merge.call(null, s1, s2, options)], null));
};
malli.util._open_map_QMARK_ = function malli$util$_open_map_QMARK_(schema, options) {
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "map", "map", 1371690461), malli.core.type.call(null, schema, options)) && !((new cljs.core.Keyword(null, "closed", "closed", -919675359)).cljs$core$IFn$_invoke$arity$1(malli.core.properties.call(null, schema)) === false);
};
malli.util.find_first = function malli$util$find_first(var_args) {
  var G__8481 = arguments.length;
  switch(G__8481) {
    case 2:
      return malli.util.find_first.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.find_first.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.find_first.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, f) {
  return malli.util.find_first.call(null, _QMARK_schema, f, null);
};
malli.util.find_first.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, f, options) {
  var result = cljs.core.atom.call(null, null);
  malli.core._walk.call(null, malli.core.schema.call(null, _QMARK_schema, options), function() {
    if (typeof malli !== "undefined" && typeof malli.util !== "undefined" && typeof malli.util.t_malli$util8482 !== "undefined") {
    } else {
      malli.util.t_malli$util8482 = function(_QMARK_schema, f, options, result, meta8483) {
        this._QMARK_schema = _QMARK_schema;
        this.f = f;
        this.options = options;
        this.result = result;
        this.meta8483 = meta8483;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      malli.util.t_malli$util8482.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(result) {
        return function(_8484, meta8483__$1) {
          var self__ = this;
          var _8484__$1 = this;
          return new malli.util.t_malli$util8482(self__._QMARK_schema, self__.f, self__.options, self__.result, meta8483__$1);
        };
      }(result);
      malli.util.t_malli$util8482.prototype.cljs$core$IMeta$_meta$arity$1 = function(result) {
        return function(_8484) {
          var self__ = this;
          var _8484__$1 = this;
          return self__.meta8483;
        };
      }(result);
      malli.util.t_malli$util8482.prototype.malli$core$Walker$ = cljs.core.PROTOCOL_SENTINEL;
      malli.util.t_malli$util8482.prototype.malli$core$Walker$_accept$arity$4 = function(result) {
        return function(_, s, path, options__$1) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.not.call(null, function() {
            var or__4047__auto__ = cljs.core.deref.call(null, self__.result);
            if (cljs.core.truth_(or__4047__auto__)) {
              return or__4047__auto__;
            } else {
              return cljs.core.reset_BANG_.call(null, self__.result, self__.f.call(null, s, path, options__$1));
            }
          }());
        };
      }(result);
      malli.util.t_malli$util8482.prototype.malli$core$Walker$_inner$arity$4 = function(result) {
        return function(this$, s, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          if (cljs.core.truth_(cljs.core.deref.call(null, self__.result))) {
            return null;
          } else {
            return malli.core._walk.call(null, s, this$__$1, path, options__$1);
          }
        };
      }(result);
      malli.util.t_malli$util8482.prototype.malli$core$Walker$_outer$arity$5 = function(result) {
        return function(_, ___$1, ___$2, ___$3, ___$4) {
          var self__ = this;
          var ___$5 = this;
          return null;
        };
      }(result);
      malli.util.t_malli$util8482.getBasis = function(result) {
        return function() {
          return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?schema", "?schema", -271534072, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "result", "result", -1239343558, null), new cljs.core.Symbol(null, "meta8483", "meta8483", -2082181069, null)], null);
        };
      }(result);
      malli.util.t_malli$util8482.cljs$lang$type = true;
      malli.util.t_malli$util8482.cljs$lang$ctorStr = "malli.util/t_malli$util8482";
      malli.util.t_malli$util8482.cljs$lang$ctorPrWriter = function(result) {
        return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
          return cljs.core._write.call(null, writer__4291__auto__, "malli.util/t_malli$util8482");
        };
      }(result);
      malli.util.__GT_t_malli$util8482 = function(result) {
        return function malli$util$__GT_t_malli$util8482(_QMARK_schema__$1, f__$1, options__$1, result__$1, meta8483) {
          return new malli.util.t_malli$util8482(_QMARK_schema__$1, f__$1, options__$1, result__$1, meta8483);
        };
      }(result);
    }
    return new malli.util.t_malli$util8482(_QMARK_schema, f, options, result, cljs.core.PersistentArrayMap.EMPTY);
  }(), cljs.core.PersistentVector.EMPTY, options);
  return cljs.core.deref.call(null, result);
};
malli.util.find_first.cljs$lang$maxFixedArity = 3;
malli.util.merge = function malli$util$merge(var_args) {
  var G__8487 = arguments.length;
  switch(G__8487) {
    case 2:
      return malli.util.merge.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.merge.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.merge.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema1, _QMARK_schema2) {
  return malli.util.merge.call(null, _QMARK_schema1, _QMARK_schema2, null);
};
malli.util.merge.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema1, _QMARK_schema2, options) {
  var s1 = cljs.core.truth_(_QMARK_schema1) ? malli.core.deref_all.call(null, malli.core.schema.call(null, _QMARK_schema1, options)) : null;
  var s2 = cljs.core.truth_(_QMARK_schema2) ? malli.core.deref_all.call(null, malli.core.schema.call(null, _QMARK_schema2, options)) : null;
  var t1 = cljs.core.truth_(s1) ? malli.core.type.call(null, s1) : null;
  var t2 = cljs.core.truth_(s2) ? malli.core.type.call(null, s2) : null;
  var map__8488 = options;
  var map__8488__$1 = (!(map__8488 == null) ? map__8488.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8488.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8488) : map__8488;
  var merge_default = cljs.core.get.call(null, map__8488__$1, new cljs.core.Keyword(null, "merge-default", "merge-default", 1152742083), function(s1, s2, t1, t2, map__8488, map__8488__$1) {
    return function(_, s2__$1, ___$1) {
      return s2__$1;
    };
  }(s1, s2, t1, t2, map__8488, map__8488__$1));
  var merge_required = cljs.core.get.call(null, map__8488__$1, new cljs.core.Keyword(null, "merge-required", "merge-required", 75277811), function(s1, s2, t1, t2, map__8488, map__8488__$1, merge_default) {
    return function(_, r2) {
      return r2;
    };
  }(s1, s2, t1, t2, map__8488, map__8488__$1, merge_default));
  var bear = function(s1, s2, t1, t2, map__8488, map__8488__$1, merge_default, merge_required) {
    return function(p1, p2) {
      if (cljs.core.truth_(function() {
        var and__4036__auto__ = p1;
        if (cljs.core.truth_(and__4036__auto__)) {
          return p2;
        } else {
          return and__4036__auto__;
        }
      }())) {
        return cljs.core.merge.call(null, p1, p2);
      } else {
        var or__4047__auto__ = p1;
        if (cljs.core.truth_(or__4047__auto__)) {
          return or__4047__auto__;
        } else {
          return p2;
        }
      }
    };
  }(s1, s2, t1, t2, map__8488, map__8488__$1, merge_default, merge_required);
  var tear = function(s1, s2, t1, t2, map__8488, map__8488__$1, merge_default, merge_required, bear) {
    return function(t, s) {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "map", "map", 1371690461), t)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, s], null);
      } else {
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [malli.core.properties.call(null, s)], null), malli.core.children.call(null, s));
      }
    };
  }(s1, s2, t1, t2, map__8488, map__8488__$1, merge_default, merge_required, bear);
  var join = function(s1, s2, t1, t2, map__8488, map__8488__$1, merge_default, merge_required, bear, tear) {
    return function(p__8490, p__8491) {
      var vec__8492 = p__8490;
      var seq__8493 = cljs.core.seq.call(null, vec__8492);
      var first__8494 = cljs.core.first.call(null, seq__8493);
      var seq__8493__$1 = cljs.core.next.call(null, seq__8493);
      var p1 = first__8494;
      var first__8494__$1 = cljs.core.first.call(null, seq__8493__$1);
      var seq__8493__$2 = cljs.core.next.call(null, seq__8493__$1);
      var c1 = first__8494__$1;
      var cs1 = seq__8493__$2;
      var vec__8495 = p__8491;
      var seq__8496 = cljs.core.seq.call(null, vec__8495);
      var first__8497 = cljs.core.first.call(null, seq__8496);
      var seq__8496__$1 = cljs.core.next.call(null, seq__8496);
      var p2 = first__8497;
      var first__8497__$1 = cljs.core.first.call(null, seq__8496__$1);
      var seq__8496__$2 = cljs.core.next.call(null, seq__8496__$1);
      var c2 = first__8497__$1;
      var cs2 = seq__8496__$2;
      return malli.core.into_schema.call(null, new cljs.core.Keyword(null, "and", "and", -971899817), bear.call(null, p1, p2), cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [malli.util.merge.call(null, c1, c2, options)], null), cs1, cs2), options);
    };
  }(s1, s2, t1, t2, map__8488, map__8488__$1, merge_default, merge_required, bear, tear);
  if (s1 == null) {
    return s2;
  } else {
    if (s2 == null) {
      return s1;
    } else {
      if (cljs.core.not.call(null, function() {
        var and__4036__auto__ = (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "and", "and", -971899817), null, new cljs.core.Keyword(null, "map", "map", 1371690461), null], null), null)).call(null, t1);
        if (cljs.core.truth_(and__4036__auto__)) {
          return (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "and", "and", -971899817), null, new cljs.core.Keyword(null, "map", "map", 1371690461), null], null), null)).call(null, t2);
        } else {
          return and__4036__auto__;
        }
      }())) {
        return merge_default.call(null, s1, s2, options);
      } else {
        if (!(cljs.core._EQ_.call(null, t1, new cljs.core.Keyword(null, "map", "map", 1371690461)) && cljs.core._EQ_.call(null, t2, new cljs.core.Keyword(null, "map", "map", 1371690461)))) {
          return join.call(null, tear.call(null, t1, s1), tear.call(null, t2, s2));
        } else {
          var p = bear.call(null, malli.core._properties.call(null, s1), malli.core._properties.call(null, s2));
          var ks = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
          var children = cljs.core.reduce.call(null, function(p, ks, s1, s2, t1, t2, map__8488, map__8488__$1, merge_default, merge_required, bear, tear, join) {
            return function(form, p__8498) {
              var vec__8499 = p__8498;
              var k2 = cljs.core.nth.call(null, vec__8499, 0, null);
              var e2 = vec__8499;
              if (cljs.core.truth_(cljs.core.deref.call(null, ks).call(null, k2))) {
                return cljs.core.reduce.call(null, function(vec__8499, k2, e2, p, ks, s1, s2, t1, t2, map__8488, map__8488__$1, merge_default, merge_required, bear, tear, join) {
                  return function(acc_SINGLEQUOTE_, p__8502) {
                    var vec__8503 = p__8502;
                    var k1 = cljs.core.nth.call(null, vec__8503, 0, null);
                    var e1 = vec__8503;
                    return cljs.core.conj.call(null, acc_SINGLEQUOTE_, cljs.core._EQ_.call(null, k1, k2) ? malli.util._entry.call(null, e1, e2, merge_required, malli.util.merge, options) : e1);
                  };
                }(vec__8499, k2, e2, p, ks, s1, s2, t1, t2, map__8488, map__8488__$1, merge_default, merge_required, bear, tear, join), cljs.core.PersistentVector.EMPTY, form);
              } else {
                cljs.core.swap_BANG_.call(null, ks, cljs.core.conj, k2);
                return cljs.core.conj.call(null, form, e2);
              }
            };
          }(p, ks, s1, s2, t1, t2, map__8488, map__8488__$1, merge_default, merge_required, bear, tear, join), cljs.core.PersistentVector.EMPTY, cljs.core.into.call(null, malli.core._children.call(null, s1), malli.core._children.call(null, s2)));
          return malli.core.into_schema.call(null, new cljs.core.Keyword(null, "map", "map", 1371690461), p, children, options);
        }
      }
    }
  }
};
malli.util.merge.cljs$lang$maxFixedArity = 3;
malli.util.union = function malli$util$union(var_args) {
  var G__8508 = arguments.length;
  switch(G__8508) {
    case 2:
      return malli.util.union.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.union.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.union.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema1, _QMARK_schema2) {
  return malli.util.union.call(null, _QMARK_schema1, _QMARK_schema2, null);
};
malli.util.union.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema1, _QMARK_schema2, options) {
  var merge_default = function(s1, s2, options__$1) {
    if (cljs.core.truth_(malli.util.equals.call(null, s1, s2))) {
      return s1;
    } else {
      return malli.core.schema.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), s1, s2], null), options__$1);
    }
  };
  var merge_required = function(merge_default) {
    return function(r1, r2) {
      var and__4036__auto__ = r1;
      if (cljs.core.truth_(and__4036__auto__)) {
        return r2;
      } else {
        return and__4036__auto__;
      }
    };
  }(merge_default);
  return malli.util.merge.call(null, _QMARK_schema1, _QMARK_schema2, cljs.core.update.call(null, cljs.core.update.call(null, options, new cljs.core.Keyword(null, "merge-default", "merge-default", 1152742083), cljs.core.fnil.call(null, cljs.core.identity, merge_default)), new cljs.core.Keyword(null, "merge-required", "merge-required", 75277811), cljs.core.fnil.call(null, cljs.core.identity, merge_required)));
};
malli.util.union.cljs$lang$maxFixedArity = 3;
malli.util.update_properties = function malli$util$update_properties(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___8513 = arguments.length;
  var i__4642__auto___8514 = 0;
  while (true) {
    if (i__4642__auto___8514 < len__4641__auto___8513) {
      args__4647__auto__.push(arguments[i__4642__auto___8514]);
      var G__8515 = i__4642__auto___8514 + 1;
      i__4642__auto___8514 = G__8515;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 2 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(2), 0, null) : null;
  return malli.util.update_properties.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4648__auto__);
};
malli.util.update_properties.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_schema, f, args) {
  var schema = malli.core.schema.call(null, _QMARK_schema);
  return malli.core._set_properties.call(null, schema, cljs.core.not_empty.call(null, cljs.core.apply.call(null, f, malli.core._properties.call(null, schema), args)));
};
malli.util.update_properties.cljs$lang$maxFixedArity = 2;
malli.util.update_properties.cljs$lang$applyTo = function(seq8510) {
  var G__8511 = cljs.core.first.call(null, seq8510);
  var seq8510__$1 = cljs.core.next.call(null, seq8510);
  var G__8512 = cljs.core.first.call(null, seq8510__$1);
  var seq8510__$2 = cljs.core.next.call(null, seq8510__$1);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8511, G__8512, seq8510__$2);
};
malli.util.closed_schema = function malli$util$closed_schema(var_args) {
  var G__8517 = arguments.length;
  switch(G__8517) {
    case 1:
      return malli.util.closed_schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.util.closed_schema.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.closed_schema.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.util.closed_schema.call(null, _QMARK_schema, null);
};
malli.util.closed_schema.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core.walk.call(null, _QMARK_schema, malli.core.schema_walker.call(null, function(schema) {
    if (malli.util._open_map_QMARK_.call(null, schema, options)) {
      return malli.util.update_properties.call(null, schema, cljs.core.assoc, new cljs.core.Keyword(null, "closed", "closed", -919675359), true);
    } else {
      return schema;
    }
  }), options);
};
malli.util.closed_schema.cljs$lang$maxFixedArity = 2;
malli.util.open_schema = function malli$util$open_schema(var_args) {
  var G__8520 = arguments.length;
  switch(G__8520) {
    case 1:
      return malli.util.open_schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.util.open_schema.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.open_schema.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.util.open_schema.call(null, _QMARK_schema, null);
};
malli.util.open_schema.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core.walk.call(null, _QMARK_schema, malli.core.schema_walker.call(null, function(schema) {
    if (malli.util._open_map_QMARK_.call(null, schema, options)) {
      return malli.util.update_properties.call(null, schema, cljs.core.dissoc, new cljs.core.Keyword(null, "closed", "closed", -919675359));
    } else {
      return schema;
    }
  }), options);
};
malli.util.open_schema.cljs$lang$maxFixedArity = 2;
malli.util.subschemas = function malli$util$subschemas(var_args) {
  var G__8524 = arguments.length;
  switch(G__8524) {
    case 1:
      return malli.util.subschemas.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.util.subschemas.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.subschemas.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.util.subschemas.call(null, _QMARK_schema, null);
};
malli.util.subschemas.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  var schema = malli.core.schema.call(null, _QMARK_schema, options);
  var options__$1 = function() {
    var ref = function() {
      var and__4036__auto__ = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "ref", "ref", 1289896967), malli.core.type.call(null, schema));
      if (and__4036__auto__) {
        return malli.core._ref.call(null, schema);
      } else {
        return and__4036__auto__;
      }
    }();
    return cljs.core.update.call(null, cljs.core.update.call(null, options, new cljs.core.Keyword("malli.core", "walk-schema-refs", "malli.core/walk-schema-refs", -1140065954), cljs.core.fnil.call(null, cljs.core.identity, true)), new cljs.core.Keyword("malli.core", "walk-refs", "malli.core/walk-refs", 755904802), function(ref, schema) {
      return function(f) {
        return function(ref, schema) {
          return function(p1__8522_SHARP_) {
            var or__4047__auto__ = cljs.core._EQ_.call(null, ref, p1__8522_SHARP_);
            if (or__4047__auto__) {
              return or__4047__auto__;
            } else {
              return malli.core._boolean_fn.call(null, f).call(null, p1__8522_SHARP_);
            }
          };
        }(ref, schema);
      };
    }(ref, schema));
  }();
  var state = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
  malli.util.find_first.call(null, schema, function(schema, options__$1, state) {
    return function(s, p, _) {
      cljs.core.swap_BANG_.call(null, state, cljs.core.conj, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "path", "path", -188191168), p, new cljs.core.Keyword(null, "in", "in", -1531184865), malli.util.path__GT_in.call(null, schema, p), new cljs.core.Keyword(null, "schema", "schema", -1582001791), s], null));
      return null;
    };
  }(schema, options__$1, state), options__$1);
  return cljs.core.deref.call(null, state);
};
malli.util.subschemas.cljs$lang$maxFixedArity = 2;
malli.util.distinct_by = function malli$util$distinct_by(f, coll) {
  var seen = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
  return cljs.core.filter.call(null, function(seen) {
    return function(x) {
      var v = f.call(null, x);
      if (cljs.core.truth_(cljs.core.deref.call(null, seen).call(null, v))) {
        return null;
      } else {
        return cljs.core.swap_BANG_.call(null, seen, cljs.core.conj, v);
      }
    };
  }(seen), coll);
};
malli.util.path__GT_in = function malli$util$path__GT_in(schema, path) {
  var i = 0;
  var s = schema;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var or__4047__auto__ = function() {
      var and__4036__auto__ = i >= cljs.core.count.call(null, path);
      if (and__4036__auto__) {
        return acc;
      } else {
        return and__4036__auto__;
      }
    }();
    if (cljs.core.truth_(or__4047__auto__)) {
      return or__4047__auto__;
    } else {
      var G__8527 = i + 1;
      var G__8528 = malli.core._get.call(null, s, path.call(null, i), null);
      var G__8529 = function() {
        var G__8526 = acc;
        if (cljs.core.truth_(malli.core._keep.call(null, s))) {
          return cljs.core.conj.call(null, G__8526, path.call(null, i));
        } else {
          return G__8526;
        }
      }();
      i = G__8527;
      s = G__8528;
      acc = G__8529;
      continue;
    }
    break;
  }
};
malli.util.in__GT_paths = function malli$util$in__GT_paths(schema, in$) {
  var state = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
  var in_equals = function(state) {
    return function(p__8531, p__8532) {
      while (true) {
        var vec__8533 = p__8531;
        var seq__8534 = cljs.core.seq.call(null, vec__8533);
        var first__8535 = cljs.core.first.call(null, seq__8534);
        var seq__8534__$1 = cljs.core.next.call(null, seq__8534);
        var x = first__8535;
        var xs = seq__8534__$1;
        var vec__8536 = p__8532;
        var seq__8537 = cljs.core.seq.call(null, vec__8536);
        var first__8538 = cljs.core.first.call(null, seq__8537);
        var seq__8537__$1 = cljs.core.next.call(null, seq__8537);
        var y = first__8538;
        var ys = seq__8537__$1;
        if (cljs.core.truth_(function() {
          var and__4036__auto__ = x;
          if (cljs.core.truth_(and__4036__auto__)) {
            return cljs.core._EQ_.call(null, x, y);
          } else {
            return and__4036__auto__;
          }
        }())) {
          var G__8539 = xs;
          var G__8540 = ys;
          p__8531 = G__8539;
          p__8532 = G__8540;
          continue;
        } else {
          if (cljs.core._EQ_.call(null, x, y)) {
            return true;
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("malli.core", "in", "malli.core/in", -1208578537), x)) {
              var G__8541 = xs;
              var G__8542 = ys;
              p__8531 = G__8541;
              p__8532 = G__8542;
              continue;
            } else {
              return null;
            }
          }
        }
        break;
      }
    };
  }(state);
  var parent_exists = function(state, in_equals) {
    return function(v1, v2) {
      var i = function() {
        var x__4138__auto__ = cljs.core.count.call(null, v1);
        var y__4139__auto__ = cljs.core.count.call(null, v2);
        return x__4138__auto__ < y__4139__auto__ ? x__4138__auto__ : y__4139__auto__;
      }();
      return cljs.core._EQ_.call(null, cljs.core.subvec.call(null, v1, 0, i), cljs.core.subvec.call(null, v2, 0, i));
    };
  }(state, in_equals);
  malli.util.find_first.call(null, schema, function(state, in_equals, parent_exists) {
    return function(_, path, ___$1) {
      if (cljs.core.truth_(function() {
        var and__4036__auto__ = in_equals.call(null, malli.util.path__GT_in.call(null, schema, path), in$);
        if (cljs.core.truth_(and__4036__auto__)) {
          return cljs.core.not.call(null, cljs.core.some.call(null, function(and__4036__auto__, state, in_equals, parent_exists) {
            return function(p1__8530_SHARP_) {
              return parent_exists.call(null, path, p1__8530_SHARP_);
            };
          }(and__4036__auto__, state, in_equals, parent_exists), cljs.core.deref.call(null, state)));
        } else {
          return and__4036__auto__;
        }
      }())) {
        cljs.core.swap_BANG_.call(null, state, cljs.core.conj, path);
        return null;
      } else {
        return null;
      }
    };
  }(state, in_equals, parent_exists));
  return cljs.core.deref.call(null, state);
};
malli.util.transform_entries = function malli$util$transform_entries(var_args) {
  var G__8544 = arguments.length;
  switch(G__8544) {
    case 2:
      return malli.util.transform_entries.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.transform_entries.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.transform_entries.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, f) {
  return malli.util.transform_entries.call(null, _QMARK_schema, f, null);
};
malli.util.transform_entries.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, f, options) {
  var schema = malli.core.deref_all.call(null, malli.core.schema.call(null, _QMARK_schema, options));
  return malli.core.into_schema.call(null, malli.core._parent.call(null, schema), malli.core._properties.call(null, schema), f.call(null, malli.core._children.call(null, schema)), function() {
    var or__4047__auto__ = malli.core.options.call(null, schema);
    if (cljs.core.truth_(or__4047__auto__)) {
      return or__4047__auto__;
    } else {
      return options;
    }
  }());
};
malli.util.transform_entries.cljs$lang$maxFixedArity = 3;
malli.util.optional_keys = function malli$util$optional_keys(var_args) {
  var G__8548 = arguments.length;
  switch(G__8548) {
    case 1:
      return malli.util.optional_keys.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.util.optional_keys.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.optional_keys.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.optional_keys.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.util.optional_keys.call(null, _QMARK_schema, null, null);
};
malli.util.optional_keys.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, _QMARK_keys) {
  var vec__8549 = cljs.core.map_QMARK_.call(null, _QMARK_keys) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, _QMARK_keys], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_keys, null], null);
  var keys = cljs.core.nth.call(null, vec__8549, 0, null);
  var options = cljs.core.nth.call(null, vec__8549, 1, null);
  return malli.util.optional_keys.call(null, _QMARK_schema, keys, options);
};
malli.util.optional_keys.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, keys, options) {
  var accept = cljs.core.truth_(keys) ? cljs.core.set.call(null, keys) : cljs.core.constantly.call(null, true);
  var mapper = function(accept) {
    return function(p__8552) {
      var vec__8553 = p__8552;
      var k = cljs.core.nth.call(null, vec__8553, 0, null);
      var e = vec__8553;
      if (cljs.core.truth_(accept.call(null, k))) {
        return cljs.core.update.call(null, e, 1, cljs.core.assoc, new cljs.core.Keyword(null, "optional", "optional", 2053951509), true);
      } else {
        return e;
      }
    };
  }(accept);
  return malli.util.transform_entries.call(null, _QMARK_schema, function(accept, mapper) {
    return function(p1__8546_SHARP_) {
      return cljs.core.map.call(null, mapper, p1__8546_SHARP_);
    };
  }(accept, mapper), options);
};
malli.util.optional_keys.cljs$lang$maxFixedArity = 3;
malli.util.required_keys = function malli$util$required_keys(var_args) {
  var G__8559 = arguments.length;
  switch(G__8559) {
    case 1:
      return malli.util.required_keys.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.util.required_keys.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.required_keys.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.required_keys.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.util.required_keys.call(null, _QMARK_schema, null, null);
};
malli.util.required_keys.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, _QMARK_keys) {
  var vec__8560 = cljs.core.map_QMARK_.call(null, _QMARK_keys) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, _QMARK_keys], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_keys, null], null);
  var keys = cljs.core.nth.call(null, vec__8560, 0, null);
  var options = cljs.core.nth.call(null, vec__8560, 1, null);
  return malli.util.required_keys.call(null, _QMARK_schema, keys, options);
};
malli.util.required_keys.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, keys, options) {
  var accept = cljs.core.truth_(keys) ? cljs.core.set.call(null, keys) : cljs.core.constantly.call(null, true);
  var required = function(accept) {
    return function(p) {
      var p_SINGLEQUOTE_ = cljs.core.dissoc.call(null, p, new cljs.core.Keyword(null, "optional", "optional", 2053951509));
      if (cljs.core.seq.call(null, p_SINGLEQUOTE_)) {
        return p_SINGLEQUOTE_;
      } else {
        return null;
      }
    };
  }(accept);
  var mapper = function(accept, required) {
    return function(p__8563) {
      var vec__8564 = p__8563;
      var k = cljs.core.nth.call(null, vec__8564, 0, null);
      var e = vec__8564;
      if (cljs.core.truth_(accept.call(null, k))) {
        return cljs.core.update.call(null, e, 1, required);
      } else {
        return e;
      }
    };
  }(accept, required);
  return malli.util.transform_entries.call(null, _QMARK_schema, function(accept, required, mapper) {
    return function(p1__8557_SHARP_) {
      return cljs.core.map.call(null, mapper, p1__8557_SHARP_);
    };
  }(accept, required, mapper), options);
};
malli.util.required_keys.cljs$lang$maxFixedArity = 3;
malli.util.select_keys = function malli$util$select_keys(var_args) {
  var G__8570 = arguments.length;
  switch(G__8570) {
    case 2:
      return malli.util.select_keys.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.select_keys.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.select_keys.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, keys) {
  return malli.util.select_keys.call(null, _QMARK_schema, keys, null);
};
malli.util.select_keys.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, keys, options) {
  var key_set = cljs.core.set.call(null, keys);
  return malli.util.transform_entries.call(null, _QMARK_schema, function(key_set) {
    return function(p1__8568_SHARP_) {
      return cljs.core.filter.call(null, function(key_set) {
        return function(p__8571) {
          var vec__8572 = p__8571;
          var k = cljs.core.nth.call(null, vec__8572, 0, null);
          return key_set.call(null, k);
        };
      }(key_set), p1__8568_SHARP_);
    };
  }(key_set), options);
};
malli.util.select_keys.cljs$lang$maxFixedArity = 3;
malli.util.rename_keys = function malli$util$rename_keys(var_args) {
  var G__8577 = arguments.length;
  switch(G__8577) {
    case 2:
      return malli.util.rename_keys.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.rename_keys.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.rename_keys.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, kmap) {
  return malli.util.rename_keys.call(null, _QMARK_schema, kmap, null);
};
malli.util.rename_keys.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, kmap, options) {
  return malli.util.transform_entries.call(null, _QMARK_schema, function(entries) {
    var source_keys = cljs.core.set.call(null, cljs.core.keys.call(null, kmap));
    var target_keys = cljs.core.set.call(null, cljs.core.vals.call(null, kmap));
    var remove_conflicts = function(source_keys, target_keys) {
      return function(p__8578) {
        var vec__8579 = p__8578;
        var k = cljs.core.nth.call(null, vec__8579, 0, null);
        var or__4047__auto__ = source_keys.call(null, k);
        if (cljs.core.truth_(or__4047__auto__)) {
          return or__4047__auto__;
        } else {
          return cljs.core.not.call(null, target_keys.call(null, k));
        }
      };
    }(source_keys, target_keys);
    var alter_keys = function(source_keys, target_keys, remove_conflicts) {
      return function(p__8582) {
        var vec__8583 = p__8582;
        var k = cljs.core.nth.call(null, vec__8583, 0, null);
        var m = cljs.core.nth.call(null, vec__8583, 1, null);
        var v = cljs.core.nth.call(null, vec__8583, 2, null);
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.get.call(null, kmap, k, k), m, v], null);
      };
    }(source_keys, target_keys, remove_conflicts);
    return cljs.core.map.call(null, alter_keys, cljs.core.filter.call(null, remove_conflicts, entries));
  }, options);
};
malli.util.rename_keys.cljs$lang$maxFixedArity = 3;
malli.util.dissoc = function malli$util$dissoc(var_args) {
  var G__8589 = arguments.length;
  switch(G__8589) {
    case 2:
      return malli.util.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.dissoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.dissoc.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, key) {
  return malli.util.dissoc.call(null, _QMARK_schema, key, null);
};
malli.util.dissoc.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, key, options) {
  return malli.util.transform_entries.call(null, _QMARK_schema, function(p1__8587_SHARP_) {
    return cljs.core.remove.call(null, function(p__8590) {
      var vec__8591 = p__8590;
      var k = cljs.core.nth.call(null, vec__8591, 0, null);
      return cljs.core._EQ_.call(null, key, k);
    }, p1__8587_SHARP_);
  }, options);
};
malli.util.dissoc.cljs$lang$maxFixedArity = 3;
malli.util.find = function malli$util$find(var_args) {
  var G__8596 = arguments.length;
  switch(G__8596) {
    case 2:
      return malli.util.find.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.find.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.find.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, k) {
  return malli.util.find.call(null, _QMARK_schema, k, null);
};
malli.util.find.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, k, options) {
  var schema = malli.core.schema.call(null, function() {
    var or__4047__auto__ = _QMARK_schema;
    if (cljs.core.truth_(or__4047__auto__)) {
      return or__4047__auto__;
    } else {
      return new cljs.core.Keyword(null, "map", "map", 1371690461);
    }
  }(), options);
  if (cljs.core.truth_(schema)) {
    return malli.core._get.call(null, schema, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("malli.core", "find", "malli.core/find", 163301512), k], null), null);
  } else {
    return null;
  }
};
malli.util.find.cljs$lang$maxFixedArity = 3;
malli.util.get = function malli$util$get(var_args) {
  var G__8599 = arguments.length;
  switch(G__8599) {
    case 2:
      return malli.util.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return malli.util.get.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.get.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, k) {
  return malli.util.get.call(null, _QMARK_schema, k, null, null);
};
malli.util.get.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, k, default$) {
  return malli.util.get.call(null, _QMARK_schema, k, default$, null);
};
malli.util.get.cljs$core$IFn$_invoke$arity$4 = function(_QMARK_schema, k, default$, options) {
  var schema = malli.core.schema.call(null, function() {
    var or__4047__auto__ = _QMARK_schema;
    if (cljs.core.truth_(or__4047__auto__)) {
      return or__4047__auto__;
    } else {
      return new cljs.core.Keyword(null, "map", "map", 1371690461);
    }
  }(), options);
  if (cljs.core.truth_(schema)) {
    return malli.core._get.call(null, schema, k, default$);
  } else {
    return null;
  }
};
malli.util.get.cljs$lang$maxFixedArity = 4;
malli.util.assoc = function malli$util$assoc(var_args) {
  var G__8602 = arguments.length;
  switch(G__8602) {
    case 3:
      return malli.util.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return malli.util.assoc.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.assoc.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, key, value) {
  return malli.util.assoc.call(null, _QMARK_schema, key, value, null);
};
malli.util.assoc.cljs$core$IFn$_invoke$arity$4 = function(_QMARK_schema, key, value, options) {
  return malli.core._set.call(null, malli.core.schema.call(null, _QMARK_schema, options), key, value);
};
malli.util.assoc.cljs$lang$maxFixedArity = 4;
malli.util.update = function malli$util$update(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___8608 = arguments.length;
  var i__4642__auto___8609 = 0;
  while (true) {
    if (i__4642__auto___8609 < len__4641__auto___8608) {
      args__4647__auto__.push(arguments[i__4642__auto___8609]);
      var G__8610 = i__4642__auto___8609 + 1;
      i__4642__auto___8609 = G__8610;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 3 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(3), 0, null) : null;
  return malli.util.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4648__auto__);
};
malli.util.update.cljs$core$IFn$_invoke$arity$variadic = function(schema, key, f, args) {
  return malli.core._set.call(null, malli.core.schema.call(null, schema), key, cljs.core.apply.call(null, f, malli.util.get.call(null, schema, key), args));
};
malli.util.update.cljs$lang$maxFixedArity = 3;
malli.util.update.cljs$lang$applyTo = function(seq8604) {
  var G__8605 = cljs.core.first.call(null, seq8604);
  var seq8604__$1 = cljs.core.next.call(null, seq8604);
  var G__8606 = cljs.core.first.call(null, seq8604__$1);
  var seq8604__$2 = cljs.core.next.call(null, seq8604__$1);
  var G__8607 = cljs.core.first.call(null, seq8604__$2);
  var seq8604__$3 = cljs.core.next.call(null, seq8604__$2);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8605, G__8606, G__8607, seq8604__$3);
};
malli.util.get_in = function malli$util$get_in(var_args) {
  var G__8612 = arguments.length;
  switch(G__8612) {
    case 2:
      return malli.util.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.util.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return malli.util.get_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.get_in.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, ks) {
  return malli.util.get_in.call(null, _QMARK_schema, ks, null, null);
};
malli.util.get_in.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, ks, default$) {
  return malli.util.get_in.call(null, _QMARK_schema, ks, default$, null);
};
malli.util.get_in.cljs$core$IFn$_invoke$arity$4 = function(_QMARK_schema, p__8613, default$, options) {
  var vec__8614 = p__8613;
  var seq__8615 = cljs.core.seq.call(null, vec__8614);
  var first__8616 = cljs.core.first.call(null, seq__8615);
  var seq__8615__$1 = cljs.core.next.call(null, seq__8615);
  var k = first__8616;
  var ks = seq__8615__$1;
  var schema = malli.core.schema.call(null, function() {
    var or__4047__auto__ = _QMARK_schema;
    if (cljs.core.truth_(or__4047__auto__)) {
      return or__4047__auto__;
    } else {
      return new cljs.core.Keyword(null, "map", "map", 1371690461);
    }
  }(), options);
  if (cljs.core.not.call(null, k)) {
    return schema;
  } else {
    var sentinel = {};
    var schema__$1 = malli.util.get.call(null, schema, k, sentinel);
    if (schema__$1 === sentinel) {
      return default$;
    } else {
      if (ks) {
        return malli.util.get_in.call(null, schema__$1, ks, default$);
      } else {
        return schema__$1;
      }
    }
  }
};
malli.util.get_in.cljs$lang$maxFixedArity = 4;
malli.util.assoc_in = function malli$util$assoc_in(var_args) {
  var G__8621 = arguments.length;
  switch(G__8621) {
    case 3:
      return malli.util.assoc_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return malli.util.assoc_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.assoc_in.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, ks, value) {
  return malli.util.assoc_in.call(null, _QMARK_schema, ks, value, null);
};
malli.util.assoc_in.cljs$core$IFn$_invoke$arity$4 = function(_QMARK_schema, p__8622, value, options) {
  var vec__8623 = p__8622;
  var seq__8624 = cljs.core.seq.call(null, vec__8623);
  var first__8625 = cljs.core.first.call(null, seq__8624);
  var seq__8624__$1 = cljs.core.next.call(null, seq__8624);
  var k = first__8625;
  var ks = seq__8624__$1;
  var schema = malli.core.schema.call(null, _QMARK_schema, options);
  return malli.util.assoc.call(null, schema, k, ks ? malli.util.assoc_in.call(null, malli.util.get.call(null, schema, k, malli.core.schema.call(null, new cljs.core.Keyword(null, "map", "map", 1371690461), malli.core.options.call(null, schema))), ks, value) : value);
};
malli.util.assoc_in.cljs$lang$maxFixedArity = 4;
malli.util.update_in = function malli$util$update_in(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___8639 = arguments.length;
  var i__4642__auto___8640 = 0;
  while (true) {
    if (i__4642__auto___8640 < len__4641__auto___8639) {
      args__4647__auto__.push(arguments[i__4642__auto___8640]);
      var G__8641 = i__4642__auto___8640 + 1;
      i__4642__auto___8640 = G__8641;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 3 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(3), 0, null) : null;
  return malli.util.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4648__auto__);
};
malli.util.update_in.cljs$core$IFn$_invoke$arity$variadic = function(schema, ks, f, args) {
  var up = function malli$util$up(s, p__8635, f__$1, args__$1) {
    var vec__8636 = p__8635;
    var seq__8637 = cljs.core.seq.call(null, vec__8636);
    var first__8638 = cljs.core.first.call(null, seq__8637);
    var seq__8637__$1 = cljs.core.next.call(null, seq__8637);
    var k = first__8638;
    var ks__$1 = seq__8637__$1;
    return malli.util.assoc.call(null, s, k, ks__$1 ? malli$util$up.call(null, malli.util.get.call(null, s, k, malli.core.schema.call(null, new cljs.core.Keyword(null, "map", "map", 1371690461), malli.core.options.call(null, schema))), ks__$1, f__$1, args__$1) : cljs.core.apply.call(null, f__$1, malli.util.get.call(null, s, k), args__$1));
  };
  return up.call(null, schema, ks, f, args);
};
malli.util.update_in.cljs$lang$maxFixedArity = 3;
malli.util.update_in.cljs$lang$applyTo = function(seq8627) {
  var G__8628 = cljs.core.first.call(null, seq8627);
  var seq8627__$1 = cljs.core.next.call(null, seq8627);
  var G__8629 = cljs.core.first.call(null, seq8627__$1);
  var seq8627__$2 = cljs.core.next.call(null, seq8627__$1);
  var G__8630 = cljs.core.first.call(null, seq8627__$2);
  var seq8627__$3 = cljs.core.next.call(null, seq8627__$2);
  var self__4628__auto__ = this;
  return self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8628, G__8629, G__8630, seq8627__$3);
};
malli.util._map_syntax_walker = function malli$util$_map_syntax_walker(schema, _, children, ___$1) {
  var properties = malli.core.properties.call(null, schema);
  var options = malli.core.options.call(null, schema);
  var r = cljs.core.truth_(properties) ? properties.call(null, new cljs.core.Keyword(null, "registry", "registry", 1021159018)) : null;
  var properties__$1 = cljs.core.truth_(r) ? cljs.core.assoc.call(null, properties, new cljs.core.Keyword(null, "registry", "registry", 1021159018), malli.core._property_registry.call(null, r, options, malli.core._form)) : properties;
  var G__8642 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), malli.core.type.call(null, schema)], null);
  var G__8642__$1 = cljs.core.seq.call(null, properties__$1) ? cljs.core.assoc.call(null, G__8642, new cljs.core.Keyword(null, "properties", "properties", 685819552), properties__$1) : G__8642;
  if (cljs.core.seq.call(null, children)) {
    return cljs.core.assoc.call(null, G__8642__$1, new cljs.core.Keyword(null, "children", "children", -940561982), children);
  } else {
    return G__8642__$1;
  }
};
malli.util.to_map_syntax = function malli$util$to_map_syntax(var_args) {
  var G__8644 = arguments.length;
  switch(G__8644) {
    case 1:
      return malli.util.to_map_syntax.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.util.to_map_syntax.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.to_map_syntax.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.util.to_map_syntax.call(null, _QMARK_schema, null);
};
malli.util.to_map_syntax.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core.walk.call(null, _QMARK_schema, malli.util._map_syntax_walker, options);
};
malli.util.to_map_syntax.cljs$lang$maxFixedArity = 2;
malli.util.from_map_syntax = function malli$util$from_map_syntax(var_args) {
  var G__8649 = arguments.length;
  switch(G__8649) {
    case 1:
      return malli.util.from_map_syntax.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.util.from_map_syntax.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.util.from_map_syntax.cljs$core$IFn$_invoke$arity$1 = function(m) {
  return malli.util.from_map_syntax.call(null, m, null);
};
malli.util.from_map_syntax.cljs$core$IFn$_invoke$arity$2 = function(p__8650, options) {
  var map__8651 = p__8650;
  var map__8651__$1 = (!(map__8651 == null) ? map__8651.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8651.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8651) : map__8651;
  var m = map__8651__$1;
  var type = cljs.core.get.call(null, map__8651__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
  var properties = cljs.core.get.call(null, map__8651__$1, new cljs.core.Keyword(null, "properties", "properties", 685819552));
  var children = cljs.core.get.call(null, map__8651__$1, new cljs.core.Keyword(null, "children", "children", -940561982));
  if (cljs.core.map_QMARK_.call(null, m)) {
    var _LT__child = cljs.core.vector_QMARK_.call(null, cljs.core.first.call(null, children)) ? function(map__8651, map__8651__$1, m, type, properties, children) {
      return function(f) {
        return function(map__8651, map__8651__$1, m, type, properties, children) {
          return function(p1__8646_SHARP_) {
            return cljs.core.update.call(null, p1__8646_SHARP_, 2, f);
          };
        }(map__8651, map__8651__$1, m, type, properties, children);
      };
    }(map__8651, map__8651__$1, m, type, properties, children) : cljs.core.identity;
    var vec__8653 = malli.core._properties_and_options.call(null, properties, options, malli.core._form);
    var properties__$1 = cljs.core.nth.call(null, vec__8653, 0, null);
    var options__$1 = cljs.core.nth.call(null, vec__8653, 1, null);
    return malli.core.into_schema.call(null, type, properties__$1, cljs.core.mapv.call(null, _LT__child.call(null, function(_LT__child, vec__8653, properties__$1, options__$1, map__8651, map__8651__$1, m, type, properties, children) {
      return function(p1__8647_SHARP_) {
        return malli.util.from_map_syntax.call(null, p1__8647_SHARP_, options__$1);
      };
    }(_LT__child, vec__8653, properties__$1, options__$1, map__8651, map__8651__$1, m, type, properties, children)), children), options__$1);
  } else {
    return m;
  }
};
malli.util.from_map_syntax.cljs$lang$maxFixedArity = 2;
malli.util._reducing = function malli$util$_reducing(f) {
  return function(_, p__8660, options) {
    var vec__8661 = p__8660;
    var seq__8662 = cljs.core.seq.call(null, vec__8661);
    var first__8663 = cljs.core.first.call(null, seq__8662);
    var seq__8662__$1 = cljs.core.next.call(null, seq__8662);
    var first = first__8663;
    var rest = seq__8662__$1;
    var children = vec__8661;
    var children__$1 = cljs.core.mapv.call(null, function(vec__8661, seq__8662, first__8663, seq__8662__$1, first, rest, children) {
      return function(p1__8657_SHARP_) {
        return malli.core.schema.call(null, p1__8657_SHARP_, options);
      };
    }(vec__8661, seq__8662, first__8663, seq__8662__$1, first, rest, children), children);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [children__$1, cljs.core.mapv.call(null, malli.core.form, children__$1), cljs.core.reduce.call(null, function(children__$1, vec__8661, seq__8662, first__8663, seq__8662__$1, first, rest, children) {
      return function(p1__8658_SHARP_, p2__8659_SHARP_) {
        return f.call(null, p1__8658_SHARP_, p2__8659_SHARP_, options);
      };
    }(children__$1, vec__8661, seq__8662, first__8663, seq__8662__$1, first, rest, children), first, rest)], null);
  };
};
malli.util._applying = function malli$util$_applying(f) {
  return function(_, children, options) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.update.call(null, children, 0, function(p1__8664_SHARP_) {
      return malli.core.schema.call(null, p1__8664_SHARP_, options);
    }), cljs.core.update.call(null, children, 0, function(p1__8665_SHARP_) {
      return malli.core.form.call(null, p1__8665_SHARP_, options);
    }), cljs.core.apply.call(null, f, cljs.core.conj.call(null, children, options))], null);
  };
};
malli.util._util_schema = function malli$util$_util_schema(p__8666) {
  var map__8667 = p__8666;
  var map__8667__$1 = (!(map__8667 == null) ? map__8667.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8667.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8667) : map__8667;
  var type = cljs.core.get.call(null, map__8667__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
  var min = cljs.core.get.call(null, map__8667__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
  var max = cljs.core.get.call(null, map__8667__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
  var childs = cljs.core.get.call(null, map__8667__$1, new cljs.core.Keyword(null, "childs", "childs", -1293201887));
  var type_properties = cljs.core.get.call(null, map__8667__$1, new cljs.core.Keyword(null, "type-properties", "type-properties", -1728352126));
  var fn = cljs.core.get.call(null, map__8667__$1, new cljs.core.Keyword(null, "fn", "fn", -1175266204));
  if (typeof malli !== "undefined" && typeof malli.util !== "undefined" && typeof malli.util.t_malli$util8669 !== "undefined") {
  } else {
    malli.util.t_malli$util8669 = function(p__8666, map__8667, type, min, max, childs, type_properties, fn, meta8670) {
      this.p__8666 = p__8666;
      this.map__8667 = map__8667;
      this.type = type;
      this.min = min;
      this.max = max;
      this.childs = childs;
      this.type_properties = type_properties;
      this.fn = fn;
      this.meta8670 = meta8670;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.util.t_malli$util8669.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
      return function(_8671, meta8670__$1) {
        var self__ = this;
        var _8671__$1 = this;
        return new malli.util.t_malli$util8669(self__.p__8666, self__.map__8667, self__.type, self__.min, self__.max, self__.childs, self__.type_properties, self__.fn, meta8670__$1);
      };
    }(map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
    malli.util.t_malli$util8669.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
      return function(_8671) {
        var self__ = this;
        var _8671__$1 = this;
        return self__.meta8670;
      };
    }(map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
    malli.util.t_malli$util8669.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.util.t_malli$util8669.prototype.malli$core$IntoSchema$_type$arity$1 = function(map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.type;
      };
    }(map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
    malli.util.t_malli$util8669.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.type_properties;
      };
    }(map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
    malli.util.t_malli$util8669.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
      return function(_, ___$1) {
        var self__ = this;
        var ___$2 = this;
        return null;
      };
    }(map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
    malli.util.t_malli$util8669.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
      return function(_, ___$1) {
        var self__ = this;
        var ___$2 = this;
        return null;
      };
    }(map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
    malli.util.t_malli$util8669.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
      return function(parent, properties, children, options) {
        var self__ = this;
        var parent__$1 = this;
        malli.core._check_children_BANG_.call(null, self__.type, properties, children, self__.min, self__.max);
        var vec__8672 = self__.fn.call(null, properties, cljs.core.vec.call(null, children), options);
        var children__$1 = cljs.core.nth.call(null, vec__8672, 0, null);
        var forms = cljs.core.nth.call(null, vec__8672, 1, null);
        var schema = cljs.core.nth.call(null, vec__8672, 2, null);
        var form = new cljs.core.Delay(function(vec__8672, children__$1, forms, schema, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
          return function() {
            return malli.core._create_form.call(null, self__.type, properties, forms, options);
          };
        }(vec__8672, children__$1, forms, schema, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn), null);
        var cache = malli.core._create_cache.call(null, options);
        if (typeof malli !== "undefined" && typeof malli.util !== "undefined" && typeof malli.util.t_malli$util8675 !== "undefined") {
        } else {
          malli.util.t_malli$util8675 = function(form, options, vec__8672, forms, properties, childs, schema, children, p__8666, min, type_properties, map__8667, fn, parent, meta8670, type, cache, max, meta8676) {
            this.form = form;
            this.options = options;
            this.vec__8672 = vec__8672;
            this.forms = forms;
            this.properties = properties;
            this.childs = childs;
            this.schema = schema;
            this.children = children;
            this.p__8666 = p__8666;
            this.min = min;
            this.type_properties = type_properties;
            this.map__8667 = map__8667;
            this.fn = fn;
            this.parent = parent;
            this.meta8670 = meta8670;
            this.type = type;
            this.cache = cache;
            this.max = max;
            this.meta8676 = meta8676;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          malli.util.t_malli$util8675.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
            return function(_8677, meta8676__$1) {
              var self__ = this;
              var _8677__$1 = this;
              return new malli.util.t_malli$util8675(self__.form, self__.options, self__.vec__8672, self__.forms, self__.properties, self__.childs, self__.schema, self__.children, self__.p__8666, self__.min, self__.type_properties, self__.map__8667, self__.fn, self__.parent, self__.meta8670, self__.type, self__.cache, self__.max, meta8676__$1);
            };
          }(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
          malli.util.t_malli$util8675.prototype.cljs$core$IMeta$_meta$arity$1 = function(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
            return function(_8677) {
              var self__ = this;
              var _8677__$1 = this;
              return self__.meta8676;
            };
          }(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
          malli.util.t_malli$util8675.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.util.t_malli$util8675.prototype.malli$core$Schema$_validator$arity$1 = function(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return malli.core._validator.call(null, self__.schema);
            };
          }(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
          malli.util.t_malli$util8675.prototype.malli$core$Schema$_options$arity$1 = function(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.options;
            };
          }(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
          malli.util.t_malli$util8675.prototype.malli$core$Schema$_transformer$arity$4 = function(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
            return function(this$, transformer, method, options__$1) {
              var self__ = this;
              var this$__$1 = this;
              return malli.core._parent_children_transformer.call(null, this$__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.schema], null), transformer, method, options__$1);
            };
          }(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
          malli.util.t_malli$util8675.prototype.malli$core$Schema$_walk$arity$4 = function(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
            return function(this$, walker, path, options__$1) {
              var self__ = this;
              var this$__$1 = this;
              var children__$1 = cljs.core.truth_(self__.childs) ? cljs.core.subvec.call(null, self__.children, 0, self__.childs) : self__.children;
              if (cljs.core.truth_(malli.core._accept.call(null, walker, this$__$1, path, options__$1))) {
                return malli.core._outer.call(null, walker, this$__$1, path, malli.core._inner_indexed.call(null, walker, path, children__$1, options__$1), options__$1);
              } else {
                return null;
              }
            };
          }(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
          malli.util.t_malli$util8675.prototype.malli$core$Schema$_properties$arity$1 = function(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.properties;
            };
          }(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
          malli.util.t_malli$util8675.prototype.malli$core$Schema$_children$arity$1 = function(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.children;
            };
          }(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
          malli.util.t_malli$util8675.prototype.malli$core$Schema$_form$arity$1 = function(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return cljs.core.deref.call(null, self__.form);
            };
          }(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
          malli.util.t_malli$util8675.prototype.malli$core$Schema$_explainer$arity$2 = function(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
            return function(_, path) {
              var self__ = this;
              var ___$1 = this;
              return malli.core._explainer.call(null, self__.schema, path);
            };
          }(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
          malli.util.t_malli$util8675.prototype.malli$core$Schema$_parent$arity$1 = function(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.parent;
            };
          }(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
          malli.util.t_malli$util8675.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
          malli.util.t_malli$util8675.prototype.malli$core$Cached$_cache$arity$1 = function(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.cache;
            };
          }(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
          malli.util.t_malli$util8675.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.util.t_malli$util8675.prototype.malli$core$LensSchema$_keep$arity$1 = function(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return null;
            };
          }(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
          malli.util.t_malli$util8675.prototype.malli$core$LensSchema$_get$arity$3 = function(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
            return function(_, key, default$) {
              var self__ = this;
              var ___$1 = this;
              return cljs.core.get.call(null, self__.children, key, default$);
            };
          }(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
          malli.util.t_malli$util8675.prototype.malli$core$LensSchema$_set$arity$3 = function(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
            return function(_, key, value) {
              var self__ = this;
              var ___$1 = this;
              return malli.core.into_schema.call(null, self__.type, self__.properties, cljs.core.assoc.call(null, self__.children, key, value));
            };
          }(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
          malli.util.t_malli$util8675.prototype.malli$core$RefSchema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.util.t_malli$util8675.prototype.malli$core$RefSchema$_ref$arity$1 = function(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return null;
            };
          }(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
          malli.util.t_malli$util8675.prototype.malli$core$RefSchema$_deref$arity$1 = function(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return self__.schema;
            };
          }(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
          malli.util.t_malli$util8675.getBasis = function(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
            return function() {
              return new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "vec__8672", "vec__8672", -1889652319, null), new cljs.core.Symbol(null, "forms", "forms", -608443419, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "childs", "childs", 347329640, 
              null), new cljs.core.Symbol(null, "schema", "schema", 58529736, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "p__8666", "p__8666", -458324951, null), new cljs.core.Symbol(null, "min", "min", 2085523049, null), new cljs.core.Symbol(null, "type-properties", "type-properties", -87820599, null), new cljs.core.Symbol(null, "map__8667", "map__8667", -455422774, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), cljs.core.with_meta(new cljs.core.Symbol(null, 
              "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.util", "t_malli$util8669", "malli.util/t_malli$util8669", 157242901, null)], null)), new cljs.core.Symbol(null, "meta8670", "meta8670", 1879309167, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "max", "max", 
              1701898075, null), new cljs.core.Symbol(null, "meta8676", "meta8676", -495827619, null)], null);
            };
          }(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
          malli.util.t_malli$util8675.cljs$lang$type = true;
          malli.util.t_malli$util8675.cljs$lang$ctorStr = "malli.util/t_malli$util8675";
          malli.util.t_malli$util8675.cljs$lang$ctorPrWriter = function(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
            return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
              return cljs.core._write.call(null, writer__4291__auto__, "malli.util/t_malli$util8675");
            };
          }(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
          malli.util.__GT_t_malli$util8675 = function(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
            return function malli$util$_util_schema_$___GT_t_malli$util8675(form__$1, options__$1, vec__8672__$1, forms__$1, properties__$1, childs__$1, schema__$1, children__$2, p__8666__$1, min__$1, type_properties__$1, map__8667__$1, fn__$1, parent__$2, meta8670__$1, type__$1, cache__$1, max__$1, meta8676) {
              return new malli.util.t_malli$util8675(form__$1, options__$1, vec__8672__$1, forms__$1, properties__$1, childs__$1, schema__$1, children__$2, p__8666__$1, min__$1, type_properties__$1, map__8667__$1, fn__$1, parent__$2, meta8670__$1, type__$1, cache__$1, max__$1, meta8676);
            };
          }(vec__8672, children__$1, forms, schema, form, cache, parent__$1, map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
        }
        return new malli.util.t_malli$util8675(form, options, vec__8672, forms, properties, self__.childs, schema, children__$1, self__.p__8666, self__.min, self__.type_properties, self__.map__8667, self__.fn, parent__$1, self__.meta8670, self__.type, cache, self__.max, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
      };
    }(map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
    malli.util.t_malli$util8669.getBasis = function(map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
      return function() {
        return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p__8666", "p__8666", -458324951, null), new cljs.core.Symbol(null, "map__8667", "map__8667", -455422774, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "min", "min", 2085523049, null), new cljs.core.Symbol(null, "max", "max", 1701898075, null), new cljs.core.Symbol(null, "childs", "childs", 347329640, null), new cljs.core.Symbol(null, 
        "type-properties", "type-properties", -87820599, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "meta8670", "meta8670", 1879309167, null)], null);
      };
    }(map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
    malli.util.t_malli$util8669.cljs$lang$type = true;
    malli.util.t_malli$util8669.cljs$lang$ctorStr = "malli.util/t_malli$util8669";
    malli.util.t_malli$util8669.cljs$lang$ctorPrWriter = function(map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
      return function(this__4290__auto__, writer__4291__auto__, opt__4292__auto__) {
        return cljs.core._write.call(null, writer__4291__auto__, "malli.util/t_malli$util8669");
      };
    }(map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
    malli.util.__GT_t_malli$util8669 = function(map__8667, map__8667__$1, type, min, max, childs, type_properties, fn) {
      return function malli$util$_util_schema_$___GT_t_malli$util8669(p__8666__$1, map__8667__$2, type__$1, min__$1, max__$1, childs__$1, type_properties__$1, fn__$1, meta8670) {
        return new malli.util.t_malli$util8669(p__8666__$1, map__8667__$2, type__$1, min__$1, max__$1, childs__$1, type_properties__$1, fn__$1, meta8670);
      };
    }(map__8667, map__8667__$1, type, min, max, childs, type_properties, fn);
  }
  return new malli.util.t_malli$util8669(p__8666, map__8667__$1, type, min, max, childs, type_properties, fn, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.util._merge = function malli$util$_merge() {
  return malli.util._util_schema.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "merge", "merge", -1804319409), new cljs.core.Keyword(null, "fn", "fn", -1175266204), malli.util._reducing.call(null, malli.util.merge)], null));
};
malli.util._union = function malli$util$_union() {
  return malli.util._util_schema.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "union", "union", 2142937499), new cljs.core.Keyword(null, "fn", "fn", -1175266204), malli.util._reducing.call(null, malli.util.union)], null));
};
malli.util._select_keys = function malli$util$_select_keys() {
  return malli.util._util_schema.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "select-keys", "select-keys", 1945879180), new cljs.core.Keyword(null, "childs", "childs", -1293201887), 1, new cljs.core.Keyword(null, "min", "min", 444991522), 2, new cljs.core.Keyword(null, "max", "max", 61366548), 2, new cljs.core.Keyword(null, "fn", "fn", -1175266204), malli.util._applying.call(null, malli.util.select_keys)], 
  null));
};
malli.util.schemas = function malli$util$schemas() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "merge", "merge", -1804319409), malli.util._merge.call(null), new cljs.core.Keyword(null, "union", "union", 2142937499), malli.util._union.call(null), new cljs.core.Keyword(null, "select-keys", "select-keys", 1945879180), malli.util._select_keys.call(null)], null);
};
goog.provide("malli.error");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("malli.core");
goog.require("malli.util");
malli.error._pred_min_max_error_fn = function malli$error$_pred_min_max_error_fn(p__9245) {
  var map__9246 = p__9245;
  var map__9246__$1 = (!(map__9246 == null) ? map__9246.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9246.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9246) : map__9246;
  var pred = cljs.core.get.call(null, map__9246__$1, new cljs.core.Keyword(null, "pred", "pred", 1927423397));
  var message = cljs.core.get.call(null, map__9246__$1, new cljs.core.Keyword(null, "message", "message", -406056002));
  return function(map__9246, map__9246__$1, pred, message) {
    return function(p__9248, _) {
      var map__9249 = p__9248;
      var map__9249__$1 = (!(map__9249 == null) ? map__9249.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9249.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9249) : map__9249;
      var schema = cljs.core.get.call(null, map__9249__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791));
      var value = cljs.core.get.call(null, map__9249__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
      var map__9251 = malli.core.properties.call(null, schema);
      var map__9251__$1 = (!(map__9251 == null) ? map__9251.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9251.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9251) : map__9251;
      var min = cljs.core.get.call(null, map__9251__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
      var max = cljs.core.get.call(null, map__9251__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
      if (cljs.core.not.call(null, pred.call(null, value))) {
        return message;
      } else {
        if (cljs.core.truth_(function() {
          var and__4036__auto__ = min;
          if (cljs.core.truth_(and__4036__auto__)) {
            return cljs.core._EQ_.call(null, min, max);
          } else {
            return and__4036__auto__;
          }
        }())) {
          return ["should be ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(min)].join("");
        } else {
          if (cljs.core.truth_(function() {
            var and__4036__auto__ = min;
            if (cljs.core.truth_(and__4036__auto__)) {
              return max;
            } else {
              return and__4036__auto__;
            }
          }())) {
            return ["should be between ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(min), " and ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(max)].join("");
          } else {
            if (cljs.core.truth_(min)) {
              return ["should be at least ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(min)].join("");
            } else {
              if (cljs.core.truth_(max)) {
                return ["should be at most ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(max)].join("");
              } else {
                return null;
              }
            }
          }
        }
      }
    };
  }(map__9246, map__9246__$1, pred, message);
};
malli.error.default_errors = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword("malli.core", "extra-key", "malli.core/extra-key", 574816512), new cljs.core.Symbol(null, "true?", "true?", -1600332395, null), new cljs.core.Keyword(null, "enum", "enum", 1679018432), new cljs.core.Keyword(null, "qualified-symbol", "qualified-symbol", -665513695), new cljs.core.Symbol(null, "uri?", "uri?", 2029475116, null), new cljs.core.Symbol(null, "simple-keyword?", "simple-keyword?", -367134735, null), 
new cljs.core.Keyword(null, "\x3c\x3d", "\x3c\x3d", -395636158), new cljs.core.Keyword(null, "double", "double", 884886883), new cljs.core.Symbol(null, "uuid?", "uuid?", 400077689, null), new cljs.core.Symbol(null, "inst?", "inst?", 1614698981, null), new cljs.core.Symbol(null, "simple-ident?", "simple-ident?", 194189851, null), new cljs.core.Keyword(null, "not\x3d", "not\x3d", -173995323), new cljs.core.Symbol(null, "int?", "int?", 1799729645, null), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, 
null), new cljs.core.Keyword(null, "int", "int", -1741416922), new cljs.core.Keyword(null, "\x3e", "\x3e", -555517146), new cljs.core.Symbol(null, "float?", "float?", 673884616, null), new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "vector?", "vector?", -61367869, null), new cljs.core.Symbol(null, "any?", "any?", -318999933, null), new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), 
new cljs.core.Symbol(null, "false?", "false?", -1522377573, null), new cljs.core.Symbol(null, "associative?", "associative?", -141666771, null), new cljs.core.Keyword(null, "re", "re", 228676202), new cljs.core.Symbol(null, "ident?", "ident?", -2061359468, null), new cljs.core.Keyword(null, "qualified-keyword", "qualified-keyword", 736041675), new cljs.core.Symbol(null, "char?", "char?", -1072221244, null), new cljs.core.Symbol(null, "neg-int?", "neg-int?", -1610409390, null), new cljs.core.Keyword(null, 
"string", "string", -1989541586), new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null), new cljs.core.Keyword(null, "\x3e\x3d", "\x3e\x3d", -623615505), new cljs.core.Symbol(null, "list?", "list?", -1494629, null), new cljs.core.Keyword("malli.error", "misspelled-value", "malli.error/misspelled-value", -1135752848), new cljs.core.Symbol(null, "qualified-ident?", "qualified-ident?", -928894763, null), new cljs.core.Symbol(null, "coll?", "coll?", -1874821441, null), new cljs.core.Keyword(null, 
"\x3d\x3e", "\x3d\x3e", 1841166128), new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Keyword("malli.core", "limits", "malli.core/limits", -1343466863), new cljs.core.Symbol(null, "simple-symbol?", "simple-symbol?", 1408454822, null), new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), new cljs.core.Symbol(null, "integer?", "integer?", 1303791671, null), new cljs.core.Keyword("malli.core", "missing-key", "malli.core/missing-key", 1439107666), new cljs.core.Keyword("malli.core", 
"tuple-size", "malli.core/tuple-size", -1004468077), new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), new cljs.core.Keyword(null, "keyword", "keyword", 811389747), new cljs.core.Keyword(null, "nil", "nil", 99600501), new cljs.core.Symbol(null, "qualified-keyword?", "qualified-keyword?", 375456001, null), new cljs.core.Symbol(null, "string?", "string?", -1129175764, null), new cljs.core.Keyword("malli.core", "end-of-input", "malli.core/end-of-input", -491237771), new cljs.core.Symbol(null, 
"qualified-symbol?", "qualified-symbol?", 98763807, null), new cljs.core.Keyword("malli.core", "input-remaining", "malli.core/input-remaining", 372310422), new cljs.core.Symbol(null, "seq?", "seq?", -1951934719, null), new cljs.core.Symbol(null, "nat-int?", "nat-int?", -1879663400, null), new cljs.core.Symbol(null, "set?", "set?", 1636014792, null), new cljs.core.Symbol(null, "some?", "some?", 234752293, null), new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), new cljs.core.Symbol(null, 
"boolean?", "boolean?", 1790940868, null), new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), new cljs.core.Symbol(null, "sequential?", "sequential?", 1102351463, null), new cljs.core.Keyword(null, "uuid", "uuid", -2145095719), new cljs.core.Keyword("malli.error", "unknown", "malli.error/unknown", 594142330), new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Keyword("malli.core", "invalid-dispatch-value", "malli.core/invalid-dispatch-value", 516707675), new cljs.core.Symbol(null, 
"double?", "double?", -2146564276, null), new cljs.core.Symbol(null, "seqable?", "seqable?", 72462495, null), new cljs.core.Keyword(null, "\x3d", "\x3d", 1152933628), new cljs.core.Keyword(null, "boolean", "boolean", -1919418404), new cljs.core.Keyword(null, "\x3c", "\x3c", -646864291), new cljs.core.Symbol(null, "neg?", "neg?", -1902175577, null), new cljs.core.Keyword("malli.error", "misspelled-key", "malli.error/misspelled-key", 616486174), new cljs.core.Keyword("malli.core", "invalid-type", "malli.core/invalid-type", 
-1367388450), new cljs.core.Symbol(null, "pos-int?", "pos-int?", -1205815015, null), new cljs.core.Keyword(null, "any", "any", 1705907423), new cljs.core.Symbol(null, "indexed?", "indexed?", 1234610384, null)], [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "disallowed key"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", 
"message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be true"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "fn", "error/fn", -1263293860), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), function(p__9253, _) {
  var map__9254 = p__9253;
  var map__9254__$1 = (!(map__9254 == null) ? map__9254.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9254.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9254) : map__9254;
  var schema = cljs.core.get.call(null, map__9254__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791));
  return ["should be ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, malli.core.children.call(null, schema))) ? cljs.core.first.call(null, malli.core.children.call(null, schema)) : ["either ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, ", ", cljs.core.butlast.call(null, malli.core.children.call(null, schema)))), " or ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.last.call(null, malli.core.children.call(null, 
  schema)))].join(""))].join("");
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a qualified symbol"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a uri"], 
null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a simple keyword"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "fn", "error/fn", -1263293860), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), function(p__9256, _) {
  var map__9257 = p__9256;
  var map__9257__$1 = (!(map__9257 == null) ? map__9257.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9257.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9257) : map__9257;
  var schema = cljs.core.get.call(null, map__9257__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791));
  var value = cljs.core.get.call(null, map__9257__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  if (typeof value === "number") {
    return ["should be at most ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, malli.core.children.call(null, schema)))].join("");
  } else {
    return "should be a number";
  }
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "fn", "error/fn", -1263293860), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), malli.error._pred_min_max_error_fn.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.double_QMARK_, new cljs.core.Keyword(null, "message", "message", -406056002), "should be a double"], null))], null)], null), new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a uuid"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be an inst"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", 
"message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a simple ident"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "fn", "error/fn", -1263293860), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), function(p__9259, _) {
  var map__9260 = p__9259;
  var map__9260__$1 = (!(map__9260 == null) ? map__9260.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9260.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9260) : map__9260;
  var schema = cljs.core.get.call(null, map__9260__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791));
  return ["should not be ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, malli.core.children.call(null, schema)))].join("");
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be an int"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be nil"], null)], null), 
new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "fn", "error/fn", -1263293860), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), malli.error._pred_min_max_error_fn.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.int_QMARK_, new cljs.core.Keyword(null, "message", "message", -406056002), "should be an integer"], null))], null)], null), new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword("error", "fn", "error/fn", -1263293860), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), function(p__9262, _) {
  var map__9263 = p__9262;
  var map__9263__$1 = (!(map__9263 == null) ? map__9263.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9263.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9263) : map__9263;
  var schema = cljs.core.get.call(null, map__9263__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791));
  var value = cljs.core.get.call(null, map__9263__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  if (typeof value === "number") {
    return ["should be larger than ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, malli.core.children.call(null, schema)))].join("");
  } else {
    return "should be a number";
  }
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a float"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be an ifn"], null)], 
null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a map"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a vector"], null)], null), new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be any"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a symbol"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", 
"message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be false"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be an associative"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", 
"error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should match regex"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be an ident"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", 
-502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a qualified keyword"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a char"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", 
-502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a negative int"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "fn", "error/fn", -1263293860), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), function(p__9265, _) {
  var map__9266 = p__9265;
  var map__9266__$1 = (!(map__9266 == null) ? map__9266.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9266.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9266) : map__9266;
  var schema = cljs.core.get.call(null, map__9266__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791));
  var value = cljs.core.get.call(null, map__9266__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  var map__9268 = malli.core.properties.call(null, schema);
  var map__9268__$1 = (!(map__9268 == null) ? map__9268.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9268.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9268) : map__9268;
  var min = cljs.core.get.call(null, map__9268__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
  var max = cljs.core.get.call(null, map__9268__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
  if (!(typeof value === "string")) {
    return "should be a string";
  } else {
    if (cljs.core.truth_(function() {
      var and__4036__auto__ = min;
      if (cljs.core.truth_(and__4036__auto__)) {
        return cljs.core._EQ_.call(null, min, max);
      } else {
        return and__4036__auto__;
      }
    }())) {
      return ["should be ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(min), " characters"].join("");
    } else {
      if (cljs.core.truth_(function() {
        var and__4036__auto__ = min;
        if (cljs.core.truth_(and__4036__auto__)) {
          return max;
        } else {
          return and__4036__auto__;
        }
      }())) {
        return ["should be between ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(min), " and ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(max), " characters"].join("");
      } else {
        if (cljs.core.truth_(min)) {
          return ["should be at least ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(min), " characters"].join("");
        } else {
          if (cljs.core.truth_(max)) {
            return ["should be at most ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(max), " characters"].join("");
          } else {
            return null;
          }
        }
      }
    }
  }
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a symbol"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "fn", "error/fn", -1263293860), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), function(p__9270, _) {
  var map__9271 = p__9270;
  var map__9271__$1 = (!(map__9271 == null) ? map__9271.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9271.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9271) : map__9271;
  var schema = cljs.core.get.call(null, map__9271__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791));
  var value = cljs.core.get.call(null, map__9271__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  if (typeof value === "number") {
    return ["should be at least ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, malli.core.children.call(null, schema)))].join("");
  } else {
    return "should be a number";
  }
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a list"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "fn", "error/fn", -1263293860), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), function(p__9273, _) {
  var map__9274 = p__9273;
  var map__9274__$1 = (!(map__9274 == null) ? map__9274.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9274.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9274) : map__9274;
  var likely_misspelling_of = cljs.core.get.call(null, map__9274__$1, new cljs.core.Keyword("malli.error", "likely-misspelling-of", "malli.error/likely-misspelling-of", 1504085033));
  return ["did you mean ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, " or ", cljs.core.map.call(null, cljs.core.last, likely_misspelling_of)))].join("");
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a qualified ident"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a coll"], 
null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "invalid function"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a keyword"], null)], 
null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "fn", "error/fn", -1263293860), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), function(p__9276, _) {
  var map__9277 = p__9276;
  var map__9277__$1 = (!(map__9277 == null) ? map__9277.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9277.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9277) : map__9277;
  var schema = cljs.core.get.call(null, map__9277__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791));
  var _value = cljs.core.get.call(null, map__9277__$1, new cljs.core.Keyword(null, "_value", "_value", 1295875052));
  var map__9279 = malli.core.properties.call(null, schema);
  var map__9279__$1 = (!(map__9279 == null) ? map__9279.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9279.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9279) : map__9279;
  var min = cljs.core.get.call(null, map__9279__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
  var max = cljs.core.get.call(null, map__9279__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
  if (cljs.core.truth_(function() {
    var and__4036__auto__ = min;
    if (cljs.core.truth_(and__4036__auto__)) {
      return cljs.core._EQ_.call(null, min, max);
    } else {
      return and__4036__auto__;
    }
  }())) {
    return ["should have ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(min), " elements"].join("");
  } else {
    if (cljs.core.truth_(function() {
      var and__4036__auto__ = min;
      if (cljs.core.truth_(and__4036__auto__)) {
        return max;
      } else {
        return and__4036__auto__;
      }
    }())) {
      return ["should have between ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(min), " and ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(max), " elements"].join("");
    } else {
      if (cljs.core.truth_(min)) {
        return ["should have at least ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(min), " elements"].join("");
      } else {
        if (cljs.core.truth_(max)) {
          return ["should have at most ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(max), " elements"].join("");
        } else {
          return null;
        }
      }
    }
  }
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a simple symbol"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be empty"], 
null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be an integer"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "missing required key"], null)], 
null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "fn", "error/fn", -1263293860), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), function(p__9281, _) {
  var map__9282 = p__9281;
  var map__9282__$1 = (!(map__9282 == null) ? map__9282.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9282.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9282) : map__9282;
  var schema = cljs.core.get.call(null, map__9282__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791));
  var value = cljs.core.get.call(null, map__9282__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  var size = cljs.core.count.call(null, malli.core.children.call(null, schema));
  return ["invalid tuple size ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.count.call(null, value)), ", expected ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(size)].join("");
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be zero"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a keyword"], null)], 
null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be nil"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a qualified keyword"], null)], null), 
new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a string"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "end of input"], null)], null), new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a qualified symbol"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "input remaining"], null)], null), new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a seq"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a non-negative int"], null)], null), new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a set"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be some"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", 
"message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be positive"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a boolean"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", 
"error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be an fn"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a sequential"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", 
-502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a uuid"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "unknown error"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a number"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "invalid dispatch value"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, 
[new cljs.core.Keyword(null, "en", "en", 88457073), "should be a double"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a seqable"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "fn", "error/fn", -1263293860), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"en", "en", 88457073), function(p__9284, _) {
  var map__9285 = p__9284;
  var map__9285__$1 = (!(map__9285 == null) ? map__9285.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9285.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9285) : map__9285;
  var schema = cljs.core.get.call(null, map__9285__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791));
  return ["should be ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, malli.core.children.call(null, schema)))].join("");
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a boolean"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "fn", "error/fn", -1263293860), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), function(p__9287, _) {
  var map__9288 = p__9287;
  var map__9288__$1 = (!(map__9288 == null) ? map__9288.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9288.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9288) : map__9288;
  var schema = cljs.core.get.call(null, map__9288__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791));
  var value = cljs.core.get.call(null, map__9288__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  if (typeof value === "number") {
    return ["should be smaller than ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, malli.core.children.call(null, schema)))].join("");
  } else {
    return "should be a number";
  }
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be negative"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "fn", "error/fn", -1263293860), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), function(p__9290, _) {
  var map__9291 = p__9290;
  var map__9291__$1 = (!(map__9291 == null) ? map__9291.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9291.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9291) : map__9291;
  var likely_misspelling_of = cljs.core.get.call(null, map__9291__$1, new cljs.core.Keyword("malli.error", "likely-misspelling-of", "malli.error/likely-misspelling-of", 1504085033));
  return ["should be spelled ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, " or ", cljs.core.map.call(null, cljs.core.last, likely_misspelling_of)))].join("");
}], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "invalid type"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be a positive int"], null)], 
null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be any"], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("error", "message", "error/message", -502809098), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "en", "en", 88457073), "should be an indexed"], null)], null)]);
malli.error._maybe_localized = function malli$error$_maybe_localized(x, locale) {
  if (cljs.core.map_QMARK_.call(null, x)) {
    return cljs.core.get.call(null, x, locale);
  } else {
    return x;
  }
};
malli.error._message = function malli$error$_message(error, props, locale, options) {
  var options__$1 = function() {
    var or__4047__auto__ = options;
    if (cljs.core.truth_(or__4047__auto__)) {
      return or__4047__auto__;
    } else {
      return malli.core.options.call(null, (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(error));
    }
  }();
  if (cljs.core.truth_(props)) {
    var or__4047__auto__ = function() {
      var temp__5720__auto__ = malli.error._maybe_localized.call(null, (new cljs.core.Keyword("error", "fn", "error/fn", -1263293860)).cljs$core$IFn$_invoke$arity$1(props), locale);
      if (cljs.core.truth_(temp__5720__auto__)) {
        var fn = temp__5720__auto__;
        return malli.core.eval.call(null, fn, options__$1).call(null, error, options__$1);
      } else {
        return null;
      }
    }();
    if (cljs.core.truth_(or__4047__auto__)) {
      return or__4047__auto__;
    } else {
      return malli.error._maybe_localized.call(null, (new cljs.core.Keyword("error", "message", "error/message", -502809098)).cljs$core$IFn$_invoke$arity$1(props), locale);
    }
  } else {
    return null;
  }
};
malli.error._error = function malli$error$_error(e) {
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [e], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("malli.error", "error", "malli.error/error", -522553785), true], null));
};
malli.error._error_QMARK_ = function malli$error$_error_QMARK_(x) {
  return (new cljs.core.Keyword("malli.error", "error", "malli.error/error", -522553785)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, x));
};
malli.error._get = function malli$error$_get(x, k) {
  if (cljs.core.set_QMARK_.call(null, x) || cljs.core.associative_QMARK_.call(null, x)) {
    return cljs.core.get.call(null, x, k);
  } else {
    return null;
  }
};
malli.error._push = function malli$error$_push(x, k, v) {
  var x_SINGLEQUOTE_ = function() {
    var temp__5718__auto__ = typeof k === "number" && (cljs.core.set_QMARK_.call(null, x) || cljs.core.sequential_QMARK_.call(null, x)) ? cljs.core.vec.call(null, x) : null;
    if (cljs.core.truth_(temp__5718__auto__)) {
      var x_SINGLEQUOTE_ = temp__5718__auto__;
      var size_SINGLEQUOTE_ = cljs.core.count.call(null, x_SINGLEQUOTE_);
      if (k > size_SINGLEQUOTE_) {
        return cljs.core.into.call(null, x, cljs.core.repeat.call(null, k + 1 - size_SINGLEQUOTE_, null));
      } else {
        return x;
      }
    } else {
      return x;
    }
  }();
  if (cljs.core.set_QMARK_.call(null, x_SINGLEQUOTE_)) {
    return cljs.core.conj.call(null, x_SINGLEQUOTE_, v);
  } else {
    return cljs.core.assoc.call(null, x_SINGLEQUOTE_, k, v);
  }
};
malli.error._assoc_in = function malli$error$_assoc_in(a, v, p__9293, e) {
  var vec__9294 = p__9293;
  var seq__9295 = cljs.core.seq.call(null, vec__9294);
  var first__9296 = cljs.core.first.call(null, seq__9295);
  var seq__9295__$1 = cljs.core.next.call(null, seq__9295);
  var p = first__9296;
  var ps = seq__9295__$1;
  var v_SINGLEQUOTE_ = malli.error._get.call(null, v, p);
  var a_SINGLEQUOTE_ = function() {
    var or__4047__auto__ = a;
    if (cljs.core.truth_(or__4047__auto__)) {
      return or__4047__auto__;
    } else {
      if (cljs.core.sequential_QMARK_.call(null, v)) {
        return cljs.core.PersistentVector.EMPTY;
      } else {
        if (cljs.core.record_QMARK_.call(null, v)) {
          return cljs.core.PersistentArrayMap.EMPTY;
        } else {
          return cljs.core.empty.call(null, v);
        }
      }
    }
  }();
  if (cljs.core.truth_(function() {
    var and__4036__auto__ = p;
    if (cljs.core.truth_(and__4036__auto__)) {
      return malli.error._error_QMARK_.call(null, a_SINGLEQUOTE_);
    } else {
      return and__4036__auto__;
    }
  }())) {
    return a;
  } else {
    if (cljs.core.truth_(p)) {
      return malli.error._push.call(null, a_SINGLEQUOTE_, p, malli.error._assoc_in.call(null, malli.error._get.call(null, a_SINGLEQUOTE_, p), v_SINGLEQUOTE_, ps, e));
    } else {
      if (cljs.core.map_QMARK_.call(null, a)) {
        return malli.error._assoc_in.call(null, a_SINGLEQUOTE_, v, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("malli", "error", "malli/error", -1152359159)], null), e);
      } else {
        if (cljs.core.truth_(malli.error._error_QMARK_.call(null, a_SINGLEQUOTE_))) {
          return cljs.core.conj.call(null, a_SINGLEQUOTE_, e);
        } else {
          if (cljs.core.vector_QMARK_.call(null, cljs.core.not_empty.call(null, a_SINGLEQUOTE_))) {
            return a_SINGLEQUOTE_;
          } else {
            return malli.error._error.call(null, e);
          }
        }
      }
    }
  }
};
malli.error._path = function malli$error$_path(p__9297, p__9298) {
  var map__9299 = p__9297;
  var map__9299__$1 = (!(map__9299 == null) ? map__9299.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9299.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9299) : map__9299;
  var schema = cljs.core.get.call(null, map__9299__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791));
  var map__9300 = p__9298;
  var map__9300__$1 = (!(map__9300 == null) ? map__9300.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9300.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9300) : map__9300;
  var locale = cljs.core.get.call(null, map__9300__$1, new cljs.core.Keyword(null, "locale", "locale", -2115712697));
  var default_locale = cljs.core.get.call(null, map__9300__$1, new cljs.core.Keyword(null, "default-locale", "default-locale", -677515761), new cljs.core.Keyword(null, "en", "en", 88457073));
  var properties = malli.core.properties.call(null, schema);
  var or__4047__auto__ = malli.error._maybe_localized.call(null, (new cljs.core.Keyword("error", "path", "error/path", -419192760)).cljs$core$IFn$_invoke$arity$1(properties), locale);
  if (cljs.core.truth_(or__4047__auto__)) {
    return or__4047__auto__;
  } else {
    return malli.error._maybe_localized.call(null, (new cljs.core.Keyword("error", "path", "error/path", -419192760)).cljs$core$IFn$_invoke$arity$1(properties), default_locale);
  }
};
malli.error._length__GT_threshold = function malli$error$_length__GT_threshold(len) {
  var pred__9305 = function(p1__9304_SHARP_, p2__9303_SHARP_) {
    return p2__9303_SHARP_ <= p1__9304_SHARP_;
  };
  var expr__9306 = len;
  if (cljs.core.truth_(pred__9305.call(null, 4, expr__9306))) {
    return 0;
  } else {
    if (cljs.core.truth_(pred__9305.call(null, 5, expr__9306))) {
      return 1;
    } else {
      if (cljs.core.truth_(pred__9305.call(null, 6, expr__9306))) {
        return 2;
      } else {
        if (cljs.core.truth_(pred__9305.call(null, 11, expr__9306))) {
          return 3;
        } else {
          if (cljs.core.truth_(pred__9305.call(null, 20, expr__9306))) {
            return 4;
          } else {
            return 0.2 * len | 0;
          }
        }
      }
    }
  }
};
malli.error._next_row = function malli$error$_next_row(previous, current, other_seq) {
  return cljs.core.reduce.call(null, function(row, p__9308) {
    var vec__9309 = p__9308;
    var diagonal = cljs.core.nth.call(null, vec__9309, 0, null);
    var above = cljs.core.nth.call(null, vec__9309, 1, null);
    var other = cljs.core.nth.call(null, vec__9309, 2, null);
    var update_val = cljs.core._EQ_.call(null, other, current) ? diagonal : function() {
      var x__4138__auto__ = function() {
        var x__4138__auto__ = diagonal;
        var y__4139__auto__ = above;
        return x__4138__auto__ < y__4139__auto__ ? x__4138__auto__ : y__4139__auto__;
      }();
      var y__4139__auto__ = cljs.core.peek.call(null, row);
      return x__4138__auto__ < y__4139__auto__ ? x__4138__auto__ : y__4139__auto__;
    }() + 1;
    return cljs.core.conj.call(null, row, update_val);
  }, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, previous) + 1], null), cljs.core.map.call(null, cljs.core.vector, previous, cljs.core.next.call(null, previous), other_seq));
};
malli.error._levenshtein = function malli$error$_levenshtein(sequence1, sequence2) {
  return cljs.core.peek.call(null, cljs.core.reduce.call(null, function(previous, current) {
    return malli.error._next_row.call(null, previous, current, sequence2);
  }, cljs.core.map.call(null, function(p1__9313_SHARP_, p2__9312_SHARP_) {
    return cljs.core.identity.call(null, p2__9312_SHARP_);
  }, cljs.core.cons.call(null, null, sequence2), cljs.core.range.call(null)), sequence1));
};
malli.error._similar_key = function malli$error$_similar_key(ky, ky2) {
  var min_len = cljs.core.apply.call(null, cljs.core.min, cljs.core.map.call(null, malli.core._comp.call(null, cljs.core.count, function(p1__9314_SHARP_) {
    if (clojure.string.starts_with_QMARK_.call(null, p1__9314_SHARP_, ":")) {
      return cljs.core.subs.call(null, p1__9314_SHARP_, 1);
    } else {
      return p1__9314_SHARP_;
    }
  }, cljs.core.str), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ky, ky2], null)));
  var dist = malli.error._levenshtein.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(ky), cljs.core.str.cljs$core$IFn$_invoke$arity$1(ky2));
  if (dist <= malli.error._length__GT_threshold.call(null, min_len)) {
    return dist;
  } else {
    return null;
  }
};
malli.error._likely_misspelled = function malli$error$_likely_misspelled(keys, known_keys, key) {
  if (cljs.core.truth_(known_keys.call(null, key))) {
    return null;
  } else {
    return cljs.core.not_empty.call(null, cljs.core.remove.call(null, keys, cljs.core.filter.call(null, function(p1__9315_SHARP_) {
      return malli.error._similar_key.call(null, p1__9315_SHARP_, key);
    }, known_keys)));
  }
};
malli.error._most_similar_to = function malli$error$_most_similar_to(keys, key, known_keys) {
  return cljs.core.not_empty.call(null, cljs.core.map.call(null, cljs.core.second, cljs.core.sort_by.call(null, cljs.core.first, cljs.core.filter.call(null, cljs.core.first, cljs.core.map.call(null, cljs.core.juxt.call(null, function(p1__9316_SHARP_) {
    return malli.error._levenshtein.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__9316_SHARP_), cljs.core.str.cljs$core$IFn$_invoke$arity$1(key));
  }, cljs.core.identity), malli.error._likely_misspelled.call(null, keys, known_keys, key))))));
};
malli.error.error_path = function malli$error$error_path(var_args) {
  var G__9318 = arguments.length;
  switch(G__9318) {
    case 1:
      return malli.error.error_path.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.error.error_path.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.error.error_path.cljs$core$IFn$_invoke$arity$1 = function(error) {
  return malli.error.error_path.call(null, error, null);
};
malli.error.error_path.cljs$core$IFn$_invoke$arity$2 = function(error, options) {
  return cljs.core.into.call(null, (new cljs.core.Keyword(null, "in", "in", -1531184865)).cljs$core$IFn$_invoke$arity$1(error), malli.error._path.call(null, error, options));
};
malli.error.error_path.cljs$lang$maxFixedArity = 2;
malli.error.error_message = function malli$error$error_message(var_args) {
  var G__9321 = arguments.length;
  switch(G__9321) {
    case 1:
      return malli.error.error_message.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.error.error_message.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.error.error_message.cljs$core$IFn$_invoke$arity$1 = function(error) {
  return malli.error.error_message.call(null, error, null);
};
malli.error.error_message.cljs$core$IFn$_invoke$arity$2 = function(p__9322, p__9323) {
  var map__9324 = p__9322;
  var map__9324__$1 = (!(map__9324 == null) ? map__9324.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9324.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9324) : map__9324;
  var error = map__9324__$1;
  var schema = cljs.core.get.call(null, map__9324__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791));
  var type = cljs.core.get.call(null, map__9324__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
  var map__9325 = p__9323;
  var map__9325__$1 = (!(map__9325 == null) ? map__9325.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9325.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9325) : map__9325;
  var options = map__9325__$1;
  var errors = cljs.core.get.call(null, map__9325__$1, new cljs.core.Keyword(null, "errors", "errors", -908790718), malli.error.default_errors);
  var unknown = cljs.core.get.call(null, map__9325__$1, new cljs.core.Keyword(null, "unknown", "unknown", -935977881), true);
  var locale = cljs.core.get.call(null, map__9325__$1, new cljs.core.Keyword(null, "locale", "locale", -2115712697));
  var default_locale = cljs.core.get.call(null, map__9325__$1, new cljs.core.Keyword(null, "default-locale", "default-locale", -677515761), new cljs.core.Keyword(null, "en", "en", 88457073));
  var or__4047__auto__ = malli.error._message.call(null, error, malli.core.properties.call(null, schema), locale, options);
  if (cljs.core.truth_(or__4047__auto__)) {
    return or__4047__auto__;
  } else {
    var or__4047__auto____$1 = malli.error._message.call(null, error, malli.core.type_properties.call(null, schema), locale, options);
    if (cljs.core.truth_(or__4047__auto____$1)) {
      return or__4047__auto____$1;
    } else {
      var or__4047__auto____$2 = malli.error._message.call(null, error, errors.call(null, type), locale, options);
      if (cljs.core.truth_(or__4047__auto____$2)) {
        return or__4047__auto____$2;
      } else {
        var or__4047__auto____$3 = malli.error._message.call(null, error, errors.call(null, malli.core.type.call(null, schema)), locale, options);
        if (cljs.core.truth_(or__4047__auto____$3)) {
          return or__4047__auto____$3;
        } else {
          var or__4047__auto____$4 = malli.error._message.call(null, error, malli.core.properties.call(null, schema), default_locale, options);
          if (cljs.core.truth_(or__4047__auto____$4)) {
            return or__4047__auto____$4;
          } else {
            var or__4047__auto____$5 = malli.error._message.call(null, error, malli.core.type_properties.call(null, schema), default_locale, options);
            if (cljs.core.truth_(or__4047__auto____$5)) {
              return or__4047__auto____$5;
            } else {
              var or__4047__auto____$6 = malli.error._message.call(null, error, errors.call(null, type), default_locale, options);
              if (cljs.core.truth_(or__4047__auto____$6)) {
                return or__4047__auto____$6;
              } else {
                var or__4047__auto____$7 = malli.error._message.call(null, error, errors.call(null, malli.core.type.call(null, schema)), default_locale, options);
                if (cljs.core.truth_(or__4047__auto____$7)) {
                  return or__4047__auto____$7;
                } else {
                  var or__4047__auto____$8 = function() {
                    var and__4036__auto__ = unknown;
                    if (cljs.core.truth_(and__4036__auto__)) {
                      return malli.error._message.call(null, error, errors.call(null, new cljs.core.Keyword("malli.error", "unknown", "malli.error/unknown", 594142330)), locale, options);
                    } else {
                      return and__4036__auto__;
                    }
                  }();
                  if (cljs.core.truth_(or__4047__auto____$8)) {
                    return or__4047__auto____$8;
                  } else {
                    var and__4036__auto__ = unknown;
                    if (cljs.core.truth_(and__4036__auto__)) {
                      return malli.error._message.call(null, error, errors.call(null, new cljs.core.Keyword("malli.error", "unknown", "malli.error/unknown", 594142330)), default_locale, options);
                    } else {
                      return and__4036__auto__;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
malli.error.error_message.cljs$lang$maxFixedArity = 2;
malli.error._resolve_direct_error = function malli$error$_resolve_direct_error(_, error, options) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [malli.error.error_path.call(null, error, options), malli.error.error_message.call(null, error, options)], null);
};
malli.error._resolve_root_error = function malli$error$_resolve_root_error(p__9329, p__9330, options) {
  var map__9331 = p__9329;
  var map__9331__$1 = (!(map__9331 == null) ? map__9331.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9331.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9331) : map__9331;
  var schema = cljs.core.get.call(null, map__9331__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791));
  var map__9332 = p__9330;
  var map__9332__$1 = (!(map__9332 == null) ? map__9332.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9332.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9332) : map__9332;
  var error = map__9332__$1;
  var path = cljs.core.get.call(null, map__9332__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
  var in$ = cljs.core.get.call(null, map__9332__$1, new cljs.core.Keyword(null, "in", "in", -1531184865));
  var options__$1 = cljs.core.assoc.call(null, options, new cljs.core.Keyword(null, "unknown", "unknown", -935977881), false);
  var path__$1 = path;
  var l = null;
  var mp = path__$1;
  var p = malli.core.properties.call(null, (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(error));
  var m = malli.error.error_message.call(null, error, options__$1);
  while (true) {
    var vec__9335 = function() {
      var or__4047__auto__ = function() {
        var schema__$1 = malli.util.get_in.call(null, schema, path__$1);
        var temp__5720__auto__ = malli.error.error_message.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema__$1], null), options__$1);
        if (cljs.core.truth_(temp__5720__auto__)) {
          var m_SINGLEQUOTE_ = temp__5720__auto__;
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [path__$1, m_SINGLEQUOTE_, malli.core.properties.call(null, schema__$1)], null);
        } else {
          return null;
        }
      }();
      if (cljs.core.truth_(or__4047__auto__)) {
        return or__4047__auto__;
      } else {
        var or__4047__auto____$1 = function() {
          var res = function() {
            var and__4036__auto__ = l;
            if (cljs.core.truth_(and__4036__auto__)) {
              return malli.util.find.call(null, malli.util.get_in.call(null, schema, path__$1), l);
            } else {
              return and__4036__auto__;
            }
          }();
          if (cljs.core.vector_QMARK_.call(null, res)) {
            var vec__9341 = res;
            var _ = cljs.core.nth.call(null, vec__9341, 0, null);
            var props = cljs.core.nth.call(null, vec__9341, 1, null);
            var schema__$1 = cljs.core.nth.call(null, vec__9341, 2, null);
            var schema__$2 = malli.util.update_properties.call(null, schema__$1, cljs.core.merge, props);
            var message = malli.error.error_message.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema__$2], null), options__$1);
            if (cljs.core.truth_(message)) {
              return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.call(null, path__$1, l), message, malli.core.properties.call(null, schema__$2)], null);
            } else {
              return null;
            }
          } else {
            return null;
          }
        }();
        if (cljs.core.truth_(or__4047__auto____$1)) {
          return or__4047__auto____$1;
        } else {
          if (cljs.core.truth_(m)) {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [mp, m, p], null);
          } else {
            return null;
          }
        }
      }
    }();
    var path_SINGLEQUOTE_ = cljs.core.nth.call(null, vec__9335, 0, null);
    var m_SINGLEQUOTE_ = cljs.core.nth.call(null, vec__9335, 1, null);
    var p_SINGLEQUOTE_ = cljs.core.nth.call(null, vec__9335, 2, null);
    if (cljs.core.seq.call(null, path__$1)) {
      var G__9344 = cljs.core.pop.call(null, path__$1);
      var G__9345 = cljs.core.last.call(null, path__$1);
      var G__9346 = path_SINGLEQUOTE_;
      var G__9347 = p_SINGLEQUOTE_;
      var G__9348 = m_SINGLEQUOTE_;
      path__$1 = G__9344;
      l = G__9345;
      mp = G__9346;
      p = G__9347;
      m = G__9348;
      continue;
    } else {
      if (cljs.core.truth_(m)) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, in$) ? malli.util.path__GT_in.call(null, schema, path_SINGLEQUOTE_) : malli.error.error_path.call(null, error, options__$1), m_SINGLEQUOTE_, p_SINGLEQUOTE_], null);
      } else {
        return null;
      }
    }
    break;
  }
};
malli.error.with_error_message = function malli$error$with_error_message(var_args) {
  var G__9350 = arguments.length;
  switch(G__9350) {
    case 1:
      return malli.error.with_error_message.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.error.with_error_message.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.error.with_error_message.cljs$core$IFn$_invoke$arity$1 = function(error) {
  return malli.error.with_error_message.call(null, error, null);
};
malli.error.with_error_message.cljs$core$IFn$_invoke$arity$2 = function(error, options) {
  return cljs.core.assoc.call(null, error, new cljs.core.Keyword(null, "message", "message", -406056002), malli.error.error_message.call(null, error, options));
};
malli.error.with_error_message.cljs$lang$maxFixedArity = 2;
malli.error.with_error_messages = function malli$error$with_error_messages(var_args) {
  var G__9354 = arguments.length;
  switch(G__9354) {
    case 1:
      return malli.error.with_error_messages.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.error.with_error_messages.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.error.with_error_messages.cljs$core$IFn$_invoke$arity$1 = function(explanation) {
  return malli.error.with_error_messages.call(null, explanation, null);
};
malli.error.with_error_messages.cljs$core$IFn$_invoke$arity$2 = function(explanation, p__9355) {
  var map__9356 = p__9355;
  var map__9356__$1 = (!(map__9356 == null) ? map__9356.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9356.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9356) : map__9356;
  var options = map__9356__$1;
  var f = cljs.core.get.call(null, map__9356__$1, new cljs.core.Keyword(null, "wrap", "wrap", 851669987), cljs.core.identity);
  if (cljs.core.truth_(explanation)) {
    return cljs.core.update.call(null, explanation, new cljs.core.Keyword(null, "errors", "errors", -908790718), function(map__9356, map__9356__$1, options, f) {
      return function(errors) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, function(map__9356, map__9356__$1, options, f) {
          return function(p1__9352_SHARP_) {
            return f.call(null, malli.error.with_error_message.call(null, p1__9352_SHARP_, options));
          };
        }(map__9356, map__9356__$1, options, f), errors));
      };
    }(map__9356, map__9356__$1, options, f));
  } else {
    return null;
  }
};
malli.error.with_error_messages.cljs$lang$maxFixedArity = 2;
malli.error.with_spell_checking = function malli$error$with_spell_checking(var_args) {
  var G__9361 = arguments.length;
  switch(G__9361) {
    case 1:
      return malli.error.with_spell_checking.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.error.with_spell_checking.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.error.with_spell_checking.cljs$core$IFn$_invoke$arity$1 = function(explanation) {
  return malli.error.with_spell_checking.call(null, explanation, null);
};
malli.error.with_spell_checking.cljs$core$IFn$_invoke$arity$2 = function(explanation, p__9362) {
  var map__9363 = p__9362;
  var map__9363__$1 = (!(map__9363 == null) ? map__9363.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9363.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9363) : map__9363;
  var keep_likely_misspelled_of = cljs.core.get.call(null, map__9363__$1, new cljs.core.Keyword(null, "keep-likely-misspelled-of", "keep-likely-misspelled-of", 288878171));
  if (cljs.core.truth_(explanation)) {
    var _BANG_likely_misspelling_of = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
    var handle_invalid_value = function(_BANG_likely_misspelling_of, map__9363, map__9363__$1, keep_likely_misspelled_of) {
      return function(schema, _, value) {
        var dispatch = (new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009)).cljs$core$IFn$_invoke$arity$1(malli.core.properties.call(null, schema));
        if (dispatch instanceof cljs.core.Keyword) {
          var value__$1 = dispatch.call(null, value);
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("malli.error", "misspelled-value", "malli.error/misspelled-value", -1135752848), value__$1, cljs.core.PersistentHashSet.createAsIfByAssoc([value__$1])], null);
        } else {
          return null;
        }
      };
    }(_BANG_likely_misspelling_of, map__9363, map__9363__$1, keep_likely_misspelled_of);
    var types = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("malli.core", "extra-key", "malli.core/extra-key", 574816512), function(_BANG_likely_misspelling_of, handle_invalid_value, map__9363, map__9363__$1, keep_likely_misspelled_of) {
      return function(_, path, value) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("malli.error", "misspelled-key", "malli.error/misspelled-key", 616486174), cljs.core.last.call(null, path), function() {
          var or__4047__auto__ = cljs.core.set.call(null, cljs.core.keys.call(null, value));
          if (cljs.core.truth_(or__4047__auto__)) {
            return or__4047__auto__;
          } else {
            return cljs.core.PersistentHashSet.EMPTY;
          }
        }()], null);
      };
    }(_BANG_likely_misspelling_of, handle_invalid_value, map__9363, map__9363__$1, keep_likely_misspelled_of), new cljs.core.Keyword("malli.core", "invalid-dispatch-value", "malli.core/invalid-dispatch-value", 516707675), handle_invalid_value], null);
    return cljs.core.update.call(null, explanation, new cljs.core.Keyword(null, "errors", "errors", -908790718), function(_BANG_likely_misspelling_of, handle_invalid_value, types, map__9363, map__9363__$1, keep_likely_misspelled_of) {
      return function(errors) {
        var $ = errors;
        var $__$1 = cljs.core.mapv.call(null, function($, _BANG_likely_misspelling_of, handle_invalid_value, types, map__9363, map__9363__$1, keep_likely_misspelled_of) {
          return function(p__9365) {
            var map__9366 = p__9365;
            var map__9366__$1 = (!(map__9366 == null) ? map__9366.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9366.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9366) : map__9366;
            var error = map__9366__$1;
            var schema = cljs.core.get.call(null, map__9366__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791));
            var path = cljs.core.get.call(null, map__9366__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
            var type = cljs.core.get.call(null, map__9366__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
            var temp__5718__auto__ = types.call(null, type);
            if (cljs.core.truth_(temp__5718__auto__)) {
              var get_keys = temp__5718__auto__;
              var known_keys = cljs.core.set.call(null, cljs.core.map.call(null, cljs.core.first, malli.core.entries.call(null, schema)));
              var value = cljs.core.get_in.call(null, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(explanation), cljs.core.butlast.call(null, path));
              var vec__9368 = get_keys.call(null, schema, path, value);
              var error_type = cljs.core.nth.call(null, vec__9368, 0, null);
              var key = cljs.core.nth.call(null, vec__9368, 1, null);
              var keys = cljs.core.nth.call(null, vec__9368, 2, null);
              var similar = malli.error._most_similar_to.call(null, keys, key, known_keys);
              var likely_misspelling_of = cljs.core.mapv.call(null, function(known_keys, value, vec__9368, error_type, key, keys, similar, get_keys, temp__5718__auto__, map__9366, map__9366__$1, error, schema, path, type, $, _BANG_likely_misspelling_of, handle_invalid_value, types, map__9363, map__9363__$1, keep_likely_misspelled_of) {
                return function(p1__9359_SHARP_) {
                  return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.butlast.call(null, path)), p1__9359_SHARP_);
                };
              }(known_keys, value, vec__9368, error_type, key, keys, similar, get_keys, temp__5718__auto__, map__9366, map__9366__$1, error, schema, path, type, $, _BANG_likely_misspelling_of, handle_invalid_value, types, map__9363, map__9363__$1, keep_likely_misspelled_of), cljs.core.vec.call(null, similar));
              cljs.core.swap_BANG_.call(null, _BANG_likely_misspelling_of, cljs.core.into, likely_misspelling_of);
              var G__9371 = error;
              if (cljs.core.truth_(similar)) {
                return cljs.core.assoc.call(null, G__9371, new cljs.core.Keyword(null, "type", "type", 1174270348), error_type, new cljs.core.Keyword("malli.error", "likely-misspelling-of", "malli.error/likely-misspelling-of", 1504085033), likely_misspelling_of);
              } else {
                return G__9371;
              }
            } else {
              return error;
            }
          };
        }($, _BANG_likely_misspelling_of, handle_invalid_value, types, map__9363, map__9363__$1, keep_likely_misspelled_of), $);
        if (cljs.core.not.call(null, keep_likely_misspelled_of)) {
          return cljs.core.remove.call(null, function($, $__$1, _BANG_likely_misspelling_of, handle_invalid_value, types, map__9363, map__9363__$1, keep_likely_misspelled_of) {
            return function(p__9372) {
              var map__9373 = p__9372;
              var map__9373__$1 = (!(map__9373 == null) ? map__9373.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9373.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9373) : map__9373;
              var path = cljs.core.get.call(null, map__9373__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
              var type = cljs.core.get.call(null, map__9373__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
              var and__4036__auto__ = cljs.core.deref.call(null, _BANG_likely_misspelling_of).call(null, path);
              if (cljs.core.truth_(and__4036__auto__)) {
                return cljs.core._EQ_.call(null, type, new cljs.core.Keyword("malli.core", "missing-key", "malli.core/missing-key", 1439107666));
              } else {
                return and__4036__auto__;
              }
            };
          }($, $__$1, _BANG_likely_misspelling_of, handle_invalid_value, types, map__9363, map__9363__$1, keep_likely_misspelled_of), $__$1);
        } else {
          return $__$1;
        }
      };
    }(_BANG_likely_misspelling_of, handle_invalid_value, types, map__9363, map__9363__$1, keep_likely_misspelled_of));
  } else {
    return null;
  }
};
malli.error.with_spell_checking.cljs$lang$maxFixedArity = 2;
malli.error.humanize = function malli$error$humanize(var_args) {
  var G__9377 = arguments.length;
  switch(G__9377) {
    case 1:
      return malli.error.humanize.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.error.humanize.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.error.humanize.cljs$core$IFn$_invoke$arity$1 = function(explanation) {
  return malli.error.humanize.call(null, explanation, null);
};
malli.error.humanize.cljs$core$IFn$_invoke$arity$2 = function(p__9378, p__9379) {
  var map__9380 = p__9378;
  var map__9380__$1 = (!(map__9380 == null) ? map__9380.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9380.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9380) : map__9380;
  var explanation = map__9380__$1;
  var value = cljs.core.get.call(null, map__9380__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  var errors = cljs.core.get.call(null, map__9380__$1, new cljs.core.Keyword(null, "errors", "errors", -908790718));
  var map__9381 = p__9379;
  var map__9381__$1 = (!(map__9381 == null) ? map__9381.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9381.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9381) : map__9381;
  var options = map__9381__$1;
  var wrap = cljs.core.get.call(null, map__9381__$1, new cljs.core.Keyword(null, "wrap", "wrap", 851669987), new cljs.core.Keyword(null, "message", "message", -406056002));
  var resolve = cljs.core.get.call(null, map__9381__$1, new cljs.core.Keyword(null, "resolve", "resolve", -1584445482), malli.error._resolve_direct_error);
  if (cljs.core.truth_(errors)) {
    return cljs.core.reduce.call(null, function(map__9380, map__9380__$1, explanation, value, errors, map__9381, map__9381__$1, options, wrap, resolve) {
      return function(acc, error) {
        var vec__9384 = resolve.call(null, explanation, error, options);
        var path = cljs.core.nth.call(null, vec__9384, 0, null);
        var message = cljs.core.nth.call(null, vec__9384, 1, null);
        return malli.error._assoc_in.call(null, acc, value, path, wrap.call(null, cljs.core.assoc.call(null, error, new cljs.core.Keyword(null, "message", "message", -406056002), message)));
      };
    }(map__9380, map__9380__$1, explanation, value, errors, map__9381, map__9381__$1, options, wrap, resolve), null, errors);
  } else {
    return null;
  }
};
malli.error.humanize.cljs$lang$maxFixedArity = 2;
goog.provide("malli.dev.pretty");
goog.require("cljs.core");
goog.require("malli.core");
goog.require("malli.dev.virhe");
goog.require("malli.error");
malli.dev.pretty._printer = function malli$dev$pretty$_printer(var_args) {
  var G__9429 = arguments.length;
  switch(G__9429) {
    case 0:
      return malli.dev.pretty._printer.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.dev.pretty._printer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.dev.pretty._printer.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.dev.pretty._printer.call(null, null);
};
malli.dev.pretty._printer.cljs$core$IFn$_invoke$arity$1 = function(options) {
  return malli.dev.virhe._printer.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "title", "title", 636505583), "Schema Error", new cljs.core.Keyword(null, "width", "width", -384071477), 100, new cljs.core.Keyword(null, "colors", "colors", 1157174732), malli.dev.virhe._dark_colors, new cljs.core.Keyword(null, "unknown", "unknown", -935977881), function(x) {
    if (malli.core.schema_QMARK_.call(null, x)) {
      return malli.core.form.call(null, x);
    } else {
      return null;
    }
  }, new cljs.core.Keyword(null, "throwing-fn-top-level-ns-names", "throwing-fn-top-level-ns-names", 1959105244), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["malli", "clojure"], null)], null), options));
};
malli.dev.pretty._printer.cljs$lang$maxFixedArity = 1;
malli.dev.pretty._errors = function malli$dev$pretty$_errors(explanation, printer) {
  return cljs.core.interpose.call(null, new cljs.core.Keyword(null, "break", "break", 126570225), function() {
    var iter__4434__auto__ = function malli$dev$pretty$_errors_$_iter__9431(s__9432) {
      return new cljs.core.LazySeq(null, function() {
        var s__9432__$1 = s__9432;
        while (true) {
          var temp__5720__auto__ = cljs.core.seq.call(null, s__9432__$1);
          if (temp__5720__auto__) {
            var s__9432__$2 = temp__5720__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__9432__$2)) {
              var c__4432__auto__ = cljs.core.chunk_first.call(null, s__9432__$2);
              var size__4433__auto__ = cljs.core.count.call(null, c__4432__auto__);
              var b__9434 = cljs.core.chunk_buffer.call(null, size__4433__auto__);
              if (function() {
                var i__9433 = 0;
                while (true) {
                  if (i__9433 < size__4433__auto__) {
                    var error = cljs.core._nth.call(null, c__4432__auto__, i__9433);
                    cljs.core.chunk_append.call(null, b__9434, malli.dev.virhe._visit.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, error), printer));
                    var G__9435 = i__9433 + 1;
                    i__9433 = G__9435;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9434), malli$dev$pretty$_errors_$_iter__9431.call(null, cljs.core.chunk_rest.call(null, s__9432__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9434), null);
              }
            } else {
              var error = cljs.core.first.call(null, s__9432__$2);
              return cljs.core.cons.call(null, malli.dev.virhe._visit.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, error), printer), malli$dev$pretty$_errors_$_iter__9431.call(null, cljs.core.rest.call(null, s__9432__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4434__auto__.call(null, (new cljs.core.Keyword(null, "errors", "errors", -908790718)).cljs$core$IFn$_invoke$arity$1(malli.error.with_error_messages.call(null, explanation)));
  }());
};
malli.dev.pretty._explain = function malli$dev$pretty$_explain(schema, value, printer) {
  return malli.dev.pretty._errors.call(null, malli.core.explain.call(null, schema, value), printer);
};
malli.dev.pretty._block = function malli$dev$pretty$_block(text, body, printer) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "group", "group", 582596132), malli.dev.virhe._text.call(null, text, printer), new cljs.core.Keyword(null, "break", "break", 126570225), new cljs.core.Keyword(null, "break", "break", 126570225), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "align", "align", 1964212802), 2, body], null)], null);
};
malli.dev.pretty._link = function malli$dev$pretty$_link(link, printer) {
  return malli.dev.virhe._color.call(null, new cljs.core.Keyword(null, "link", "link", -1769163468), link, printer);
};
cljs.core._add_method.call(null, malli.dev.virhe._format, new cljs.core.Keyword("malli.core", "explain", "malli.core/explain", 36932858), function(_, ___$1, explanation, printer) {
  var map__9436 = explanation;
  var map__9436__$1 = (!(map__9436 == null) ? map__9436.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9436.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9436) : map__9436;
  var schema = cljs.core.get.call(null, map__9436__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791));
  var value = cljs.core.get.call(null, map__9436__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "body", "body", -2049205669), new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "group", "group", 582596132), malli.dev.pretty._block.call(null, "Value:", malli.dev.virhe._visit.call(null, value, printer), printer), new cljs.core.Keyword(null, "break", "break", 126570225), new cljs.core.Keyword(null, "break", "break", 126570225), malli.dev.pretty._block.call(null, 
  "Errors:", malli.dev.virhe._visit.call(null, malli.error.humanize.call(null, explanation), printer), printer), new cljs.core.Keyword(null, "break", "break", 126570225), new cljs.core.Keyword(null, "break", "break", 126570225), malli.dev.pretty._block.call(null, "Schema:", malli.dev.virhe._visit.call(null, schema, printer), printer), new cljs.core.Keyword(null, "break", "break", 126570225), new cljs.core.Keyword(null, "break", "break", 126570225), malli.dev.pretty._block.call(null, "More information:", 
  malli.dev.pretty._link.call(null, "https://cljdoc.org/d/metosin/malli/CURRENT", printer), printer)], null)], null);
});
cljs.core._add_method.call(null, malli.dev.virhe._format, new cljs.core.Keyword("malli.core", "invalid-input", "malli.core/invalid-input", 2010057279), function(_, ___$1, p__9438, printer) {
  var map__9439 = p__9438;
  var map__9439__$1 = (!(map__9439 == null) ? map__9439.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9439.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9439) : map__9439;
  var args = cljs.core.get.call(null, map__9439__$1, new cljs.core.Keyword(null, "args", "args", 1315556576));
  var input = cljs.core.get.call(null, map__9439__$1, new cljs.core.Keyword(null, "input", "input", 556931961));
  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "body", "body", -2049205669), new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "group", "group", 582596132), malli.dev.pretty._block.call(null, "Invalid function arguments:", malli.dev.virhe._visit.call(null, args, printer), printer), new cljs.core.Keyword(null, "break", "break", 126570225), new cljs.core.Keyword(null, "break", "break", 126570225), malli.dev.pretty._block.call(null, 
  "Input Schema:", malli.dev.virhe._visit.call(null, input, printer), printer), new cljs.core.Keyword(null, "break", "break", 126570225), new cljs.core.Keyword(null, "break", "break", 126570225), malli.dev.pretty._block.call(null, "Errors:", malli.dev.pretty._explain.call(null, input, args, printer), printer), new cljs.core.Keyword(null, "break", "break", 126570225), new cljs.core.Keyword(null, "break", "break", 126570225), malli.dev.pretty._block.call(null, "More information:", malli.dev.pretty._link.call(null, 
  "https://cljdoc.org/d/metosin/malli/CURRENT/doc/function-schemas", printer), printer)], null)], null);
});
cljs.core._add_method.call(null, malli.dev.virhe._format, new cljs.core.Keyword("malli.core", "invalid-output", "malli.core/invalid-output", -147363519), function(_, ___$1, p__9441, printer) {
  var map__9442 = p__9441;
  var map__9442__$1 = (!(map__9442 == null) ? map__9442.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9442.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9442) : map__9442;
  var value = cljs.core.get.call(null, map__9442__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  var output = cljs.core.get.call(null, map__9442__$1, new cljs.core.Keyword(null, "output", "output", -1105869043));
  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "body", "body", -2049205669), new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "group", "group", 582596132), malli.dev.pretty._block.call(null, "Invalid function return value:", malli.dev.virhe._visit.call(null, value, printer), printer), new cljs.core.Keyword(null, "break", "break", 126570225), new cljs.core.Keyword(null, "break", "break", 126570225), malli.dev.pretty._block.call(null, 
  "Output Schema:", malli.dev.virhe._visit.call(null, output, printer), printer), new cljs.core.Keyword(null, "break", "break", 126570225), new cljs.core.Keyword(null, "break", "break", 126570225), malli.dev.pretty._block.call(null, "Errors:", malli.dev.pretty._explain.call(null, output, value, printer), printer), new cljs.core.Keyword(null, "break", "break", 126570225), new cljs.core.Keyword(null, "break", "break", 126570225), malli.dev.pretty._block.call(null, "More information:", malli.dev.pretty._link.call(null, 
  "https://cljdoc.org/d/metosin/malli/CURRENT/doc/function-schemas", printer), printer)], null)], null);
});
cljs.core._add_method.call(null, malli.dev.virhe._format, new cljs.core.Keyword("malli.core", "invalid-arity", "malli.core/invalid-arity", 577014581), function(_, ___$1, p__9444, printer) {
  var map__9445 = p__9444;
  var map__9445__$1 = (!(map__9445 == null) ? map__9445.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9445.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9445) : map__9445;
  var args = cljs.core.get.call(null, map__9445__$1, new cljs.core.Keyword(null, "args", "args", 1315556576));
  var arity = cljs.core.get.call(null, map__9445__$1, new cljs.core.Keyword(null, "arity", "arity", -1808556135));
  var schema = cljs.core.get.call(null, map__9445__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791));
  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "body", "body", -2049205669), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "group", "group", 582596132), malli.dev.pretty._block.call(null, ["Invalid function arity (", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arity), "):"].join(""), malli.dev.virhe._visit.call(null, args, printer), printer), new cljs.core.Keyword(null, "break", "break", 126570225), 
  new cljs.core.Keyword(null, "break", "break", 126570225), malli.dev.pretty._block.call(null, "Function Schema:", malli.dev.virhe._visit.call(null, schema, printer), printer), new cljs.core.Keyword(null, "break", "break", 126570225), new cljs.core.Keyword(null, "break", "break", 126570225), malli.dev.pretty._block.call(null, "More information:", malli.dev.pretty._link.call(null, "https://cljdoc.org/d/metosin/malli/CURRENT/doc/function-schemas", printer), printer)], null)], null);
});
malli.dev.pretty.reporter = function malli$dev$pretty$reporter(var_args) {
  var G__9448 = arguments.length;
  switch(G__9448) {
    case 0:
      return malli.dev.pretty.reporter.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.dev.pretty.reporter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.dev.pretty.reporter.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.dev.pretty.reporter.call(null, malli.dev.pretty._printer.call(null));
};
malli.dev.pretty.reporter.cljs$core$IFn$_invoke$arity$1 = function(printer) {
  return function(type, data) {
    return malli.dev.virhe._print_doc.call(null, malli.dev.virhe._exception_doc.call(null, cljs.core.ex_info.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(type), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), type, new cljs.core.Keyword(null, "data", "data", -232669377), data], null)), printer), printer);
  };
};
malli.dev.pretty.reporter.cljs$lang$maxFixedArity = 1;
malli.dev.pretty.thrower = function malli$dev$pretty$thrower(var_args) {
  var G__9451 = arguments.length;
  switch(G__9451) {
    case 0:
      return malli.dev.pretty.thrower.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.dev.pretty.thrower.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.dev.pretty.thrower.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.dev.pretty.thrower.call(null, malli.dev.pretty._printer.call(null));
};
malli.dev.pretty.thrower.cljs$core$IFn$_invoke$arity$1 = function(printer) {
  var report = malli.dev.pretty.reporter.call(null, printer);
  return function(report) {
    return function(type, data) {
      var message = function() {
        var sb__4572__auto__ = new goog.string.StringBuffer;
        var _STAR_print_newline_STAR__orig_val__9452_9457 = cljs.core._STAR_print_newline_STAR_;
        var _STAR_print_fn_STAR__orig_val__9453_9458 = cljs.core._STAR_print_fn_STAR_;
        var _STAR_print_newline_STAR__temp_val__9454_9459 = true;
        var _STAR_print_fn_STAR__temp_val__9455_9460 = function(_STAR_print_newline_STAR__orig_val__9452_9457, _STAR_print_fn_STAR__orig_val__9453_9458, _STAR_print_newline_STAR__temp_val__9454_9459, sb__4572__auto__, report) {
          return function(x__4573__auto__) {
            return sb__4572__auto__.append(x__4573__auto__);
          };
        }(_STAR_print_newline_STAR__orig_val__9452_9457, _STAR_print_fn_STAR__orig_val__9453_9458, _STAR_print_newline_STAR__temp_val__9454_9459, sb__4572__auto__, report);
        cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__temp_val__9454_9459;
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__9455_9460;
        try {
          report.call(null, type, data);
        } finally {
          cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__9453_9458;
          cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__orig_val__9452_9457;
        }
        return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4572__auto__);
      }();
      throw cljs.core.ex_info.call(null, message, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), type, new cljs.core.Keyword(null, "data", "data", -232669377), data], null));
    };
  }(report);
};
malli.dev.pretty.thrower.cljs$lang$maxFixedArity = 1;
malli.dev.pretty.explain = function malli$dev$pretty$explain(var_args) {
  var G__9462 = arguments.length;
  switch(G__9462) {
    case 2:
      return malli.dev.pretty.explain.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.dev.pretty.explain.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.dev.pretty.explain.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, value) {
  return malli.dev.pretty.explain.call(null, _QMARK_schema, value, null);
};
malli.dev.pretty.explain.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, value, options) {
  var printer = cljs.core.assoc.call(null, function() {
    var or__4047__auto__ = (new cljs.core.Keyword("malli.dev.pretty", "printer", "malli.dev.pretty/printer", -1293932392)).cljs$core$IFn$_invoke$arity$1(options);
    if (cljs.core.truth_(or__4047__auto__)) {
      return or__4047__auto__;
    } else {
      return cljs.core.assoc.call(null, malli.dev.pretty._printer.call(null), new cljs.core.Keyword(null, "width", "width", -384071477), 60);
    }
  }(), new cljs.core.Keyword(null, "title", "title", 636505583), "Validation Error");
  var temp__5720__auto__ = malli.error.with_error_messages.call(null, malli.core.explain.call(null, _QMARK_schema, value));
  if (cljs.core.truth_(temp__5720__auto__)) {
    var e = temp__5720__auto__;
    malli.dev.pretty.reporter.call(null, printer).call(null, new cljs.core.Keyword("malli.core", "explain", "malli.core/explain", 36932858), e);
    return e;
  } else {
    return null;
  }
};
malli.dev.pretty.explain.cljs$lang$maxFixedArity = 3;
goog.provide("malli.instrument.cljs");
goog.require("cljs.core");
if (typeof malli !== "undefined" && typeof malli.instrument !== "undefined" && typeof malli.instrument.cljs !== "undefined" && typeof malli.instrument.cljs.instrumented_vars !== "undefined") {
} else {
  malli.instrument.cljs.instrumented_vars = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
}
malli.instrument.cljs._filter_var = function malli$instrument$cljs$_filter_var(f) {
  return function(_, s, ___$1) {
    return f.call(null, s);
  };
};
malli.instrument.cljs._filter_ns = function malli$instrument$cljs$_filter_ns(var_args) {
  var args__4647__auto__ = [];
  var len__4641__auto___10932 = arguments.length;
  var i__4642__auto___10933 = 0;
  while (true) {
    if (i__4642__auto___10933 < len__4641__auto___10932) {
      args__4647__auto__.push(arguments[i__4642__auto___10933]);
      var G__10934 = i__4642__auto___10933 + 1;
      i__4642__auto___10933 = G__10934;
      continue;
    } else {
    }
    break;
  }
  var argseq__4648__auto__ = 0 < args__4647__auto__.length ? new cljs.core.IndexedSeq(args__4647__auto__.slice(0), 0, null) : null;
  return malli.instrument.cljs._filter_ns.cljs$core$IFn$_invoke$arity$variadic(argseq__4648__auto__);
};
malli.instrument.cljs._filter_ns.cljs$core$IFn$_invoke$arity$variadic = function(ns) {
  return function(n, _, ___$1) {
    return cljs.core.set.call(null, ns).call(null, n);
  };
};
malli.instrument.cljs._filter_ns.cljs$lang$maxFixedArity = 0;
malli.instrument.cljs._filter_ns.cljs$lang$applyTo = function(seq10931) {
  var self__4629__auto__ = this;
  return self__4629__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq10931));
};
goog.provide("malli.dev.cljs");
goog.require("cljs.core");
goog.require("malli.instrument.cljs");
goog.require("malli.dev.pretty");
goog.provide("autojournal.sheets");
goog.require("cljs.core");
goog.require("autojournal.env_switching");
true;
autojournal.sheets.append_BANG_ = function autojournal$sheets$append_BANG_(id, row) {
  return SpreadsheetApp.openById(id).appendRow(cljs.core.clj__GT_js.call(null, row));
};
goog.provide("autojournal.core");
goog.require("cljs.core");
goog.require("autojournal.sheets");
goog.require("autojournal.env_switching");
goog.require("malli.core");
goog.require("malli.dev.cljs");
goog.require("malli.dev.pretty");
autojournal.core.update_lifelog = function autojournal$core$update_lifelog() {
  return autojournal.sheets.append_BANG_.call(null, "1ZDPrV6ZngilK00Pb0DVs64yAVs6YQtiLr_vE5-YCiLc", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["hello", "world"], null));
};
goog.exportSymbol("autojournal.core.update_lifelog", autojournal.core.update_lifelog);
autojournal.core.update_lifelog.call(null);
1 + 1;
autojournal.core.t = function autojournal$core$t(i) {
  return cljs.core.repeat.call(null, i, new cljs.core.Keyword(null, "hello", "hello", -245025397));
};
autojournal.core.t.call(null, 5);
autojournal.core.main = function autojournal$core$main() {
  return autojournal.core.t.call(null, 2);
};
true;
autojournal.core.refresh = function autojournal$core$refresh() {
  return null;
};
