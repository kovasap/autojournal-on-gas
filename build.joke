#!/usr/bin/env joker

(ns script
  (:require [joker.os :as os]
            [joker.string :as st]))

(defn run
  [& cmd]
  (let [{:keys [out err]} (apply os/sh cmd)]
    (println err)
    (println out)))

(defn remove-first-line
  [s]
  (st/join "\n" (rest (st/split s "\n"))))


(defn remove-last-line
  [s]
  (st/join "\n" (drop-last (st/split s "\n"))))

(defn remove-es_2019
  "Removes some code that is invalid GS and is otherwise seemingly unnecessary."
  [s]
  (st/replace
    s
    "
  a(\"es_2019\", function() {
    return b('let r;try{r\\x3d\"â€©\"}catch{};r');
  });"
    ""))
  

(def frontmatter
  "var global = {}; var process = {\"argv\": [\"one\", \"two\"]};")
  

(run "rm" "Code.js")
; (run "lein" "cljsbuild" "once")
(run "npx" "shadow-cljs" "release" "autojournal-for-gas")
; TODO do this:
; https://clojurians.slack.com/archives/C6N245JGG/p1652646542137479 instead of
; this hacky file manipulation
(let [code (-> (slurp "Code.js")
               (remove-es_2019)
               (remove-first-line) ; Remove the #! line
               (remove-first-line) ; Remove the `(function(){` line
               (remove-last-line)  ; Remove a newline
               (remove-last-line)) ; Remove the `})();` line
      entrypoints (slurp "src/autojournal/entry_points.js")]
  (spit "Code.js" (str frontmatter "\n" code "\n" entrypoints)))
(run "clasp" "push")
